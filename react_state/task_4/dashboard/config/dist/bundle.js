/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e,t,n,r,o={236:(e,t,n)=>{"use strict";var r=n(795),o=[],i=[],l=r.makeRequestCallFromTimer((function(){if(i.length)throw i.shift()}));function a(e){var t;(t=o.length?o.pop():new u).task=e,r(t)}function u(){this.task=null}e.exports=a,u.prototype.call=function(){try{this.task.call()}catch(e){a.onerror?a.onerror(e):(i.push(e),l())}finally{this.task=null,o[o.length]=this}}},795:(e,t,n)=>{"use strict";function r(e){i.length||o(),i[i.length]=e}e.exports=r;var o,i=[],l=0;function a(){for(;l<i.length;){var e=l;if(l+=1,i[e].call(),l>1024){for(var t=0,n=i.length-l;t<n;t++)i[t]=i[t+l];i.length-=l,l=0}}i.length=0,l=0}var u,c,s,f=void 0!==n.g?n.g:self,d=f.MutationObserver||f.WebKitMutationObserver;function p(e){return function(){var t=setTimeout(r,0),n=setInterval(r,50);function r(){clearTimeout(t),clearInterval(n),e()}}}"function"==typeof d?(u=1,c=new d(a),s=document.createTextNode(""),c.observe(s,{characterData:!0}),o=function(){u=-u,s.data=u}):o=p(a),r.requestFlush=o,r.makeRequestCallFromTimer=p},457:(e,t,n)=>{"use strict";n.d(t,{A:()=>a});var r=n(354),o=n.n(r),i=n(314),l=n.n(i)()(o());l.push([e.id,".bodySectionWithMargin {\n  border-bottom: 40px;\n}","",{version:3,sources:["webpack://./src/BodySection/BodySectionWithMarginBottom.css"],names:[],mappings:"AAAA;EACE,mBAAmB;AACrB",sourcesContent:[".bodySectionWithMargin {\r\n  border-bottom: 40px;\r\n}"],sourceRoot:""}]);const a=l},523:(e,t,n)=>{"use strict";n.d(t,{A:()=>a});var r=n(354),o=n.n(r),i=n(314),l=n.n(i)()(o());l.push([e.id,"body {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  overflow: hidden;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;EACE;;cAEY;EACZ,mCAAmC;EACnC,kCAAkC;EAClC,gBAAgB;AAClB;;AAEA;EACE;aACW;AACb",sourcesContent:["body {\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  overflow: hidden;\r\n}\r\n\r\ncode {\r\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\r\n    monospace;\r\n}"],sourceRoot:""}]);const a=l},314:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var l={};if(r)for(var a=0;a<this.length;a++){var u=this[a][0];null!=u&&(l[u]=!0)}for(var c=0;c<e.length;c++){var s=[].concat(e[c]);r&&l[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),t.push(s))}},t}},354:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},146:(e,t,n)=>{"use strict";var r=n(363),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},l={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},a={};function u(e){return r.isMemo(e)?l:a[e.$$typeof]||o}a[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},a[r.Memo]=l;var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,m=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(m){var o=p(n);o&&o!==m&&e(t,o,r)}var l=s(n);f&&(l=l.concat(f(n)));for(var a=u(t),y=u(n),h=0;h<l.length;++h){var g=l[h];if(!(i[g]||r&&r[g]||y&&y[g]||a&&a[g])){var v=d(n,g);try{c(t,g,v)}catch(e){}}}}return t}},228:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,o){for(var i,l,a=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),u=1;u<arguments.length;u++){for(var c in i=Object(arguments[u]))n.call(i,c)&&(a[c]=i[c]);if(t){l=t(i);for(var s=0;s<l.length;s++)r.call(i,l[s])&&(a[l[s]]=i[l[s]])}}return a}},694:(e,t,n)=>{"use strict";var r=n(925);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,l){if(l!==r){var a=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw a.name="Invariant Violation",a}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},556:(e,t,n)=>{e.exports=n(694)()},925:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},551:(e,t,n)=>{"use strict";var r=n(540),o=n(228),i=n(982);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(l(227));function a(e,t,n,r,o,i,l,a,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var u=!1,c=null,s=!1,f=null,d={onError:function(e){u=!0,c=e}};function p(e,t,n,r,o,i,l,s,f){u=!1,c=null,a.apply(d,arguments)}var m=null,y=null,h=null;function g(e,t,n){var r=e.type||"unknown-event";e.currentTarget=h(n),function(e,t,n,r,o,i,a,d,m){if(p.apply(this,arguments),u){if(!u)throw Error(l(198));var y=c;u=!1,c=null,s||(s=!0,f=y)}}(r,t,void 0,e),e.currentTarget=null}var v=null,b={};function w(){if(v)for(var e in b){var t=b[e],n=v.indexOf(e);if(!(-1<n))throw Error(l(96,e));if(!x[n]){if(!t.extractEvents)throw Error(l(97,e));for(var r in x[n]=t,n=t.eventTypes){var o=void 0,i=n[r],a=t,u=r;if(S.hasOwnProperty(u))throw Error(l(99,u));S[u]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&k(c[o],a,u);o=!0}else i.registrationName?(k(i.registrationName,a,u),o=!0):o=!1;if(!o)throw Error(l(98,r,e))}}}}function k(e,t,n){if(E[e])throw Error(l(100,e));E[e]=t,T[e]=t.eventTypes[n].dependencies}var x=[],S={},E={},T={};function C(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!b.hasOwnProperty(t)||b[t]!==r){if(b[t])throw Error(l(102,t));b[t]=r,n=!0}}n&&w()}var O=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),P=null,_=null,N=null;function j(e){if(e=y(e)){if("function"!=typeof P)throw Error(l(280));var t=e.stateNode;t&&(t=m(t),P(e.stateNode,e.type,t))}}function M(e){_?N?N.push(e):N=[e]:_=e}function A(){if(_){var e=_,t=N;if(N=_=null,j(e),t)for(e=0;e<t.length;e++)j(t[e])}}function I(e,t){return e(t)}function R(e,t,n,r,o){return e(t,n,r,o)}function z(){}var F=I,D=!1,L=!1;function W(){null===_&&null===N||(z(),A())}function B(e,t,n){if(L)return e(t,n);L=!0;try{return F(e,t,n)}finally{L=!1,W()}}var U=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,$=Object.prototype.hasOwnProperty,H={},V={};function Q(e,t,n,r,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i}var q={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){q[e]=new Q(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];q[t]=new Q(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){q[e]=new Q(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){q[e]=new Q(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){q[e]=new Q(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){q[e]=new Q(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){q[e]=new Q(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){q[e]=new Q(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){q[e]=new Q(e,5,!1,e.toLowerCase(),null,!1)}));var K=/[\-:]([a-z])/g;function G(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(K,G);q[t]=new Q(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(K,G);q[t]=new Q(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(K,G);q[t]=new Q(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){q[e]=new Q(e,1,!1,e.toLowerCase(),null,!1)})),q.xlinkHref=new Q("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){q[e]=new Q(e,1,!1,e.toLowerCase(),null,!0)}));var Y=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function X(e,t,n,r){var o=q.hasOwnProperty(t)?q[t]:null;(null!==o?0===o.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!$.call(V,e)||!$.call(H,e)&&(U.test(e)?V[e]=!0:(H[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}Y.hasOwnProperty("ReactCurrentDispatcher")||(Y.ReactCurrentDispatcher={current:null}),Y.hasOwnProperty("ReactCurrentBatchConfig")||(Y.ReactCurrentBatchConfig={suspense:null});var Z=/^(.*)[\\\/]/,J="function"==typeof Symbol&&Symbol.for,ee=J?Symbol.for("react.element"):60103,te=J?Symbol.for("react.portal"):60106,ne=J?Symbol.for("react.fragment"):60107,re=J?Symbol.for("react.strict_mode"):60108,oe=J?Symbol.for("react.profiler"):60114,ie=J?Symbol.for("react.provider"):60109,le=J?Symbol.for("react.context"):60110,ae=J?Symbol.for("react.concurrent_mode"):60111,ue=J?Symbol.for("react.forward_ref"):60112,ce=J?Symbol.for("react.suspense"):60113,se=J?Symbol.for("react.suspense_list"):60120,fe=J?Symbol.for("react.memo"):60115,de=J?Symbol.for("react.lazy"):60116,pe=J?Symbol.for("react.block"):60121,me="function"==typeof Symbol&&Symbol.iterator;function ye(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=me&&e[me]||e["@@iterator"])?e:null}function he(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case oe:return"Profiler";case re:return"StrictMode";case ce:return"Suspense";case se:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case le:return"Context.Consumer";case ie:return"Context.Provider";case ue:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case fe:return he(e.type);case pe:return he(e.render);case de:if(e=1===e._status?e._result:null)return he(e)}return null}function ge(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=he(e.type);n=null,r&&(n=he(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(Z,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}function ve(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function we(e){e._valueTracker||(e._valueTracker=function(e){var t=be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function ke(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function xe(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Se(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=ve(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Ee(e,t){null!=(t=t.checked)&&X(e,"checked",t,!1)}function Te(e,t){Ee(e,t);var n=ve(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Oe(e,t.type,n):t.hasOwnProperty("defaultValue")&&Oe(e,t.type,ve(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Ce(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Oe(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Pe(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function _e(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ve(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Ne(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function je(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(l(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(l(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:ve(n)}}function Me(e,t){var n=ve(t.value),r=ve(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Ae(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function Ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Re(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ze,Fe,De=(Fe=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ze=ze||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ze.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return Fe(e,t)}))}:Fe);function Le(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function We(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Be={animationend:We("Animation","AnimationEnd"),animationiteration:We("Animation","AnimationIteration"),animationstart:We("Animation","AnimationStart"),transitionend:We("Transition","TransitionEnd")},Ue={},$e={};function He(e){if(Ue[e])return Ue[e];if(!Be[e])return e;var t,n=Be[e];for(t in n)if(n.hasOwnProperty(t)&&t in $e)return Ue[e]=n[t];return e}O&&($e=document.createElement("div").style,"AnimationEvent"in window||(delete Be.animationend.animation,delete Be.animationiteration.animation,delete Be.animationstart.animation),"TransitionEvent"in window||delete Be.transitionend.transition);var Ve=He("animationend"),Qe=He("animationiteration"),qe=He("animationstart"),Ke=He("transitionend"),Ge="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ye=new("function"==typeof WeakMap?WeakMap:Map);function Xe(e){var t=Ye.get(e);return void 0===t&&(t=new Map,Ye.set(e,t)),t}function Ze(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Je(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function et(e){if(Ze(e)!==e)throw Error(l(188))}function tt(e){if(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ze(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return et(o),e;if(i===r)return et(o),t;i=i.sibling}throw Error(l(188))}if(n.return!==r.return)n=o,r=i;else{for(var a=!1,u=o.child;u;){if(u===n){a=!0,n=o,r=i;break}if(u===r){a=!0,r=o,n=i;break}u=u.sibling}if(!a){for(u=i.child;u;){if(u===n){a=!0,n=i,r=o;break}if(u===r){a=!0,r=i,n=o;break}u=u.sibling}if(!a)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e),!e)return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function nt(e,t){if(null==t)throw Error(l(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function rt(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var ot=null;function it(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)g(e,t[r],n[r]);else t&&g(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function lt(e){if(null!==e&&(ot=nt(ot,e)),e=ot,ot=null,e){if(rt(e,it),ot)throw Error(l(95));if(s)throw e=f,s=!1,f=null,e}}function at(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ut(e){if(!O)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var ct=[];function st(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>ct.length&&ct.push(e)}function ft(e,t,n,r){if(ct.length){var o=ct.pop();return o.topLevelType=e,o.eventSystemFlags=r,o.nativeEvent=t,o.targetInst=n,o}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function dt(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=jn(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=at(e.nativeEvent);r=e.topLevelType;var i=e.nativeEvent,l=e.eventSystemFlags;0===n&&(l|=64);for(var a=null,u=0;u<x.length;u++){var c=x[u];c&&(c=c.extractEvents(r,t,i,o,l))&&(a=nt(a,c))}lt(a)}}function pt(e,t,n){if(!n.has(e)){switch(e){case"scroll":qt(t,"scroll",!0);break;case"focus":case"blur":qt(t,"focus",!0),qt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ut(e)&&qt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Ge.indexOf(e)&&Qt(e,t)}n.set(e,null)}}var mt,yt,ht,gt=!1,vt=[],bt=null,wt=null,kt=null,xt=new Map,St=new Map,Et=[],Tt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Ct="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Ot(e,t,n,r,o){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:o,container:r}}function Pt(e,t){switch(e){case"focus":case"blur":bt=null;break;case"dragenter":case"dragleave":wt=null;break;case"mouseover":case"mouseout":kt=null;break;case"pointerover":case"pointerout":xt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":St.delete(t.pointerId)}}function _t(e,t,n,r,o,i){return null===e||e.nativeEvent!==i?(e=Ot(t,n,r,o,i),null!==t&&null!==(t=Mn(t))&&yt(t),e):(e.eventSystemFlags|=r,e)}function Nt(e){var t=jn(e.target);if(null!==t){var n=Ze(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Je(n)))return e.blockedOn=t,void i.unstable_runWithPriority(e.priority,(function(){ht(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function jt(e){if(null!==e.blockedOn)return!1;var t=Xt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=Mn(t);return null!==n&&yt(n),e.blockedOn=t,!1}return!0}function Mt(e,t,n){jt(e)&&n.delete(t)}function At(){for(gt=!1;0<vt.length;){var e=vt[0];if(null!==e.blockedOn){null!==(e=Mn(e.blockedOn))&&mt(e);break}var t=Xt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:vt.shift()}null!==bt&&jt(bt)&&(bt=null),null!==wt&&jt(wt)&&(wt=null),null!==kt&&jt(kt)&&(kt=null),xt.forEach(Mt),St.forEach(Mt)}function It(e,t){e.blockedOn===t&&(e.blockedOn=null,gt||(gt=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,At)))}function Rt(e){function t(t){return It(t,e)}if(0<vt.length){It(vt[0],e);for(var n=1;n<vt.length;n++){var r=vt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==bt&&It(bt,e),null!==wt&&It(wt,e),null!==kt&&It(kt,e),xt.forEach(t),St.forEach(t),n=0;n<Et.length;n++)(r=Et[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Et.length&&null===(n=Et[0]).blockedOn;)Nt(n),null===n.blockedOn&&Et.shift()}var zt={},Ft=new Map,Dt=new Map,Lt=["abort","abort",Ve,"animationEnd",Qe,"animationIteration",qe,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ke,"transitionEnd","waiting","waiting"];function Wt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1],i="on"+(o[0].toUpperCase()+o.slice(1));i={phasedRegistrationNames:{bubbled:i,captured:i+"Capture"},dependencies:[r],eventPriority:t},Dt.set(r,t),Ft.set(r,i),zt[o]=i}}Wt("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Wt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Wt(Lt,2);for(var Bt="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Ut=0;Ut<Bt.length;Ut++)Dt.set(Bt[Ut],0);var $t=i.unstable_UserBlockingPriority,Ht=i.unstable_runWithPriority,Vt=!0;function Qt(e,t){qt(t,e,!1)}function qt(e,t,n){var r=Dt.get(t);switch(void 0===r?2:r){case 0:r=Kt.bind(null,t,1,e);break;case 1:r=Gt.bind(null,t,1,e);break;default:r=Yt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Kt(e,t,n,r){D||z();var o=Yt,i=D;D=!0;try{R(o,e,t,n,r)}finally{(D=i)||W()}}function Gt(e,t,n,r){Ht($t,Yt.bind(null,e,t,n,r))}function Yt(e,t,n,r){if(Vt)if(0<vt.length&&-1<Tt.indexOf(e))e=Ot(null,e,t,n,r),vt.push(e);else{var o=Xt(e,t,n,r);if(null===o)Pt(e,r);else if(-1<Tt.indexOf(e))e=Ot(o,e,t,n,r),vt.push(e);else if(!function(e,t,n,r,o){switch(t){case"focus":return bt=_t(bt,e,t,n,r,o),!0;case"dragenter":return wt=_t(wt,e,t,n,r,o),!0;case"mouseover":return kt=_t(kt,e,t,n,r,o),!0;case"pointerover":var i=o.pointerId;return xt.set(i,_t(xt.get(i)||null,e,t,n,r,o)),!0;case"gotpointercapture":return i=o.pointerId,St.set(i,_t(St.get(i)||null,e,t,n,r,o)),!0}return!1}(o,e,t,n,r)){Pt(e,r),e=ft(e,r,null,t);try{B(dt,e)}finally{st(e)}}}}function Xt(e,t,n,r){if(null!==(n=jn(n=at(r)))){var o=Ze(n);if(null===o)n=null;else{var i=o.tag;if(13===i){if(null!==(n=Je(o)))return n;n=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;n=null}else o!==n&&(n=null)}}e=ft(e,r,n,t);try{B(dt,e)}finally{st(e)}return null}var Zt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Jt=["Webkit","ms","Moz","O"];function en(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Zt.hasOwnProperty(e)&&Zt[e]?(""+t).trim():t+"px"}function tn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=en(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Zt).forEach((function(e){Jt.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Zt[t]=Zt[e]}))}));var nn=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function rn(e,t){if(t){if(nn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(l(62,""))}}function on(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ln="http://www.w3.org/1999/xhtml";function an(e,t){var n=Xe(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=T[t];for(var r=0;r<t.length;r++)pt(t[r],e,n)}function un(){}function cn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function sn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function fn(e,t){var n,r=sn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=sn(r)}}function dn(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?dn(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function pn(){for(var e=window,t=cn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=cn((e=t.contentWindow).document)}return t}function mn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var yn="$",hn="/$",gn="$?",vn="$!",bn=null,wn=null;function kn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function xn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Sn="function"==typeof setTimeout?setTimeout:void 0,En="function"==typeof clearTimeout?clearTimeout:void 0;function Tn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Cn(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if(n===yn||n===vn||n===gn){if(0===t)return e;t--}else n===hn&&t++}e=e.previousSibling}return null}var On=Math.random().toString(36).slice(2),Pn="__reactInternalInstance$"+On,_n="__reactEventHandlers$"+On,Nn="__reactContainere$"+On;function jn(e){var t=e[Pn];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Nn]||n[Pn]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Cn(e);null!==e;){if(n=e[Pn])return n;e=Cn(e)}return t}n=(e=n).parentNode}return null}function Mn(e){return!(e=e[Pn]||e[Nn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function An(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function In(e){return e[_n]||null}function Rn(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function zn(e,t){var n=e.stateNode;if(!n)return null;var r=m(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,typeof n));return n}function Fn(e,t,n){(t=zn(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=nt(n._dispatchListeners,t),n._dispatchInstances=nt(n._dispatchInstances,e))}function Dn(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Rn(t);for(t=n.length;0<t--;)Fn(n[t],"captured",e);for(t=0;t<n.length;t++)Fn(n[t],"bubbled",e)}}function Ln(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=zn(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=nt(n._dispatchListeners,t),n._dispatchInstances=nt(n._dispatchInstances,e))}function Wn(e){e&&e.dispatchConfig.registrationName&&Ln(e._targetInst,null,e)}function Bn(e){rt(e,Dn)}var Un=null,$n=null,Hn=null;function Vn(){if(Hn)return Hn;var e,t,n=$n,r=n.length,o="value"in Un?Un.value:Un.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var l=r-e;for(t=1;t<=l&&n[r-t]===o[i-t];t++);return Hn=o.slice(e,1<t?1-t:void 0)}function Qn(){return!0}function qn(){return!1}function Kn(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Qn:qn,this.isPropagationStopped=qn,this}function Gn(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function Yn(e){if(!(e instanceof this))throw Error(l(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Xn(e){e.eventPool=[],e.getPooled=Gn,e.release=Yn}o(Kn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Qn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Qn)},persist:function(){this.isPersistent=Qn},isPersistent:qn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=qn,this._dispatchInstances=this._dispatchListeners=null}}),Kn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Kn.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,Xn(n),n},Xn(Kn);var Zn=Kn.extend({data:null}),Jn=Kn.extend({data:null}),er=[9,13,27,32],tr=O&&"CompositionEvent"in window,nr=null;O&&"documentMode"in document&&(nr=document.documentMode);var rr=O&&"TextEvent"in window&&!nr,or=O&&(!tr||nr&&8<nr&&11>=nr),ir=String.fromCharCode(32),lr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},ar=!1;function ur(e,t){switch(e){case"keyup":return-1!==er.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function cr(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var sr=!1,fr={eventTypes:lr,extractEvents:function(e,t,n,r){var o;if(tr)e:{switch(e){case"compositionstart":var i=lr.compositionStart;break e;case"compositionend":i=lr.compositionEnd;break e;case"compositionupdate":i=lr.compositionUpdate;break e}i=void 0}else sr?ur(e,n)&&(i=lr.compositionEnd):"keydown"===e&&229===n.keyCode&&(i=lr.compositionStart);return i?(or&&"ko"!==n.locale&&(sr||i!==lr.compositionStart?i===lr.compositionEnd&&sr&&(o=Vn()):($n="value"in(Un=r)?Un.value:Un.textContent,sr=!0)),i=Zn.getPooled(i,t,n,r),(o||null!==(o=cr(n)))&&(i.data=o),Bn(i),o=i):o=null,(e=rr?function(e,t){switch(e){case"compositionend":return cr(t);case"keypress":return 32!==t.which?null:(ar=!0,ir);case"textInput":return(e=t.data)===ir&&ar?null:e;default:return null}}(e,n):function(e,t){if(sr)return"compositionend"===e||!tr&&ur(e,t)?(e=Vn(),Hn=$n=Un=null,sr=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return or&&"ko"!==t.locale?null:t.data}}(e,n))?((t=Jn.getPooled(lr.beforeInput,t,n,r)).data=e,Bn(t)):t=null,null===o?t:null===t?o:[o,t]}},dr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!dr[e.type]:"textarea"===t}var mr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function yr(e,t,n){return(e=Kn.getPooled(mr.change,e,t,n)).type="change",M(n),Bn(e),e}var hr=null,gr=null;function vr(e){lt(e)}function br(e){if(ke(An(e)))return e}function wr(e,t){if("change"===e)return t}var kr=!1;function xr(){hr&&(hr.detachEvent("onpropertychange",Sr),gr=hr=null)}function Sr(e){if("value"===e.propertyName&&br(gr))if(e=yr(gr,e,at(e)),D)lt(e);else{D=!0;try{I(vr,e)}finally{D=!1,W()}}}function Er(e,t,n){"focus"===e?(xr(),gr=n,(hr=t).attachEvent("onpropertychange",Sr)):"blur"===e&&xr()}function Tr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return br(gr)}function Cr(e,t){if("click"===e)return br(t)}function Or(e,t){if("input"===e||"change"===e)return br(t)}O&&(kr=ut("input")&&(!document.documentMode||9<document.documentMode));var Pr={eventTypes:mr,_isInputEventSupported:kr,extractEvents:function(e,t,n,r){var o=t?An(t):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var l=wr;else if(pr(o))if(kr)l=Or;else{l=Tr;var a=Er}else(i=o.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(l=Cr);if(l&&(l=l(e,t)))return yr(l,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Oe(o,"number",o.value)}},_r=Kn.extend({view:null,detail:null}),Nr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function jr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Nr[e])&&!!t[e]}function Mr(){return jr}var Ar=0,Ir=0,Rr=!1,zr=!1,Fr=_r.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Mr,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Ar;return Ar=e.screenX,Rr?"mousemove"===e.type?e.screenX-t:0:(Rr=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Ir;return Ir=e.screenY,zr?"mousemove"===e.type?e.screenY-t:0:(zr=!0,0)}}),Dr=Fr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Lr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Wr={eventTypes:Lr,extractEvents:function(e,t,n,r,o){var i="mouseover"===e||"pointerover"===e,l="mouseout"===e||"pointerout"===e;if(i&&0==(32&o)&&(n.relatedTarget||n.fromElement)||!l&&!i)return null;if(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,l?(l=t,null!==(t=(t=n.relatedTarget||n.toElement)?jn(t):null)&&(t!==Ze(t)||5!==t.tag&&6!==t.tag)&&(t=null)):l=null,l===t)return null;if("mouseout"===e||"mouseover"===e)var a=Fr,u=Lr.mouseLeave,c=Lr.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(a=Dr,u=Lr.pointerLeave,c=Lr.pointerEnter,s="pointer");if(e=null==l?i:An(l),i=null==t?i:An(t),(u=a.getPooled(u,l,n,r)).type=s+"leave",u.target=e,u.relatedTarget=i,(n=a.getPooled(c,t,n,r)).type=s+"enter",n.target=i,n.relatedTarget=e,s=t,(r=l)&&s)e:{for(c=s,l=0,e=a=r;e;e=Rn(e))l++;for(e=0,t=c;t;t=Rn(t))e++;for(;0<l-e;)a=Rn(a),l--;for(;0<e-l;)c=Rn(c),e--;for(;l--;){if(a===c||a===c.alternate)break e;a=Rn(a),c=Rn(c)}a=null}else a=null;for(c=a,a=[];r&&r!==c&&(null===(l=r.alternate)||l!==c);)a.push(r),r=Rn(r);for(r=[];s&&s!==c&&(null===(l=s.alternate)||l!==c);)r.push(s),s=Rn(s);for(s=0;s<a.length;s++)Ln(a[s],"bubbled",u);for(s=r.length;0<s--;)Ln(r[s],"captured",n);return 0==(64&o)?[u]:[u,n]}},Br="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Ur=Object.prototype.hasOwnProperty;function $r(e,t){if(Br(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Ur.call(t,n[r])||!Br(e[n[r]],t[n[r]]))return!1;return!0}var Hr=O&&"documentMode"in document&&11>=document.documentMode,Vr={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Qr=null,qr=null,Kr=null,Gr=!1;function Yr(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Gr||null==Qr||Qr!==cn(n)?null:(n="selectionStart"in(n=Qr)&&mn(n)?{start:n.selectionStart,end:n.selectionEnd}:{anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Kr&&$r(Kr,n)?null:(Kr=n,(e=Kn.getPooled(Vr.select,qr,e,t)).type="select",e.target=Qr,Bn(e),e))}var Xr={eventTypes:Vr,extractEvents:function(e,t,n,r,o,i){if(!(i=!(o=i||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{o=Xe(o),i=T.onSelect;for(var l=0;l<i.length;l++)if(!o.has(i[l])){o=!1;break e}o=!0}i=!o}if(i)return null;switch(o=t?An(t):window,e){case"focus":(pr(o)||"true"===o.contentEditable)&&(Qr=o,qr=t,Kr=null);break;case"blur":Kr=qr=Qr=null;break;case"mousedown":Gr=!0;break;case"contextmenu":case"mouseup":case"dragend":return Gr=!1,Yr(n,r);case"selectionchange":if(Hr)break;case"keydown":case"keyup":return Yr(n,r)}return null}},Zr=Kn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Jr=Kn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),eo=_r.extend({relatedTarget:null});function to(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var no={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},ro={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},oo=_r.extend({key:function(e){if(e.key){var t=no[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=to(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?ro[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Mr,charCode:function(e){return"keypress"===e.type?to(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?to(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),io=Fr.extend({dataTransfer:null}),lo=_r.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Mr}),ao=Kn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),uo=Fr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),co={eventTypes:zt,extractEvents:function(e,t,n,r){var o=Ft.get(e);if(!o)return null;switch(e){case"keypress":if(0===to(n))return null;case"keydown":case"keyup":e=oo;break;case"blur":case"focus":e=eo;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Fr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=io;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=lo;break;case Ve:case Qe:case qe:e=Zr;break;case Ke:e=ao;break;case"scroll":e=_r;break;case"wheel":e=uo;break;case"copy":case"cut":case"paste":e=Jr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Dr;break;default:e=Kn}return Bn(t=e.getPooled(o,t,n,r)),t}};if(v)throw Error(l(101));v=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),w(),m=In,y=Mn,h=An,C({SimpleEventPlugin:co,EnterLeaveEventPlugin:Wr,ChangeEventPlugin:Pr,SelectEventPlugin:Xr,BeforeInputEventPlugin:fr});var so=[],fo=-1;function po(e){0>fo||(e.current=so[fo],so[fo]=null,fo--)}function mo(e,t){fo++,so[fo]=e.current,e.current=t}var yo={},ho={current:yo},go={current:!1},vo=yo;function bo(e,t){var n=e.type.contextTypes;if(!n)return yo;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function wo(e){return null!=e.childContextTypes}function ko(){po(go),po(ho)}function xo(e,t,n){if(ho.current!==yo)throw Error(l(168));mo(ho,t),mo(go,n)}function So(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw Error(l(108,he(t)||"Unknown",i));return o({},n,{},r)}function Eo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||yo,vo=ho.current,mo(ho,e),mo(go,go.current),!0}function To(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(e=So(e,t,vo),r.__reactInternalMemoizedMergedChildContext=e,po(go),po(ho),mo(ho,e)):po(go),mo(go,n)}var Co=i.unstable_runWithPriority,Oo=i.unstable_scheduleCallback,Po=i.unstable_cancelCallback,_o=i.unstable_requestPaint,No=i.unstable_now,jo=i.unstable_getCurrentPriorityLevel,Mo=i.unstable_ImmediatePriority,Ao=i.unstable_UserBlockingPriority,Io=i.unstable_NormalPriority,Ro=i.unstable_LowPriority,zo=i.unstable_IdlePriority,Fo={},Do=i.unstable_shouldYield,Lo=void 0!==_o?_o:function(){},Wo=null,Bo=null,Uo=!1,$o=No(),Ho=1e4>$o?No:function(){return No()-$o};function Vo(){switch(jo()){case Mo:return 99;case Ao:return 98;case Io:return 97;case Ro:return 96;case zo:return 95;default:throw Error(l(332))}}function Qo(e){switch(e){case 99:return Mo;case 98:return Ao;case 97:return Io;case 96:return Ro;case 95:return zo;default:throw Error(l(332))}}function qo(e,t){return e=Qo(e),Co(e,t)}function Ko(e,t,n){return e=Qo(e),Oo(e,t,n)}function Go(e){return null===Wo?(Wo=[e],Bo=Oo(Mo,Xo)):Wo.push(e),Fo}function Yo(){if(null!==Bo){var e=Bo;Bo=null,Po(e)}Xo()}function Xo(){if(!Uo&&null!==Wo){Uo=!0;var e=0;try{var t=Wo;qo(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Wo=null}catch(t){throw null!==Wo&&(Wo=Wo.slice(e+1)),Oo(Mo,Yo),t}finally{Uo=!1}}}function Zo(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function Jo(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var ei={current:null},ti=null,ni=null,ri=null;function oi(){ri=ni=ti=null}function ii(e){var t=ei.current;po(ei),e.type._context._currentValue=t}function li(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function ai(e,t){ti=e,ri=ni=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Il=!0),e.firstContext=null)}function ui(e,t){if(ri!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(ri=e,t=1073741823),t={context:e,observedBits:t,next:null},null===ni){if(null===ti)throw Error(l(308));ni=t,ti.dependencies={expirationTime:0,firstContext:t,responders:null}}else ni=ni.next=t;return e._currentValue}var ci=!1;function si(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function fi(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function di(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function pi(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function mi(e,t){var n=e.alternate;null!==n&&fi(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function yi(e,t,n,r){var i=e.updateQueue;ci=!1;var l=i.baseQueue,a=i.shared.pending;if(null!==a){if(null!==l){var u=l.next;l.next=a.next,a.next=u}l=a,i.shared.pending=null,null!==(u=e.alternate)&&null!==(u=u.updateQueue)&&(u.baseQueue=a)}if(null!==l){u=l.next;var c=i.baseState,s=0,f=null,d=null,p=null;if(null!==u)for(var m=u;;){if((a=m.expirationTime)<r){var y={expirationTime:m.expirationTime,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null};null===p?(d=p=y,f=c):p=p.next=y,a>s&&(s=a)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null}),wu(a,m.suspenseConfig);e:{var h=e,g=m;switch(a=t,y=n,g.tag){case 1:if("function"==typeof(h=g.payload)){c=h.call(y,c,a);break e}c=h;break e;case 3:h.effectTag=-4097&h.effectTag|64;case 0:if(null==(a="function"==typeof(h=g.payload)?h.call(y,c,a):h))break e;c=o({},c,a);break e;case 2:ci=!0}}null!==m.callback&&(e.effectTag|=32,null===(a=i.effects)?i.effects=[m]:a.push(m))}if(null===(m=m.next)||m===u){if(null===(a=i.shared.pending))break;m=l.next=a.next,a.next=u,i.baseQueue=l=a,i.shared.pending=null}}null===p?f=c:p.next=d,i.baseState=f,i.baseQueue=p,ku(s),e.expirationTime=s,e.memoizedState=c}}function hi(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=o,o=n,"function"!=typeof r)throw Error(l(191,r));r.call(o)}}}var gi=Y.ReactCurrentBatchConfig,vi=(new r.Component).refs;function bi(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var wi={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Ze(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=au(),o=gi.suspense;(o=di(r=uu(r,e,o),o)).payload=t,null!=n&&(o.callback=n),pi(e,o),cu(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=au(),o=gi.suspense;(o=di(r=uu(r,e,o),o)).tag=1,o.payload=t,null!=n&&(o.callback=n),pi(e,o),cu(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=au(),r=gi.suspense;(r=di(n=uu(n,e,r),r)).tag=2,null!=t&&(r.callback=t),pi(e,r),cu(e,n)}};function ki(e,t,n,r,o,i,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,l):!(t.prototype&&t.prototype.isPureReactComponent&&$r(n,r)&&$r(o,i))}function xi(e,t,n){var r=!1,o=yo,i=t.contextType;return"object"==typeof i&&null!==i?i=ui(i):(o=wo(t)?vo:ho.current,i=(r=null!=(r=t.contextTypes))?bo(e,o):yo),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=wi,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function Si(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&wi.enqueueReplaceState(t,t.state,null)}function Ei(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=vi,si(e);var i=t.contextType;"object"==typeof i&&null!==i?o.context=ui(i):(i=wo(t)?vo:ho.current,o.context=bo(e,i)),yi(e,n,o,r),o.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(bi(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&wi.enqueueReplaceState(o,o.state,null),yi(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var Ti=Array.isArray;function Ci(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var r=n.stateNode}if(!r)throw Error(l(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=r.refs;t===vi&&(t=r.refs={}),null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function Oi(e,t){if("textarea"!==e.type)throw Error(l(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Pi(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Bu(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function a(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Hu(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=Ci(e,t,n),r.return=e,r):((r=Uu(n.type,n.key,n.props,null,e.mode,r)).ref=Ci(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Vu(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=$u(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Hu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=Uu(t.type,t.key,t.props,null,e.mode,n)).ref=Ci(e,null,t),n.return=e,n;case te:return(t=Vu(t,e.mode,n)).return=e,t}if(Ti(t)||ye(t))return(t=$u(t,e.mode,n,null)).return=e,t;Oi(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===o?n.type===ne?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case te:return n.key===o?s(e,t,n,r):null}if(Ti(n)||ye(n))return null!==o?null:f(e,t,n,r,null);Oi(e,n)}return null}function m(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case te:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(Ti(r)||ye(r))return f(t,e=e.get(n)||null,r,o,null);Oi(t,r)}return null}function y(o,l,a,u){for(var c=null,s=null,f=l,y=l=0,h=null;null!==f&&y<a.length;y++){f.index>y?(h=f,f=null):h=f.sibling;var g=p(o,f,a[y],u);if(null===g){null===f&&(f=h);break}e&&f&&null===g.alternate&&t(o,f),l=i(g,l,y),null===s?c=g:s.sibling=g,s=g,f=h}if(y===a.length)return n(o,f),c;if(null===f){for(;y<a.length;y++)null!==(f=d(o,a[y],u))&&(l=i(f,l,y),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);y<a.length;y++)null!==(h=m(f,o,y,a[y],u))&&(e&&null!==h.alternate&&f.delete(null===h.key?y:h.key),l=i(h,l,y),null===s?c=h:s.sibling=h,s=h);return e&&f.forEach((function(e){return t(o,e)})),c}function h(o,a,u,c){var s=ye(u);if("function"!=typeof s)throw Error(l(150));if(null==(u=s.call(u)))throw Error(l(151));for(var f=s=null,y=a,h=a=0,g=null,v=u.next();null!==y&&!v.done;h++,v=u.next()){y.index>h?(g=y,y=null):g=y.sibling;var b=p(o,y,v.value,c);if(null===b){null===y&&(y=g);break}e&&y&&null===b.alternate&&t(o,y),a=i(b,a,h),null===f?s=b:f.sibling=b,f=b,y=g}if(v.done)return n(o,y),s;if(null===y){for(;!v.done;h++,v=u.next())null!==(v=d(o,v.value,c))&&(a=i(v,a,h),null===f?s=v:f.sibling=v,f=v);return s}for(y=r(o,y);!v.done;h++,v=u.next())null!==(v=m(y,o,h,v.value,c))&&(e&&null!==v.alternate&&y.delete(null===v.key?h:v.key),a=i(v,a,h),null===f?s=v:f.sibling=v,f=v);return e&&y.forEach((function(e){return t(o,e)})),s}return function(e,r,i,u){var c="object"==typeof i&&null!==i&&i.type===ne&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case ee:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){if(7===c.tag){if(i.type===ne){n(e,c.sibling),(r=o(c,i.props.children)).return=e,e=r;break e}}else if(c.elementType===i.type){n(e,c.sibling),(r=o(c,i.props)).ref=Ci(e,c,i),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}i.type===ne?((r=$u(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=Uu(i.type,i.key,i.props,null,e.mode,u)).ref=Ci(e,r,i),u.return=e,e=u)}return a(e);case te:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Vu(i,e.mode,u)).return=e,e=r}return a(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Hu(i,e.mode,u)).return=e,e=r),a(e);if(Ti(i))return y(e,r,i,u);if(ye(i))return h(e,r,i,u);if(s&&Oi(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:throw e=e.type,Error(l(152,e.displayName||e.name||"Component"))}return n(e,r)}}var _i=Pi(!0),Ni=Pi(!1),ji={},Mi={current:ji},Ai={current:ji},Ii={current:ji};function Ri(e){if(e===ji)throw Error(l(174));return e}function zi(e,t){switch(mo(Ii,t),mo(Ai,e),mo(Mi,ji),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Re(null,"");break;default:t=Re(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}po(Mi),mo(Mi,t)}function Fi(){po(Mi),po(Ai),po(Ii)}function Di(e){Ri(Ii.current);var t=Ri(Mi.current),n=Re(t,e.type);t!==n&&(mo(Ai,e),mo(Mi,n))}function Li(e){Ai.current===e&&(po(Mi),po(Ai))}var Wi={current:0};function Bi(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||n.data===gn||n.data===vn))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Ui(e,t){return{responder:e,props:t}}var $i=Y.ReactCurrentDispatcher,Hi=Y.ReactCurrentBatchConfig,Vi=0,Qi=null,qi=null,Ki=null,Gi=!1;function Yi(){throw Error(l(321))}function Xi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Br(e[n],t[n]))return!1;return!0}function Zi(e,t,n,r,o,i){if(Vi=i,Qi=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,$i.current=null===e||null===e.memoizedState?kl:xl,e=n(r,o),t.expirationTime===Vi){i=0;do{if(t.expirationTime=0,!(25>i))throw Error(l(301));i+=1,Ki=qi=null,t.updateQueue=null,$i.current=Sl,e=n(r,o)}while(t.expirationTime===Vi)}if($i.current=wl,t=null!==qi&&null!==qi.next,Vi=0,Ki=qi=Qi=null,Gi=!1,t)throw Error(l(300));return e}function Ji(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ki?Qi.memoizedState=Ki=e:Ki=Ki.next=e,Ki}function el(){if(null===qi){var e=Qi.alternate;e=null!==e?e.memoizedState:null}else e=qi.next;var t=null===Ki?Qi.memoizedState:Ki.next;if(null!==t)Ki=t,qi=e;else{if(null===e)throw Error(l(310));e={memoizedState:(qi=e).memoizedState,baseState:qi.baseState,baseQueue:qi.baseQueue,queue:qi.queue,next:null},null===Ki?Qi.memoizedState=Ki=e:Ki=Ki.next=e}return Ki}function tl(e,t){return"function"==typeof t?t(e):t}function nl(e){var t=el(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=qi,o=r.baseQueue,i=n.pending;if(null!==i){if(null!==o){var a=o.next;o.next=i.next,i.next=a}r.baseQueue=o=i,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var u=a=i=null,c=o;do{var s=c.expirationTime;if(s<Vi){var f={expirationTime:c.expirationTime,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(a=u=f,i=r):u=u.next=f,s>Qi.expirationTime&&(Qi.expirationTime=s,ku(s))}else null!==u&&(u=u.next={expirationTime:1073741823,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),wu(s,c.suspenseConfig),r=c.eagerReducer===e?c.eagerState:e(r,c.action);c=c.next}while(null!==c&&c!==o);null===u?i=r:u.next=a,Br(r,t.memoizedState)||(Il=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function rl(e){var t=el(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,i=t.memoizedState;if(null!==o){n.pending=null;var a=o=o.next;do{i=e(i,a.action),a=a.next}while(a!==o);Br(i,t.memoizedState)||(Il=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function ol(e){var t=Ji();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:tl,lastRenderedState:e}).dispatch=bl.bind(null,Qi,e),[t.memoizedState,e]}function il(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Qi.updateQueue)?(t={lastEffect:null},Qi.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function ll(){return el().memoizedState}function al(e,t,n,r){var o=Ji();Qi.effectTag|=e,o.memoizedState=il(1|t,n,void 0,void 0===r?null:r)}function ul(e,t,n,r){var o=el();r=void 0===r?null:r;var i=void 0;if(null!==qi){var l=qi.memoizedState;if(i=l.destroy,null!==r&&Xi(r,l.deps))return void il(t,n,i,r)}Qi.effectTag|=e,o.memoizedState=il(1|t,n,i,r)}function cl(e,t){return al(516,4,e,t)}function sl(e,t){return ul(516,4,e,t)}function fl(e,t){return ul(4,2,e,t)}function dl(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function pl(e,t,n){return n=null!=n?n.concat([e]):null,ul(4,2,dl.bind(null,t,e),n)}function ml(){}function yl(e,t){return Ji().memoizedState=[e,void 0===t?null:t],e}function hl(e,t){var n=el();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Xi(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function gl(e,t){var n=el();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Xi(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function vl(e,t,n){var r=Vo();qo(98>r?98:r,(function(){e(!0)})),qo(97<r?97:r,(function(){var r=Hi.suspense;Hi.suspense=void 0===t?null:t;try{e(!1),n()}finally{Hi.suspense=r}}))}function bl(e,t,n){var r=au(),o=gi.suspense;o={expirationTime:r=uu(r,e,o),suspenseConfig:o,action:n,eagerReducer:null,eagerState:null,next:null};var i=t.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),t.pending=o,i=e.alternate,e===Qi||null!==i&&i===Qi)Gi=!0,o.expirationTime=Vi,Qi.expirationTime=Vi;else{if(0===e.expirationTime&&(null===i||0===i.expirationTime)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,a=i(l,n);if(o.eagerReducer=i,o.eagerState=a,Br(a,l))return}catch(e){}cu(e,r)}}var wl={readContext:ui,useCallback:Yi,useContext:Yi,useEffect:Yi,useImperativeHandle:Yi,useLayoutEffect:Yi,useMemo:Yi,useReducer:Yi,useRef:Yi,useState:Yi,useDebugValue:Yi,useResponder:Yi,useDeferredValue:Yi,useTransition:Yi},kl={readContext:ui,useCallback:yl,useContext:ui,useEffect:cl,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,al(4,2,dl.bind(null,t,e),n)},useLayoutEffect:function(e,t){return al(4,2,e,t)},useMemo:function(e,t){var n=Ji();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Ji();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=bl.bind(null,Qi,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Ji().memoizedState=e},useState:ol,useDebugValue:ml,useResponder:Ui,useDeferredValue:function(e,t){var n=ol(e),r=n[0],o=n[1];return cl((function(){var n=Hi.suspense;Hi.suspense=void 0===t?null:t;try{o(e)}finally{Hi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=ol(!1),n=t[0];return t=t[1],[yl(vl.bind(null,t,e),[t,e]),n]}},xl={readContext:ui,useCallback:hl,useContext:ui,useEffect:sl,useImperativeHandle:pl,useLayoutEffect:fl,useMemo:gl,useReducer:nl,useRef:ll,useState:function(){return nl(tl)},useDebugValue:ml,useResponder:Ui,useDeferredValue:function(e,t){var n=nl(tl),r=n[0],o=n[1];return sl((function(){var n=Hi.suspense;Hi.suspense=void 0===t?null:t;try{o(e)}finally{Hi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=nl(tl),n=t[0];return t=t[1],[hl(vl.bind(null,t,e),[t,e]),n]}},Sl={readContext:ui,useCallback:hl,useContext:ui,useEffect:sl,useImperativeHandle:pl,useLayoutEffect:fl,useMemo:gl,useReducer:rl,useRef:ll,useState:function(){return rl(tl)},useDebugValue:ml,useResponder:Ui,useDeferredValue:function(e,t){var n=rl(tl),r=n[0],o=n[1];return sl((function(){var n=Hi.suspense;Hi.suspense=void 0===t?null:t;try{o(e)}finally{Hi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=rl(tl),n=t[0];return t=t[1],[hl(vl.bind(null,t,e),[t,e]),n]}},El=null,Tl=null,Cl=!1;function Ol(e,t){var n=Lu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Pl(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function _l(e){if(Cl){var t=Tl;if(t){var n=t;if(!Pl(e,t)){if(!(t=Tn(n.nextSibling))||!Pl(e,t))return e.effectTag=-1025&e.effectTag|2,Cl=!1,void(El=e);Ol(El,n)}El=e,Tl=Tn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,Cl=!1,El=e}}function Nl(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;El=e}function jl(e){if(e!==El)return!1;if(!Cl)return Nl(e),Cl=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!xn(t,e.memoizedProps))for(t=Tl;t;)Ol(e,t),t=Tn(t.nextSibling);if(Nl(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if(n===hn){if(0===t){Tl=Tn(e.nextSibling);break e}t--}else n!==yn&&n!==vn&&n!==gn||t++}e=e.nextSibling}Tl=null}}else Tl=El?Tn(e.stateNode.nextSibling):null;return!0}function Ml(){Tl=El=null,Cl=!1}var Al=Y.ReactCurrentOwner,Il=!1;function Rl(e,t,n,r){t.child=null===e?Ni(t,null,n,r):_i(t,e.child,n,r)}function zl(e,t,n,r,o){n=n.render;var i=t.ref;return ai(t,o),r=Zi(e,t,n,r,i,o),null===e||Il?(t.effectTag|=1,Rl(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Jl(e,t,o))}function Fl(e,t,n,r,o,i){if(null===e){var l=n.type;return"function"!=typeof l||Wu(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Uu(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,Dl(e,t,l,r,o,i))}return l=e.child,o<i&&(o=l.memoizedProps,(n=null!==(n=n.compare)?n:$r)(o,r)&&e.ref===t.ref)?Jl(e,t,i):(t.effectTag|=1,(e=Bu(l,r)).ref=t.ref,e.return=t,t.child=e)}function Dl(e,t,n,r,o,i){return null!==e&&$r(e.memoizedProps,r)&&e.ref===t.ref&&(Il=!1,o<i)?(t.expirationTime=e.expirationTime,Jl(e,t,i)):Wl(e,t,n,r,i)}function Ll(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Wl(e,t,n,r,o){var i=wo(n)?vo:ho.current;return i=bo(t,i),ai(t,o),n=Zi(e,t,n,r,i,o),null===e||Il?(t.effectTag|=1,Rl(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Jl(e,t,o))}function Bl(e,t,n,r,o){if(wo(n)){var i=!0;Eo(t)}else i=!1;if(ai(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),xi(t,n,r),Ei(t,n,r,o),r=!0;else if(null===e){var l=t.stateNode,a=t.memoizedProps;l.props=a;var u=l.context,c=n.contextType;c="object"==typeof c&&null!==c?ui(c):bo(t,c=wo(n)?vo:ho.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof l.getSnapshotBeforeUpdate;f||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(a!==r||u!==c)&&Si(t,l,r,c),ci=!1;var d=t.memoizedState;l.state=d,yi(t,r,l,o),u=t.memoizedState,a!==r||d!==u||go.current||ci?("function"==typeof s&&(bi(t,n,s,r),u=t.memoizedState),(a=ci||ki(t,n,a,r,d,u,c))?(f||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.effectTag|=4)):("function"==typeof l.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),l.props=r,l.state=u,l.context=c,r=a):("function"==typeof l.componentDidMount&&(t.effectTag|=4),r=!1)}else l=t.stateNode,fi(e,t),a=t.memoizedProps,l.props=t.type===t.elementType?a:Jo(t.type,a),u=l.context,c="object"==typeof(c=n.contextType)&&null!==c?ui(c):bo(t,c=wo(n)?vo:ho.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(a!==r||u!==c)&&Si(t,l,r,c),ci=!1,u=t.memoizedState,l.state=u,yi(t,r,l,o),d=t.memoizedState,a!==r||u!==d||go.current||ci?("function"==typeof s&&(bi(t,n,s,r),d=t.memoizedState),(s=ci||ki(t,n,a,r,u,d,c))?(f||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,d,c),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof l.componentDidUpdate&&(t.effectTag|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof l.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),l.props=r,l.state=d,l.context=c,r=s):("function"!=typeof l.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Ul(e,t,n,r,i,o)}function Ul(e,t,n,r,o,i){Ll(e,t);var l=0!=(64&t.effectTag);if(!r&&!l)return o&&To(t,n,!1),Jl(e,t,i);r=t.stateNode,Al.current=t;var a=l&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&l?(t.child=_i(t,e.child,null,i),t.child=_i(t,null,a,i)):Rl(e,t,a,i),t.memoizedState=r.state,o&&To(t,n,!0),t.child}function $l(e){var t=e.stateNode;t.pendingContext?xo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&xo(0,t.context,!1),zi(e,t.containerInfo)}var Hl,Vl,Ql,ql,Kl={dehydrated:null,retryTime:0};function Gl(e,t,n){var r,o=t.mode,i=t.pendingProps,l=Wi.current,a=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&l)&&(null===e||null!==e.memoizedState)),r?(a=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(l|=1),mo(Wi,1&l),null===e){if(void 0!==i.fallback&&_l(t),a){if(a=i.fallback,(i=$u(null,o,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=$u(a,o,n,null)).return=t,i.sibling=n,t.memoizedState=Kl,t.child=i,n}return o=i.children,t.memoizedState=null,t.child=Ni(t,null,o,n)}if(null!==e.memoizedState){if(o=(e=e.child).sibling,a){if(i=i.fallback,(n=Bu(e,e.pendingProps)).return=t,0==(2&t.mode)&&(a=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=a;null!==a;)a.return=n,a=a.sibling;return(o=Bu(o,i)).return=t,n.sibling=o,n.childExpirationTime=0,t.memoizedState=Kl,t.child=n,o}return n=_i(t,e.child,i.children,n),t.memoizedState=null,t.child=n}if(e=e.child,a){if(a=i.fallback,(i=$u(null,o,0,null)).return=t,i.child=e,null!==e&&(e.return=i),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=$u(a,o,n,null)).return=t,i.sibling=n,n.effectTag|=2,i.childExpirationTime=0,t.memoizedState=Kl,t.child=i,n}return t.memoizedState=null,t.child=_i(t,e,i.children,n)}function Yl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),li(e.return,t)}function Xl(e,t,n,r,o,i){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:o,lastEffect:i}:(l.isBackwards=t,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=n,l.tailExpiration=0,l.tailMode=o,l.lastEffect=i)}function Zl(e,t,n){var r=t.pendingProps,o=r.revealOrder,i=r.tail;if(Rl(e,t,r.children,n),0!=(2&(r=Wi.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Yl(e,n);else if(19===e.tag)Yl(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(mo(Wi,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Bi(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),Xl(t,!1,o,n,i,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Bi(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}Xl(t,!0,n,null,i,t.lastEffect);break;case"together":Xl(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Jl(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&ku(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=Bu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Bu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function ea(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ta(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:case 17:return wo(t.type)&&ko(),null;case 3:return Fi(),po(go),po(ho),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!jl(t)||(t.effectTag|=4),Vl(t),null;case 5:Li(t),n=Ri(Ii.current);var i=t.type;if(null!==e&&null!=t.stateNode)Ql(e,t,i,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(l(166));return null}if(e=Ri(Mi.current),jl(t)){r=t.stateNode,i=t.type;var a=t.memoizedProps;switch(r[Pn]=t,r[_n]=a,i){case"iframe":case"object":case"embed":Qt("load",r);break;case"video":case"audio":for(e=0;e<Ge.length;e++)Qt(Ge[e],r);break;case"source":Qt("error",r);break;case"img":case"image":case"link":Qt("error",r),Qt("load",r);break;case"form":Qt("reset",r),Qt("submit",r);break;case"details":Qt("toggle",r);break;case"input":Se(r,a),Qt("invalid",r),an(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!a.multiple},Qt("invalid",r),an(n,"onChange");break;case"textarea":je(r,a),Qt("invalid",r),an(n,"onChange")}for(var u in rn(i,a),e=null,a)if(a.hasOwnProperty(u)){var c=a[u];"children"===u?"string"==typeof c?r.textContent!==c&&(e=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(e=["children",""+c]):E.hasOwnProperty(u)&&null!=c&&an(n,u)}switch(i){case"input":we(r),Ce(r,a,!0);break;case"textarea":we(r),Ae(r);break;case"select":case"option":break;default:"function"==typeof a.onClick&&(r.onclick=un)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(u=9===n.nodeType?n:n.ownerDocument,e===ln&&(e=Ie(i)),e===ln?"script"===i?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(i,{is:r.is}):(e=u.createElement(i),"select"===i&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,i),e[Pn]=t,e[_n]=r,Hl(e,t,!1,!1),t.stateNode=e,u=on(i,r),i){case"iframe":case"object":case"embed":Qt("load",e),c=r;break;case"video":case"audio":for(c=0;c<Ge.length;c++)Qt(Ge[c],e);c=r;break;case"source":Qt("error",e),c=r;break;case"img":case"image":case"link":Qt("error",e),Qt("load",e),c=r;break;case"form":Qt("reset",e),Qt("submit",e),c=r;break;case"details":Qt("toggle",e),c=r;break;case"input":Se(e,r),c=xe(e,r),Qt("invalid",e),an(n,"onChange");break;case"option":c=Pe(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},c=o({},r,{value:void 0}),Qt("invalid",e),an(n,"onChange");break;case"textarea":je(e,r),c=Ne(e,r),Qt("invalid",e),an(n,"onChange");break;default:c=r}rn(i,c);var s=c;for(a in s)if(s.hasOwnProperty(a)){var f=s[a];"style"===a?tn(e,f):"dangerouslySetInnerHTML"===a?null!=(f=f?f.__html:void 0)&&De(e,f):"children"===a?"string"==typeof f?("textarea"!==i||""!==f)&&Le(e,f):"number"==typeof f&&Le(e,""+f):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(E.hasOwnProperty(a)?null!=f&&an(n,a):null!=f&&X(e,a,f,u))}switch(i){case"input":we(e),Ce(e,r,!1);break;case"textarea":we(e),Ae(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ve(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?_e(e,!!r.multiple,n,!1):null!=r.defaultValue&&_e(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof c.onClick&&(e.onclick=un)}kn(i,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)ql(e,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(l(166));n=Ri(Ii.current),Ri(Mi.current),jl(t)?(n=t.stateNode,r=t.memoizedProps,n[Pn]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Pn]=t,t.stateNode=n)}return null;case 13:return po(Wi),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&jl(t):(r=null!==(i=e.memoizedState),n||null===i||null!==(i=e.child.sibling)&&(null!==(a=t.firstEffect)?(t.firstEffect=i,i.nextEffect=a):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Wi.current)?Ba===ja&&(Ba=Ia):(Ba!==ja&&Ba!==Ia||(Ba=Ra),0!==Qa&&null!==Da&&(Ku(Da,Wa),Gu(Da,Qa)))),(n||r)&&(t.effectTag|=4),null);case 4:return Fi(),Vl(t),null;case 10:return ii(t),null;case 19:if(po(Wi),null===(r=t.memoizedState))return null;if(i=0!=(64&t.effectTag),null===(a=r.rendering)){if(i)ea(r,!1);else if(Ba!==ja||null!==e&&0!=(64&e.effectTag))for(a=t.child;null!==a;){if(null!==(e=Bi(a))){for(t.effectTag|=64,ea(r,!1),null!==(i=e.updateQueue)&&(t.updateQueue=i,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)a=n,(i=r).effectTag&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(e=i.alternate)?(i.childExpirationTime=0,i.expirationTime=a,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null):(i.childExpirationTime=e.childExpirationTime,i.expirationTime=e.expirationTime,i.child=e.child,i.memoizedProps=e.memoizedProps,i.memoizedState=e.memoizedState,i.updateQueue=e.updateQueue,a=e.dependencies,i.dependencies=null===a?null:{expirationTime:a.expirationTime,firstContext:a.firstContext,responders:a.responders}),r=r.sibling;return mo(Wi,1&Wi.current|2),t.child}a=a.sibling}}else{if(!i)if(null!==(e=Bi(a))){if(t.effectTag|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),ea(r,!0),null===r.tail&&"hidden"===r.tailMode&&!a.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Ho()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,i=!0,ea(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(a.sibling=t.child,t.child=a):(null!==(n=r.last)?n.sibling=a:t.child=a,r.last=a)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Ho()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Ho(),n.sibling=null,t=Wi.current,mo(Wi,i?1&t|2:1&t),n):null}throw Error(l(156,t.tag))}function na(e){switch(e.tag){case 1:wo(e.type)&&ko();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Fi(),po(go),po(ho),0!=(64&(t=e.effectTag)))throw Error(l(285));return e.effectTag=-4097&t|64,e;case 5:return Li(e),null;case 13:return po(Wi),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return po(Wi),null;case 4:return Fi(),null;case 10:return ii(e),null;default:return null}}function ra(e,t){return{value:e,source:t,stack:ge(t)}}Hl=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Vl=function(){},Ql=function(e,t,n,r,i){var l=e.memoizedProps;if(l!==r){var a,u,c=t.stateNode;switch(Ri(Mi.current),e=null,n){case"input":l=xe(c,l),r=xe(c,r),e=[];break;case"option":l=Pe(c,l),r=Pe(c,r),e=[];break;case"select":l=o({},l,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":l=Ne(c,l),r=Ne(c,r),e=[];break;default:"function"!=typeof l.onClick&&"function"==typeof r.onClick&&(c.onclick=un)}for(a in rn(n,r),n=null,l)if(!r.hasOwnProperty(a)&&l.hasOwnProperty(a)&&null!=l[a])if("style"===a)for(u in c=l[a])c.hasOwnProperty(u)&&(n||(n={}),n[u]="");else"dangerouslySetInnerHTML"!==a&&"children"!==a&&"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(E.hasOwnProperty(a)?e||(e=[]):(e=e||[]).push(a,null));for(a in r){var s=r[a];if(c=null!=l?l[a]:void 0,r.hasOwnProperty(a)&&s!==c&&(null!=s||null!=c))if("style"===a)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(n||(n={}),n[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(n||(n={}),n[u]=s[u])}else n||(e||(e=[]),e.push(a,n)),n=s;else"dangerouslySetInnerHTML"===a?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(a,s)):"children"===a?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(a,""+s):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&(E.hasOwnProperty(a)?(null!=s&&an(i,a),e||c===s||(e=[])):(e=e||[]).push(a,s))}n&&(e=e||[]).push("style",n),i=e,(t.updateQueue=i)&&(t.effectTag|=4)}},ql=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var oa="function"==typeof WeakSet?WeakSet:Set;function ia(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ge(n)),null!==n&&he(n.type),t=t.value,null!==e&&1===e.tag&&he(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function la(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Au(e,t)}else t.current=null}function aa(e,t){switch(t.tag){case 0:case 11:case 15:case 22:case 3:case 5:case 6:case 4:case 17:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Jo(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return}throw Error(l(163))}function ua(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function ca(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function sa(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void ca(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:Jo(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&hi(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:case 1:e=n.child.stateNode}hi(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&kn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:case 19:case 17:case 20:case 21:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Rt(n)))))}throw Error(l(163))}function fa(e,t,n){switch("function"==typeof Fu&&Fu(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;qo(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var o=t;try{n()}catch(e){Au(o,e)}}e=e.next}while(e!==r)}))}break;case 1:la(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Au(e,t)}}(t,n);break;case 5:la(t);break;case 4:ga(e,t,n)}}function da(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&da(t)}function pa(e){return 5===e.tag||3===e.tag||4===e.tag}function ma(e){e:{for(var t=e.return;null!==t;){if(pa(t)){var n=t;break e}t=t.return}throw Error(l(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(l(161))}16&n.effectTag&&(Le(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||pa(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?ya(e,n,t):ha(e,n,t)}function ya(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=un));else if(4!==r&&null!==(e=e.child))for(ya(e,t,n),e=e.sibling;null!==e;)ya(e,t,n),e=e.sibling}function ha(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(ha(e,t,n),e=e.sibling;null!==e;)ha(e,t,n),e=e.sibling}function ga(e,t,n){for(var r,o,i=t,a=!1;;){if(!a){a=i.return;e:for(;;){if(null===a)throw Error(l(160));switch(r=a.stateNode,a.tag){case 5:o=!1;break e;case 3:case 4:r=r.containerInfo,o=!0;break e}a=a.return}a=!0}if(5===i.tag||6===i.tag){e:for(var u=e,c=i,s=n,f=c;;)if(fa(u,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===c)break e;for(;null===f.sibling;){if(null===f.return||f.return===c)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}o?(u=r,c=i.stateNode,8===u.nodeType?u.parentNode.removeChild(c):u.removeChild(c)):r.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,o=!0,i.child.return=i,i=i.child;continue}}else if(fa(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(a=!1)}i.sibling.return=i.return,i=i.sibling}}function va(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void ua(3,t);case 1:case 12:case 17:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[_n]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Ee(n,r),on(e,o),t=on(e,r),o=0;o<i.length;o+=2){var a=i[o],u=i[o+1];"style"===a?tn(n,u):"dangerouslySetInnerHTML"===a?De(n,u):"children"===a?Le(n,u):X(n,a,u,t)}switch(e){case"input":Te(n,r);break;case"textarea":Me(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?_e(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?_e(n,!!r.multiple,r.defaultValue,!0):_e(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(l(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,Rt(t.containerInfo)));case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Ka=Ho()),null!==n)e:for(e=n;;){if(5===e.tag)i=e.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,i.style.display=en("display",o));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void ba(t);case 19:return void ba(t)}throw Error(l(163))}function ba(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new oa),t.forEach((function(t){var r=Ru.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var wa="function"==typeof WeakMap?WeakMap:Map;function ka(e,t,n){(n=di(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Xa||(Xa=!0,Za=r),ia(e,t)},n}function xa(e,t,n){(n=di(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return ia(e,t),r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Ja?Ja=new Set([this]):Ja.add(this),ia(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var Sa,Ea=Math.ceil,Ta=Y.ReactCurrentDispatcher,Ca=Y.ReactCurrentOwner,Oa=0,Pa=8,_a=16,Na=32,ja=0,Ma=1,Aa=2,Ia=3,Ra=4,za=5,Fa=Oa,Da=null,La=null,Wa=0,Ba=ja,Ua=null,$a=1073741823,Ha=1073741823,Va=null,Qa=0,qa=!1,Ka=0,Ga=500,Ya=null,Xa=!1,Za=null,Ja=null,eu=!1,tu=null,nu=90,ru=null,ou=0,iu=null,lu=0;function au(){return(Fa&(_a|Na))!==Oa?1073741821-(Ho()/10|0):0!==lu?lu:lu=1073741821-(Ho()/10|0)}function uu(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=Vo();if(0==(4&t))return 99===r?1073741823:1073741822;if((Fa&_a)!==Oa)return Wa;if(null!==n)e=Zo(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Zo(e,150,100);break;case 97:case 96:e=Zo(e,5e3,250);break;case 95:e=2;break;default:throw Error(l(326))}return null!==Da&&e===Wa&&--e,e}function cu(e,t){if(50<ou)throw ou=0,iu=null,Error(l(185));if(null!==(e=su(e,t))){var n=Vo();1073741823===t?(Fa&Pa)!==Oa&&(Fa&(_a|Na))===Oa?mu(e):(du(e),Fa===Oa&&Yo()):du(e),(4&Fa)===Oa||98!==n&&99!==n||(null===ru?ru=new Map([[e,t]]):(void 0===(n=ru.get(e))||n>t)&&ru.set(e,t))}}function su(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(Da===o&&(ku(t),Ba===Ra&&Ku(o,Wa)),Gu(o,t)),o}function fu(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!qu(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function du(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Go(mu.bind(null,e));else{var t=fu(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=au();if(r=1073741823===t?99:1===t||2===t?95:0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var o=e.callbackPriority;if(e.callbackExpirationTime===t&&o>=r)return;n!==Fo&&Po(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Go(mu.bind(null,e)):Ko(r,pu.bind(null,e),{timeout:10*(1073741821-t)-Ho()}),e.callbackNode=t}}}function pu(e,t){if(lu=0,t)return Yu(e,t=au()),du(e),null;var n=fu(e);if(0!==n){if(t=e.callbackNode,(Fa&(_a|Na))!==Oa)throw Error(l(327));if(Nu(),e===Da&&n===Wa||gu(e,n),null!==La){var r=Fa;Fa|=_a;for(var o=bu();;)try{Su();break}catch(t){vu(e,t)}if(oi(),Fa=r,Ta.current=o,Ba===Ma)throw t=Ua,gu(e,n),Ku(e,n),du(e),t;if(null===La)switch(o=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Ba,Da=null,r){case ja:case Ma:throw Error(l(345));case Aa:Yu(e,2<n?2:n);break;case Ia:if(Ku(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=Cu(o)),1073741823===$a&&10<(o=Ka+Ga-Ho())){if(qa){var i=e.lastPingedTime;if(0===i||i>=n){e.lastPingedTime=n,gu(e,n);break}}if(0!==(i=fu(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=Sn(Ou.bind(null,e),o);break}Ou(e);break;case Ra:if(Ku(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=Cu(o)),qa&&(0===(o=e.lastPingedTime)||o>=n)){e.lastPingedTime=n,gu(e,n);break}if(0!==(o=fu(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Ha?r=10*(1073741821-Ha)-Ho():1073741823===$a?r=0:(r=10*(1073741821-$a)-5e3,0>(r=(o=Ho())-r)&&(r=0),(n=10*(1073741821-n)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Ea(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=Sn(Ou.bind(null,e),r);break}Ou(e);break;case za:if(1073741823!==$a&&null!==Va){i=$a;var a=Va;if(0>=(r=0|a.busyMinDurationMs)?r=0:(o=0|a.busyDelayMs,r=(i=Ho()-(10*(1073741821-i)-(0|a.timeoutMs||5e3)))<=o?0:o+r-i),10<r){Ku(e,n),e.timeoutHandle=Sn(Ou.bind(null,e),r);break}}Ou(e);break;default:throw Error(l(329))}if(du(e),e.callbackNode===t)return pu.bind(null,e)}}return null}function mu(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,(Fa&(_a|Na))!==Oa)throw Error(l(327));if(Nu(),e===Da&&t===Wa||gu(e,t),null!==La){var n=Fa;Fa|=_a;for(var r=bu();;)try{xu();break}catch(t){vu(e,t)}if(oi(),Fa=n,Ta.current=r,Ba===Ma)throw n=Ua,gu(e,t),Ku(e,t),du(e),n;if(null!==La)throw Error(l(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Da=null,Ou(e),du(e)}return null}function yu(e,t){var n=Fa;Fa|=1;try{return e(t)}finally{(Fa=n)===Oa&&Yo()}}function hu(e,t){var n=Fa;Fa&=-2,Fa|=Pa;try{return e(t)}finally{(Fa=n)===Oa&&Yo()}}function gu(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,En(n)),null!==La)for(n=La.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&ko();break;case 3:Fi(),po(go),po(ho);break;case 5:Li(r);break;case 4:Fi();break;case 13:case 19:po(Wi);break;case 10:ii(r)}n=n.return}Da=e,La=Bu(e.current,null),Wa=t,Ba=ja,Ua=null,Ha=$a=1073741823,Va=null,Qa=0,qa=!1}function vu(e,t){for(;;){try{if(oi(),$i.current=wl,Gi)for(var n=Qi.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if(Vi=0,Ki=qi=Qi=null,Gi=!1,null===La||null===La.return)return Ba=Ma,Ua=t,La=null;e:{var o=e,i=La.return,l=La,a=t;if(t=Wa,l.effectTag|=2048,l.firstEffect=l.lastEffect=null,null!==a&&"object"==typeof a&&"function"==typeof a.then){var u=a;if(0==(2&l.mode)){var c=l.alternate;c?(l.updateQueue=c.updateQueue,l.memoizedState=c.memoizedState,l.expirationTime=c.expirationTime):(l.updateQueue=null,l.memoizedState=null)}var s=0!=(1&Wi.current),f=i;do{var d;if(d=13===f.tag){var p=f.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var m=f.memoizedProps;d=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!s)}}if(d){var y=f.updateQueue;if(null===y){var h=new Set;h.add(u),f.updateQueue=h}else y.add(u);if(0==(2&f.mode)){if(f.effectTag|=64,l.effectTag&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var g=di(1073741823,null);g.tag=2,pi(l,g)}l.expirationTime=1073741823;break e}a=void 0,l=t;var v=o.pingCache;if(null===v?(v=o.pingCache=new wa,a=new Set,v.set(u,a)):void 0===(a=v.get(u))&&(a=new Set,v.set(u,a)),!a.has(l)){a.add(l);var b=Iu.bind(null,o,u,l);u.then(b,b)}f.effectTag|=4096,f.expirationTime=t;break e}f=f.return}while(null!==f);a=Error((he(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ge(l))}Ba!==za&&(Ba=Aa),a=ra(a,l),f=i;do{switch(f.tag){case 3:u=a,f.effectTag|=4096,f.expirationTime=t,mi(f,ka(f,u,t));break e;case 1:u=a;var w=f.type,k=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof w.getDerivedStateFromError||null!==k&&"function"==typeof k.componentDidCatch&&(null===Ja||!Ja.has(k)))){f.effectTag|=4096,f.expirationTime=t,mi(f,xa(f,u,t));break e}}f=f.return}while(null!==f)}La=Tu(La)}catch(e){t=e;continue}break}}function bu(){var e=Ta.current;return Ta.current=wl,null===e?wl:e}function wu(e,t){e<$a&&2<e&&($a=e),null!==t&&e<Ha&&2<e&&(Ha=e,Va=t)}function ku(e){e>Qa&&(Qa=e)}function xu(){for(;null!==La;)La=Eu(La)}function Su(){for(;null!==La&&!Do();)La=Eu(La)}function Eu(e){var t=Sa(e.alternate,e,Wa);return e.memoizedProps=e.pendingProps,null===t&&(t=Tu(e)),Ca.current=null,t}function Tu(e){La=e;do{var t=La.alternate;if(e=La.return,0==(2048&La.effectTag)){if(t=ta(t,La,Wa),1===Wa||1!==La.childExpirationTime){for(var n=0,r=La.child;null!==r;){var o=r.expirationTime,i=r.childExpirationTime;o>n&&(n=o),i>n&&(n=i),r=r.sibling}La.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=La.firstEffect),null!==La.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=La.firstEffect),e.lastEffect=La.lastEffect),1<La.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=La:e.firstEffect=La,e.lastEffect=La))}else{if(null!==(t=na(La)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=La.sibling))return t;La=e}while(null!==La);return Ba===ja&&(Ba=za),null}function Cu(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function Ou(e){var t=Vo();return qo(99,Pu.bind(null,e,t)),null}function Pu(e,t){do{Nu()}while(null!==tu);if((Fa&(_a|Na))!==Oa)throw Error(l(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(l(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var o=Cu(n);if(e.firstPendingTime=o,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Da&&(La=Da=null,Wa=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){var i=Fa;Fa|=Na,Ca.current=null,bn=Vt;var a=pn();if(mn(a)){if("selectionStart"in a)var u={start:a.selectionStart,end:a.selectionEnd};else e:{var c=(u=(u=a.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(c&&0!==c.rangeCount){u=c.anchorNode;var s=c.anchorOffset,f=c.focusNode;c=c.focusOffset;try{u.nodeType,f.nodeType}catch(e){u=null;break e}var d=0,p=-1,m=-1,y=0,h=0,g=a,v=null;t:for(;;){for(var b;g!==u||0!==s&&3!==g.nodeType||(p=d+s),g!==f||0!==c&&3!==g.nodeType||(m=d+c),3===g.nodeType&&(d+=g.nodeValue.length),null!==(b=g.firstChild);)v=g,g=b;for(;;){if(g===a)break t;if(v===u&&++y===s&&(p=d),v===f&&++h===c&&(m=d),null!==(b=g.nextSibling))break;v=(g=v).parentNode}g=b}u=-1===p||-1===m?null:{start:p,end:m}}else u=null}u=u||{start:0,end:0}}else u=null;wn={activeElementDetached:null,focusedElem:a,selectionRange:u},Vt=!1,Ya=o;do{try{_u()}catch(e){if(null===Ya)throw Error(l(330));Au(Ya,e),Ya=Ya.nextEffect}}while(null!==Ya);Ya=o;do{try{for(a=e,u=t;null!==Ya;){var w=Ya.effectTag;if(16&w&&Le(Ya.stateNode,""),128&w){var k=Ya.alternate;if(null!==k){var x=k.ref;null!==x&&("function"==typeof x?x(null):x.current=null)}}switch(1038&w){case 2:ma(Ya),Ya.effectTag&=-3;break;case 6:ma(Ya),Ya.effectTag&=-3,va(Ya.alternate,Ya);break;case 1024:Ya.effectTag&=-1025;break;case 1028:Ya.effectTag&=-1025,va(Ya.alternate,Ya);break;case 4:va(Ya.alternate,Ya);break;case 8:ga(a,s=Ya,u),da(s)}Ya=Ya.nextEffect}}catch(e){if(null===Ya)throw Error(l(330));Au(Ya,e),Ya=Ya.nextEffect}}while(null!==Ya);if(x=wn,k=pn(),w=x.focusedElem,u=x.selectionRange,k!==w&&w&&w.ownerDocument&&dn(w.ownerDocument.documentElement,w)){null!==u&&mn(w)&&(k=u.start,void 0===(x=u.end)&&(x=k),"selectionStart"in w?(w.selectionStart=k,w.selectionEnd=Math.min(x,w.value.length)):(x=(k=w.ownerDocument||document)&&k.defaultView||window).getSelection&&(x=x.getSelection(),s=w.textContent.length,a=Math.min(u.start,s),u=void 0===u.end?a:Math.min(u.end,s),!x.extend&&a>u&&(s=u,u=a,a=s),s=fn(w,a),f=fn(w,u),s&&f&&(1!==x.rangeCount||x.anchorNode!==s.node||x.anchorOffset!==s.offset||x.focusNode!==f.node||x.focusOffset!==f.offset)&&((k=k.createRange()).setStart(s.node,s.offset),x.removeAllRanges(),a>u?(x.addRange(k),x.extend(f.node,f.offset)):(k.setEnd(f.node,f.offset),x.addRange(k))))),k=[];for(x=w;x=x.parentNode;)1===x.nodeType&&k.push({element:x,left:x.scrollLeft,top:x.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<k.length;w++)(x=k[w]).element.scrollLeft=x.left,x.element.scrollTop=x.top}Vt=!!bn,wn=bn=null,e.current=n,Ya=o;do{try{for(w=e;null!==Ya;){var S=Ya.effectTag;if(36&S&&sa(w,Ya.alternate,Ya),128&S){k=void 0;var E=Ya.ref;if(null!==E){var T=Ya.stateNode;Ya.tag,k=T,"function"==typeof E?E(k):E.current=k}}Ya=Ya.nextEffect}}catch(e){if(null===Ya)throw Error(l(330));Au(Ya,e),Ya=Ya.nextEffect}}while(null!==Ya);Ya=null,Lo(),Fa=i}else e.current=n;if(eu)eu=!1,tu=e,nu=t;else for(Ya=o;null!==Ya;)t=Ya.nextEffect,Ya.nextEffect=null,Ya=t;if(0===(t=e.firstPendingTime)&&(Ja=null),1073741823===t?e===iu?ou++:(ou=0,iu=e):ou=0,"function"==typeof zu&&zu(n.stateNode,r),du(e),Xa)throw Xa=!1,e=Za,Za=null,e;return(Fa&Pa)!==Oa||Yo(),null}function _u(){for(;null!==Ya;){var e=Ya.effectTag;0!=(256&e)&&aa(Ya.alternate,Ya),0==(512&e)||eu||(eu=!0,Ko(97,(function(){return Nu(),null}))),Ya=Ya.nextEffect}}function Nu(){if(90!==nu){var e=97<nu?97:nu;return nu=90,qo(e,ju)}}function ju(){if(null===tu)return!1;var e=tu;if(tu=null,(Fa&(_a|Na))!==Oa)throw Error(l(331));var t=Fa;for(Fa|=Na,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:ua(5,n),ca(5,n)}}catch(t){if(null===e)throw Error(l(330));Au(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return Fa=t,Yo(),!0}function Mu(e,t,n){pi(e,t=ka(e,t=ra(n,t),1073741823)),null!==(e=su(e,1073741823))&&du(e)}function Au(e,t){if(3===e.tag)Mu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Mu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Ja||!Ja.has(r))){pi(n,e=xa(n,e=ra(t,e),1073741823)),null!==(n=su(n,1073741823))&&du(n);break}}n=n.return}}function Iu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),Da===e&&Wa===n?Ba===Ra||Ba===Ia&&1073741823===$a&&Ho()-Ka<Ga?gu(e,Wa):qa=!0:qu(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,du(e)))}function Ru(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(t=uu(t=au(),e,null)),null!==(e=su(e,t))&&du(e)}Sa=function(e,t,n){var r=t.expirationTime;if(null!==e){var o=t.pendingProps;if(e.memoizedProps!==o||go.current)Il=!0;else{if(r<n){switch(Il=!1,t.tag){case 3:$l(t),Ml();break;case 5:if(Di(t),4&t.mode&&1!==n&&o.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:wo(t.type)&&Eo(t);break;case 4:zi(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,o=t.type._context,mo(ei,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Gl(e,t,n):(mo(Wi,1&Wi.current),null!==(t=Jl(e,t,n))?t.sibling:null);mo(Wi,1&Wi.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return Zl(e,t,n);t.effectTag|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null),mo(Wi,Wi.current),!r)return null}return Jl(e,t,n)}Il=!1}}else Il=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,o=bo(t,ho.current),ai(t,n),o=Zi(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,wo(r)){var i=!0;Eo(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,si(t);var a=r.getDerivedStateFromProps;"function"==typeof a&&bi(t,r,a,e),o.updater=wi,t.stateNode=o,o._reactInternalFiber=t,Ei(t,r,e,n),t=Ul(null,t,r,!0,i,n)}else t.tag=0,Rl(null,t,o,n),t=t.child;return t;case 16:e:{if(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(o),1!==o._status)throw o._result;switch(o=o._result,t.type=o,i=t.tag=function(e){if("function"==typeof e)return Wu(e)?1:0;if(null!=e){if((e=e.$$typeof)===ue)return 11;if(e===fe)return 14}return 2}(o),e=Jo(o,e),i){case 0:t=Wl(null,t,o,e,n);break e;case 1:t=Bl(null,t,o,e,n);break e;case 11:t=zl(null,t,o,e,n);break e;case 14:t=Fl(null,t,o,Jo(o.type,e),r,n);break e}throw Error(l(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,Wl(e,t,r,o=t.elementType===r?o:Jo(r,o),n);case 1:return r=t.type,o=t.pendingProps,Bl(e,t,r,o=t.elementType===r?o:Jo(r,o),n);case 3:if($l(t),r=t.updateQueue,null===e||null===r)throw Error(l(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,fi(e,t),yi(t,r,null,n),(r=t.memoizedState.element)===o)Ml(),t=Jl(e,t,n);else{if((o=t.stateNode.hydrate)&&(Tl=Tn(t.stateNode.containerInfo.firstChild),El=t,o=Cl=!0),o)for(n=Ni(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Rl(e,t,r,n),Ml();t=t.child}return t;case 5:return Di(t),null===e&&_l(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,a=o.children,xn(r,o)?a=null:null!==i&&xn(r,i)&&(t.effectTag|=16),Ll(e,t),4&t.mode&&1!==n&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Rl(e,t,a,n),t=t.child),t;case 6:return null===e&&_l(t),null;case 13:return Gl(e,t,n);case 4:return zi(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=_i(t,null,r,n):Rl(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,zl(e,t,r,o=t.elementType===r?o:Jo(r,o),n);case 7:return Rl(e,t,t.pendingProps,n),t.child;case 8:case 12:return Rl(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,a=t.memoizedProps,i=o.value;var u=t.type._context;if(mo(ei,u._currentValue),u._currentValue=i,null!==a)if(u=a.value,0==(i=Br(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(a.children===o.children&&!go.current){t=Jl(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){a=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===u.tag&&((s=di(n,null)).tag=2,pi(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n),li(u.return,n),c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else a=10===u.tag&&u.type===t.type?null:u.child;if(null!==a)a.return=u;else for(a=u;null!==a;){if(a===t){a=null;break}if(null!==(u=a.sibling)){u.return=a.return,a=u;break}a=a.return}u=a}Rl(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,ai(t,n),r=r(o=ui(o,i.unstable_observedBits)),t.effectTag|=1,Rl(e,t,r,n),t.child;case 14:return i=Jo(o=t.type,t.pendingProps),Fl(e,t,o,i=Jo(o.type,i),r,n);case 15:return Dl(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Jo(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,wo(r)?(e=!0,Eo(t)):e=!1,ai(t,n),xi(t,r,o),Ei(t,r,o,n),Ul(null,t,r,!0,e,n);case 19:return Zl(e,t,n)}throw Error(l(156,t.tag))};var zu=null,Fu=null;function Du(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Lu(e,t,n,r){return new Du(e,t,n,r)}function Wu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Bu(e,t){var n=e.alternate;return null===n?((n=Lu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Uu(e,t,n,r,o,i){var a=2;if(r=e,"function"==typeof e)Wu(e)&&(a=1);else if("string"==typeof e)a=5;else e:switch(e){case ne:return $u(n.children,o,i,t);case ae:a=8,o|=7;break;case re:a=8,o|=1;break;case oe:return(e=Lu(12,n,t,8|o)).elementType=oe,e.type=oe,e.expirationTime=i,e;case ce:return(e=Lu(13,n,t,o)).type=ce,e.elementType=ce,e.expirationTime=i,e;case se:return(e=Lu(19,n,t,o)).elementType=se,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case ie:a=10;break e;case le:a=9;break e;case ue:a=11;break e;case fe:a=14;break e;case de:a=16,r=null;break e;case pe:a=22;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=Lu(a,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function $u(e,t,n,r){return(e=Lu(7,e,r,t)).expirationTime=n,e}function Hu(e,t,n){return(e=Lu(6,e,null,t)).expirationTime=n,e}function Vu(e,t,n){return(t=Lu(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Qu(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function qu(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Ku(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Gu(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Yu(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Xu(e,t,n,r){var o=t.current,i=au(),a=gi.suspense;i=uu(i,o,a);e:if(n){t:{if(Ze(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(l(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(wo(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(l(171))}if(1===n.tag){var c=n.type;if(wo(c)){n=So(n,c,u);break e}}n=u}else n=yo;return null===t.context?t.context=n:t.pendingContext=n,(t=di(i,a)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),pi(o,t),cu(o,i),i}function Zu(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Ju(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function ec(e,t){Ju(e,t),(e=e.alternate)&&Ju(e,t)}function tc(e,t,n){var r=new Qu(e,t,n=null!=n&&!0===n.hydrate),o=Lu(3,null,null,2===t?7:1===t?3:0);r.current=o,o.stateNode=r,si(o),e[Nn]=r.current,n&&0!==t&&function(e,t){var n=Xe(t);Tt.forEach((function(e){pt(e,t,n)})),Ct.forEach((function(e){pt(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function nc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function rc(e,t,n,r,o){var i=n._reactRootContainer;if(i){var l=i._internalRoot;if("function"==typeof o){var a=o;o=function(){var e=Zu(l);a.call(e)}}Xu(t,l,e,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new tc(e,0,t?{hydrate:!0}:void 0)}(n,r),l=i._internalRoot,"function"==typeof o){var u=o;o=function(){var e=Zu(l);u.call(e)}}hu((function(){Xu(t,l,e,o)}))}return Zu(l)}function oc(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nc(t))throw Error(l(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}tc.prototype.render=function(e){Xu(e,this._internalRoot,null,null)},tc.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Xu(null,e,null,(function(){t[Nn]=null}))},mt=function(e){if(13===e.tag){var t=Zo(au(),150,100);cu(e,t),ec(e,t)}},yt=function(e){13===e.tag&&(cu(e,3),ec(e,3))},ht=function(e){if(13===e.tag){var t=au();cu(e,t=uu(t,e,null)),ec(e,t)}},P=function(e,t,n){switch(t){case"input":if(Te(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=In(r);if(!o)throw Error(l(90));ke(r),Te(r,o)}}}break;case"textarea":Me(e,n);break;case"select":null!=(t=n.value)&&_e(e,!!n.multiple,t,!1)}},I=yu,R=function(e,t,n,r,o){var i=Fa;Fa|=4;try{return qo(98,e.bind(null,t,n,r,o))}finally{(Fa=i)===Oa&&Yo()}},z=function(){(Fa&(1|_a|Na))===Oa&&(function(){if(null!==ru){var e=ru;ru=null,e.forEach((function(e,t){Yu(t,e),du(t)})),Yo()}}(),Nu())},F=function(e,t){var n=Fa;Fa|=2;try{return e(t)}finally{(Fa=n)===Oa&&Yo()}};var ic={Events:[Mn,An,In,C,S,Bn,function(e){rt(e,Wn)},M,A,Yt,lt,Nu,{current:!1}]};!function(e){var t=e.findFiberByHostInstance;!function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);zu=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},Fu=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(o({},e,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Y.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=tt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))}({findFiberByHostInstance:jn,bundleType:0,version:"16.14.0",rendererPackageName:"react-dom"}),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ic,t.createPortal=oc,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw Error(l(268,Object.keys(e)))}return null===(e=tt(t))?null:e.stateNode},t.flushSync=function(e,t){if((Fa&(_a|Na))!==Oa)throw Error(l(187));var n=Fa;Fa|=1;try{return qo(99,e.bind(null,t))}finally{Fa=n,Yo()}},t.hydrate=function(e,t,n){if(!nc(t))throw Error(l(200));return rc(null,e,t,!0,n)},t.render=function(e,t,n){if(!nc(t))throw Error(l(200));return rc(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!nc(e))throw Error(l(40));return!!e._reactRootContainer&&(hu((function(){rc(null,null,e,!1,(function(){e._reactRootContainer=null,e[Nn]=null}))})),!0)},t.unstable_batchedUpdates=yu,t.unstable_createPortal=function(e,t){return oc(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!nc(n))throw Error(l(200));if(null==e||void 0===e._reactInternalFiber)throw Error(l(38));return rc(e,t,n,!1,r)},t.version="16.14.0"},961:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(551)},799:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,o=n?Symbol.for("react.portal"):60106,i=n?Symbol.for("react.fragment"):60107,l=n?Symbol.for("react.strict_mode"):60108,a=n?Symbol.for("react.profiler"):60114,u=n?Symbol.for("react.provider"):60109,c=n?Symbol.for("react.context"):60110,s=n?Symbol.for("react.async_mode"):60111,f=n?Symbol.for("react.concurrent_mode"):60111,d=n?Symbol.for("react.forward_ref"):60112,p=n?Symbol.for("react.suspense"):60113,m=n?Symbol.for("react.suspense_list"):60120,y=n?Symbol.for("react.memo"):60115,h=n?Symbol.for("react.lazy"):60116,g=n?Symbol.for("react.block"):60121,v=n?Symbol.for("react.fundamental"):60117,b=n?Symbol.for("react.responder"):60118,w=n?Symbol.for("react.scope"):60119;function k(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case s:case f:case i:case a:case l:case p:return e;default:switch(e=e&&e.$$typeof){case c:case d:case h:case y:case u:return e;default:return t}}case o:return t}}}function x(e){return k(e)===f}t.AsyncMode=s,t.ConcurrentMode=f,t.ContextConsumer=c,t.ContextProvider=u,t.Element=r,t.ForwardRef=d,t.Fragment=i,t.Lazy=h,t.Memo=y,t.Portal=o,t.Profiler=a,t.StrictMode=l,t.Suspense=p,t.isAsyncMode=function(e){return x(e)||k(e)===s},t.isConcurrentMode=x,t.isContextConsumer=function(e){return k(e)===c},t.isContextProvider=function(e){return k(e)===u},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return k(e)===d},t.isFragment=function(e){return k(e)===i},t.isLazy=function(e){return k(e)===h},t.isMemo=function(e){return k(e)===y},t.isPortal=function(e){return k(e)===o},t.isProfiler=function(e){return k(e)===a},t.isStrictMode=function(e){return k(e)===l},t.isSuspense=function(e){return k(e)===p},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===i||e===f||e===a||e===l||e===p||e===m||"object"==typeof e&&null!==e&&(e.$$typeof===h||e.$$typeof===y||e.$$typeof===u||e.$$typeof===c||e.$$typeof===d||e.$$typeof===v||e.$$typeof===b||e.$$typeof===w||e.$$typeof===g)},t.typeOf=k},363:(e,t,n)=>{"use strict";e.exports=n(799)},287:(e,t,n)=>{"use strict";var r=n(228),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,l=o?Symbol.for("react.portal"):60106,a=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.forward_ref"):60112,p=o?Symbol.for("react.suspense"):60113,m=o?Symbol.for("react.memo"):60115,y=o?Symbol.for("react.lazy"):60116,h="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var v={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||v}function k(){}function x(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||v}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(g(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=w.prototype;var S=x.prototype=new k;S.constructor=x,r(S,w.prototype),S.isPureReactComponent=!0;var E={current:null},T=Object.prototype.hasOwnProperty,C={key:!0,ref:!0,__self:!0,__source:!0};function O(e,t,n){var r,o={},l=null,a=null;if(null!=t)for(r in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(l=""+t.key),t)T.call(t,r)&&!C.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:l,ref:a,props:o,_owner:E.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var _=/\/+/g,N=[];function j(e,t,n,r){if(N.length){var o=N.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function M(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>N.length&&N.push(e)}function A(e,t,n,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var a=!1;if(null===e)a=!0;else switch(o){case"string":case"number":a=!0;break;case"object":switch(e.$$typeof){case i:case l:a=!0}}if(a)return n(r,e,""===t?"."+R(e,0):t),1;if(a=0,t=""===t?".":t+":",Array.isArray(e))for(var u=0;u<e.length;u++){var c=t+R(o=e[u],u);a+=A(o,c,n,r)}else if("function"==typeof(c=null===e||"object"!=typeof e?null:"function"==typeof(c=h&&e[h]||e["@@iterator"])?c:null))for(e=c.call(e),u=0;!(o=e.next()).done;)a+=A(o=o.value,c=t+R(o,u++),n,r);else if("object"===o)throw n=""+e,Error(g(31,"[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n,""));return a}function I(e,t,n){return null==e?0:A(e,"",t,n)}function R(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function z(e,t){e.func.call(e.context,t,e.count++)}function F(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?D(e,r,n,(function(e){return e})):null!=e&&(P(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(_,"$&/")+"/")+n)),r.push(e))}function D(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(_,"$&/")+"/"),I(e,F,t=j(t,i,r,o)),M(t)}var L={current:null};function W(){var e=L.current;if(null===e)throw Error(g(321));return e}var B={ReactCurrentDispatcher:L,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:E,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return D(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;I(e,z,t=j(null,null,t,n)),M(t)},count:function(e){return I(e,(function(){return null}),null)},toArray:function(e){var t=[];return D(e,t,null,(function(e){return e})),t},only:function(e){if(!P(e))throw Error(g(143));return e}},t.Component=w,t.Fragment=a,t.Profiler=c,t.PureComponent=x,t.StrictMode=u,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=B,t.cloneElement=function(e,t,n){if(null==e)throw Error(g(267,e));var o=r({},e.props),l=e.key,a=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(a=t.ref,u=E.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)T.call(t,s)&&!C.hasOwnProperty(s)&&(o[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];o.children=c}return{$$typeof:i,type:e.type,key:l,ref:a,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=O,t.createFactory=function(e){var t=O.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=P,t.lazy=function(e){return{$$typeof:y,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return W().useCallback(e,t)},t.useContext=function(e,t){return W().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return W().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return W().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return W().useLayoutEffect(e,t)},t.useMemo=function(e,t){return W().useMemo(e,t)},t.useReducer=function(e,t,n){return W().useReducer(e,t,n)},t.useRef=function(e){return W().useRef(e)},t.useState=function(e){return W().useState(e)},t.version="16.14.0"},540:(e,t,n)=>{"use strict";e.exports=n(287)},463:(e,t)=>{"use strict";var n,r,o,i,l;if("undefined"==typeof window||"function"!=typeof MessageChannel){var a=null,u=null,c=function(){if(null!==a)try{var e=t.unstable_now();a(!0,e),a=null}catch(e){throw setTimeout(c,0),e}},s=Date.now();t.unstable_now=function(){return Date.now()-s},n=function(e){null!==a?setTimeout(n,0,e):(a=e,setTimeout(c,0))},r=function(e,t){u=setTimeout(e,t)},o=function(){clearTimeout(u)},i=function(){return!1},l=t.unstable_forceFrameRate=function(){}}else{var f=window.performance,d=window.Date,p=window.setTimeout,m=window.clearTimeout;if("undefined"!=typeof console){var y=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof y&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof f&&"function"==typeof f.now)t.unstable_now=function(){return f.now()};else{var h=d.now();t.unstable_now=function(){return d.now()-h}}var g=!1,v=null,b=-1,w=5,k=0;i=function(){return t.unstable_now()>=k},l=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):w=0<e?Math.floor(1e3/e):5};var x=new MessageChannel,S=x.port2;x.port1.onmessage=function(){if(null!==v){var e=t.unstable_now();k=e+w;try{v(!0,e)?S.postMessage(null):(g=!1,v=null)}catch(e){throw S.postMessage(null),e}}else g=!1},n=function(e){v=e,g||(g=!0,S.postMessage(null))},r=function(e,n){b=p((function(){e(t.unstable_now())}),n)},o=function(){m(b),b=-1}}function E(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<O(o,t)))break e;e[r]=t,e[n]=o,n=r}}function T(e){return void 0===(e=e[0])?null:e}function C(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var i=2*(r+1)-1,l=e[i],a=i+1,u=e[a];if(void 0!==l&&0>O(l,n))void 0!==u&&0>O(u,l)?(e[r]=u,e[a]=n,r=a):(e[r]=l,e[i]=n,r=i);else{if(!(void 0!==u&&0>O(u,n)))break e;e[r]=u,e[a]=n,r=a}}}return t}return null}function O(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var P=[],_=[],N=1,j=null,M=3,A=!1,I=!1,R=!1;function z(e){for(var t=T(_);null!==t;){if(null===t.callback)C(_);else{if(!(t.startTime<=e))break;C(_),t.sortIndex=t.expirationTime,E(P,t)}t=T(_)}}function F(e){if(R=!1,z(e),!I)if(null!==T(P))I=!0,n(D);else{var t=T(_);null!==t&&r(F,t.startTime-e)}}function D(e,n){I=!1,R&&(R=!1,o()),A=!0;var l=M;try{for(z(n),j=T(P);null!==j&&(!(j.expirationTime>n)||e&&!i());){var a=j.callback;if(null!==a){j.callback=null,M=j.priorityLevel;var u=a(j.expirationTime<=n);n=t.unstable_now(),"function"==typeof u?j.callback=u:j===T(P)&&C(P),z(n)}else C(P);j=T(P)}if(null!==j)var c=!0;else{var s=T(_);null!==s&&r(F,s.startTime-n),c=!1}return c}finally{j=null,M=l,A=!1}}function L(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var W=l;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){I||A||(I=!0,n(D))},t.unstable_getCurrentPriorityLevel=function(){return M},t.unstable_getFirstCallbackNode=function(){return T(P)},t.unstable_next=function(e){switch(M){case 1:case 2:case 3:var t=3;break;default:t=M}var n=M;M=t;try{return e()}finally{M=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=W,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=M;M=e;try{return t()}finally{M=n}},t.unstable_scheduleCallback=function(e,i,l){var a=t.unstable_now();if("object"==typeof l&&null!==l){var u=l.delay;u="number"==typeof u&&0<u?a+u:a,l="number"==typeof l.timeout?l.timeout:L(e)}else l=L(e),u=a;return e={id:N++,callback:i,priorityLevel:e,startTime:u,expirationTime:l=u+l,sortIndex:-1},u>a?(e.sortIndex=u,E(_,e),null===T(P)&&e===T(_)&&(R?o():R=!0,r(F,u-a))):(e.sortIndex=l,E(P,e),I||A||(I=!0,n(D))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();z(e);var n=T(P);return n!==j&&null!==j&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<j.expirationTime||i()},t.unstable_wrapCallback=function(e){var t=M;return function(){var n=M;M=t;try{return e.apply(this,arguments)}finally{M=n}}}},982:(e,t,n)=>{"use strict";e.exports=n(463)},459:e=>{"use strict";e.exports=function(e){for(var t=5381,n=e.length;n;)t=33*t^e.charCodeAt(--n);return t>>>0}},72:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var i={},l=[],a=0;a<e.length;a++){var u=e[a],c=r.base?u[0]+r.base:u[0],s=i[c]||0,f="".concat(c," ").concat(s);i[c]=s+1;var d=n(f),p={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==d)t[d].references++,t[d].updater(p);else{var m=o(p,r);r.byIndex=a,t.splice(a,0,{identifier:f,updater:m,references:1})}l.push(f)}return l}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var l=0;l<i.length;l++){var a=n(i[l]);t[a].references--}for(var u=r(e,o),c=0;c<i.length;c++){var s=n(i[c]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}i=u}}},659:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},159:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},i={};function l(e){var t=i[e];if(void 0!==t)return t.exports;var n=i[e]={id:e,exports:{}};return o[e](n,n.exports,l),n.exports}l.m=o,l.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return l.d(t,{a:t}),t},t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,l.t=function(n,r){if(1&r&&(n=this(n)),8&r)return n;if("object"==typeof n&&n){if(4&r&&n.__esModule)return n;if(16&r&&"function"==typeof n.then)return n}var o=Object.create(null);l.r(o);var i={};e=e||[null,t({}),t([]),t(t)];for(var a=2&r&&n;"object"==typeof a&&!~e.indexOf(a);a=t(a))Object.getOwnPropertyNames(a).forEach((e=>i[e]=()=>n[e]));return i.default=()=>n,l.d(o,i),o},l.d=(e,t)=>{for(var n in t)l.o(t,n)&&!l.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},l.f={},l.e=e=>Promise.all(Object.keys(l.f).reduce(((t,n)=>(l.f[n](e,t),t)),[])),l.u=e=>e+".bundle.js",l.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),l.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n={},r="task_2:",l.l=(e,t,o,i)=>{if(n[e])n[e].push(t);else{var a,u;if(void 0!==o)for(var c=document.getElementsByTagName("script"),s=0;s<c.length;s++){var f=c[s];if(f.getAttribute("src")==e||f.getAttribute("data-webpack")==r+o){a=f;break}}a||(u=!0,(a=document.createElement("script")).charset="utf-8",a.timeout=120,l.nc&&a.setAttribute("nonce",l.nc),a.setAttribute("data-webpack",r+o),a.src=e),n[e]=[t];var d=(t,r)=>{a.onerror=a.onload=null,clearTimeout(p);var o=n[e];if(delete n[e],a.parentNode&&a.parentNode.removeChild(a),o&&o.forEach((e=>e(r))),t)return t(r)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:a}),12e4);a.onerror=d.bind(null,a.onerror),a.onload=d.bind(null,a.onload),u&&document.head.appendChild(a)}},l.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;l.g.importScripts&&(e=l.g.location+"");var t=l.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");if(n.length)for(var r=n.length-1;r>-1&&(!e||!/^http(s?):/.test(e));)e=n[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),l.p=e})(),(()=>{var e={792:0};l.f.j=(t,n)=>{var r=l.o(e,t)?e[t]:void 0;if(0!==r)if(r)n.push(r[2]);else{var o=new Promise(((n,o)=>r=e[t]=[n,o]));n.push(r[2]=o);var i=l.p+l.u(t),a=new Error;l.l(i,(n=>{if(l.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var o=n&&("load"===n.type?"missing":n.type),i=n&&n.target&&n.target.src;a.message="Loading chunk "+t+" failed.\n("+o+": "+i+")",a.name="ChunkLoadError",a.type=o,a.request=i,r[1](a)}}),"chunk-"+t,t)}};var t=(t,n)=>{var r,o,[i,a,u]=n,c=0;if(i.some((t=>0!==e[t]))){for(r in a)l.o(a,r)&&(l.m[r]=a[r]);u&&u(l)}for(t&&t(n);c<i.length;c++)o=i[c],l.o(e,o)&&e[o]&&e[o][0](),e[o]=0},n=self.webpackChunktask_2=self.webpackChunktask_2||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})(),l.nc=void 0,(()=>{"use strict";var e=l(540),t=l.t(e,2),n=l(961),r=l(72),o=l.n(r),i=l(825),a=l.n(i),u=l(659),c=l.n(u),s=l(56),f=l.n(s),d=l(159),p=l.n(d),m=l(113),y=l.n(m),h=l(523),g={};function v(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}g.styleTagTransform=y(),g.setAttributes=f(),g.insert=c().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=p(),o()(h.A,g),h.A&&h.A.locals&&h.A.locals;var b={email:"",password:"",isLoggedIn:!1},w=(0,e.createContext)({user:b,logIn:function(){},logOut:function(){}}),k=function(t){var n,r,o=t.children,i=(n=(0,e.useState)(b),r=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i,l,a=[],u=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=i.call(n)).done)&&(a.push(r.value),a.length!==t);u=!0);}catch(e){c=!0,o=e}finally{try{if(!u&&null!=n.return&&(l=n.return(),Object(l)!==l))return}finally{if(c)throw o}}return a}}(n,r)||function(e,t){if(e){if("string"==typeof e)return v(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?v(e,t):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),l=i[0],a=i[1];return e.createElement(w.Provider,{value:{user:l,logIn:function(e,t){a({email:e,password:t,isLoggedIn:!0})},logOut:function(){a(b)}}},o)};const x=w;var S=l(556),E=l.n(S),T=l(459),C=l.n(T),O=l(236),P=l.n(O);function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function N(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function j(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){N(e,t,n[t])}))}return e}function M(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var A=/([A-Z])/g,I=function(e){return"-".concat(e.toLowerCase())},R={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridColumn:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},z=["Webkit","ms","Moz","O"];Object.keys(R).forEach((function(e){z.forEach((function(t){R[function(e,t){return e+t.charAt(0).toUpperCase()+t.substring(1)}(t,e)]=R[e]}))}));var F=function(e,t){return"number"==typeof t?R[e]?""+t:t+"px":""+t},D=function(e,t){return W(F(e,t))},L=function(e,t){return C()(e).toString(36)},W=function(e){return"!"===e[e.length-10]&&" !important"===e.slice(-11)?e:"".concat(e," !important")},B="undefined"!=typeof Map,U=function(){function e(){this.elements={},this.keyOrder=[]}var t=e.prototype;return t.forEach=function(e){for(var t=0;t<this.keyOrder.length;t++)e(this.elements[this.keyOrder[t]],this.keyOrder[t])},t.set=function(t,n,r){if(this.elements.hasOwnProperty(t)){if(r){var o=this.keyOrder.indexOf(t);this.keyOrder.splice(o,1),this.keyOrder.push(t)}}else this.keyOrder.push(t);if(null!=n){if(B&&n instanceof Map||n instanceof e){var i=this.elements.hasOwnProperty(t)?this.elements[t]:new e;return n.forEach((function(e,t){i.set(t,e,r)})),void(this.elements[t]=i)}if(Array.isArray(n)||"object"!==_(n))this.elements[t]=n;else{for(var l=this.elements.hasOwnProperty(t)?this.elements[t]:new e,a=Object.keys(n),u=0;u<a.length;u+=1)l.set(a[u],n[a[u]],r);this.elements[t]=l}}else this.elements[t]=n},t.get=function(e){return this.elements[e]},t.has=function(e){return this.elements.hasOwnProperty(e)},t.addStyleType=function(t){var n=this;if(B&&t instanceof Map||t instanceof e)t.forEach((function(e,t){n.set(t,e,!0)}));else for(var r=Object.keys(t),o=0;o<r.length;o++)this.set(r[o],t[r[o]],!0)},e}();function $(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function H(e,t){return e(t={exports:{}},t.exports),t.exports}var V=H((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e.charAt(0).toUpperCase()+e.slice(1)}}));$(V);var Q=H((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if(e.hasOwnProperty(t)){for(var o={},i=e[t],l=(0,r.default)(t),a=Object.keys(n),u=0;u<a.length;u++){var c=a[u];if(c===t)for(var s=0;s<i.length;s++)o[i[s]+l]=n[t];o[c]=n[c]}return o}return n};var n,r=(n=V)&&n.__esModule?n:{default:n}}));$(Q);var q=H((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,r,o){for(var i=0,l=e.length;i<l;++i){var a=e[i](t,n,r,o);if(a)return a}}}));$(q);var K=H((function(e,t){function n(e,t){-1===e.indexOf(t)&&e.push(t)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(Array.isArray(t))for(var r=0,o=t.length;r<o;++r)n(e,t[r]);else n(e,t)}}));$(K);var G=H((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e instanceof Object&&!Array.isArray(e)}}));$(G);var Y=H((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=e.prefixMap,l=e.plugins;return function e(a){for(var u in a){var c=a[u];if((0,i.default)(c))a[u]=e(c);else if(Array.isArray(c)){for(var s=[],f=0,d=c.length;f<d;++f){var p=(0,r.default)(l,u,c[f],a,t);(0,o.default)(s,p||c[f])}s.length>0&&(a[u]=s)}else{var m=(0,r.default)(l,u,c,a,t);m&&(a[u]=m),a=(0,n.default)(t,u,a)}}return a}};var n=l(Q),r=l(q),o=l(K),i=l(G);function l(e){return e&&e.__esModule?e:{default:e}}})),X=$(Y),Z=H((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&"text"===t)return["-webkit-text","text"]}})),J=$(Z),ee=H((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return"string"==typeof e&&n.test(e)};var n=/-webkit-|-moz-|-ms-/;e.exports=t.default}));$(ee);var te=H((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("calc(")>-1)return o.map((function(e){return t.replace(/calc\(/g,e+"calc(")}))};var n,r=(n=ee)&&n.__esModule?n:{default:n},o=["-webkit-","-moz-",""]})),ne=$(te),re=H((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("cross-fade(")>-1)return o.map((function(e){return t.replace(/cross-fade\(/g,e+"cross-fade(")}))};var n,r=(n=ee)&&n.__esModule?n:{default:n},o=["-webkit-",""]})),oe=$(re),ie=H((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("cursor"===e&&r.hasOwnProperty(t))return n.map((function(e){return e+t}))};var n=["-webkit-","-moz-",""],r={"zoom-in":!0,"zoom-out":!0,grab:!0,grabbing:!0}})),le=$(ie),ae=H((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("filter(")>-1)return o.map((function(e){return t.replace(/filter\(/g,e+"filter(")}))};var n,r=(n=ee)&&n.__esModule?n:{default:n},o=["-webkit-",""]})),ue=$(ae),ce=H((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("display"===e&&n.hasOwnProperty(t))return n[t]};var n={flex:["-webkit-box","-moz-box","-ms-flexbox","-webkit-flex","flex"],"inline-flex":["-webkit-inline-box","-moz-inline-box","-ms-inline-flexbox","-webkit-inline-flex","inline-flex"]}})),se=$(ce),fe=H((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,l){if(Object.prototype.hasOwnProperty.call(r,e)&&(l[r[e]]=n[t]||t),"flex"===e){if(Object.prototype.hasOwnProperty.call(o,t))return void(l.msFlex=o[t]);if(i.test(t))return void(l.msFlex=t+" 1 0%");var a=t.split(/\s/);switch(a.length){case 1:return void(l.msFlex="1 1 "+t);case 2:return void(i.test(a[1])?l.msFlex=a[0]+" "+a[1]+" 0%":l.msFlex=a[0]+" 1 "+a[1]);default:l.msFlex=t}}};var n={"space-around":"distribute","space-between":"justify","flex-start":"start","flex-end":"end"},r={alignContent:"msFlexLinePack",alignSelf:"msFlexItemAlign",alignItems:"msFlexAlign",justifyContent:"msFlexPack",order:"msFlexOrder",flexGrow:"msFlexPositive",flexShrink:"msFlexNegative",flexBasis:"msFlexPreferredSize"},o={auto:"1 1 auto",inherit:"inherit",initial:"0 1 auto",none:"0 0 auto",unset:"unset"},i=/^\d+(\.\d+)?$/})),de=$(fe),pe=H((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,o){"flexDirection"===e&&"string"==typeof t&&(t.indexOf("column")>-1?o.WebkitBoxOrient="vertical":o.WebkitBoxOrient="horizontal",t.indexOf("reverse")>-1?o.WebkitBoxDirection="reverse":o.WebkitBoxDirection="normal"),r.hasOwnProperty(e)&&(o[r[e]]=n[t]||t)};var n={"space-around":"justify","space-between":"justify","flex-start":"start","flex-end":"end","wrap-reverse":"multiple",wrap:"multiple"},r={alignItems:"WebkitBoxAlign",justifyContent:"WebkitBoxPack",flexWrap:"WebkitBoxLines",flexGrow:"WebkitBoxFlex"}})),me=$(pe),ye=H((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&i.test(t))return o.map((function(e){return t.replace(i,(function(t){return e+t}))}))};var n,r=(n=ee)&&n.__esModule?n:{default:n},o=["-webkit-","-moz-",""],i=/linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/gi})),he=$(ye),ge=H((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});var n=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,o=!1,i=void 0;try{for(var l,a=e[Symbol.iterator]();!(r=(l=a.next()).done)&&(n.push(l.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{!r&&a.return&&a.return()}finally{if(o)throw i}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")};function r(e){return"number"==typeof e&&!isNaN(e)}t.default=function(e,t,n){if("display"===e&&t in i)return i[t];e in l&&(0,l[e])(t,n)};var o=["center","end","start","stretch"],i={"inline-grid":["-ms-inline-grid","inline-grid"],grid:["-ms-grid","grid"]},l={alignSelf:function(e,t){o.indexOf(e)>-1&&(t.msGridRowAlign=e)},gridColumn:function(e,t){if(r(e))t.msGridColumn=e;else{var o=e.split("/").map((function(e){return+e})),i=n(o,2),a=i[0],u=i[1];l.gridColumnStart(a,t),l.gridColumnEnd(u,t)}},gridColumnEnd:function(e,t){var n=t.msGridColumn;r(e)&&r(n)&&(t.msGridColumnSpan=e-n)},gridColumnStart:function(e,t){r(e)&&(t.msGridColumn=e)},gridRow:function(e,t){if(r(e))t.msGridRow=e;else{var o=e.split("/").map((function(e){return+e})),i=n(o,2),a=i[0],u=i[1];l.gridRowStart(a,t),l.gridRowEnd(u,t)}},gridRowEnd:function(e,t){var n=t.msGridRow;r(e)&&r(n)&&(t.msGridRowSpan=e-n)},gridRowStart:function(e,t){r(e)&&(t.msGridRow=e)},gridTemplateColumns:function(e,t){t.msGridColumns=e},gridTemplateRows:function(e,t){t.msGridRows=e},justifySelf:function(e,t){o.indexOf(e)>-1&&(t.msGridColumnAlign=e)}}})),ve=$(ge),be=H((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("image-set(")>-1)return o.map((function(e){return t.replace(/image-set\(/g,e+"image-set(")}))};var n,r=(n=ee)&&n.__esModule?n:{default:n},o=["-webkit-",""]})),we=$(be),ke=H((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,r){if(Object.prototype.hasOwnProperty.call(n,e))for(var o=n[e],i=0,l=o.length;i<l;++i)r[o[i]]=t};var n={marginBlockStart:["WebkitMarginBefore"],marginBlockEnd:["WebkitMarginAfter"],marginInlineStart:["WebkitMarginStart","MozMarginStart"],marginInlineEnd:["WebkitMarginEnd","MozMarginEnd"],paddingBlockStart:["WebkitPaddingBefore"],paddingBlockEnd:["WebkitPaddingAfter"],paddingInlineStart:["WebkitPaddingStart","MozPaddingStart"],paddingInlineEnd:["WebkitPaddingEnd","MozPaddingEnd"],borderBlockStart:["WebkitBorderBefore"],borderBlockStartColor:["WebkitBorderBeforeColor"],borderBlockStartStyle:["WebkitBorderBeforeStyle"],borderBlockStartWidth:["WebkitBorderBeforeWidth"],borderBlockEnd:["WebkitBorderAfter"],borderBlockEndColor:["WebkitBorderAfterColor"],borderBlockEndStyle:["WebkitBorderAfterStyle"],borderBlockEndWidth:["WebkitBorderAfterWidth"],borderInlineStart:["WebkitBorderStart","MozBorderStart"],borderInlineStartColor:["WebkitBorderStartColor","MozBorderStartColor"],borderInlineStartStyle:["WebkitBorderStartStyle","MozBorderStartStyle"],borderInlineStartWidth:["WebkitBorderStartWidth","MozBorderStartWidth"],borderInlineEnd:["WebkitBorderEnd","MozBorderEnd"],borderInlineEndColor:["WebkitBorderEndColor","MozBorderEndColor"],borderInlineEndStyle:["WebkitBorderEndStyle","MozBorderEndStyle"],borderInlineEndWidth:["WebkitBorderEndWidth","MozBorderEndWidth"]}})),xe=$(ke),Se=H((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("position"===e&&"sticky"===t)return["-webkit-sticky","sticky"]}})),Ee=$(Se),Te=H((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(r.hasOwnProperty(e)&&o.hasOwnProperty(t))return n.map((function(e){return e+t}))};var n=["-webkit-","-moz-",""],r={maxHeight:!0,maxWidth:!0,width:!0,height:!0,columnWidth:!0,minWidth:!0,minHeight:!0},o={"min-content":!0,"max-content":!0,"fill-available":!0,"fit-content":!0,"contain-floats":!0}})),Ce=$(Te),Oe=/[A-Z]/g,Pe=/^ms-/,_e={};function Ne(e){return"-"+e.toLowerCase()}var je,Me=(je=Object.freeze({default:function(e){if(_e.hasOwnProperty(e))return _e[e];var t=e.replace(Oe,Ne);return _e[e]=Pe.test(t)?"-"+t:t}}))&&je.default||je,Ae=H((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e)};var n,r=(n=Me)&&n.__esModule?n:{default:n};e.exports=t.default}));$(Ae);var Ie=H((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,i,u){if("string"==typeof t&&l.hasOwnProperty(e)){var c=function(e,t){if((0,r.default)(e))return e;for(var o=e.split(/,(?![^()]*(?:\([^()]*\))?\))/g),i=0,l=o.length;i<l;++i){var u=o[i],c=[u];for(var s in t){var f=(0,n.default)(s);if(u.indexOf(f)>-1&&"order"!==f)for(var d=t[s],p=0,m=d.length;p<m;++p)c.unshift(u.replace(f,a[d[p]]+f))}o[i]=c.join(",")}return o.join(",")}(t,u),s=c.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter((function(e){return!/-moz-|-ms-/.test(e)})).join(",");if(e.indexOf("Webkit")>-1)return s;var f=c.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter((function(e){return!/-webkit-|-ms-/.test(e)})).join(",");return e.indexOf("Moz")>-1?f:(i["Webkit"+(0,o.default)(e)]=s,i["Moz"+(0,o.default)(e)]=f,c)}};var n=i(Ae),r=i(ee),o=i(V);function i(e){return e&&e.__esModule?e:{default:e}}var l={transition:!0,transitionProperty:!0,WebkitTransition:!0,WebkitTransitionProperty:!0,MozTransition:!0,MozTransitionProperty:!0},a={Webkit:"-webkit-",Moz:"-moz-",ms:"-ms-"}})),Re=["Webkit"],ze=["Moz"],Fe=["ms"],De=["Webkit","Moz"],Le=["Webkit","ms"],We=["Webkit","Moz","ms"],Be=X({plugins:[J,ne,oe,le,ue,se,de,me,he,ve,we,xe,Ee,Ce,$(Ie)],prefixMap:{transform:Le,transformOrigin:Le,transformOriginX:Le,transformOriginY:Le,backfaceVisibility:Re,perspective:Re,perspectiveOrigin:Re,transformStyle:Re,transformOriginZ:Re,animation:Re,animationDelay:Re,animationDirection:Re,animationFillMode:Re,animationDuration:Re,animationIterationCount:Re,animationName:Re,animationPlayState:Re,animationTimingFunction:Re,appearance:De,userSelect:We,fontKerning:Re,textEmphasisPosition:Re,textEmphasis:Re,textEmphasisStyle:Re,textEmphasisColor:Re,boxDecorationBreak:Re,clipPath:Re,maskImage:Re,maskMode:Re,maskRepeat:Re,maskPosition:Re,maskClip:Re,maskOrigin:Re,maskSize:Re,maskComposite:Re,mask:Re,maskBorderSource:Re,maskBorderMode:Re,maskBorderSlice:Re,maskBorderWidth:Re,maskBorderOutset:Re,maskBorderRepeat:Re,maskBorder:Re,maskType:Re,textDecorationStyle:De,textDecorationSkip:De,textDecorationLine:De,textDecorationColor:De,filter:Re,fontFeatureSettings:De,breakAfter:We,breakBefore:We,breakInside:We,columnCount:De,columnFill:De,columnGap:De,columnRule:De,columnRuleColor:De,columnRuleStyle:De,columnRuleWidth:De,columns:De,columnSpan:De,columnWidth:De,writingMode:Le,flex:Le,flexBasis:Re,flexDirection:Le,flexGrow:Re,flexFlow:Le,flexShrink:Re,flexWrap:Le,alignContent:Re,alignItems:Re,alignSelf:Re,justifyContent:Re,order:Re,transitionDelay:Re,transitionDuration:Re,transitionProperty:Re,transitionTimingFunction:Re,backdropFilter:Re,scrollSnapType:Le,scrollSnapPointsX:Le,scrollSnapPointsY:Le,scrollSnapDestination:Le,scrollSnapCoordinate:Le,shapeImageThreshold:Re,shapeImageMargin:Re,shapeImageOutside:Re,hyphens:We,flowInto:Le,flowFrom:Le,regionFragment:Le,textOrientation:Re,boxSizing:ze,textAlignLast:ze,tabSize:ze,wrapFlow:Fe,wrapThrough:Fe,wrapMargin:Fe,touchAction:Fe,textSizeAdjust:Le,borderImage:Re,borderImageOutset:Re,borderImageRepeat:Re,borderImageSlice:Re,borderImageSource:Re,borderImageWidth:Re}}),Ue=[function(e,t,n){return":"!==e[0]?null:n(t+e)},function(e,t,n){if("@"!==e[0])return null;var r=n(t);return["".concat(e,"{").concat(r.join(""),"}")]}],$e=function e(t,n,r,o,i){for(var l=new U,a=0;a<n.length;a++)l.addStyleType(n[a]);var u=new U,c=[];l.forEach((function(n,l){r.some((function(a){var u=a(l,t,(function(t){return e(t,[n],r,o,i)}));if(null!=u)return Array.isArray(u)?c.push.apply(c,M(u)):(console.warn("WARNING: Selector handlers should return an array of rules.Returning a string containing multiple rules is deprecated.",a),c.push("@media all {".concat(u,"}"))),!0}))||u.set(l,n,!0)}));var s=Qe(t,u,o,i,r);return s&&c.unshift(s),c},He=function(e,t,n){return"".concat((r=e,o=r.replace(A,I),"m"===o[0]&&"s"===o[1]&&"-"===o[2]?"-".concat(o):o),":").concat(n(e,t),";");var r,o},Ve=function(e,t){return e[t]=!0,e},Qe=function(e,t,n,r,o){!function(e,t,n){if(t)for(var r=Object.keys(t),o=0;o<r.length;o++){var i=r[o];e.has(i)&&e.set(i,t[i](e.get(i),n),!1)}}(t,n,o);var i=Object.keys(t.elements).reduce(Ve,Object.create(null)),l=Be(t.elements),a=Object.keys(l);if(a.length!==t.keyOrder.length)for(var u=0;u<a.length;u++)if(!i[a[u]]){var c;if((c="W"===a[u][0]?a[u][6].toLowerCase()+a[u].slice(7):"o"===a[u][1]?a[u][3].toLowerCase()+a[u].slice(4):a[u][2].toLowerCase()+a[u].slice(3))&&i[c]){var s=t.keyOrder.indexOf(c);t.keyOrder.splice(s,0,a[u])}else t.keyOrder.unshift(a[u])}for(var f=!1===r?F:D,d=[],p=0;p<t.keyOrder.length;p++){var m=t.keyOrder[p],y=l[m];if(Array.isArray(y))for(var h=0;h<y.length;h++)d.push(He(m,y[h],f));else d.push(He(m,y,f))}return d.length?"".concat(e,"{").concat(d.join(""),"}"):""},qe=null,Ke={fontFamily:function e(t){if(Array.isArray(t)){var n={};return t.forEach((function(t){n[e(t)]=!0})),Object.keys(n).join(",")}return"object"===_(t)?(Je(t.src,"@font-face",[t],!1),'"'.concat(t.fontFamily,'"')):t},animationName:function e(t,n){if(Array.isArray(t))return t.map((function(t){return e(t,n)})).join(",");if("object"===_(t)){var r="keyframe_".concat((i=t,L(JSON.stringify(i)))),o="@keyframes ".concat(r,"{");return t instanceof U?t.forEach((function(e,t){o+=$e(t,[e],n,Ke,!1).join("")})):Object.keys(t).forEach((function(e){o+=$e(e,[t[e]],n,Ke,!1).join("")})),Ze(r,[o+="}"]),r}return t;var i}},Ge={},Ye=[],Xe=!1,Ze=function(e,t){var n;if(!Ge[e]){if(!Xe){if("undefined"==typeof document)throw new Error("Cannot automatically buffer without a document");Xe=!0,P()(rt)}(n=Ye).push.apply(n,M(t)),Ge[e]=!0}},Je=function(e,t,n,r){var o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[];if(!Ge[e]){var i=$e(t,n,o,Ke,r);Ze(e,i)}},et=function(){Ye=[],Ge={},Xe=!1,qe=null},tt=function(e){delete Ge[e]},nt=function(){Xe=!1;var e=Ye;return Ye=[],e},rt=function(){var e=nt();e.length>0&&function(e){if(null==qe&&null==(qe=document.querySelector("style[data-aphrodite]"))){var t=document.head||document.getElementsByTagName("head")[0];(qe=document.createElement("style")).type="text/css",qe.setAttribute("data-aphrodite",""),t.appendChild(qe)}var n=qe.styleSheet||qe.sheet;if(n.insertRule){var r=n.cssRules.length;e.forEach((function(e){try{n.insertRule(e,r),r+=1}catch(e){}}))}else qe.innerText=(qe.innerText||"")+e.join("")}(e)},ot=function e(t,n,r,o){for(var i=0;i<t.length;i+=1)if(t[i])if(Array.isArray(t[i]))o+=e(t[i],n,r,o);else{if(!("_definition"in(l=t[i])&&"_name"in l&&"_len"in l))throw new Error("Invalid Style Definition: Styles should be defined using the StyleSheet.create method.");n.push(t[i]._name),r.push(t[i]._definition),o+=t[i]._len}var l;return o},it=function(e,t,n){var r,o=[],i=[],l=ot(t,o,i,0);return 0===o.length?"":(r=1===o.length?"_".concat(o[0]):"_".concat(L(o.join())).concat((l%36).toString(36)),Je(r,".".concat(r),i,e,n),r)},lt=function(e,t){return"".concat(t,"_").concat(L(e))},at=L,ut={create:function(e){for(var t={},n=Object.keys(e),r=0;r<n.length;r+=1){var o=n[r],i=e[o],l=JSON.stringify(i);t[o]={_len:l.length,_name:at(l,o),_definition:i}}return t},rehydrate:function(){(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).forEach((function(e){Ge[e]=!0}))}},ct="undefined"!=typeof window?null:{renderStatic:function(e){return et(),function(){if(Xe)throw new Error("Cannot buffer while already buffering");Xe=!0}(),{html:e(),css:{content:nt().join(""),renderedClassNames:Object.keys(Ge)}}}},st=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Ue;return{StyleSheet:j({},ut,{extend:function(r){var o=r.map((function(e){return e.selectorHandler})).filter((function(e){return e}));return e(t,n.concat(o))}}),StyleSheetServer:ct,StyleSheetTestUtils:null,minify:function(e){at=e?L:lt},css:function(){for(var e=arguments.length,r=new Array(e),o=0;o<e;o++)r[o]=arguments[o];return it(t,r,n)},flushToStyleTag:rt,injectAndGetClassName:it,defaultSelectorHandlers:Ue,reset:et,resetInjectedStyle:tt}}(!0),ft=st.StyleSheet,dt=(st.StyleSheetServer,st.StyleSheetTestUtils,st.css);function pt(){return pt=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},pt.apply(this,arguments)}st.minify,st.flushToStyleTag,st.injectAndGetClassName,st.defaultSelectorHandlers,st.reset,st.resetInjectedStyle;var mt=function(t){var n=t.type,r=t.html,o=t.value,i=t.markAsRead,l=t.id,a=ft.create({default:{color:"blue"},urgent:{color:"red"},smallList:{"@media (max-width: 900px)":{padding:"10px 8px",borderBottom:"solid black 1px",listStyle:"none"}}}),u=(0,e.useMemo)((function(){var e={"data-notification-type":n};return r&&(e.dangerouslySetInnerHTML=r),e}),[n,r]),c=a[n]||a.default;return e.createElement("li",pt({},u,{className:dt(c,a.smallList),onClick:function(){i(l)}}),o)};ft.create({default:{color:"blue"},urgent:{color:"red"},smallList:{"@media (max-width: 900px)":{padding:"10px 8px",borderBottom:"solid black 1px",listStyle:"none"}}}),mt.propTypes={id:E().number,html:E().shape({__html:E().string}),type:E().string,value:E().string,markAsRead:E().func},mt.defaultProps={type:"default",markAsRead:function(){}};const yt=mt,ht=E().shape({id:E().number.isRequired,type:E().string.isRequired,value:E().string,html:E().shape({__html:E().string})});function gt(e){return gt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},gt(e)}function vt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,bt(r.key),r)}}function bt(e){var t=function(e,t){if("object"!=gt(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=gt(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==gt(t)?t:String(t)}function wt(e,t,n){return t=xt(t),function(e,t){if(t&&("object"===gt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,kt()?Reflect.construct(t,n||[],xt(e).constructor):t.apply(e,n))}function kt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(kt=function(){return!!e})()}function xt(e){return xt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},xt(e)}function St(e,t){return St=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},St(e,t)}function Et(e){return Et="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Et(e)}function Tt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,jt(r.key),r)}}function Ct(e,t,n){return t=Pt(t),function(e,t){if(t&&("object"===Et(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return _t(e)}(e,Ot()?Reflect.construct(t,n||[],Pt(e).constructor):t.apply(e,n))}function Ot(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Ot=function(){return!!e})()}function Pt(e){return Pt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Pt(e)}function _t(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Nt(e,t){return Nt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Nt(e,t)}function jt(e){var t=function(e,t){if("object"!=Et(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=Et(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Et(t)?t:String(t)}var Mt=function(t){function n(){var e,t,r,o;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n);for(var i=arguments.length,l=new Array(i),a=0;a<i;a++)l[a]=arguments[a];return t=_t(e=Ct(this,n,[].concat(l))),o=function(t){console.log("Notification ".concat(t," has been marked as read")),e.props.markNotificationAsRead(t)},(r=jt(r="markAsRead"))in t?Object.defineProperty(t,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[r]=o,e}var r,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Nt(e,t)}(n,t),r=n,(o=[{key:"render",value:function(){var t=this,n=this.props,r=n.displayDrawer,o=n.listNotifications;return e.createElement("div",{className:"container"},e.createElement("div",{className:dt(At.menuItem,At.opacityAnim,At.bounceAnim)},"Your notifications"),r&&e.createElement("div",{className:dt(At.notifications,At.small)},e.createElement("button",{style:{position:"absolute",right:"16px",top:".8rem",fontSize:"16px",border:"none",background:"none",cursor:"pointer"},"aria-label":"Close",onClick:function(){console.log("Close button has been clicked\n")}},"x"),e.createElement("p",null,"Here is the list of notifications"),e.createElement("ul",{className:dt(At.ul)},o.map((function(n){return e.createElement(yt,{key:n.id,id:n.id,type:n.type,value:n.value,html:n.html,markAsRead:t.markAsRead})})))))}}])&&Tt(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),n}(e.PureComponent),At=ft.create({notifications:{border:"2px dotted #e1484c",padding:"1rem .5rem 0 .5rem",float:"right"},menuItem:{textAlign:"right",":hover":{cursor:"pointer"}},small:{"@media (max-width: 900px)":{position:"fixed",bottom:0,top:0,left:0,right:0,fontSize:"20px",backgroundColor:"white",overflow:"hidden"},ul:{"@media (max-width: 900px)":{listStylePosition:"inside"}}},opacityAnim:{":hover":{animationName:{from:{opacity:0},to:{opacity:.5}},animationDuration:"0.2s"}},bounceAnim:{":hover":{animationName:{"70%":{transform:"translateY(0px)"},"85%":{transform:"translateY(-5px)"},"100%":{transform:"translateY(5px)"}},animationDuration:"0.5s"}}});Mt.propTypes={displayDrawer:E().bool,listNotifications:E().arrayOf(ht),markNotificationAsRead:E().func.isRequired},Mt.defaultProps={displayDrawer:!1,listNotifications:[]};const It=function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Component",r=function(r){function o(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o),wt(this,o,arguments)}var i,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&St(e,t)}(o,r),i=o,(l=[{key:"componentDidMount",value:function(){console.log("Component ".concat(n," is mounted"))}},{key:"componentWillUnmount",value:function(){console.log("Component ".concat(n," is going to unmount"))}},{key:"render",value:function(){return e.createElement(t,this.props)}}])&&vt(i.prototype,l),Object.defineProperty(i,"prototype",{writable:!1}),o}(e.Component);return r.displayName="WithLogging(".concat(n,")"),r.getComponentName=function(){return n},r}(Mt,"Notifications"),Rt=l.p+"ff501d827c9f4b6d3ac455c5ae5624b8.png";function zt(e){return zt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},zt(e)}function Ft(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Ut(r.key),r)}}function Dt(e,t,n){return t=Wt(t),function(e,t){if(t&&("object"===zt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,Lt()?Reflect.construct(t,n||[],Wt(e).constructor):t.apply(e,n))}function Lt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Lt=function(){return!!e})()}function Wt(e){return Wt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Wt(e)}function Bt(e,t){return Bt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Bt(e,t)}function Ut(e){var t=function(e,t){if("object"!=zt(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=zt(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==zt(t)?t:String(t)}var $t,Ht,Vt,Qt=function(t){function n(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),Dt(this,n,arguments)}var r,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Bt(e,t)}(n,t),r=n,(o=[{key:"render",value:function(){var t=this.context,n=t.user,r=t.logOut;return e.createElement("div",{css:qt.header},e.createElement("div",null,e.createElement("img",{css:qt.image,src:Rt,alt:"Holberton logo"}),e.createElement("h1",{css:qt.title},"School dashboard")),n.isLoggedIn&&e.createElement("p",{id:"logoutSection"},"Welcome ",e.createElement("strong",null,n.email)," (",e.createElement("a",{onClick:r,css:qt.link},"Log out"),")"))}}])&&Ft(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),n}(e.Component);$t=Qt,Vt=x,(Ht=Ut(Ht="contextType"))in $t?Object.defineProperty($t,Ht,{value:Vt,enumerable:!0,configurable:!0,writable:!0}):$t[Ht]=Vt;var qt={header:{display:"flex",alignItems:"center"},image:{width:"200px",height:"200px"},title:{color:"#e1484c",marginLeft:"20px"},loggedInSection:{marginLeft:"auto",marginRight:"20px"},logoutLink:{cursor:"pointer",color:"blue"}};const Kt=Qt;!!t.useInsertionEffect&&t.useInsertionEffect||e.useLayoutEffect;var Gt={animationIterationCount:1,aspectRatio:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1};function Yt(e){var t=Object.create(null);return function(n){return void 0===t[n]&&(t[n]=e(n)),t[n]}}var Xt=/[A-Z]|^ms/g,Zt=/_EMO_([^_]+?)_([^]*?)_EMO_/g,Jt=function(e){return 45===e.charCodeAt(1)},en=function(e){return null!=e&&"boolean"!=typeof e},tn=Yt((function(e){return Jt(e)?e:e.replace(Xt,"-$&").toLowerCase()})),nn=function(e,t){switch(e){case"animation":case"animationName":if("string"==typeof t)return t.replace(Zt,(function(e,t,n){return on={name:t,styles:n,next:on},t}))}return 1===Gt[e]||Jt(e)||"number"!=typeof t||0===t?t:t+"px"};function rn(e,t,n){if(null==n)return"";if(void 0!==n.__emotion_styles)return n;switch(typeof n){case"boolean":return"";case"object":if(1===n.anim)return on={name:n.name,styles:n.styles,next:on},n.name;if(void 0!==n.styles){var r=n.next;if(void 0!==r)for(;void 0!==r;)on={name:r.name,styles:r.styles,next:on},r=r.next;return n.styles+";"}return function(e,t,n){var r="";if(Array.isArray(n))for(var o=0;o<n.length;o++)r+=rn(e,t,n[o])+";";else for(var i in n){var l=n[i];if("object"!=typeof l)null!=t&&void 0!==t[l]?r+=i+"{"+t[l]+"}":en(l)&&(r+=tn(i)+":"+nn(i,l)+";");else if(!Array.isArray(l)||"string"!=typeof l[0]||null!=t&&void 0!==t[l[0]]){var a=rn(e,t,l);switch(i){case"animation":case"animationName":r+=tn(i)+":"+a+";";break;default:r+=i+"{"+a+"}"}}else for(var u=0;u<l.length;u++)en(l[u])&&(r+=tn(i)+":"+nn(i,l[u])+";")}return r}(e,t,n);case"function":if(void 0!==e){var o=on,i=n(e);return on=o,rn(e,t,i)}}if(null==t)return n;var l=t[n];return void 0!==l?l:n}var on,ln=/label:\s*([^\s;\n{]+)\s*(;|$)/g;function an(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e,t,n){if(1===e.length&&"object"==typeof e[0]&&null!==e[0]&&void 0!==e[0].styles)return e[0];var r=!0,o="";on=void 0;var i=e[0];null==i||void 0===i.raw?(r=!1,o+=rn(n,t,i)):o+=i[0];for(var l=1;l<e.length;l++)o+=rn(n,t,e[l]),r&&(o+=i[l]);ln.lastIndex=0;for(var a,u="";null!==(a=ln.exec(o));)u+="-"+a[1];var c=function(e){for(var t,n=0,r=0,o=e.length;o>=4;++r,o-=4)t=1540483477*(65535&(t=255&e.charCodeAt(r)|(255&e.charCodeAt(++r))<<8|(255&e.charCodeAt(++r))<<16|(255&e.charCodeAt(++r))<<24))+(59797*(t>>>16)<<16),n=1540483477*(65535&(t^=t>>>24))+(59797*(t>>>16)<<16)^1540483477*(65535&n)+(59797*(n>>>16)<<16);switch(o){case 3:n^=(255&e.charCodeAt(r+2))<<16;case 2:n^=(255&e.charCodeAt(r+1))<<8;case 1:n=1540483477*(65535&(n^=255&e.charCodeAt(r)))+(59797*(n>>>16)<<16)}return(((n=1540483477*(65535&(n^=n>>>13))+(59797*(n>>>16)<<16))^n>>>15)>>>0).toString(36)}(o)+u;return{name:c,styles:o,next:on}}(t)}function un(e){return un="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},un(e)}function cn(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function sn(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?cn(Object(n),!0).forEach((function(t){fn(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):cn(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function fn(e,t,n){var r;return r=function(e,t){if("object"!=un(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=un(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(t),(t="symbol"==un(r)?r:String(r))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function dn(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}Math.abs,String.fromCharCode,Object.assign,l(146);var pn={text:{margin:"3rem 0 0 2rem"},form:{display:"flex",flexDirection:"column",margin:"1rem 0 0 2rem"},labelAndInput:{margin:"0 1rem 0 0"},button:{width:"40px",color:"black",backgroundColor:"white",border:"3px solid gold",borderRadius:"2px"},enable:{backgroundColor:"green",cursor:"pointer"},disable:{backgroundColor:"grey",cursor:"not-allowed"}};const mn=function(){var t,n,r=function(){var t=(0,e.useContext)(w);if(!t)throw new Error("useAppContext must be used within an AppContextProvider");return t}().logIn,o=(t=e.useState({email:"",password:"",enableSubmit:!1}),n=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i,l,a=[],u=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=i.call(n)).done)&&(a.push(r.value),a.length!==t);u=!0);}catch(e){c=!0,o=e}finally{try{if(!u&&null!=n.return&&(l=n.return(),Object(l)!==l))return}finally{if(c)throw o}}return a}}(t,n)||function(e,t){if(e){if("string"==typeof e)return dn(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?dn(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[0],l=o[1],a=function(e,t){return""!==((null==e?void 0:e.trim())||"")&&""!==((null==t?void 0:t.trim())||"")};return e.createElement("div",{className:"App"},e.createElement("div",{className:"App-body"},e.createElement("p",{className:an(pn.text)},"Login to access the full dashboard"),e.createElement("div",{className:an(pn.form)},e.createElement("form",{className:an(pn.form),onSubmit:function(e){e.preventDefault(),r&&r(i.email,i.password)}},e.createElement("label",{className:an(pn.labelAndInput),htmlFor:"email"},"Email:"),e.createElement("input",{className:an(pn.labelAndInput),type:"email",id:"email",name:"email",value:i.email,onChange:function(e){var t=e.target.value;l((function(e){return sn(sn({},e),{},{email:t,enableSubmit:a(t,e.password)})}))}}),e.createElement("label",{className:an(pn.labelAndInput),htmlFor:"password"},"Password:"),e.createElement("input",{className:an(pn.labelAndInput),type:"password",id:"password",name:"password",value:i.password,onChange:function(e){var t=e.target.value;l((function(e){return sn(sn({},e),{},{password:t,enableSubmit:a(e.email,t)})}))}}),e.createElement("input",{className:an(pn.button,i.enableSubmit?pn.enable:pn.disable),type:"submit",value:"OK",disabled:!i.enableSubmit})))))};var yn=function(t){var n=t.isHeader,r=t.textFirstCell,o=t.textSecondCell,i=ft.create({row:{backgroundColor:n?"#deb5b545":"#f5f5f5ab"},headerTh:{borderBottom:"2px solid #deb5b5"},th:{borderBottom:"1px solid #deb5b5"}});return e.createElement("tr",{className:dt(i.row)},n?null===o?e.createElement("th",{className:dt(i.headerTh),colSpan:"2"},r):e.createElement(e.Fragment,null,e.createElement("th",{className:dt(i.headerTh)},r),e.createElement("th",{className:dt(i.headerTh)},o)):e.createElement(e.Fragment,null,e.createElement("td",null,r),e.createElement("td",null,o)))};yn.propTypes={isHeader:E().bool,textFirstCell:E().string.isRequired,textSecondCell:E().oneOfType([E().string,E().number])},yn.defaultProps={isHeader:!1,textSecondCell:null};const hn=yn,gn=E().shape({id:E().number.isRequired,name:E().string.isRequired,credit:E().oneOfType([E().string,E().number]).isRequired});var vn=function(t){var n=t.listCourses;return e.createElement("table",{id:dt(bn.CourseList)},e.createElement("thead",null,e.createElement(hn,{textFirstCell:"Available courses",isHeader:!0}),e.createElement(hn,{textFirstCell:"Course name",textSecondCell:"Credit",isHeader:!0})),e.createElement("tbody",null,0==n.length&&e.createElement(hn,{textFirstCell:"No course available yet"}),n.map((function(t){return e.createElement(hn,{key:t.id,textFirstCell:t.name,textSecondCell:t.credit,isHeader:!1})}))))},bn=ft.create({CourseList:{width:"100%",border:"1px solid lightgrey",borderCollapse:"collapse",marginTop:"2rem"}});vn.propTypes={listCourses:E().arrayOf(gn)},vn.defaultProps={listCourses:[]};const wn=vn;var kn={bottom:0,borderTop:"3px solid #e1484c",width:"100%"},xn={textAlign:"center",fontStyle:"italic",margin:"5px 0"};const Sn=function(){var t=(0,e.useContext)(x).user;return e.createElement("div",{className:an(kn)},e.createElement("p",{className:an(xn)},"Copyright ",(new Date).getFullYear()," - ","Holberton School main dashboard"),(null==t?void 0:t.isLoggedIn)&&e.createElement("p",{className:an(xn)},e.createElement("a",{href:"/contact"},"contact us")))};var En=function(t){var n=t.title,r=t.children;return e.createElement("div",{className:"bodySection"},e.createElement("h2",null,n),r)};En.propTypes={title:E().string.isRequired,children:E().node},En.defaultProps={children:null};var Tn=l(457),Cn={};Cn.styleTagTransform=y(),Cn.setAttributes=f(),Cn.insert=c().bind(null,"head"),Cn.domAPI=a(),Cn.insertStyleElement=p(),o()(Tn.A,Cn),Tn.A&&Tn.A.locals&&Tn.A.locals;ft.create({marginBottom:"40px"});function On(e){return On="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},On(e)}function Pn(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Rn(r.key),r)}}function _n(e,t,n){return t=jn(t),function(e,t){if(t&&("object"===On(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Mn(e)}(e,Nn()?Reflect.construct(t,n||[],jn(e).constructor):t.apply(e,n))}function Nn(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Nn=function(){return!!e})()}function jn(e){return jn=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},jn(e)}function Mn(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function An(e,t){return An=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},An(e,t)}function In(e,t,n){return(t=Rn(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Rn(e){var t=function(e,t){if("object"!=On(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=On(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==On(t)?t:String(t)}E().string.isRequired,E().node.isRequired;const zn=function(t){function n(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),In(Mn(t=_n(this,n,[e])),"logIn",(function(e,n){t.setState({user:{email:e,password:n,isLoggedIn:!0}})})),In(Mn(t),"logOut",(function(){t.setState({user:{email:"",password:"",isLoggedIn:!1}})})),In(Mn(t),"markNotificationAsRead",(function(e){t.setState((function(t){return{listNotifications:t.listNotifications.filter((function(t){return t.id!==e}))}}))})),t.state={user:{email:"",password:"",isLoggedIn:!1},listNotifications:[]},t}var r,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&An(e,t)}(n,t),r=n,(o=[{key:"render",value:function(){var t=this.state,n=t.user,r=t.listNotifications;return e.createElement(k,{value:{user:n,logOut:this.logOut,listNotifications:r,markNotificationAsRead:this.markNotificationAsRead}},e.createElement("div",{className:"App"},e.createElement(It,null),e.createElement(Kt,null),n.isLoggedIn?e.createElement(e.Fragment,null,e.createElement(wn,null),e.createElement(Sn,null)," "):e.createElement(mn,{logIn:this.logIn})))}}])&&Pn(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),n}(e.Component);var Fn;n.render(e.createElement(e.StrictMode,null,e.createElement(k,null," ",e.createElement(zn,null))),document.getElementById("root")),Fn&&Fn instanceof Function&&l.e(237).then(l.bind(l,237)).then((function(e){var t=e.getCLS,n=e.getFID,r=e.getFCP,o=e.getLCP,i=e.getTTFB;t(Fn),n(Fn),r(Fn),o(Fn),i(Fn)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,