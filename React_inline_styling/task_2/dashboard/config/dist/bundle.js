/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e,t,n={488:(e,t,n)=>{"use strict";var r=n(888),o=[],i=[],l=r.makeRequestCallFromTimer((function(){if(i.length)throw i.shift()}));function a(e){var t;(t=o.length?o.pop():new u).task=e,r(t)}function u(){this.task=null}e.exports=a,u.prototype.call=function(){try{this.task.call()}catch(e){a.onerror?a.onerror(e):(i.push(e),l())}finally{this.task=null,o[o.length]=this}}},888:(e,t,n)=>{"use strict";function r(e){i.length||o(),i[i.length]=e}e.exports=r;var o,i=[],l=0;function a(){for(;l<i.length;){var e=l;if(l+=1,i[e].call(),l>1024){for(var t=0,n=i.length-l;t<n;t++)i[t]=i[t+l];i.length-=l,l=0}}i.length=0,l=0}var u,c,s,f=void 0!==n.g?n.g:self,d=f.MutationObserver||f.WebKitMutationObserver;function p(e){return function(){var t=setTimeout(r,0),n=setInterval(r,50);function r(){clearTimeout(t),clearInterval(n),e()}}}"function"==typeof d?(u=1,c=new d(a),s=document.createTextNode(""),c.observe(s,{characterData:!0}),o=function(){u=-u,s.data=u}):o=p(a),r.requestFlush=o,r.makeRequestCallFromTimer=p},84:e=>{"use strict";e.exports=function(e){for(var t=5381,n=e.length;n;)t=33*t^e.charCodeAt(--n);return t>>>0}},440:(e,t,n)=>{"use strict";n.d(t,{c:()=>a});var r=n(648),o=n.n(r),i=n(312),l=n.n(i)()(o());l.push([e.id,".bodySectionWithMargin {\n  border-bottom: 40px;\n}","",{version:3,sources:["webpack://./src/BodySection/BodySectionWithMarginBottom.css"],names:[],mappings:"AAAA;EACE,mBAAmB;AACrB",sourcesContent:[".bodySectionWithMargin {\r\n  border-bottom: 40px;\r\n}"],sourceRoot:""}]);const a=l},728:(e,t,n)=>{"use strict";n.d(t,{c:()=>a});var r=n(648),o=n.n(r),i=n(312),l=n.n(i)()(o());l.push([e.id,"#CourseList {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 30px;\n}\n\n#CourseList th,\n#CourseList td {\n  border: 1px solid #ddd;\n  padding: 8px;\n  text-align: left;\n}\n#CourseList th {\n  text-align: center;\n}\n\n#CourseList tr {\n  border-bottom: 1px solid #ddd;\n}\n\n#CourseList tr:last-child {\n  border-bottom: none;\n}\n","",{version:3,sources:["webpack://./src/CourseList/CourseList.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,yBAAyB;EACzB,gBAAgB;AAClB;;AAEA;;EAEE,sBAAsB;EACtB,YAAY;EACZ,gBAAgB;AAClB;AACA;EACE,kBAAkB;AACpB;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,mBAAmB;AACrB",sourcesContent:["#CourseList {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 30px;\r\n}\r\n\r\n#CourseList th,\r\n#CourseList td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n#CourseList th {\r\n  text-align: center;\r\n}\r\n\r\n#CourseList tr {\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n#CourseList tr:last-child {\r\n  border-bottom: none;\r\n}\r\n"],sourceRoot:""}]);const a=l},724:(e,t,n)=>{"use strict";n.d(t,{c:()=>a});var r=n(648),o=n.n(r),i=n(312),l=n.n(i)()(o());l.push([e.id,".App-footer {\n  position: absolute;\n  bottom: 0;\n  margin-top: 20rem;\n  border-top: 3px solid var(--primary-color);\n  width: 100%;\n  display: flex;\n  justify-content: center;\n}\n\n.App-footer p {\n  font-style: italic;\n}","",{version:3,sources:["webpack://./src/Footer/Footer.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,SAAS;EACT,iBAAiB;EACjB,0CAA0C;EAC1C,WAAW;EACX,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,kBAAkB;AACpB",sourcesContent:[".App-footer {\r\n  position: absolute;\r\n  bottom: 0;\r\n  margin-top: 20rem;\r\n  border-top: 3px solid var(--primary-color);\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.App-footer p {\r\n  font-style: italic;\r\n}"],sourceRoot:""}]);const a=l},464:(e,t,n)=>{"use strict";n.d(t,{c:()=>a});var r=n(648),o=n.n(r),i=n(312),l=n.n(i)()(o());l.push([e.id,":root {\n  --primary-color: #e03232;\n}\n.App {\n  text-align: center;\n}\n.App-header {\n  border-bottom: 3px solid var(--primary-color);\n  display: flex;\n}\n\n.App-header img {\n  width: 200px;\n  height: 200px;\n}\n\n.App-header h1 {\n  color: var(--primary-color);\n  margin: auto auto auto 0;\n}","",{version:3,sources:["webpack://./src/Header/Header.css"],names:[],mappings:"AAAA;EACE,wBAAwB;AAC1B;AACA;EACE,kBAAkB;AACpB;AACA;EACE,6CAA6C;EAC7C,aAAa;AACf;;AAEA;EACE,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,2BAA2B;EAC3B,wBAAwB;AAC1B",sourcesContent:[":root {\r\n  --primary-color: #e03232;\r\n}\r\n.App {\r\n  text-align: center;\r\n}\r\n.App-header {\r\n  border-bottom: 3px solid var(--primary-color);\r\n  display: flex;\r\n}\r\n\r\n.App-header img {\r\n  width: 200px;\r\n  height: 200px;\r\n}\r\n\r\n.App-header h1 {\r\n  color: var(--primary-color);\r\n  margin: auto auto auto 0;\r\n}"],sourceRoot:""}]);const a=l},72:(e,t,n)=>{"use strict";n.d(t,{c:()=>a});var r=n(648),o=n.n(r),i=n(312),l=n.n(i)()(o());l.push([e.id,".App-body {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  border-bottom: 40px;\n}\n\n.App-body p {\n  margin: 3rem 0 0 2rem;\n}\n\n.App-body .App-form {\n  display: flex;\n  margin: 1rem 0 0 2rem;\n}\n\n.App-body .App-form label,\n.App-body .App-form input {\n  margin: 0 1rem 0 0;\n}","",{version:3,sources:["webpack://./src/Login/Login.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,qBAAqB;AACvB;;AAEA;;EAEE,kBAAkB;AACpB",sourcesContent:[".App-body {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  border-bottom: 40px;\r\n}\r\n\r\n.App-body p {\r\n  margin: 3rem 0 0 2rem;\r\n}\r\n\r\n.App-body .App-form {\r\n  display: flex;\r\n  margin: 1rem 0 0 2rem;\r\n}\r\n\r\n.App-body .App-form label,\r\n.App-body .App-form input {\r\n  margin: 0 1rem 0 0;\r\n}"],sourceRoot:""}]);const a=l},920:(e,t,n)=>{"use strict";n.d(t,{c:()=>a});var r=n(648),o=n.n(r),i=n(312),l=n.n(i)()(o());l.push([e.id,'.Notifications {\n    border: 2px dotted var(--holberton-red);\n    padding: 0.1rem 0 1rem;\n    width: 30%;\n    display: flex;\n    flex-direction: column;\n}\n\n.Notifications button {\n    padding-top: 1rem;\n}\n\n.container {\n    display: flex;\n    align-items: flex-end;\n    flex-direction: column;\n    position: absolute;\n    width: 99%;\n}\n.menuItem {\n    display: flex;\n    margin-right: 20px;\n}\n\n.Notifications:not(.display-drawer) {\n    display: none;\n}\n.Notifications li[data-priority="default"] {\n    color: darkblue;\n  }\n  \n  .Notifications li[data-priority="urgent"] {\n    color: red;\n  }\n  \n',"",{version:3,sources:["webpack://./src/Notifications/Notifications.css"],names:[],mappings:"AAAA;IACI,uCAAuC;IACvC,sBAAsB;IACtB,UAAU;IACV,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,qBAAqB;IACrB,sBAAsB;IACtB,kBAAkB;IAClB,UAAU;AACd;AACA;IACI,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,aAAa;AACjB;AACA;IACI,eAAe;EACjB;;EAEA;IACE,UAAU;EACZ",sourcesContent:['.Notifications {\r\n    border: 2px dotted var(--holberton-red);\r\n    padding: 0.1rem 0 1rem;\r\n    width: 30%;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.Notifications button {\r\n    padding-top: 1rem;\r\n}\r\n\r\n.container {\r\n    display: flex;\r\n    align-items: flex-end;\r\n    flex-direction: column;\r\n    position: absolute;\r\n    width: 99%;\r\n}\r\n.menuItem {\r\n    display: flex;\r\n    margin-right: 20px;\r\n}\r\n\r\n.Notifications:not(.display-drawer) {\r\n    display: none;\r\n}\r\n.Notifications li[data-priority="default"] {\r\n    color: darkblue;\r\n  }\r\n  \r\n  .Notifications li[data-priority="urgent"] {\r\n    color: red;\r\n  }\r\n  \r\n'],sourceRoot:""}]);const a=l},344:(e,t,n)=>{"use strict";n.d(t,{c:()=>a});var r=n(648),o=n.n(r),i=n(312),l=n.n(i)()(o());l.push([e.id,"body {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  overflow: hidden;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;EACE;;cAEY;EACZ,mCAAmC;EACnC,kCAAkC;EAClC,gBAAgB;AAClB;;AAEA;EACE;aACW;AACb",sourcesContent:["body {\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  overflow: hidden;\r\n}\r\n\r\ncode {\r\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\r\n    monospace;\r\n}"],sourceRoot:""}]);const a=l},312:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var l={};if(r)for(var a=0;a<this.length;a++){var u=this[a][0];null!=u&&(l[u]=!0)}for(var c=0;c<e.length;c++){var s=[].concat(e[c]);r&&l[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),t.push(s))}},t}},648:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},456:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,o){for(var i,l,a=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),u=1;u<arguments.length;u++){for(var c in i=Object(arguments[u]))n.call(i,c)&&(a[c]=i[c]);if(t){l=t(i);for(var s=0;s<l.length;s++)r.call(i,l[s])&&(a[l[s]]=i[l[s]])}}return a}},776:(e,t,n)=>{"use strict";var r=n(143);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,l){if(l!==r){var a=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw a.name="Invariant Violation",a}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},268:(e,t,n)=>{e.exports=n(776)()},143:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},516:(e,t,n)=>{"use strict";var r=n(504),o=n(456),i=n(712);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(l(227));function a(e,t,n,r,o,i,l,a,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var u=!1,c=null,s=!1,f=null,d={onError:function(e){u=!0,c=e}};function p(e,t,n,r,o,i,l,s,f){u=!1,c=null,a.apply(d,arguments)}var m=null,h=null,y=null;function g(e,t,n){var r=e.type||"unknown-event";e.currentTarget=y(n),function(e,t,n,r,o,i,a,d,m){if(p.apply(this,arguments),u){if(!u)throw Error(l(198));var h=c;u=!1,c=null,s||(s=!0,f=h)}}(r,t,void 0,e),e.currentTarget=null}var v=null,b={};function w(){if(v)for(var e in b){var t=b[e],n=v.indexOf(e);if(!(-1<n))throw Error(l(96,e));if(!x[n]){if(!t.extractEvents)throw Error(l(97,e));for(var r in x[n]=t,n=t.eventTypes){var o=void 0,i=n[r],a=t,u=r;if(E.hasOwnProperty(u))throw Error(l(99,u));E[u]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&k(c[o],a,u);o=!0}else i.registrationName?(k(i.registrationName,a,u),o=!0):o=!1;if(!o)throw Error(l(98,r,e))}}}}function k(e,t,n){if(S[e])throw Error(l(100,e));S[e]=t,C[e]=t.eventTypes[n].dependencies}var x=[],E={},S={},C={};function T(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!b.hasOwnProperty(t)||b[t]!==r){if(b[t])throw Error(l(102,t));b[t]=r,n=!0}}n&&w()}var A=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),_=null,P=null,O=null;function N(e){if(e=h(e)){if("function"!=typeof _)throw Error(l(280));var t=e.stateNode;t&&(t=m(t),_(e.stateNode,e.type,t))}}function M(e){P?O?O.push(e):O=[e]:P=e}function I(){if(P){var e=P,t=O;if(O=P=null,N(e),t)for(e=0;e<t.length;e++)N(t[e])}}function z(e,t){return e(t)}function B(e,t,n,r,o){return e(t,n,r,o)}function j(){}var R=z,F=!1,L=!1;function D(){null===P&&null===O||(j(),I())}function W(e,t,n){if(L)return e(t,n);L=!0;try{return R(e,t,n)}finally{L=!1,D()}}var U=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,H=Object.prototype.hasOwnProperty,V={},Q={};function $(e,t,n,r,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i}var q={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){q[e]=new $(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];q[t]=new $(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){q[e]=new $(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){q[e]=new $(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){q[e]=new $(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){q[e]=new $(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){q[e]=new $(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){q[e]=new $(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){q[e]=new $(e,5,!1,e.toLowerCase(),null,!1)}));var K=/[\-:]([a-z])/g;function G(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(K,G);q[t]=new $(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(K,G);q[t]=new $(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(K,G);q[t]=new $(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){q[e]=new $(e,1,!1,e.toLowerCase(),null,!1)})),q.xlinkHref=new $("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){q[e]=new $(e,1,!1,e.toLowerCase(),null,!0)}));var Y=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function X(e,t,n,r){var o=q.hasOwnProperty(t)?q[t]:null;(null!==o?0===o.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!H.call(Q,e)||!H.call(V,e)&&(U.test(e)?Q[e]=!0:(V[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}Y.hasOwnProperty("ReactCurrentDispatcher")||(Y.ReactCurrentDispatcher={current:null}),Y.hasOwnProperty("ReactCurrentBatchConfig")||(Y.ReactCurrentBatchConfig={suspense:null});var Z=/^(.*)[\\\/]/,J="function"==typeof Symbol&&Symbol.for,ee=J?Symbol.for("react.element"):60103,te=J?Symbol.for("react.portal"):60106,ne=J?Symbol.for("react.fragment"):60107,re=J?Symbol.for("react.strict_mode"):60108,oe=J?Symbol.for("react.profiler"):60114,ie=J?Symbol.for("react.provider"):60109,le=J?Symbol.for("react.context"):60110,ae=J?Symbol.for("react.concurrent_mode"):60111,ue=J?Symbol.for("react.forward_ref"):60112,ce=J?Symbol.for("react.suspense"):60113,se=J?Symbol.for("react.suspense_list"):60120,fe=J?Symbol.for("react.memo"):60115,de=J?Symbol.for("react.lazy"):60116,pe=J?Symbol.for("react.block"):60121,me="function"==typeof Symbol&&Symbol.iterator;function he(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=me&&e[me]||e["@@iterator"])?e:null}function ye(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case oe:return"Profiler";case re:return"StrictMode";case ce:return"Suspense";case se:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case le:return"Context.Consumer";case ie:return"Context.Provider";case ue:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case fe:return ye(e.type);case pe:return ye(e.render);case de:if(e=1===e._status?e._result:null)return ye(e)}return null}function ge(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=ye(e.type);n=null,r&&(n=ye(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(Z,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}function ve(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function we(e){e._valueTracker||(e._valueTracker=function(e){var t=be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function ke(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function xe(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=ve(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Se(e,t){null!=(t=t.checked)&&X(e,"checked",t,!1)}function Ce(e,t){Se(e,t);var n=ve(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Ae(e,t.type,n):t.hasOwnProperty("defaultValue")&&Ae(e,t.type,ve(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Te(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Ae(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function _e(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Pe(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ve(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Oe(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Ne(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(l(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(l(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:ve(n)}}function Me(e,t){var n=ve(t.value),r=ve(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Ie(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ze(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Be(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ze(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var je,Re,Fe=(Re=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((je=je||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=je.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return Re(e,t)}))}:Re);function Le(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function De(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var We={animationend:De("Animation","AnimationEnd"),animationiteration:De("Animation","AnimationIteration"),animationstart:De("Animation","AnimationStart"),transitionend:De("Transition","TransitionEnd")},Ue={},He={};function Ve(e){if(Ue[e])return Ue[e];if(!We[e])return e;var t,n=We[e];for(t in n)if(n.hasOwnProperty(t)&&t in He)return Ue[e]=n[t];return e}A&&(He=document.createElement("div").style,"AnimationEvent"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),"TransitionEvent"in window||delete We.transitionend.transition);var Qe=Ve("animationend"),$e=Ve("animationiteration"),qe=Ve("animationstart"),Ke=Ve("transitionend"),Ge="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ye=new("function"==typeof WeakMap?WeakMap:Map);function Xe(e){var t=Ye.get(e);return void 0===t&&(t=new Map,Ye.set(e,t)),t}function Ze(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Je(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function et(e){if(Ze(e)!==e)throw Error(l(188))}function tt(e){if(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ze(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return et(o),e;if(i===r)return et(o),t;i=i.sibling}throw Error(l(188))}if(n.return!==r.return)n=o,r=i;else{for(var a=!1,u=o.child;u;){if(u===n){a=!0,n=o,r=i;break}if(u===r){a=!0,r=o,n=i;break}u=u.sibling}if(!a){for(u=i.child;u;){if(u===n){a=!0,n=i,r=o;break}if(u===r){a=!0,r=i,n=o;break}u=u.sibling}if(!a)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e),!e)return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function nt(e,t){if(null==t)throw Error(l(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function rt(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var ot=null;function it(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)g(e,t[r],n[r]);else t&&g(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function lt(e){if(null!==e&&(ot=nt(ot,e)),e=ot,ot=null,e){if(rt(e,it),ot)throw Error(l(95));if(s)throw e=f,s=!1,f=null,e}}function at(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ut(e){if(!A)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var ct=[];function st(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>ct.length&&ct.push(e)}function ft(e,t,n,r){if(ct.length){var o=ct.pop();return o.topLevelType=e,o.eventSystemFlags=r,o.nativeEvent=t,o.targetInst=n,o}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function dt(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=Nn(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=at(e.nativeEvent);r=e.topLevelType;var i=e.nativeEvent,l=e.eventSystemFlags;0===n&&(l|=64);for(var a=null,u=0;u<x.length;u++){var c=x[u];c&&(c=c.extractEvents(r,t,i,o,l))&&(a=nt(a,c))}lt(a)}}function pt(e,t,n){if(!n.has(e)){switch(e){case"scroll":qt(t,"scroll",!0);break;case"focus":case"blur":qt(t,"focus",!0),qt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ut(e)&&qt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Ge.indexOf(e)&&$t(e,t)}n.set(e,null)}}var mt,ht,yt,gt=!1,vt=[],bt=null,wt=null,kt=null,xt=new Map,Et=new Map,St=[],Ct="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Tt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function At(e,t,n,r,o){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:o,container:r}}function _t(e,t){switch(e){case"focus":case"blur":bt=null;break;case"dragenter":case"dragleave":wt=null;break;case"mouseover":case"mouseout":kt=null;break;case"pointerover":case"pointerout":xt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Et.delete(t.pointerId)}}function Pt(e,t,n,r,o,i){return null===e||e.nativeEvent!==i?(e=At(t,n,r,o,i),null!==t&&null!==(t=Mn(t))&&ht(t),e):(e.eventSystemFlags|=r,e)}function Ot(e){var t=Nn(e.target);if(null!==t){var n=Ze(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Je(n)))return e.blockedOn=t,void i.unstable_runWithPriority(e.priority,(function(){yt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Nt(e){if(null!==e.blockedOn)return!1;var t=Xt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=Mn(t);return null!==n&&ht(n),e.blockedOn=t,!1}return!0}function Mt(e,t,n){Nt(e)&&n.delete(t)}function It(){for(gt=!1;0<vt.length;){var e=vt[0];if(null!==e.blockedOn){null!==(e=Mn(e.blockedOn))&&mt(e);break}var t=Xt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:vt.shift()}null!==bt&&Nt(bt)&&(bt=null),null!==wt&&Nt(wt)&&(wt=null),null!==kt&&Nt(kt)&&(kt=null),xt.forEach(Mt),Et.forEach(Mt)}function zt(e,t){e.blockedOn===t&&(e.blockedOn=null,gt||(gt=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,It)))}function Bt(e){function t(t){return zt(t,e)}if(0<vt.length){zt(vt[0],e);for(var n=1;n<vt.length;n++){var r=vt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==bt&&zt(bt,e),null!==wt&&zt(wt,e),null!==kt&&zt(kt,e),xt.forEach(t),Et.forEach(t),n=0;n<St.length;n++)(r=St[n]).blockedOn===e&&(r.blockedOn=null);for(;0<St.length&&null===(n=St[0]).blockedOn;)Ot(n),null===n.blockedOn&&St.shift()}var jt={},Rt=new Map,Ft=new Map,Lt=["abort","abort",Qe,"animationEnd",$e,"animationIteration",qe,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ke,"transitionEnd","waiting","waiting"];function Dt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1],i="on"+(o[0].toUpperCase()+o.slice(1));i={phasedRegistrationNames:{bubbled:i,captured:i+"Capture"},dependencies:[r],eventPriority:t},Ft.set(r,t),Rt.set(r,i),jt[o]=i}}Dt("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Dt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Dt(Lt,2);for(var Wt="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Ut=0;Ut<Wt.length;Ut++)Ft.set(Wt[Ut],0);var Ht=i.unstable_UserBlockingPriority,Vt=i.unstable_runWithPriority,Qt=!0;function $t(e,t){qt(t,e,!1)}function qt(e,t,n){var r=Ft.get(t);switch(void 0===r?2:r){case 0:r=Kt.bind(null,t,1,e);break;case 1:r=Gt.bind(null,t,1,e);break;default:r=Yt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Kt(e,t,n,r){F||j();var o=Yt,i=F;F=!0;try{B(o,e,t,n,r)}finally{(F=i)||D()}}function Gt(e,t,n,r){Vt(Ht,Yt.bind(null,e,t,n,r))}function Yt(e,t,n,r){if(Qt)if(0<vt.length&&-1<Ct.indexOf(e))e=At(null,e,t,n,r),vt.push(e);else{var o=Xt(e,t,n,r);if(null===o)_t(e,r);else if(-1<Ct.indexOf(e))e=At(o,e,t,n,r),vt.push(e);else if(!function(e,t,n,r,o){switch(t){case"focus":return bt=Pt(bt,e,t,n,r,o),!0;case"dragenter":return wt=Pt(wt,e,t,n,r,o),!0;case"mouseover":return kt=Pt(kt,e,t,n,r,o),!0;case"pointerover":var i=o.pointerId;return xt.set(i,Pt(xt.get(i)||null,e,t,n,r,o)),!0;case"gotpointercapture":return i=o.pointerId,Et.set(i,Pt(Et.get(i)||null,e,t,n,r,o)),!0}return!1}(o,e,t,n,r)){_t(e,r),e=ft(e,r,null,t);try{W(dt,e)}finally{st(e)}}}}function Xt(e,t,n,r){if(null!==(n=Nn(n=at(r)))){var o=Ze(n);if(null===o)n=null;else{var i=o.tag;if(13===i){if(null!==(n=Je(o)))return n;n=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;n=null}else o!==n&&(n=null)}}e=ft(e,r,n,t);try{W(dt,e)}finally{st(e)}return null}var Zt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Jt=["Webkit","ms","Moz","O"];function en(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Zt.hasOwnProperty(e)&&Zt[e]?(""+t).trim():t+"px"}function tn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=en(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Zt).forEach((function(e){Jt.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Zt[t]=Zt[e]}))}));var nn=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function rn(e,t){if(t){if(nn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(l(62,""))}}function on(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ln="http://www.w3.org/1999/xhtml";function an(e,t){var n=Xe(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=C[t];for(var r=0;r<t.length;r++)pt(t[r],e,n)}function un(){}function cn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function sn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function fn(e,t){var n,r=sn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=sn(r)}}function dn(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?dn(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function pn(){for(var e=window,t=cn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=cn((e=t.contentWindow).document)}return t}function mn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var hn="$",yn="/$",gn="$?",vn="$!",bn=null,wn=null;function kn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function xn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var En="function"==typeof setTimeout?setTimeout:void 0,Sn="function"==typeof clearTimeout?clearTimeout:void 0;function Cn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Tn(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if(n===hn||n===vn||n===gn){if(0===t)return e;t--}else n===yn&&t++}e=e.previousSibling}return null}var An=Math.random().toString(36).slice(2),_n="__reactInternalInstance$"+An,Pn="__reactEventHandlers$"+An,On="__reactContainere$"+An;function Nn(e){var t=e[_n];if(t)return t;for(var n=e.parentNode;n;){if(t=n[On]||n[_n]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Tn(e);null!==e;){if(n=e[_n])return n;e=Tn(e)}return t}n=(e=n).parentNode}return null}function Mn(e){return!(e=e[_n]||e[On])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function In(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function zn(e){return e[Pn]||null}function Bn(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function jn(e,t){var n=e.stateNode;if(!n)return null;var r=m(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,typeof n));return n}function Rn(e,t,n){(t=jn(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=nt(n._dispatchListeners,t),n._dispatchInstances=nt(n._dispatchInstances,e))}function Fn(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Bn(t);for(t=n.length;0<t--;)Rn(n[t],"captured",e);for(t=0;t<n.length;t++)Rn(n[t],"bubbled",e)}}function Ln(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=jn(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=nt(n._dispatchListeners,t),n._dispatchInstances=nt(n._dispatchInstances,e))}function Dn(e){e&&e.dispatchConfig.registrationName&&Ln(e._targetInst,null,e)}function Wn(e){rt(e,Fn)}var Un=null,Hn=null,Vn=null;function Qn(){if(Vn)return Vn;var e,t,n=Hn,r=n.length,o="value"in Un?Un.value:Un.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var l=r-e;for(t=1;t<=l&&n[r-t]===o[i-t];t++);return Vn=o.slice(e,1<t?1-t:void 0)}function $n(){return!0}function qn(){return!1}function Kn(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?$n:qn,this.isPropagationStopped=qn,this}function Gn(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function Yn(e){if(!(e instanceof this))throw Error(l(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Xn(e){e.eventPool=[],e.getPooled=Gn,e.release=Yn}o(Kn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=$n)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=$n)},persist:function(){this.isPersistent=$n},isPersistent:qn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=qn,this._dispatchInstances=this._dispatchListeners=null}}),Kn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Kn.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,Xn(n),n},Xn(Kn);var Zn=Kn.extend({data:null}),Jn=Kn.extend({data:null}),er=[9,13,27,32],tr=A&&"CompositionEvent"in window,nr=null;A&&"documentMode"in document&&(nr=document.documentMode);var rr=A&&"TextEvent"in window&&!nr,or=A&&(!tr||nr&&8<nr&&11>=nr),ir=String.fromCharCode(32),lr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},ar=!1;function ur(e,t){switch(e){case"keyup":return-1!==er.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function cr(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var sr=!1,fr={eventTypes:lr,extractEvents:function(e,t,n,r){var o;if(tr)e:{switch(e){case"compositionstart":var i=lr.compositionStart;break e;case"compositionend":i=lr.compositionEnd;break e;case"compositionupdate":i=lr.compositionUpdate;break e}i=void 0}else sr?ur(e,n)&&(i=lr.compositionEnd):"keydown"===e&&229===n.keyCode&&(i=lr.compositionStart);return i?(or&&"ko"!==n.locale&&(sr||i!==lr.compositionStart?i===lr.compositionEnd&&sr&&(o=Qn()):(Hn="value"in(Un=r)?Un.value:Un.textContent,sr=!0)),i=Zn.getPooled(i,t,n,r),(o||null!==(o=cr(n)))&&(i.data=o),Wn(i),o=i):o=null,(e=rr?function(e,t){switch(e){case"compositionend":return cr(t);case"keypress":return 32!==t.which?null:(ar=!0,ir);case"textInput":return(e=t.data)===ir&&ar?null:e;default:return null}}(e,n):function(e,t){if(sr)return"compositionend"===e||!tr&&ur(e,t)?(e=Qn(),Vn=Hn=Un=null,sr=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return or&&"ko"!==t.locale?null:t.data}}(e,n))?((t=Jn.getPooled(lr.beforeInput,t,n,r)).data=e,Wn(t)):t=null,null===o?t:null===t?o:[o,t]}},dr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!dr[e.type]:"textarea"===t}var mr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function hr(e,t,n){return(e=Kn.getPooled(mr.change,e,t,n)).type="change",M(n),Wn(e),e}var yr=null,gr=null;function vr(e){lt(e)}function br(e){if(ke(In(e)))return e}function wr(e,t){if("change"===e)return t}var kr=!1;function xr(){yr&&(yr.detachEvent("onpropertychange",Er),gr=yr=null)}function Er(e){if("value"===e.propertyName&&br(gr))if(e=hr(gr,e,at(e)),F)lt(e);else{F=!0;try{z(vr,e)}finally{F=!1,D()}}}function Sr(e,t,n){"focus"===e?(xr(),gr=n,(yr=t).attachEvent("onpropertychange",Er)):"blur"===e&&xr()}function Cr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return br(gr)}function Tr(e,t){if("click"===e)return br(t)}function Ar(e,t){if("input"===e||"change"===e)return br(t)}A&&(kr=ut("input")&&(!document.documentMode||9<document.documentMode));var _r={eventTypes:mr,_isInputEventSupported:kr,extractEvents:function(e,t,n,r){var o=t?In(t):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var l=wr;else if(pr(o))if(kr)l=Ar;else{l=Cr;var a=Sr}else(i=o.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(l=Tr);if(l&&(l=l(e,t)))return hr(l,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Ae(o,"number",o.value)}},Pr=Kn.extend({view:null,detail:null}),Or={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Nr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Or[e])&&!!t[e]}function Mr(){return Nr}var Ir=0,zr=0,Br=!1,jr=!1,Rr=Pr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Mr,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Ir;return Ir=e.screenX,Br?"mousemove"===e.type?e.screenX-t:0:(Br=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=zr;return zr=e.screenY,jr?"mousemove"===e.type?e.screenY-t:0:(jr=!0,0)}}),Fr=Rr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Lr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Dr={eventTypes:Lr,extractEvents:function(e,t,n,r,o){var i="mouseover"===e||"pointerover"===e,l="mouseout"===e||"pointerout"===e;if(i&&0==(32&o)&&(n.relatedTarget||n.fromElement)||!l&&!i)return null;if(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,l?(l=t,null!==(t=(t=n.relatedTarget||n.toElement)?Nn(t):null)&&(t!==Ze(t)||5!==t.tag&&6!==t.tag)&&(t=null)):l=null,l===t)return null;if("mouseout"===e||"mouseover"===e)var a=Rr,u=Lr.mouseLeave,c=Lr.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(a=Fr,u=Lr.pointerLeave,c=Lr.pointerEnter,s="pointer");if(e=null==l?i:In(l),i=null==t?i:In(t),(u=a.getPooled(u,l,n,r)).type=s+"leave",u.target=e,u.relatedTarget=i,(n=a.getPooled(c,t,n,r)).type=s+"enter",n.target=i,n.relatedTarget=e,s=t,(r=l)&&s)e:{for(c=s,l=0,e=a=r;e;e=Bn(e))l++;for(e=0,t=c;t;t=Bn(t))e++;for(;0<l-e;)a=Bn(a),l--;for(;0<e-l;)c=Bn(c),e--;for(;l--;){if(a===c||a===c.alternate)break e;a=Bn(a),c=Bn(c)}a=null}else a=null;for(c=a,a=[];r&&r!==c&&(null===(l=r.alternate)||l!==c);)a.push(r),r=Bn(r);for(r=[];s&&s!==c&&(null===(l=s.alternate)||l!==c);)r.push(s),s=Bn(s);for(s=0;s<a.length;s++)Ln(a[s],"bubbled",u);for(s=r.length;0<s--;)Ln(r[s],"captured",n);return 0==(64&o)?[u]:[u,n]}},Wr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Ur=Object.prototype.hasOwnProperty;function Hr(e,t){if(Wr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Ur.call(t,n[r])||!Wr(e[n[r]],t[n[r]]))return!1;return!0}var Vr=A&&"documentMode"in document&&11>=document.documentMode,Qr={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},$r=null,qr=null,Kr=null,Gr=!1;function Yr(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Gr||null==$r||$r!==cn(n)?null:(n="selectionStart"in(n=$r)&&mn(n)?{start:n.selectionStart,end:n.selectionEnd}:{anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Kr&&Hr(Kr,n)?null:(Kr=n,(e=Kn.getPooled(Qr.select,qr,e,t)).type="select",e.target=$r,Wn(e),e))}var Xr={eventTypes:Qr,extractEvents:function(e,t,n,r,o,i){if(!(i=!(o=i||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{o=Xe(o),i=C.onSelect;for(var l=0;l<i.length;l++)if(!o.has(i[l])){o=!1;break e}o=!0}i=!o}if(i)return null;switch(o=t?In(t):window,e){case"focus":(pr(o)||"true"===o.contentEditable)&&($r=o,qr=t,Kr=null);break;case"blur":Kr=qr=$r=null;break;case"mousedown":Gr=!0;break;case"contextmenu":case"mouseup":case"dragend":return Gr=!1,Yr(n,r);case"selectionchange":if(Vr)break;case"keydown":case"keyup":return Yr(n,r)}return null}},Zr=Kn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Jr=Kn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),eo=Pr.extend({relatedTarget:null});function to(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var no={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},ro={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},oo=Pr.extend({key:function(e){if(e.key){var t=no[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=to(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?ro[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Mr,charCode:function(e){return"keypress"===e.type?to(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?to(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),io=Rr.extend({dataTransfer:null}),lo=Pr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Mr}),ao=Kn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),uo=Rr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),co={eventTypes:jt,extractEvents:function(e,t,n,r){var o=Rt.get(e);if(!o)return null;switch(e){case"keypress":if(0===to(n))return null;case"keydown":case"keyup":e=oo;break;case"blur":case"focus":e=eo;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Rr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=io;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=lo;break;case Qe:case $e:case qe:e=Zr;break;case Ke:e=ao;break;case"scroll":e=Pr;break;case"wheel":e=uo;break;case"copy":case"cut":case"paste":e=Jr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Fr;break;default:e=Kn}return Wn(t=e.getPooled(o,t,n,r)),t}};if(v)throw Error(l(101));v=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),w(),m=zn,h=Mn,y=In,T({SimpleEventPlugin:co,EnterLeaveEventPlugin:Dr,ChangeEventPlugin:_r,SelectEventPlugin:Xr,BeforeInputEventPlugin:fr});var so=[],fo=-1;function po(e){0>fo||(e.current=so[fo],so[fo]=null,fo--)}function mo(e,t){fo++,so[fo]=e.current,e.current=t}var ho={},yo={current:ho},go={current:!1},vo=ho;function bo(e,t){var n=e.type.contextTypes;if(!n)return ho;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function wo(e){return null!=e.childContextTypes}function ko(){po(go),po(yo)}function xo(e,t,n){if(yo.current!==ho)throw Error(l(168));mo(yo,t),mo(go,n)}function Eo(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw Error(l(108,ye(t)||"Unknown",i));return o({},n,{},r)}function So(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ho,vo=yo.current,mo(yo,e),mo(go,go.current),!0}function Co(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(e=Eo(e,t,vo),r.__reactInternalMemoizedMergedChildContext=e,po(go),po(yo),mo(yo,e)):po(go),mo(go,n)}var To=i.unstable_runWithPriority,Ao=i.unstable_scheduleCallback,_o=i.unstable_cancelCallback,Po=i.unstable_requestPaint,Oo=i.unstable_now,No=i.unstable_getCurrentPriorityLevel,Mo=i.unstable_ImmediatePriority,Io=i.unstable_UserBlockingPriority,zo=i.unstable_NormalPriority,Bo=i.unstable_LowPriority,jo=i.unstable_IdlePriority,Ro={},Fo=i.unstable_shouldYield,Lo=void 0!==Po?Po:function(){},Do=null,Wo=null,Uo=!1,Ho=Oo(),Vo=1e4>Ho?Oo:function(){return Oo()-Ho};function Qo(){switch(No()){case Mo:return 99;case Io:return 98;case zo:return 97;case Bo:return 96;case jo:return 95;default:throw Error(l(332))}}function $o(e){switch(e){case 99:return Mo;case 98:return Io;case 97:return zo;case 96:return Bo;case 95:return jo;default:throw Error(l(332))}}function qo(e,t){return e=$o(e),To(e,t)}function Ko(e,t,n){return e=$o(e),Ao(e,t,n)}function Go(e){return null===Do?(Do=[e],Wo=Ao(Mo,Xo)):Do.push(e),Ro}function Yo(){if(null!==Wo){var e=Wo;Wo=null,_o(e)}Xo()}function Xo(){if(!Uo&&null!==Do){Uo=!0;var e=0;try{var t=Do;qo(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Do=null}catch(t){throw null!==Do&&(Do=Do.slice(e+1)),Ao(Mo,Yo),t}finally{Uo=!1}}}function Zo(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function Jo(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var ei={current:null},ti=null,ni=null,ri=null;function oi(){ri=ni=ti=null}function ii(e){var t=ei.current;po(ei),e.type._context._currentValue=t}function li(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function ai(e,t){ti=e,ri=ni=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(zl=!0),e.firstContext=null)}function ui(e,t){if(ri!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(ri=e,t=1073741823),t={context:e,observedBits:t,next:null},null===ni){if(null===ti)throw Error(l(308));ni=t,ti.dependencies={expirationTime:0,firstContext:t,responders:null}}else ni=ni.next=t;return e._currentValue}var ci=!1;function si(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function fi(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function di(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function pi(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function mi(e,t){var n=e.alternate;null!==n&&fi(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function hi(e,t,n,r){var i=e.updateQueue;ci=!1;var l=i.baseQueue,a=i.shared.pending;if(null!==a){if(null!==l){var u=l.next;l.next=a.next,a.next=u}l=a,i.shared.pending=null,null!==(u=e.alternate)&&null!==(u=u.updateQueue)&&(u.baseQueue=a)}if(null!==l){u=l.next;var c=i.baseState,s=0,f=null,d=null,p=null;if(null!==u)for(var m=u;;){if((a=m.expirationTime)<r){var h={expirationTime:m.expirationTime,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null};null===p?(d=p=h,f=c):p=p.next=h,a>s&&(s=a)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null}),wu(a,m.suspenseConfig);e:{var y=e,g=m;switch(a=t,h=n,g.tag){case 1:if("function"==typeof(y=g.payload)){c=y.call(h,c,a);break e}c=y;break e;case 3:y.effectTag=-4097&y.effectTag|64;case 0:if(null==(a="function"==typeof(y=g.payload)?y.call(h,c,a):y))break e;c=o({},c,a);break e;case 2:ci=!0}}null!==m.callback&&(e.effectTag|=32,null===(a=i.effects)?i.effects=[m]:a.push(m))}if(null===(m=m.next)||m===u){if(null===(a=i.shared.pending))break;m=l.next=a.next,a.next=u,i.baseQueue=l=a,i.shared.pending=null}}null===p?f=c:p.next=d,i.baseState=f,i.baseQueue=p,ku(s),e.expirationTime=s,e.memoizedState=c}}function yi(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=o,o=n,"function"!=typeof r)throw Error(l(191,r));r.call(o)}}}var gi=Y.ReactCurrentBatchConfig,vi=(new r.Component).refs;function bi(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var wi={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Ze(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=au(),o=gi.suspense;(o=di(r=uu(r,e,o),o)).payload=t,null!=n&&(o.callback=n),pi(e,o),cu(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=au(),o=gi.suspense;(o=di(r=uu(r,e,o),o)).tag=1,o.payload=t,null!=n&&(o.callback=n),pi(e,o),cu(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=au(),r=gi.suspense;(r=di(n=uu(n,e,r),r)).tag=2,null!=t&&(r.callback=t),pi(e,r),cu(e,n)}};function ki(e,t,n,r,o,i,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,l):!(t.prototype&&t.prototype.isPureReactComponent&&Hr(n,r)&&Hr(o,i))}function xi(e,t,n){var r=!1,o=ho,i=t.contextType;return"object"==typeof i&&null!==i?i=ui(i):(o=wo(t)?vo:yo.current,i=(r=null!=(r=t.contextTypes))?bo(e,o):ho),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=wi,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function Ei(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&wi.enqueueReplaceState(t,t.state,null)}function Si(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=vi,si(e);var i=t.contextType;"object"==typeof i&&null!==i?o.context=ui(i):(i=wo(t)?vo:yo.current,o.context=bo(e,i)),hi(e,n,o,r),o.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(bi(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&wi.enqueueReplaceState(o,o.state,null),hi(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var Ci=Array.isArray;function Ti(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var r=n.stateNode}if(!r)throw Error(l(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=r.refs;t===vi&&(t=r.refs={}),null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function Ai(e,t){if("textarea"!==e.type)throw Error(l(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function _i(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Wu(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function a(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Vu(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=Ti(e,t,n),r.return=e,r):((r=Uu(n.type,n.key,n.props,null,e.mode,r)).ref=Ti(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Qu(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=Hu(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Vu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=Uu(t.type,t.key,t.props,null,e.mode,n)).ref=Ti(e,null,t),n.return=e,n;case te:return(t=Qu(t,e.mode,n)).return=e,t}if(Ci(t)||he(t))return(t=Hu(t,e.mode,n,null)).return=e,t;Ai(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===o?n.type===ne?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case te:return n.key===o?s(e,t,n,r):null}if(Ci(n)||he(n))return null!==o?null:f(e,t,n,r,null);Ai(e,n)}return null}function m(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case te:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(Ci(r)||he(r))return f(t,e=e.get(n)||null,r,o,null);Ai(t,r)}return null}function h(o,l,a,u){for(var c=null,s=null,f=l,h=l=0,y=null;null!==f&&h<a.length;h++){f.index>h?(y=f,f=null):y=f.sibling;var g=p(o,f,a[h],u);if(null===g){null===f&&(f=y);break}e&&f&&null===g.alternate&&t(o,f),l=i(g,l,h),null===s?c=g:s.sibling=g,s=g,f=y}if(h===a.length)return n(o,f),c;if(null===f){for(;h<a.length;h++)null!==(f=d(o,a[h],u))&&(l=i(f,l,h),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);h<a.length;h++)null!==(y=m(f,o,h,a[h],u))&&(e&&null!==y.alternate&&f.delete(null===y.key?h:y.key),l=i(y,l,h),null===s?c=y:s.sibling=y,s=y);return e&&f.forEach((function(e){return t(o,e)})),c}function y(o,a,u,c){var s=he(u);if("function"!=typeof s)throw Error(l(150));if(null==(u=s.call(u)))throw Error(l(151));for(var f=s=null,h=a,y=a=0,g=null,v=u.next();null!==h&&!v.done;y++,v=u.next()){h.index>y?(g=h,h=null):g=h.sibling;var b=p(o,h,v.value,c);if(null===b){null===h&&(h=g);break}e&&h&&null===b.alternate&&t(o,h),a=i(b,a,y),null===f?s=b:f.sibling=b,f=b,h=g}if(v.done)return n(o,h),s;if(null===h){for(;!v.done;y++,v=u.next())null!==(v=d(o,v.value,c))&&(a=i(v,a,y),null===f?s=v:f.sibling=v,f=v);return s}for(h=r(o,h);!v.done;y++,v=u.next())null!==(v=m(h,o,y,v.value,c))&&(e&&null!==v.alternate&&h.delete(null===v.key?y:v.key),a=i(v,a,y),null===f?s=v:f.sibling=v,f=v);return e&&h.forEach((function(e){return t(o,e)})),s}return function(e,r,i,u){var c="object"==typeof i&&null!==i&&i.type===ne&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case ee:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){if(7===c.tag){if(i.type===ne){n(e,c.sibling),(r=o(c,i.props.children)).return=e,e=r;break e}}else if(c.elementType===i.type){n(e,c.sibling),(r=o(c,i.props)).ref=Ti(e,c,i),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}i.type===ne?((r=Hu(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=Uu(i.type,i.key,i.props,null,e.mode,u)).ref=Ti(e,r,i),u.return=e,e=u)}return a(e);case te:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Qu(i,e.mode,u)).return=e,e=r}return a(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Vu(i,e.mode,u)).return=e,e=r),a(e);if(Ci(i))return h(e,r,i,u);if(he(i))return y(e,r,i,u);if(s&&Ai(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:throw e=e.type,Error(l(152,e.displayName||e.name||"Component"))}return n(e,r)}}var Pi=_i(!0),Oi=_i(!1),Ni={},Mi={current:Ni},Ii={current:Ni},zi={current:Ni};function Bi(e){if(e===Ni)throw Error(l(174));return e}function ji(e,t){switch(mo(zi,t),mo(Ii,e),mo(Mi,Ni),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Be(null,"");break;default:t=Be(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}po(Mi),mo(Mi,t)}function Ri(){po(Mi),po(Ii),po(zi)}function Fi(e){Bi(zi.current);var t=Bi(Mi.current),n=Be(t,e.type);t!==n&&(mo(Ii,e),mo(Mi,n))}function Li(e){Ii.current===e&&(po(Mi),po(Ii))}var Di={current:0};function Wi(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||n.data===gn||n.data===vn))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Ui(e,t){return{responder:e,props:t}}var Hi=Y.ReactCurrentDispatcher,Vi=Y.ReactCurrentBatchConfig,Qi=0,$i=null,qi=null,Ki=null,Gi=!1;function Yi(){throw Error(l(321))}function Xi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Wr(e[n],t[n]))return!1;return!0}function Zi(e,t,n,r,o,i){if(Qi=i,$i=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Hi.current=null===e||null===e.memoizedState?kl:xl,e=n(r,o),t.expirationTime===Qi){i=0;do{if(t.expirationTime=0,!(25>i))throw Error(l(301));i+=1,Ki=qi=null,t.updateQueue=null,Hi.current=El,e=n(r,o)}while(t.expirationTime===Qi)}if(Hi.current=wl,t=null!==qi&&null!==qi.next,Qi=0,Ki=qi=$i=null,Gi=!1,t)throw Error(l(300));return e}function Ji(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ki?$i.memoizedState=Ki=e:Ki=Ki.next=e,Ki}function el(){if(null===qi){var e=$i.alternate;e=null!==e?e.memoizedState:null}else e=qi.next;var t=null===Ki?$i.memoizedState:Ki.next;if(null!==t)Ki=t,qi=e;else{if(null===e)throw Error(l(310));e={memoizedState:(qi=e).memoizedState,baseState:qi.baseState,baseQueue:qi.baseQueue,queue:qi.queue,next:null},null===Ki?$i.memoizedState=Ki=e:Ki=Ki.next=e}return Ki}function tl(e,t){return"function"==typeof t?t(e):t}function nl(e){var t=el(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=qi,o=r.baseQueue,i=n.pending;if(null!==i){if(null!==o){var a=o.next;o.next=i.next,i.next=a}r.baseQueue=o=i,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var u=a=i=null,c=o;do{var s=c.expirationTime;if(s<Qi){var f={expirationTime:c.expirationTime,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(a=u=f,i=r):u=u.next=f,s>$i.expirationTime&&($i.expirationTime=s,ku(s))}else null!==u&&(u=u.next={expirationTime:1073741823,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),wu(s,c.suspenseConfig),r=c.eagerReducer===e?c.eagerState:e(r,c.action);c=c.next}while(null!==c&&c!==o);null===u?i=r:u.next=a,Wr(r,t.memoizedState)||(zl=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function rl(e){var t=el(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,i=t.memoizedState;if(null!==o){n.pending=null;var a=o=o.next;do{i=e(i,a.action),a=a.next}while(a!==o);Wr(i,t.memoizedState)||(zl=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function ol(e){var t=Ji();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:tl,lastRenderedState:e}).dispatch=bl.bind(null,$i,e),[t.memoizedState,e]}function il(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=$i.updateQueue)?(t={lastEffect:null},$i.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function ll(){return el().memoizedState}function al(e,t,n,r){var o=Ji();$i.effectTag|=e,o.memoizedState=il(1|t,n,void 0,void 0===r?null:r)}function ul(e,t,n,r){var o=el();r=void 0===r?null:r;var i=void 0;if(null!==qi){var l=qi.memoizedState;if(i=l.destroy,null!==r&&Xi(r,l.deps))return void il(t,n,i,r)}$i.effectTag|=e,o.memoizedState=il(1|t,n,i,r)}function cl(e,t){return al(516,4,e,t)}function sl(e,t){return ul(516,4,e,t)}function fl(e,t){return ul(4,2,e,t)}function dl(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function pl(e,t,n){return n=null!=n?n.concat([e]):null,ul(4,2,dl.bind(null,t,e),n)}function ml(){}function hl(e,t){return Ji().memoizedState=[e,void 0===t?null:t],e}function yl(e,t){var n=el();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Xi(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function gl(e,t){var n=el();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Xi(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function vl(e,t,n){var r=Qo();qo(98>r?98:r,(function(){e(!0)})),qo(97<r?97:r,(function(){var r=Vi.suspense;Vi.suspense=void 0===t?null:t;try{e(!1),n()}finally{Vi.suspense=r}}))}function bl(e,t,n){var r=au(),o=gi.suspense;o={expirationTime:r=uu(r,e,o),suspenseConfig:o,action:n,eagerReducer:null,eagerState:null,next:null};var i=t.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),t.pending=o,i=e.alternate,e===$i||null!==i&&i===$i)Gi=!0,o.expirationTime=Qi,$i.expirationTime=Qi;else{if(0===e.expirationTime&&(null===i||0===i.expirationTime)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,a=i(l,n);if(o.eagerReducer=i,o.eagerState=a,Wr(a,l))return}catch(e){}cu(e,r)}}var wl={readContext:ui,useCallback:Yi,useContext:Yi,useEffect:Yi,useImperativeHandle:Yi,useLayoutEffect:Yi,useMemo:Yi,useReducer:Yi,useRef:Yi,useState:Yi,useDebugValue:Yi,useResponder:Yi,useDeferredValue:Yi,useTransition:Yi},kl={readContext:ui,useCallback:hl,useContext:ui,useEffect:cl,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,al(4,2,dl.bind(null,t,e),n)},useLayoutEffect:function(e,t){return al(4,2,e,t)},useMemo:function(e,t){var n=Ji();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Ji();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=bl.bind(null,$i,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Ji().memoizedState=e},useState:ol,useDebugValue:ml,useResponder:Ui,useDeferredValue:function(e,t){var n=ol(e),r=n[0],o=n[1];return cl((function(){var n=Vi.suspense;Vi.suspense=void 0===t?null:t;try{o(e)}finally{Vi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=ol(!1),n=t[0];return t=t[1],[hl(vl.bind(null,t,e),[t,e]),n]}},xl={readContext:ui,useCallback:yl,useContext:ui,useEffect:sl,useImperativeHandle:pl,useLayoutEffect:fl,useMemo:gl,useReducer:nl,useRef:ll,useState:function(){return nl(tl)},useDebugValue:ml,useResponder:Ui,useDeferredValue:function(e,t){var n=nl(tl),r=n[0],o=n[1];return sl((function(){var n=Vi.suspense;Vi.suspense=void 0===t?null:t;try{o(e)}finally{Vi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=nl(tl),n=t[0];return t=t[1],[yl(vl.bind(null,t,e),[t,e]),n]}},El={readContext:ui,useCallback:yl,useContext:ui,useEffect:sl,useImperativeHandle:pl,useLayoutEffect:fl,useMemo:gl,useReducer:rl,useRef:ll,useState:function(){return rl(tl)},useDebugValue:ml,useResponder:Ui,useDeferredValue:function(e,t){var n=rl(tl),r=n[0],o=n[1];return sl((function(){var n=Vi.suspense;Vi.suspense=void 0===t?null:t;try{o(e)}finally{Vi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=rl(tl),n=t[0];return t=t[1],[yl(vl.bind(null,t,e),[t,e]),n]}},Sl=null,Cl=null,Tl=!1;function Al(e,t){var n=Lu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function _l(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function Pl(e){if(Tl){var t=Cl;if(t){var n=t;if(!_l(e,t)){if(!(t=Cn(n.nextSibling))||!_l(e,t))return e.effectTag=-1025&e.effectTag|2,Tl=!1,void(Sl=e);Al(Sl,n)}Sl=e,Cl=Cn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,Tl=!1,Sl=e}}function Ol(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Sl=e}function Nl(e){if(e!==Sl)return!1;if(!Tl)return Ol(e),Tl=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!xn(t,e.memoizedProps))for(t=Cl;t;)Al(e,t),t=Cn(t.nextSibling);if(Ol(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if(n===yn){if(0===t){Cl=Cn(e.nextSibling);break e}t--}else n!==hn&&n!==vn&&n!==gn||t++}e=e.nextSibling}Cl=null}}else Cl=Sl?Cn(e.stateNode.nextSibling):null;return!0}function Ml(){Cl=Sl=null,Tl=!1}var Il=Y.ReactCurrentOwner,zl=!1;function Bl(e,t,n,r){t.child=null===e?Oi(t,null,n,r):Pi(t,e.child,n,r)}function jl(e,t,n,r,o){n=n.render;var i=t.ref;return ai(t,o),r=Zi(e,t,n,r,i,o),null===e||zl?(t.effectTag|=1,Bl(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Jl(e,t,o))}function Rl(e,t,n,r,o,i){if(null===e){var l=n.type;return"function"!=typeof l||Du(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Uu(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,Fl(e,t,l,r,o,i))}return l=e.child,o<i&&(o=l.memoizedProps,(n=null!==(n=n.compare)?n:Hr)(o,r)&&e.ref===t.ref)?Jl(e,t,i):(t.effectTag|=1,(e=Wu(l,r)).ref=t.ref,e.return=t,t.child=e)}function Fl(e,t,n,r,o,i){return null!==e&&Hr(e.memoizedProps,r)&&e.ref===t.ref&&(zl=!1,o<i)?(t.expirationTime=e.expirationTime,Jl(e,t,i)):Dl(e,t,n,r,i)}function Ll(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Dl(e,t,n,r,o){var i=wo(n)?vo:yo.current;return i=bo(t,i),ai(t,o),n=Zi(e,t,n,r,i,o),null===e||zl?(t.effectTag|=1,Bl(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Jl(e,t,o))}function Wl(e,t,n,r,o){if(wo(n)){var i=!0;So(t)}else i=!1;if(ai(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),xi(t,n,r),Si(t,n,r,o),r=!0;else if(null===e){var l=t.stateNode,a=t.memoizedProps;l.props=a;var u=l.context,c=n.contextType;c="object"==typeof c&&null!==c?ui(c):bo(t,c=wo(n)?vo:yo.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof l.getSnapshotBeforeUpdate;f||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(a!==r||u!==c)&&Ei(t,l,r,c),ci=!1;var d=t.memoizedState;l.state=d,hi(t,r,l,o),u=t.memoizedState,a!==r||d!==u||go.current||ci?("function"==typeof s&&(bi(t,n,s,r),u=t.memoizedState),(a=ci||ki(t,n,a,r,d,u,c))?(f||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.effectTag|=4)):("function"==typeof l.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),l.props=r,l.state=u,l.context=c,r=a):("function"==typeof l.componentDidMount&&(t.effectTag|=4),r=!1)}else l=t.stateNode,fi(e,t),a=t.memoizedProps,l.props=t.type===t.elementType?a:Jo(t.type,a),u=l.context,c="object"==typeof(c=n.contextType)&&null!==c?ui(c):bo(t,c=wo(n)?vo:yo.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(a!==r||u!==c)&&Ei(t,l,r,c),ci=!1,u=t.memoizedState,l.state=u,hi(t,r,l,o),d=t.memoizedState,a!==r||u!==d||go.current||ci?("function"==typeof s&&(bi(t,n,s,r),d=t.memoizedState),(s=ci||ki(t,n,a,r,u,d,c))?(f||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,d,c),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof l.componentDidUpdate&&(t.effectTag|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof l.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),l.props=r,l.state=d,l.context=c,r=s):("function"!=typeof l.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Ul(e,t,n,r,i,o)}function Ul(e,t,n,r,o,i){Ll(e,t);var l=0!=(64&t.effectTag);if(!r&&!l)return o&&Co(t,n,!1),Jl(e,t,i);r=t.stateNode,Il.current=t;var a=l&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&l?(t.child=Pi(t,e.child,null,i),t.child=Pi(t,null,a,i)):Bl(e,t,a,i),t.memoizedState=r.state,o&&Co(t,n,!0),t.child}function Hl(e){var t=e.stateNode;t.pendingContext?xo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&xo(0,t.context,!1),ji(e,t.containerInfo)}var Vl,Ql,$l,ql,Kl={dehydrated:null,retryTime:0};function Gl(e,t,n){var r,o=t.mode,i=t.pendingProps,l=Di.current,a=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&l)&&(null===e||null!==e.memoizedState)),r?(a=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(l|=1),mo(Di,1&l),null===e){if(void 0!==i.fallback&&Pl(t),a){if(a=i.fallback,(i=Hu(null,o,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Hu(a,o,n,null)).return=t,i.sibling=n,t.memoizedState=Kl,t.child=i,n}return o=i.children,t.memoizedState=null,t.child=Oi(t,null,o,n)}if(null!==e.memoizedState){if(o=(e=e.child).sibling,a){if(i=i.fallback,(n=Wu(e,e.pendingProps)).return=t,0==(2&t.mode)&&(a=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=a;null!==a;)a.return=n,a=a.sibling;return(o=Wu(o,i)).return=t,n.sibling=o,n.childExpirationTime=0,t.memoizedState=Kl,t.child=n,o}return n=Pi(t,e.child,i.children,n),t.memoizedState=null,t.child=n}if(e=e.child,a){if(a=i.fallback,(i=Hu(null,o,0,null)).return=t,i.child=e,null!==e&&(e.return=i),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Hu(a,o,n,null)).return=t,i.sibling=n,n.effectTag|=2,i.childExpirationTime=0,t.memoizedState=Kl,t.child=i,n}return t.memoizedState=null,t.child=Pi(t,e,i.children,n)}function Yl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),li(e.return,t)}function Xl(e,t,n,r,o,i){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:o,lastEffect:i}:(l.isBackwards=t,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=n,l.tailExpiration=0,l.tailMode=o,l.lastEffect=i)}function Zl(e,t,n){var r=t.pendingProps,o=r.revealOrder,i=r.tail;if(Bl(e,t,r.children,n),0!=(2&(r=Di.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Yl(e,n);else if(19===e.tag)Yl(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(mo(Di,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Wi(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),Xl(t,!1,o,n,i,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Wi(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}Xl(t,!0,n,null,i,t.lastEffect);break;case"together":Xl(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Jl(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&ku(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=Wu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Wu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function ea(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ta(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:case 17:return wo(t.type)&&ko(),null;case 3:return Ri(),po(go),po(yo),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!Nl(t)||(t.effectTag|=4),Ql(t),null;case 5:Li(t),n=Bi(zi.current);var i=t.type;if(null!==e&&null!=t.stateNode)$l(e,t,i,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(l(166));return null}if(e=Bi(Mi.current),Nl(t)){r=t.stateNode,i=t.type;var a=t.memoizedProps;switch(r[_n]=t,r[Pn]=a,i){case"iframe":case"object":case"embed":$t("load",r);break;case"video":case"audio":for(e=0;e<Ge.length;e++)$t(Ge[e],r);break;case"source":$t("error",r);break;case"img":case"image":case"link":$t("error",r),$t("load",r);break;case"form":$t("reset",r),$t("submit",r);break;case"details":$t("toggle",r);break;case"input":Ee(r,a),$t("invalid",r),an(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!a.multiple},$t("invalid",r),an(n,"onChange");break;case"textarea":Ne(r,a),$t("invalid",r),an(n,"onChange")}for(var u in rn(i,a),e=null,a)if(a.hasOwnProperty(u)){var c=a[u];"children"===u?"string"==typeof c?r.textContent!==c&&(e=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(e=["children",""+c]):S.hasOwnProperty(u)&&null!=c&&an(n,u)}switch(i){case"input":we(r),Te(r,a,!0);break;case"textarea":we(r),Ie(r);break;case"select":case"option":break;default:"function"==typeof a.onClick&&(r.onclick=un)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(u=9===n.nodeType?n:n.ownerDocument,e===ln&&(e=ze(i)),e===ln?"script"===i?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(i,{is:r.is}):(e=u.createElement(i),"select"===i&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,i),e[_n]=t,e[Pn]=r,Vl(e,t,!1,!1),t.stateNode=e,u=on(i,r),i){case"iframe":case"object":case"embed":$t("load",e),c=r;break;case"video":case"audio":for(c=0;c<Ge.length;c++)$t(Ge[c],e);c=r;break;case"source":$t("error",e),c=r;break;case"img":case"image":case"link":$t("error",e),$t("load",e),c=r;break;case"form":$t("reset",e),$t("submit",e),c=r;break;case"details":$t("toggle",e),c=r;break;case"input":Ee(e,r),c=xe(e,r),$t("invalid",e),an(n,"onChange");break;case"option":c=_e(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},c=o({},r,{value:void 0}),$t("invalid",e),an(n,"onChange");break;case"textarea":Ne(e,r),c=Oe(e,r),$t("invalid",e),an(n,"onChange");break;default:c=r}rn(i,c);var s=c;for(a in s)if(s.hasOwnProperty(a)){var f=s[a];"style"===a?tn(e,f):"dangerouslySetInnerHTML"===a?null!=(f=f?f.__html:void 0)&&Fe(e,f):"children"===a?"string"==typeof f?("textarea"!==i||""!==f)&&Le(e,f):"number"==typeof f&&Le(e,""+f):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(S.hasOwnProperty(a)?null!=f&&an(n,a):null!=f&&X(e,a,f,u))}switch(i){case"input":we(e),Te(e,r,!1);break;case"textarea":we(e),Ie(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ve(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Pe(e,!!r.multiple,n,!1):null!=r.defaultValue&&Pe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof c.onClick&&(e.onclick=un)}kn(i,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)ql(e,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(l(166));n=Bi(zi.current),Bi(Mi.current),Nl(t)?(n=t.stateNode,r=t.memoizedProps,n[_n]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[_n]=t,t.stateNode=n)}return null;case 13:return po(Di),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&Nl(t):(r=null!==(i=e.memoizedState),n||null===i||null!==(i=e.child.sibling)&&(null!==(a=t.firstEffect)?(t.firstEffect=i,i.nextEffect=a):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Di.current)?Wa===Na&&(Wa=za):(Wa!==Na&&Wa!==za||(Wa=Ba),0!==$a&&null!==Fa&&(Ku(Fa,Da),Gu(Fa,$a)))),(n||r)&&(t.effectTag|=4),null);case 4:return Ri(),Ql(t),null;case 10:return ii(t),null;case 19:if(po(Di),null===(r=t.memoizedState))return null;if(i=0!=(64&t.effectTag),null===(a=r.rendering)){if(i)ea(r,!1);else if(Wa!==Na||null!==e&&0!=(64&e.effectTag))for(a=t.child;null!==a;){if(null!==(e=Wi(a))){for(t.effectTag|=64,ea(r,!1),null!==(i=e.updateQueue)&&(t.updateQueue=i,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)a=n,(i=r).effectTag&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(e=i.alternate)?(i.childExpirationTime=0,i.expirationTime=a,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null):(i.childExpirationTime=e.childExpirationTime,i.expirationTime=e.expirationTime,i.child=e.child,i.memoizedProps=e.memoizedProps,i.memoizedState=e.memoizedState,i.updateQueue=e.updateQueue,a=e.dependencies,i.dependencies=null===a?null:{expirationTime:a.expirationTime,firstContext:a.firstContext,responders:a.responders}),r=r.sibling;return mo(Di,1&Di.current|2),t.child}a=a.sibling}}else{if(!i)if(null!==(e=Wi(a))){if(t.effectTag|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),ea(r,!0),null===r.tail&&"hidden"===r.tailMode&&!a.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Vo()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,i=!0,ea(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(a.sibling=t.child,t.child=a):(null!==(n=r.last)?n.sibling=a:t.child=a,r.last=a)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Vo()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Vo(),n.sibling=null,t=Di.current,mo(Di,i?1&t|2:1&t),n):null}throw Error(l(156,t.tag))}function na(e){switch(e.tag){case 1:wo(e.type)&&ko();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Ri(),po(go),po(yo),0!=(64&(t=e.effectTag)))throw Error(l(285));return e.effectTag=-4097&t|64,e;case 5:return Li(e),null;case 13:return po(Di),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return po(Di),null;case 4:return Ri(),null;case 10:return ii(e),null;default:return null}}function ra(e,t){return{value:e,source:t,stack:ge(t)}}Vl=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ql=function(){},$l=function(e,t,n,r,i){var l=e.memoizedProps;if(l!==r){var a,u,c=t.stateNode;switch(Bi(Mi.current),e=null,n){case"input":l=xe(c,l),r=xe(c,r),e=[];break;case"option":l=_e(c,l),r=_e(c,r),e=[];break;case"select":l=o({},l,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":l=Oe(c,l),r=Oe(c,r),e=[];break;default:"function"!=typeof l.onClick&&"function"==typeof r.onClick&&(c.onclick=un)}for(a in rn(n,r),n=null,l)if(!r.hasOwnProperty(a)&&l.hasOwnProperty(a)&&null!=l[a])if("style"===a)for(u in c=l[a])c.hasOwnProperty(u)&&(n||(n={}),n[u]="");else"dangerouslySetInnerHTML"!==a&&"children"!==a&&"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(S.hasOwnProperty(a)?e||(e=[]):(e=e||[]).push(a,null));for(a in r){var s=r[a];if(c=null!=l?l[a]:void 0,r.hasOwnProperty(a)&&s!==c&&(null!=s||null!=c))if("style"===a)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(n||(n={}),n[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(n||(n={}),n[u]=s[u])}else n||(e||(e=[]),e.push(a,n)),n=s;else"dangerouslySetInnerHTML"===a?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(a,s)):"children"===a?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(a,""+s):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&(S.hasOwnProperty(a)?(null!=s&&an(i,a),e||c===s||(e=[])):(e=e||[]).push(a,s))}n&&(e=e||[]).push("style",n),i=e,(t.updateQueue=i)&&(t.effectTag|=4)}},ql=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var oa="function"==typeof WeakSet?WeakSet:Set;function ia(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ge(n)),null!==n&&ye(n.type),t=t.value,null!==e&&1===e.tag&&ye(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function la(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Iu(e,t)}else t.current=null}function aa(e,t){switch(t.tag){case 0:case 11:case 15:case 22:case 3:case 5:case 6:case 4:case 17:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Jo(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return}throw Error(l(163))}function ua(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function ca(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function sa(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void ca(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:Jo(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&yi(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:case 1:e=n.child.stateNode}yi(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&kn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:case 19:case 17:case 20:case 21:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Bt(n)))))}throw Error(l(163))}function fa(e,t,n){switch("function"==typeof Ru&&Ru(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;qo(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var o=t;try{n()}catch(e){Iu(o,e)}}e=e.next}while(e!==r)}))}break;case 1:la(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Iu(e,t)}}(t,n);break;case 5:la(t);break;case 4:ga(e,t,n)}}function da(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&da(t)}function pa(e){return 5===e.tag||3===e.tag||4===e.tag}function ma(e){e:{for(var t=e.return;null!==t;){if(pa(t)){var n=t;break e}t=t.return}throw Error(l(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(l(161))}16&n.effectTag&&(Le(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||pa(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?ha(e,n,t):ya(e,n,t)}function ha(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=un));else if(4!==r&&null!==(e=e.child))for(ha(e,t,n),e=e.sibling;null!==e;)ha(e,t,n),e=e.sibling}function ya(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(ya(e,t,n),e=e.sibling;null!==e;)ya(e,t,n),e=e.sibling}function ga(e,t,n){for(var r,o,i=t,a=!1;;){if(!a){a=i.return;e:for(;;){if(null===a)throw Error(l(160));switch(r=a.stateNode,a.tag){case 5:o=!1;break e;case 3:case 4:r=r.containerInfo,o=!0;break e}a=a.return}a=!0}if(5===i.tag||6===i.tag){e:for(var u=e,c=i,s=n,f=c;;)if(fa(u,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===c)break e;for(;null===f.sibling;){if(null===f.return||f.return===c)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}o?(u=r,c=i.stateNode,8===u.nodeType?u.parentNode.removeChild(c):u.removeChild(c)):r.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,o=!0,i.child.return=i,i=i.child;continue}}else if(fa(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(a=!1)}i.sibling.return=i.return,i=i.sibling}}function va(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void ua(3,t);case 1:case 12:case 17:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[Pn]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Se(n,r),on(e,o),t=on(e,r),o=0;o<i.length;o+=2){var a=i[o],u=i[o+1];"style"===a?tn(n,u):"dangerouslySetInnerHTML"===a?Fe(n,u):"children"===a?Le(n,u):X(n,a,u,t)}switch(e){case"input":Ce(n,r);break;case"textarea":Me(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Pe(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Pe(n,!!r.multiple,r.defaultValue,!0):Pe(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(l(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,Bt(t.containerInfo)));case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Ka=Vo()),null!==n)e:for(e=n;;){if(5===e.tag)i=e.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,i.style.display=en("display",o));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void ba(t);case 19:return void ba(t)}throw Error(l(163))}function ba(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new oa),t.forEach((function(t){var r=Bu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var wa="function"==typeof WeakMap?WeakMap:Map;function ka(e,t,n){(n=di(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Xa||(Xa=!0,Za=r),ia(e,t)},n}function xa(e,t,n){(n=di(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return ia(e,t),r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Ja?Ja=new Set([this]):Ja.add(this),ia(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var Ea,Sa=Math.ceil,Ca=Y.ReactCurrentDispatcher,Ta=Y.ReactCurrentOwner,Aa=0,_a=8,Pa=16,Oa=32,Na=0,Ma=1,Ia=2,za=3,Ba=4,ja=5,Ra=Aa,Fa=null,La=null,Da=0,Wa=Na,Ua=null,Ha=1073741823,Va=1073741823,Qa=null,$a=0,qa=!1,Ka=0,Ga=500,Ya=null,Xa=!1,Za=null,Ja=null,eu=!1,tu=null,nu=90,ru=null,ou=0,iu=null,lu=0;function au(){return(Ra&(Pa|Oa))!==Aa?1073741821-(Vo()/10|0):0!==lu?lu:lu=1073741821-(Vo()/10|0)}function uu(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=Qo();if(0==(4&t))return 99===r?1073741823:1073741822;if((Ra&Pa)!==Aa)return Da;if(null!==n)e=Zo(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Zo(e,150,100);break;case 97:case 96:e=Zo(e,5e3,250);break;case 95:e=2;break;default:throw Error(l(326))}return null!==Fa&&e===Da&&--e,e}function cu(e,t){if(50<ou)throw ou=0,iu=null,Error(l(185));if(null!==(e=su(e,t))){var n=Qo();1073741823===t?(Ra&_a)!==Aa&&(Ra&(Pa|Oa))===Aa?mu(e):(du(e),Ra===Aa&&Yo()):du(e),(4&Ra)===Aa||98!==n&&99!==n||(null===ru?ru=new Map([[e,t]]):(void 0===(n=ru.get(e))||n>t)&&ru.set(e,t))}}function su(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(Fa===o&&(ku(t),Wa===Ba&&Ku(o,Da)),Gu(o,t)),o}function fu(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!qu(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function du(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Go(mu.bind(null,e));else{var t=fu(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=au();if(r=1073741823===t?99:1===t||2===t?95:0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var o=e.callbackPriority;if(e.callbackExpirationTime===t&&o>=r)return;n!==Ro&&_o(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Go(mu.bind(null,e)):Ko(r,pu.bind(null,e),{timeout:10*(1073741821-t)-Vo()}),e.callbackNode=t}}}function pu(e,t){if(lu=0,t)return Yu(e,t=au()),du(e),null;var n=fu(e);if(0!==n){if(t=e.callbackNode,(Ra&(Pa|Oa))!==Aa)throw Error(l(327));if(Ou(),e===Fa&&n===Da||gu(e,n),null!==La){var r=Ra;Ra|=Pa;for(var o=bu();;)try{Eu();break}catch(t){vu(e,t)}if(oi(),Ra=r,Ca.current=o,Wa===Ma)throw t=Ua,gu(e,n),Ku(e,n),du(e),t;if(null===La)switch(o=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Wa,Fa=null,r){case Na:case Ma:throw Error(l(345));case Ia:Yu(e,2<n?2:n);break;case za:if(Ku(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=Tu(o)),1073741823===Ha&&10<(o=Ka+Ga-Vo())){if(qa){var i=e.lastPingedTime;if(0===i||i>=n){e.lastPingedTime=n,gu(e,n);break}}if(0!==(i=fu(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=En(Au.bind(null,e),o);break}Au(e);break;case Ba:if(Ku(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=Tu(o)),qa&&(0===(o=e.lastPingedTime)||o>=n)){e.lastPingedTime=n,gu(e,n);break}if(0!==(o=fu(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Va?r=10*(1073741821-Va)-Vo():1073741823===Ha?r=0:(r=10*(1073741821-Ha)-5e3,0>(r=(o=Vo())-r)&&(r=0),(n=10*(1073741821-n)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Sa(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=En(Au.bind(null,e),r);break}Au(e);break;case ja:if(1073741823!==Ha&&null!==Qa){i=Ha;var a=Qa;if(0>=(r=0|a.busyMinDurationMs)?r=0:(o=0|a.busyDelayMs,r=(i=Vo()-(10*(1073741821-i)-(0|a.timeoutMs||5e3)))<=o?0:o+r-i),10<r){Ku(e,n),e.timeoutHandle=En(Au.bind(null,e),r);break}}Au(e);break;default:throw Error(l(329))}if(du(e),e.callbackNode===t)return pu.bind(null,e)}}return null}function mu(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,(Ra&(Pa|Oa))!==Aa)throw Error(l(327));if(Ou(),e===Fa&&t===Da||gu(e,t),null!==La){var n=Ra;Ra|=Pa;for(var r=bu();;)try{xu();break}catch(t){vu(e,t)}if(oi(),Ra=n,Ca.current=r,Wa===Ma)throw n=Ua,gu(e,t),Ku(e,t),du(e),n;if(null!==La)throw Error(l(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Fa=null,Au(e),du(e)}return null}function hu(e,t){var n=Ra;Ra|=1;try{return e(t)}finally{(Ra=n)===Aa&&Yo()}}function yu(e,t){var n=Ra;Ra&=-2,Ra|=_a;try{return e(t)}finally{(Ra=n)===Aa&&Yo()}}function gu(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Sn(n)),null!==La)for(n=La.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&ko();break;case 3:Ri(),po(go),po(yo);break;case 5:Li(r);break;case 4:Ri();break;case 13:case 19:po(Di);break;case 10:ii(r)}n=n.return}Fa=e,La=Wu(e.current,null),Da=t,Wa=Na,Ua=null,Va=Ha=1073741823,Qa=null,$a=0,qa=!1}function vu(e,t){for(;;){try{if(oi(),Hi.current=wl,Gi)for(var n=$i.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if(Qi=0,Ki=qi=$i=null,Gi=!1,null===La||null===La.return)return Wa=Ma,Ua=t,La=null;e:{var o=e,i=La.return,l=La,a=t;if(t=Da,l.effectTag|=2048,l.firstEffect=l.lastEffect=null,null!==a&&"object"==typeof a&&"function"==typeof a.then){var u=a;if(0==(2&l.mode)){var c=l.alternate;c?(l.updateQueue=c.updateQueue,l.memoizedState=c.memoizedState,l.expirationTime=c.expirationTime):(l.updateQueue=null,l.memoizedState=null)}var s=0!=(1&Di.current),f=i;do{var d;if(d=13===f.tag){var p=f.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var m=f.memoizedProps;d=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!s)}}if(d){var h=f.updateQueue;if(null===h){var y=new Set;y.add(u),f.updateQueue=y}else h.add(u);if(0==(2&f.mode)){if(f.effectTag|=64,l.effectTag&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var g=di(1073741823,null);g.tag=2,pi(l,g)}l.expirationTime=1073741823;break e}a=void 0,l=t;var v=o.pingCache;if(null===v?(v=o.pingCache=new wa,a=new Set,v.set(u,a)):void 0===(a=v.get(u))&&(a=new Set,v.set(u,a)),!a.has(l)){a.add(l);var b=zu.bind(null,o,u,l);u.then(b,b)}f.effectTag|=4096,f.expirationTime=t;break e}f=f.return}while(null!==f);a=Error((ye(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ge(l))}Wa!==ja&&(Wa=Ia),a=ra(a,l),f=i;do{switch(f.tag){case 3:u=a,f.effectTag|=4096,f.expirationTime=t,mi(f,ka(f,u,t));break e;case 1:u=a;var w=f.type,k=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof w.getDerivedStateFromError||null!==k&&"function"==typeof k.componentDidCatch&&(null===Ja||!Ja.has(k)))){f.effectTag|=4096,f.expirationTime=t,mi(f,xa(f,u,t));break e}}f=f.return}while(null!==f)}La=Cu(La)}catch(e){t=e;continue}break}}function bu(){var e=Ca.current;return Ca.current=wl,null===e?wl:e}function wu(e,t){e<Ha&&2<e&&(Ha=e),null!==t&&e<Va&&2<e&&(Va=e,Qa=t)}function ku(e){e>$a&&($a=e)}function xu(){for(;null!==La;)La=Su(La)}function Eu(){for(;null!==La&&!Fo();)La=Su(La)}function Su(e){var t=Ea(e.alternate,e,Da);return e.memoizedProps=e.pendingProps,null===t&&(t=Cu(e)),Ta.current=null,t}function Cu(e){La=e;do{var t=La.alternate;if(e=La.return,0==(2048&La.effectTag)){if(t=ta(t,La,Da),1===Da||1!==La.childExpirationTime){for(var n=0,r=La.child;null!==r;){var o=r.expirationTime,i=r.childExpirationTime;o>n&&(n=o),i>n&&(n=i),r=r.sibling}La.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=La.firstEffect),null!==La.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=La.firstEffect),e.lastEffect=La.lastEffect),1<La.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=La:e.firstEffect=La,e.lastEffect=La))}else{if(null!==(t=na(La)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=La.sibling))return t;La=e}while(null!==La);return Wa===Na&&(Wa=ja),null}function Tu(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function Au(e){var t=Qo();return qo(99,_u.bind(null,e,t)),null}function _u(e,t){do{Ou()}while(null!==tu);if((Ra&(Pa|Oa))!==Aa)throw Error(l(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(l(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var o=Tu(n);if(e.firstPendingTime=o,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Fa&&(La=Fa=null,Da=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){var i=Ra;Ra|=Oa,Ta.current=null,bn=Qt;var a=pn();if(mn(a)){if("selectionStart"in a)var u={start:a.selectionStart,end:a.selectionEnd};else e:{var c=(u=(u=a.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(c&&0!==c.rangeCount){u=c.anchorNode;var s=c.anchorOffset,f=c.focusNode;c=c.focusOffset;try{u.nodeType,f.nodeType}catch(e){u=null;break e}var d=0,p=-1,m=-1,h=0,y=0,g=a,v=null;t:for(;;){for(var b;g!==u||0!==s&&3!==g.nodeType||(p=d+s),g!==f||0!==c&&3!==g.nodeType||(m=d+c),3===g.nodeType&&(d+=g.nodeValue.length),null!==(b=g.firstChild);)v=g,g=b;for(;;){if(g===a)break t;if(v===u&&++h===s&&(p=d),v===f&&++y===c&&(m=d),null!==(b=g.nextSibling))break;v=(g=v).parentNode}g=b}u=-1===p||-1===m?null:{start:p,end:m}}else u=null}u=u||{start:0,end:0}}else u=null;wn={activeElementDetached:null,focusedElem:a,selectionRange:u},Qt=!1,Ya=o;do{try{Pu()}catch(e){if(null===Ya)throw Error(l(330));Iu(Ya,e),Ya=Ya.nextEffect}}while(null!==Ya);Ya=o;do{try{for(a=e,u=t;null!==Ya;){var w=Ya.effectTag;if(16&w&&Le(Ya.stateNode,""),128&w){var k=Ya.alternate;if(null!==k){var x=k.ref;null!==x&&("function"==typeof x?x(null):x.current=null)}}switch(1038&w){case 2:ma(Ya),Ya.effectTag&=-3;break;case 6:ma(Ya),Ya.effectTag&=-3,va(Ya.alternate,Ya);break;case 1024:Ya.effectTag&=-1025;break;case 1028:Ya.effectTag&=-1025,va(Ya.alternate,Ya);break;case 4:va(Ya.alternate,Ya);break;case 8:ga(a,s=Ya,u),da(s)}Ya=Ya.nextEffect}}catch(e){if(null===Ya)throw Error(l(330));Iu(Ya,e),Ya=Ya.nextEffect}}while(null!==Ya);if(x=wn,k=pn(),w=x.focusedElem,u=x.selectionRange,k!==w&&w&&w.ownerDocument&&dn(w.ownerDocument.documentElement,w)){null!==u&&mn(w)&&(k=u.start,void 0===(x=u.end)&&(x=k),"selectionStart"in w?(w.selectionStart=k,w.selectionEnd=Math.min(x,w.value.length)):(x=(k=w.ownerDocument||document)&&k.defaultView||window).getSelection&&(x=x.getSelection(),s=w.textContent.length,a=Math.min(u.start,s),u=void 0===u.end?a:Math.min(u.end,s),!x.extend&&a>u&&(s=u,u=a,a=s),s=fn(w,a),f=fn(w,u),s&&f&&(1!==x.rangeCount||x.anchorNode!==s.node||x.anchorOffset!==s.offset||x.focusNode!==f.node||x.focusOffset!==f.offset)&&((k=k.createRange()).setStart(s.node,s.offset),x.removeAllRanges(),a>u?(x.addRange(k),x.extend(f.node,f.offset)):(k.setEnd(f.node,f.offset),x.addRange(k))))),k=[];for(x=w;x=x.parentNode;)1===x.nodeType&&k.push({element:x,left:x.scrollLeft,top:x.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<k.length;w++)(x=k[w]).element.scrollLeft=x.left,x.element.scrollTop=x.top}Qt=!!bn,wn=bn=null,e.current=n,Ya=o;do{try{for(w=e;null!==Ya;){var E=Ya.effectTag;if(36&E&&sa(w,Ya.alternate,Ya),128&E){k=void 0;var S=Ya.ref;if(null!==S){var C=Ya.stateNode;Ya.tag,k=C,"function"==typeof S?S(k):S.current=k}}Ya=Ya.nextEffect}}catch(e){if(null===Ya)throw Error(l(330));Iu(Ya,e),Ya=Ya.nextEffect}}while(null!==Ya);Ya=null,Lo(),Ra=i}else e.current=n;if(eu)eu=!1,tu=e,nu=t;else for(Ya=o;null!==Ya;)t=Ya.nextEffect,Ya.nextEffect=null,Ya=t;if(0===(t=e.firstPendingTime)&&(Ja=null),1073741823===t?e===iu?ou++:(ou=0,iu=e):ou=0,"function"==typeof ju&&ju(n.stateNode,r),du(e),Xa)throw Xa=!1,e=Za,Za=null,e;return(Ra&_a)!==Aa||Yo(),null}function Pu(){for(;null!==Ya;){var e=Ya.effectTag;0!=(256&e)&&aa(Ya.alternate,Ya),0==(512&e)||eu||(eu=!0,Ko(97,(function(){return Ou(),null}))),Ya=Ya.nextEffect}}function Ou(){if(90!==nu){var e=97<nu?97:nu;return nu=90,qo(e,Nu)}}function Nu(){if(null===tu)return!1;var e=tu;if(tu=null,(Ra&(Pa|Oa))!==Aa)throw Error(l(331));var t=Ra;for(Ra|=Oa,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:ua(5,n),ca(5,n)}}catch(t){if(null===e)throw Error(l(330));Iu(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return Ra=t,Yo(),!0}function Mu(e,t,n){pi(e,t=ka(e,t=ra(n,t),1073741823)),null!==(e=su(e,1073741823))&&du(e)}function Iu(e,t){if(3===e.tag)Mu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Mu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Ja||!Ja.has(r))){pi(n,e=xa(n,e=ra(t,e),1073741823)),null!==(n=su(n,1073741823))&&du(n);break}}n=n.return}}function zu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),Fa===e&&Da===n?Wa===Ba||Wa===za&&1073741823===Ha&&Vo()-Ka<Ga?gu(e,Da):qa=!0:qu(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,du(e)))}function Bu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(t=uu(t=au(),e,null)),null!==(e=su(e,t))&&du(e)}Ea=function(e,t,n){var r=t.expirationTime;if(null!==e){var o=t.pendingProps;if(e.memoizedProps!==o||go.current)zl=!0;else{if(r<n){switch(zl=!1,t.tag){case 3:Hl(t),Ml();break;case 5:if(Fi(t),4&t.mode&&1!==n&&o.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:wo(t.type)&&So(t);break;case 4:ji(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,o=t.type._context,mo(ei,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Gl(e,t,n):(mo(Di,1&Di.current),null!==(t=Jl(e,t,n))?t.sibling:null);mo(Di,1&Di.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return Zl(e,t,n);t.effectTag|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null),mo(Di,Di.current),!r)return null}return Jl(e,t,n)}zl=!1}}else zl=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,o=bo(t,yo.current),ai(t,n),o=Zi(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,wo(r)){var i=!0;So(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,si(t);var a=r.getDerivedStateFromProps;"function"==typeof a&&bi(t,r,a,e),o.updater=wi,t.stateNode=o,o._reactInternalFiber=t,Si(t,r,e,n),t=Ul(null,t,r,!0,i,n)}else t.tag=0,Bl(null,t,o,n),t=t.child;return t;case 16:e:{if(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(o),1!==o._status)throw o._result;switch(o=o._result,t.type=o,i=t.tag=function(e){if("function"==typeof e)return Du(e)?1:0;if(null!=e){if((e=e.$$typeof)===ue)return 11;if(e===fe)return 14}return 2}(o),e=Jo(o,e),i){case 0:t=Dl(null,t,o,e,n);break e;case 1:t=Wl(null,t,o,e,n);break e;case 11:t=jl(null,t,o,e,n);break e;case 14:t=Rl(null,t,o,Jo(o.type,e),r,n);break e}throw Error(l(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,Dl(e,t,r,o=t.elementType===r?o:Jo(r,o),n);case 1:return r=t.type,o=t.pendingProps,Wl(e,t,r,o=t.elementType===r?o:Jo(r,o),n);case 3:if(Hl(t),r=t.updateQueue,null===e||null===r)throw Error(l(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,fi(e,t),hi(t,r,null,n),(r=t.memoizedState.element)===o)Ml(),t=Jl(e,t,n);else{if((o=t.stateNode.hydrate)&&(Cl=Cn(t.stateNode.containerInfo.firstChild),Sl=t,o=Tl=!0),o)for(n=Oi(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Bl(e,t,r,n),Ml();t=t.child}return t;case 5:return Fi(t),null===e&&Pl(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,a=o.children,xn(r,o)?a=null:null!==i&&xn(r,i)&&(t.effectTag|=16),Ll(e,t),4&t.mode&&1!==n&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Bl(e,t,a,n),t=t.child),t;case 6:return null===e&&Pl(t),null;case 13:return Gl(e,t,n);case 4:return ji(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Pi(t,null,r,n):Bl(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,jl(e,t,r,o=t.elementType===r?o:Jo(r,o),n);case 7:return Bl(e,t,t.pendingProps,n),t.child;case 8:case 12:return Bl(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,a=t.memoizedProps,i=o.value;var u=t.type._context;if(mo(ei,u._currentValue),u._currentValue=i,null!==a)if(u=a.value,0==(i=Wr(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(a.children===o.children&&!go.current){t=Jl(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){a=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===u.tag&&((s=di(n,null)).tag=2,pi(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n),li(u.return,n),c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else a=10===u.tag&&u.type===t.type?null:u.child;if(null!==a)a.return=u;else for(a=u;null!==a;){if(a===t){a=null;break}if(null!==(u=a.sibling)){u.return=a.return,a=u;break}a=a.return}u=a}Bl(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,ai(t,n),r=r(o=ui(o,i.unstable_observedBits)),t.effectTag|=1,Bl(e,t,r,n),t.child;case 14:return i=Jo(o=t.type,t.pendingProps),Rl(e,t,o,i=Jo(o.type,i),r,n);case 15:return Fl(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Jo(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,wo(r)?(e=!0,So(t)):e=!1,ai(t,n),xi(t,r,o),Si(t,r,o,n),Ul(null,t,r,!0,e,n);case 19:return Zl(e,t,n)}throw Error(l(156,t.tag))};var ju=null,Ru=null;function Fu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Lu(e,t,n,r){return new Fu(e,t,n,r)}function Du(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Wu(e,t){var n=e.alternate;return null===n?((n=Lu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Uu(e,t,n,r,o,i){var a=2;if(r=e,"function"==typeof e)Du(e)&&(a=1);else if("string"==typeof e)a=5;else e:switch(e){case ne:return Hu(n.children,o,i,t);case ae:a=8,o|=7;break;case re:a=8,o|=1;break;case oe:return(e=Lu(12,n,t,8|o)).elementType=oe,e.type=oe,e.expirationTime=i,e;case ce:return(e=Lu(13,n,t,o)).type=ce,e.elementType=ce,e.expirationTime=i,e;case se:return(e=Lu(19,n,t,o)).elementType=se,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case ie:a=10;break e;case le:a=9;break e;case ue:a=11;break e;case fe:a=14;break e;case de:a=16,r=null;break e;case pe:a=22;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=Lu(a,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function Hu(e,t,n,r){return(e=Lu(7,e,r,t)).expirationTime=n,e}function Vu(e,t,n){return(e=Lu(6,e,null,t)).expirationTime=n,e}function Qu(e,t,n){return(t=Lu(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function $u(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function qu(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Ku(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Gu(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Yu(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Xu(e,t,n,r){var o=t.current,i=au(),a=gi.suspense;i=uu(i,o,a);e:if(n){t:{if(Ze(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(l(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(wo(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(l(171))}if(1===n.tag){var c=n.type;if(wo(c)){n=Eo(n,c,u);break e}}n=u}else n=ho;return null===t.context?t.context=n:t.pendingContext=n,(t=di(i,a)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),pi(o,t),cu(o,i),i}function Zu(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Ju(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function ec(e,t){Ju(e,t),(e=e.alternate)&&Ju(e,t)}function tc(e,t,n){var r=new $u(e,t,n=null!=n&&!0===n.hydrate),o=Lu(3,null,null,2===t?7:1===t?3:0);r.current=o,o.stateNode=r,si(o),e[On]=r.current,n&&0!==t&&function(e,t){var n=Xe(t);Ct.forEach((function(e){pt(e,t,n)})),Tt.forEach((function(e){pt(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function nc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function rc(e,t,n,r,o){var i=n._reactRootContainer;if(i){var l=i._internalRoot;if("function"==typeof o){var a=o;o=function(){var e=Zu(l);a.call(e)}}Xu(t,l,e,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new tc(e,0,t?{hydrate:!0}:void 0)}(n,r),l=i._internalRoot,"function"==typeof o){var u=o;o=function(){var e=Zu(l);u.call(e)}}yu((function(){Xu(t,l,e,o)}))}return Zu(l)}function oc(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nc(t))throw Error(l(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}tc.prototype.render=function(e){Xu(e,this._internalRoot,null,null)},tc.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Xu(null,e,null,(function(){t[On]=null}))},mt=function(e){if(13===e.tag){var t=Zo(au(),150,100);cu(e,t),ec(e,t)}},ht=function(e){13===e.tag&&(cu(e,3),ec(e,3))},yt=function(e){if(13===e.tag){var t=au();cu(e,t=uu(t,e,null)),ec(e,t)}},_=function(e,t,n){switch(t){case"input":if(Ce(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=zn(r);if(!o)throw Error(l(90));ke(r),Ce(r,o)}}}break;case"textarea":Me(e,n);break;case"select":null!=(t=n.value)&&Pe(e,!!n.multiple,t,!1)}},z=hu,B=function(e,t,n,r,o){var i=Ra;Ra|=4;try{return qo(98,e.bind(null,t,n,r,o))}finally{(Ra=i)===Aa&&Yo()}},j=function(){(Ra&(1|Pa|Oa))===Aa&&(function(){if(null!==ru){var e=ru;ru=null,e.forEach((function(e,t){Yu(t,e),du(t)})),Yo()}}(),Ou())},R=function(e,t){var n=Ra;Ra|=2;try{return e(t)}finally{(Ra=n)===Aa&&Yo()}};var ic={Events:[Mn,In,zn,T,E,Wn,function(e){rt(e,Dn)},M,I,Yt,lt,Ou,{current:!1}]};!function(e){var t=e.findFiberByHostInstance;!function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);ju=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},Ru=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(o({},e,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Y.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=tt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))}({findFiberByHostInstance:Nn,bundleType:0,version:"16.14.0",rendererPackageName:"react-dom"}),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ic,t.createPortal=oc,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw Error(l(268,Object.keys(e)))}return null===(e=tt(t))?null:e.stateNode},t.flushSync=function(e,t){if((Ra&(Pa|Oa))!==Aa)throw Error(l(187));var n=Ra;Ra|=1;try{return qo(99,e.bind(null,t))}finally{Ra=n,Yo()}},t.hydrate=function(e,t,n){if(!nc(t))throw Error(l(200));return rc(null,e,t,!0,n)},t.render=function(e,t,n){if(!nc(t))throw Error(l(200));return rc(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!nc(e))throw Error(l(40));return!!e._reactRootContainer&&(yu((function(){rc(null,null,e,!1,(function(){e._reactRootContainer=null,e[On]=null}))})),!0)},t.unstable_batchedUpdates=hu,t.unstable_createPortal=function(e,t){return oc(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!nc(n))throw Error(l(200));if(null==e||void 0===e._reactInternalFiber)throw Error(l(38));return rc(e,t,n,!1,r)},t.version="16.14.0"},104:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(516)},28:(e,t,n)=>{"use strict";var r=n(456),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,l=o?Symbol.for("react.portal"):60106,a=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.forward_ref"):60112,p=o?Symbol.for("react.suspense"):60113,m=o?Symbol.for("react.memo"):60115,h=o?Symbol.for("react.lazy"):60116,y="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var v={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||v}function k(){}function x(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||v}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(g(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=w.prototype;var E=x.prototype=new k;E.constructor=x,r(E,w.prototype),E.isPureReactComponent=!0;var S={current:null},C=Object.prototype.hasOwnProperty,T={key:!0,ref:!0,__self:!0,__source:!0};function A(e,t,n){var r,o={},l=null,a=null;if(null!=t)for(r in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(l=""+t.key),t)C.call(t,r)&&!T.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:l,ref:a,props:o,_owner:S.current}}function _(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var P=/\/+/g,O=[];function N(e,t,n,r){if(O.length){var o=O.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function M(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>O.length&&O.push(e)}function I(e,t,n,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var a=!1;if(null===e)a=!0;else switch(o){case"string":case"number":a=!0;break;case"object":switch(e.$$typeof){case i:case l:a=!0}}if(a)return n(r,e,""===t?"."+B(e,0):t),1;if(a=0,t=""===t?".":t+":",Array.isArray(e))for(var u=0;u<e.length;u++){var c=t+B(o=e[u],u);a+=I(o,c,n,r)}else if("function"==typeof(c=null===e||"object"!=typeof e?null:"function"==typeof(c=y&&e[y]||e["@@iterator"])?c:null))for(e=c.call(e),u=0;!(o=e.next()).done;)a+=I(o=o.value,c=t+B(o,u++),n,r);else if("object"===o)throw n=""+e,Error(g(31,"[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n,""));return a}function z(e,t,n){return null==e?0:I(e,"",t,n)}function B(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function j(e,t){e.func.call(e.context,t,e.count++)}function R(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?F(e,r,n,(function(e){return e})):null!=e&&(_(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(P,"$&/")+"/")+n)),r.push(e))}function F(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(P,"$&/")+"/"),z(e,R,t=N(t,i,r,o)),M(t)}var L={current:null};function D(){var e=L.current;if(null===e)throw Error(g(321));return e}var W={ReactCurrentDispatcher:L,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:S,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return F(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;z(e,j,t=N(null,null,t,n)),M(t)},count:function(e){return z(e,(function(){return null}),null)},toArray:function(e){var t=[];return F(e,t,null,(function(e){return e})),t},only:function(e){if(!_(e))throw Error(g(143));return e}},t.Component=w,t.Fragment=a,t.Profiler=c,t.PureComponent=x,t.StrictMode=u,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W,t.cloneElement=function(e,t,n){if(null==e)throw Error(g(267,e));var o=r({},e.props),l=e.key,a=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(a=t.ref,u=S.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)C.call(t,s)&&!T.hasOwnProperty(s)&&(o[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];o.children=c}return{$$typeof:i,type:e.type,key:l,ref:a,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=A,t.createFactory=function(e){var t=A.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=_,t.lazy=function(e){return{$$typeof:h,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return D().useCallback(e,t)},t.useContext=function(e,t){return D().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return D().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return D().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return D().useLayoutEffect(e,t)},t.useMemo=function(e,t){return D().useMemo(e,t)},t.useReducer=function(e,t,n){return D().useReducer(e,t,n)},t.useRef=function(e){return D().useRef(e)},t.useState=function(e){return D().useState(e)},t.version="16.14.0"},504:(e,t,n)=>{"use strict";e.exports=n(28)},328:(e,t)=>{"use strict";var n,r,o,i,l;if("undefined"==typeof window||"function"!=typeof MessageChannel){var a=null,u=null,c=function(){if(null!==a)try{var e=t.unstable_now();a(!0,e),a=null}catch(e){throw setTimeout(c,0),e}},s=Date.now();t.unstable_now=function(){return Date.now()-s},n=function(e){null!==a?setTimeout(n,0,e):(a=e,setTimeout(c,0))},r=function(e,t){u=setTimeout(e,t)},o=function(){clearTimeout(u)},i=function(){return!1},l=t.unstable_forceFrameRate=function(){}}else{var f=window.performance,d=window.Date,p=window.setTimeout,m=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof f&&"function"==typeof f.now)t.unstable_now=function(){return f.now()};else{var y=d.now();t.unstable_now=function(){return d.now()-y}}var g=!1,v=null,b=-1,w=5,k=0;i=function(){return t.unstable_now()>=k},l=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):w=0<e?Math.floor(1e3/e):5};var x=new MessageChannel,E=x.port2;x.port1.onmessage=function(){if(null!==v){var e=t.unstable_now();k=e+w;try{v(!0,e)?E.postMessage(null):(g=!1,v=null)}catch(e){throw E.postMessage(null),e}}else g=!1},n=function(e){v=e,g||(g=!0,E.postMessage(null))},r=function(e,n){b=p((function(){e(t.unstable_now())}),n)},o=function(){m(b),b=-1}}function S(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<A(o,t)))break e;e[r]=t,e[n]=o,n=r}}function C(e){return void 0===(e=e[0])?null:e}function T(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var i=2*(r+1)-1,l=e[i],a=i+1,u=e[a];if(void 0!==l&&0>A(l,n))void 0!==u&&0>A(u,l)?(e[r]=u,e[a]=n,r=a):(e[r]=l,e[i]=n,r=i);else{if(!(void 0!==u&&0>A(u,n)))break e;e[r]=u,e[a]=n,r=a}}}return t}return null}function A(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var _=[],P=[],O=1,N=null,M=3,I=!1,z=!1,B=!1;function j(e){for(var t=C(P);null!==t;){if(null===t.callback)T(P);else{if(!(t.startTime<=e))break;T(P),t.sortIndex=t.expirationTime,S(_,t)}t=C(P)}}function R(e){if(B=!1,j(e),!z)if(null!==C(_))z=!0,n(F);else{var t=C(P);null!==t&&r(R,t.startTime-e)}}function F(e,n){z=!1,B&&(B=!1,o()),I=!0;var l=M;try{for(j(n),N=C(_);null!==N&&(!(N.expirationTime>n)||e&&!i());){var a=N.callback;if(null!==a){N.callback=null,M=N.priorityLevel;var u=a(N.expirationTime<=n);n=t.unstable_now(),"function"==typeof u?N.callback=u:N===C(_)&&T(_),j(n)}else T(_);N=C(_)}if(null!==N)var c=!0;else{var s=C(P);null!==s&&r(R,s.startTime-n),c=!1}return c}finally{N=null,M=l,I=!1}}function L(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var D=l;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){z||I||(z=!0,n(F))},t.unstable_getCurrentPriorityLevel=function(){return M},t.unstable_getFirstCallbackNode=function(){return C(_)},t.unstable_next=function(e){switch(M){case 1:case 2:case 3:var t=3;break;default:t=M}var n=M;M=t;try{return e()}finally{M=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=D,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=M;M=e;try{return t()}finally{M=n}},t.unstable_scheduleCallback=function(e,i,l){var a=t.unstable_now();if("object"==typeof l&&null!==l){var u=l.delay;u="number"==typeof u&&0<u?a+u:a,l="number"==typeof l.timeout?l.timeout:L(e)}else l=L(e),u=a;return e={id:O++,callback:i,priorityLevel:e,startTime:u,expirationTime:l=u+l,sortIndex:-1},u>a?(e.sortIndex=u,S(P,e),null===C(_)&&e===C(P)&&(B?o():B=!0,r(R,u-a))):(e.sortIndex=l,S(_,e),z||I||(z=!0,n(F))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();j(e);var n=C(_);return n!==N&&null!==N&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<N.expirationTime||i()},t.unstable_wrapCallback=function(e){var t=M;return function(){var n=M;M=t;try{return e.apply(this,arguments)}finally{M=n}}}},712:(e,t,n)=>{"use strict";e.exports=n(328)},596:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var i={},l=[],a=0;a<e.length;a++){var u=e[a],c=r.base?u[0]+r.base:u[0],s=i[c]||0,f="".concat(c," ").concat(s);i[c]=s+1;var d=n(f),p={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==d)t[d].references++,t[d].updater(p);else{var m=o(p,r);r.byIndex=a,t.splice(a,0,{identifier:f,updater:m,references:1})}l.push(f)}return l}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var l=0;l<i.length;l++){var a=n(i[l]);t[a].references--}for(var u=r(e,o),c=0;c<i.length;c++){var s=n(i[c]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}i=u}}},176:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},808:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},120:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},520:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},936:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},r={};function o(e){var t=r[e];if(void 0!==t)return t.exports;var i=r[e]={id:e,exports:{}};return n[e](i,i.exports,o),i.exports}o.m=n,o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.f={},o.e=e=>Promise.all(Object.keys(o.f).reduce(((t,n)=>(o.f[n](e,t),t)),[])),o.u=e=>e+".bundle.js",o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="task_2:",o.l=(n,r,i,l)=>{if(e[n])e[n].push(r);else{var a,u;if(void 0!==i)for(var c=document.getElementsByTagName("script"),s=0;s<c.length;s++){var f=c[s];if(f.getAttribute("src")==n||f.getAttribute("data-webpack")==t+i){a=f;break}}a||(u=!0,(a=document.createElement("script")).charset="utf-8",a.timeout=120,o.nc&&a.setAttribute("nonce",o.nc),a.setAttribute("data-webpack",t+i),a.src=n),e[n]=[r];var d=(t,r)=>{a.onerror=a.onload=null,clearTimeout(p);var o=e[n];if(delete e[n],a.parentNode&&a.parentNode.removeChild(a),o&&o.forEach((e=>e(r))),t)return t(r)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:a}),12e4);a.onerror=d.bind(null,a.onerror),a.onload=d.bind(null,a.onload),u&&document.head.appendChild(a)}},o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;o.g.importScripts&&(e=o.g.location+"");var t=o.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");if(n.length)for(var r=n.length-1;r>-1&&!e;)e=n[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),o.p=e})(),(()=>{var e={590:0};o.f.j=(t,n)=>{var r=o.o(e,t)?e[t]:void 0;if(0!==r)if(r)n.push(r[2]);else{var i=new Promise(((n,o)=>r=e[t]=[n,o]));n.push(r[2]=i);var l=o.p+o.u(t),a=new Error;o.l(l,(n=>{if(o.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var i=n&&("load"===n.type?"missing":n.type),l=n&&n.target&&n.target.src;a.message="Loading chunk "+t+" failed.\n("+i+": "+l+")",a.name="ChunkLoadError",a.type=i,a.request=l,r[1](a)}}),"chunk-"+t,t)}};var t=(t,n)=>{var r,i,[l,a,u]=n,c=0;if(l.some((t=>0!==e[t]))){for(r in a)o.o(a,r)&&(o.m[r]=a[r]);u&&u(o)}for(t&&t(n);c<l.length;c++)i=l[c],o.o(e,i)&&e[i]&&e[i][0](),e[i]=0},n=self.webpackChunktask_2=self.webpackChunktask_2||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})(),o.nc=void 0,(()=>{"use strict";var e=o(504),t=o(104),n=o(596),r=o.n(n),i=o(520),l=o.n(i),a=o(176),u=o.n(a),c=o(120),s=o.n(c),f=o(808),d=o.n(f),p=o(936),m=o.n(p),h=o(344),y={};y.styleTagTransform=m(),y.setAttributes=s(),y.insert=u().bind(null,"head"),y.domAPI=l(),y.insertStyleElement=d(),r()(h.c,y),h.c&&h.c.locals&&h.c.locals;var g=o(724),v={};v.styleTagTransform=m(),v.setAttributes=s(),v.insert=u().bind(null,"head"),v.domAPI=l(),v.insertStyleElement=d(),r()(g.c,v),g.c&&g.c.locals&&g.c.locals;const b=function(){return e.createElement("div",{className:"App-footer"},e.createElement("p",null,"Copyright ",(new Date).getFullYear()," - ","Holberton School main dashboard"))},w=o.p+"ff501d827c9f4b6d3ac455c5ae5624b8.png";var k=o(464),x={};x.styleTagTransform=m(),x.setAttributes=s(),x.insert=u().bind(null,"head"),x.domAPI=l(),x.insertStyleElement=d(),r()(k.c,x),k.c&&k.c.locals&&k.c.locals;const E=function(){return e.createElement("div",{className:"App"},e.createElement("div",{className:"App-header"},e.createElement("img",{src:w,alt:"Holberton logo"}),e.createElement("h1",null,"School dashboard")))};var S=o(72),C={};C.styleTagTransform=m(),C.setAttributes=s(),C.insert=u().bind(null,"head"),C.domAPI=l(),C.insertStyleElement=d(),r()(S.c,C),S.c&&S.c.locals&&S.c.locals;const T=function(){return e.createElement("div",{className:"App"},e.createElement("div",{className:"App-body"},e.createElement("p",null,"Login to access the full dashboard"),e.createElement("div",{className:"App-form"},e.createElement("label",{htmlFor:"email"},"Email:"),e.createElement("input",{type:"email",id:"email",name:"email"}),e.createElement("label",{htmlFor:"password"},"Password:"),e.createElement("input",{type:"password",id:"password",name:"password"}),e.createElement("button",{type:"submit"},"OK"))))};var A=o(920),_={};_.styleTagTransform=m(),_.setAttributes=s(),_.insert=u().bind(null,"head"),_.domAPI=l(),_.insertStyleElement=d(),r()(A.c,_),A.c&&A.c.locals&&A.c.locals;var P=o(84),O=o.n(P),N=o(488),M=o.n(N);function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function z(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function B(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){z(e,t,n[t])}))}return e}function j(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var R=/([A-Z])/g,F=function(e){return"-".concat(e.toLowerCase())},L={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridColumn:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},D=["Webkit","ms","Moz","O"];Object.keys(L).forEach((function(e){D.forEach((function(t){L[function(e,t){return e+t.charAt(0).toUpperCase()+t.substring(1)}(t,e)]=L[e]}))}));var W=function(e,t){return"number"==typeof t?L[e]?""+t:t+"px":""+t},U=function(e,t){return V(W(e,t))},H=function(e,t){return O()(e).toString(36)},V=function(e){return"!"===e[e.length-10]&&" !important"===e.slice(-11)?e:"".concat(e," !important")},Q="undefined"!=typeof Map,$=function(){function e(){this.elements={},this.keyOrder=[]}var t=e.prototype;return t.forEach=function(e){for(var t=0;t<this.keyOrder.length;t++)e(this.elements[this.keyOrder[t]],this.keyOrder[t])},t.set=function(t,n,r){if(this.elements.hasOwnProperty(t)){if(r){var o=this.keyOrder.indexOf(t);this.keyOrder.splice(o,1),this.keyOrder.push(t)}}else this.keyOrder.push(t);if(null!=n){if(Q&&n instanceof Map||n instanceof e){var i=this.elements.hasOwnProperty(t)?this.elements[t]:new e;return n.forEach((function(e,t){i.set(t,e,r)})),void(this.elements[t]=i)}if(Array.isArray(n)||"object"!==I(n))this.elements[t]=n;else{for(var l=this.elements.hasOwnProperty(t)?this.elements[t]:new e,a=Object.keys(n),u=0;u<a.length;u+=1)l.set(a[u],n[a[u]],r);this.elements[t]=l}}else this.elements[t]=n},t.get=function(e){return this.elements[e]},t.has=function(e){return this.elements.hasOwnProperty(e)},t.addStyleType=function(t){var n=this;if(Q&&t instanceof Map||t instanceof e)t.forEach((function(e,t){n.set(t,e,!0)}));else for(var r=Object.keys(t),o=0;o<r.length;o++)this.set(r[o],t[r[o]],!0)},e}();function q(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function K(e,t){return e(t={exports:{}},t.exports),t.exports}var G=K((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e.charAt(0).toUpperCase()+e.slice(1)}}));q(G);var Y=K((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if(e.hasOwnProperty(t)){for(var o={},i=e[t],l=(0,r.default)(t),a=Object.keys(n),u=0;u<a.length;u++){var c=a[u];if(c===t)for(var s=0;s<i.length;s++)o[i[s]+l]=n[t];o[c]=n[c]}return o}return n};var n,r=(n=G)&&n.__esModule?n:{default:n}}));q(Y);var X=K((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,r,o){for(var i=0,l=e.length;i<l;++i){var a=e[i](t,n,r,o);if(a)return a}}}));q(X);var Z=K((function(e,t){function n(e,t){-1===e.indexOf(t)&&e.push(t)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(Array.isArray(t))for(var r=0,o=t.length;r<o;++r)n(e,t[r]);else n(e,t)}}));q(Z);var J=K((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e instanceof Object&&!Array.isArray(e)}}));q(J);var ee=q(K((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=e.prefixMap,l=e.plugins;return function e(a){for(var u in a){var c=a[u];if((0,i.default)(c))a[u]=e(c);else if(Array.isArray(c)){for(var s=[],f=0,d=c.length;f<d;++f){var p=(0,r.default)(l,u,c[f],a,t);(0,o.default)(s,p||c[f])}s.length>0&&(a[u]=s)}else{var m=(0,r.default)(l,u,c,a,t);m&&(a[u]=m),a=(0,n.default)(t,u,a)}}return a}};var n=l(Y),r=l(X),o=l(Z),i=l(J);function l(e){return e&&e.__esModule?e:{default:e}}}))),te=q(K((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&"text"===t)return["-webkit-text","text"]}}))),ne=K((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return"string"==typeof e&&n.test(e)};var n=/-webkit-|-moz-|-ms-/;e.exports=t.default}));q(ne);var re=K((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("calc(")>-1)return o.map((function(e){return t.replace(/calc\(/g,e+"calc(")}))};var n,r=(n=ne)&&n.__esModule?n:{default:n},o=["-webkit-","-moz-",""]})),oe=q(re),ie=K((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("cross-fade(")>-1)return o.map((function(e){return t.replace(/cross-fade\(/g,e+"cross-fade(")}))};var n,r=(n=ne)&&n.__esModule?n:{default:n},o=["-webkit-",""]})),le=q(ie),ae=K((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("cursor"===e&&r.hasOwnProperty(t))return n.map((function(e){return e+t}))};var n=["-webkit-","-moz-",""],r={"zoom-in":!0,"zoom-out":!0,grab:!0,grabbing:!0}})),ue=q(ae),ce=K((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("filter(")>-1)return o.map((function(e){return t.replace(/filter\(/g,e+"filter(")}))};var n,r=(n=ne)&&n.__esModule?n:{default:n},o=["-webkit-",""]})),se=q(ce),fe=q(K((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("display"===e&&n.hasOwnProperty(t))return n[t]};var n={flex:["-webkit-box","-moz-box","-ms-flexbox","-webkit-flex","flex"],"inline-flex":["-webkit-inline-box","-moz-inline-box","-ms-inline-flexbox","-webkit-inline-flex","inline-flex"]}}))),de=K((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,l){if(Object.prototype.hasOwnProperty.call(r,e)&&(l[r[e]]=n[t]||t),"flex"===e){if(Object.prototype.hasOwnProperty.call(o,t))return void(l.msFlex=o[t]);if(i.test(t))return void(l.msFlex=t+" 1 0%");var a=t.split(/\s/);switch(a.length){case 1:return void(l.msFlex="1 1 "+t);case 2:return void(i.test(a[1])?l.msFlex=a[0]+" "+a[1]+" 0%":l.msFlex=a[0]+" 1 "+a[1]);default:l.msFlex=t}}};var n={"space-around":"distribute","space-between":"justify","flex-start":"start","flex-end":"end"},r={alignContent:"msFlexLinePack",alignSelf:"msFlexItemAlign",alignItems:"msFlexAlign",justifyContent:"msFlexPack",order:"msFlexOrder",flexGrow:"msFlexPositive",flexShrink:"msFlexNegative",flexBasis:"msFlexPreferredSize"},o={auto:"1 1 auto",inherit:"inherit",initial:"0 1 auto",none:"0 0 auto",unset:"unset"},i=/^\d+(\.\d+)?$/})),pe=q(de),me=q(K((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,o){"flexDirection"===e&&"string"==typeof t&&(t.indexOf("column")>-1?o.WebkitBoxOrient="vertical":o.WebkitBoxOrient="horizontal",t.indexOf("reverse")>-1?o.WebkitBoxDirection="reverse":o.WebkitBoxDirection="normal"),r.hasOwnProperty(e)&&(o[r[e]]=n[t]||t)};var n={"space-around":"justify","space-between":"justify","flex-start":"start","flex-end":"end","wrap-reverse":"multiple",wrap:"multiple"},r={alignItems:"WebkitBoxAlign",justifyContent:"WebkitBoxPack",flexWrap:"WebkitBoxLines",flexGrow:"WebkitBoxFlex"}}))),he=K((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&i.test(t))return o.map((function(e){return t.replace(i,(function(t){return e+t}))}))};var n,r=(n=ne)&&n.__esModule?n:{default:n},o=["-webkit-","-moz-",""],i=/linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/gi})),ye=q(he),ge=K((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});var n=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,o=!1,i=void 0;try{for(var l,a=e[Symbol.iterator]();!(r=(l=a.next()).done)&&(n.push(l.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{!r&&a.return&&a.return()}finally{if(o)throw i}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")};function r(e){return"number"==typeof e&&!isNaN(e)}t.default=function(e,t,n){if("display"===e&&t in i)return i[t];e in l&&(0,l[e])(t,n)};var o=["center","end","start","stretch"],i={"inline-grid":["-ms-inline-grid","inline-grid"],grid:["-ms-grid","grid"]},l={alignSelf:function(e,t){o.indexOf(e)>-1&&(t.msGridRowAlign=e)},gridColumn:function(e,t){if(r(e))t.msGridColumn=e;else{var o=e.split("/").map((function(e){return+e})),i=n(o,2),a=i[0],u=i[1];l.gridColumnStart(a,t),l.gridColumnEnd(u,t)}},gridColumnEnd:function(e,t){var n=t.msGridColumn;r(e)&&r(n)&&(t.msGridColumnSpan=e-n)},gridColumnStart:function(e,t){r(e)&&(t.msGridColumn=e)},gridRow:function(e,t){if(r(e))t.msGridRow=e;else{var o=e.split("/").map((function(e){return+e})),i=n(o,2),a=i[0],u=i[1];l.gridRowStart(a,t),l.gridRowEnd(u,t)}},gridRowEnd:function(e,t){var n=t.msGridRow;r(e)&&r(n)&&(t.msGridRowSpan=e-n)},gridRowStart:function(e,t){r(e)&&(t.msGridRow=e)},gridTemplateColumns:function(e,t){t.msGridColumns=e},gridTemplateRows:function(e,t){t.msGridRows=e},justifySelf:function(e,t){o.indexOf(e)>-1&&(t.msGridColumnAlign=e)}}})),ve=q(ge),be=K((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("image-set(")>-1)return o.map((function(e){return t.replace(/image-set\(/g,e+"image-set(")}))};var n,r=(n=ne)&&n.__esModule?n:{default:n},o=["-webkit-",""]})),we=q(be),ke=q(K((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,r){if(Object.prototype.hasOwnProperty.call(n,e))for(var o=n[e],i=0,l=o.length;i<l;++i)r[o[i]]=t};var n={marginBlockStart:["WebkitMarginBefore"],marginBlockEnd:["WebkitMarginAfter"],marginInlineStart:["WebkitMarginStart","MozMarginStart"],marginInlineEnd:["WebkitMarginEnd","MozMarginEnd"],paddingBlockStart:["WebkitPaddingBefore"],paddingBlockEnd:["WebkitPaddingAfter"],paddingInlineStart:["WebkitPaddingStart","MozPaddingStart"],paddingInlineEnd:["WebkitPaddingEnd","MozPaddingEnd"],borderBlockStart:["WebkitBorderBefore"],borderBlockStartColor:["WebkitBorderBeforeColor"],borderBlockStartStyle:["WebkitBorderBeforeStyle"],borderBlockStartWidth:["WebkitBorderBeforeWidth"],borderBlockEnd:["WebkitBorderAfter"],borderBlockEndColor:["WebkitBorderAfterColor"],borderBlockEndStyle:["WebkitBorderAfterStyle"],borderBlockEndWidth:["WebkitBorderAfterWidth"],borderInlineStart:["WebkitBorderStart","MozBorderStart"],borderInlineStartColor:["WebkitBorderStartColor","MozBorderStartColor"],borderInlineStartStyle:["WebkitBorderStartStyle","MozBorderStartStyle"],borderInlineStartWidth:["WebkitBorderStartWidth","MozBorderStartWidth"],borderInlineEnd:["WebkitBorderEnd","MozBorderEnd"],borderInlineEndColor:["WebkitBorderEndColor","MozBorderEndColor"],borderInlineEndStyle:["WebkitBorderEndStyle","MozBorderEndStyle"],borderInlineEndWidth:["WebkitBorderEndWidth","MozBorderEndWidth"]}}))),xe=q(K((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("position"===e&&"sticky"===t)return["-webkit-sticky","sticky"]}}))),Ee=K((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(r.hasOwnProperty(e)&&o.hasOwnProperty(t))return n.map((function(e){return e+t}))};var n=["-webkit-","-moz-",""],r={maxHeight:!0,maxWidth:!0,width:!0,height:!0,columnWidth:!0,minWidth:!0,minHeight:!0},o={"min-content":!0,"max-content":!0,"fill-available":!0,"fit-content":!0,"contain-floats":!0}})),Se=q(Ee),Ce=/[A-Z]/g,Te=/^ms-/,Ae={};function _e(e){return"-"+e.toLowerCase()}var Pe,Oe=(Pe=Object.freeze({default:function(e){if(Ae.hasOwnProperty(e))return Ae[e];var t=e.replace(Ce,_e);return Ae[e]=Te.test(t)?"-"+t:t}}))&&Pe.default||Pe,Ne=K((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e)};var n,r=(n=Oe)&&n.__esModule?n:{default:n};e.exports=t.default}));q(Ne);var Me=K((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,i,u){if("string"==typeof t&&l.hasOwnProperty(e)){var c=function(e,t){if((0,r.default)(e))return e;for(var o=e.split(/,(?![^()]*(?:\([^()]*\))?\))/g),i=0,l=o.length;i<l;++i){var u=o[i],c=[u];for(var s in t){var f=(0,n.default)(s);if(u.indexOf(f)>-1&&"order"!==f)for(var d=t[s],p=0,m=d.length;p<m;++p)c.unshift(u.replace(f,a[d[p]]+f))}o[i]=c.join(",")}return o.join(",")}(t,u),s=c.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter((function(e){return!/-moz-|-ms-/.test(e)})).join(",");if(e.indexOf("Webkit")>-1)return s;var f=c.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter((function(e){return!/-webkit-|-ms-/.test(e)})).join(",");return e.indexOf("Moz")>-1?f:(i["Webkit"+(0,o.default)(e)]=s,i["Moz"+(0,o.default)(e)]=f,c)}};var n=i(Ne),r=i(ne),o=i(G);function i(e){return e&&e.__esModule?e:{default:e}}var l={transition:!0,transitionProperty:!0,WebkitTransition:!0,WebkitTransitionProperty:!0,MozTransition:!0,MozTransitionProperty:!0},a={Webkit:"-webkit-",Moz:"-moz-",ms:"-ms-"}})),Ie=["Webkit"],ze=["Moz"],Be=["ms"],je=["Webkit","Moz"],Re=["Webkit","ms"],Fe=["Webkit","Moz","ms"],Le=ee({plugins:[te,oe,le,ue,se,fe,pe,me,ye,ve,we,ke,xe,Se,q(Me)],prefixMap:{transform:Re,transformOrigin:Re,transformOriginX:Re,transformOriginY:Re,backfaceVisibility:Ie,perspective:Ie,perspectiveOrigin:Ie,transformStyle:Ie,transformOriginZ:Ie,animation:Ie,animationDelay:Ie,animationDirection:Ie,animationFillMode:Ie,animationDuration:Ie,animationIterationCount:Ie,animationName:Ie,animationPlayState:Ie,animationTimingFunction:Ie,appearance:je,userSelect:Fe,fontKerning:Ie,textEmphasisPosition:Ie,textEmphasis:Ie,textEmphasisStyle:Ie,textEmphasisColor:Ie,boxDecorationBreak:Ie,clipPath:Ie,maskImage:Ie,maskMode:Ie,maskRepeat:Ie,maskPosition:Ie,maskClip:Ie,maskOrigin:Ie,maskSize:Ie,maskComposite:Ie,mask:Ie,maskBorderSource:Ie,maskBorderMode:Ie,maskBorderSlice:Ie,maskBorderWidth:Ie,maskBorderOutset:Ie,maskBorderRepeat:Ie,maskBorder:Ie,maskType:Ie,textDecorationStyle:je,textDecorationSkip:je,textDecorationLine:je,textDecorationColor:je,filter:Ie,fontFeatureSettings:je,breakAfter:Fe,breakBefore:Fe,breakInside:Fe,columnCount:je,columnFill:je,columnGap:je,columnRule:je,columnRuleColor:je,columnRuleStyle:je,columnRuleWidth:je,columns:je,columnSpan:je,columnWidth:je,writingMode:Re,flex:Re,flexBasis:Ie,flexDirection:Re,flexGrow:Ie,flexFlow:Re,flexShrink:Ie,flexWrap:Re,alignContent:Ie,alignItems:Ie,alignSelf:Ie,justifyContent:Ie,order:Ie,transitionDelay:Ie,transitionDuration:Ie,transitionProperty:Ie,transitionTimingFunction:Ie,backdropFilter:Ie,scrollSnapType:Re,scrollSnapPointsX:Re,scrollSnapPointsY:Re,scrollSnapDestination:Re,scrollSnapCoordinate:Re,shapeImageThreshold:Ie,shapeImageMargin:Ie,shapeImageOutside:Ie,hyphens:Fe,flowInto:Re,flowFrom:Re,regionFragment:Re,textOrientation:Ie,boxSizing:ze,textAlignLast:ze,tabSize:ze,wrapFlow:Be,wrapThrough:Be,wrapMargin:Be,touchAction:Be,textSizeAdjust:Re,borderImage:Ie,borderImageOutset:Ie,borderImageRepeat:Ie,borderImageSlice:Ie,borderImageSource:Ie,borderImageWidth:Ie}}),De=[function(e,t,n){return":"!==e[0]?null:n(t+e)},function(e,t,n){if("@"!==e[0])return null;var r=n(t);return["".concat(e,"{").concat(r.join(""),"}")]}],We=function e(t,n,r,o,i){for(var l=new $,a=0;a<n.length;a++)l.addStyleType(n[a]);var u=new $,c=[];l.forEach((function(n,l){r.some((function(a){var u=a(l,t,(function(t){return e(t,[n],r,o,i)}));if(null!=u)return Array.isArray(u)?c.push.apply(c,j(u)):(console.warn("WARNING: Selector handlers should return an array of rules.Returning a string containing multiple rules is deprecated.",a),c.push("@media all {".concat(u,"}"))),!0}))||u.set(l,n,!0)}));var s=Ve(t,u,o,i,r);return s&&c.unshift(s),c},Ue=function(e,t,n){return"".concat((r=e,o=r.replace(R,F),"m"===o[0]&&"s"===o[1]&&"-"===o[2]?"-".concat(o):o),":").concat(n(e,t),";");var r,o},He=function(e,t){return e[t]=!0,e},Ve=function(e,t,n,r,o){!function(e,t,n){if(t)for(var r=Object.keys(t),o=0;o<r.length;o++){var i=r[o];e.has(i)&&e.set(i,t[i](e.get(i),n),!1)}}(t,n,o);var i=Object.keys(t.elements).reduce(He,Object.create(null)),l=Le(t.elements),a=Object.keys(l);if(a.length!==t.keyOrder.length)for(var u=0;u<a.length;u++)if(!i[a[u]]){var c;if((c="W"===a[u][0]?a[u][6].toLowerCase()+a[u].slice(7):"o"===a[u][1]?a[u][3].toLowerCase()+a[u].slice(4):a[u][2].toLowerCase()+a[u].slice(3))&&i[c]){var s=t.keyOrder.indexOf(c);t.keyOrder.splice(s,0,a[u])}else t.keyOrder.unshift(a[u])}for(var f=!1===r?W:U,d=[],p=0;p<t.keyOrder.length;p++){var m=t.keyOrder[p],h=l[m];if(Array.isArray(h))for(var y=0;y<h.length;y++)d.push(Ue(m,h[y],f));else d.push(Ue(m,h,f))}return d.length?"".concat(e,"{").concat(d.join(""),"}"):""},Qe=null,$e={fontFamily:function e(t){if(Array.isArray(t)){var n={};return t.forEach((function(t){n[e(t)]=!0})),Object.keys(n).join(",")}return"object"===I(t)?(Xe(t.src,"@font-face",[t],!1),'"'.concat(t.fontFamily,'"')):t},animationName:function e(t,n){if(Array.isArray(t))return t.map((function(t){return e(t,n)})).join(",");if("object"===I(t)){var r="keyframe_".concat((i=t,H(JSON.stringify(i)))),o="@keyframes ".concat(r,"{");return t instanceof $?t.forEach((function(e,t){o+=We(t,[e],n,$e,!1).join("")})):Object.keys(t).forEach((function(e){o+=We(e,[t[e]],n,$e,!1).join("")})),Ye(r,[o+="}"]),r}return t;var i}},qe={},Ke=[],Ge=!1,Ye=function(e,t){var n;if(!qe[e]){if(!Ge){if("undefined"==typeof document)throw new Error("Cannot automatically buffer without a document");Ge=!0,M()(tt)}(n=Ke).push.apply(n,j(t)),qe[e]=!0}},Xe=function(e,t,n,r){var o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[];if(!qe[e]){var i=We(t,n,o,$e,r);Ye(e,i)}},Ze=function(){Ke=[],qe={},Ge=!1,Qe=null},Je=function(e){delete qe[e]},et=function(){Ge=!1;var e=Ke;return Ke=[],e},tt=function(){var e=et();e.length>0&&function(e){if(null==Qe&&null==(Qe=document.querySelector("style[data-aphrodite]"))){var t=document.head||document.getElementsByTagName("head")[0];(Qe=document.createElement("style")).type="text/css",Qe.setAttribute("data-aphrodite",""),t.appendChild(Qe)}var n=Qe.styleSheet||Qe.sheet;if(n.insertRule){var r=n.cssRules.length;e.forEach((function(e){try{n.insertRule(e,r),r+=1}catch(e){}}))}else Qe.innerText=(Qe.innerText||"")+e.join("")}(e)},nt=function e(t,n,r,o){for(var i=0;i<t.length;i+=1)if(t[i])if(Array.isArray(t[i]))o+=e(t[i],n,r,o);else{if(!("_definition"in(l=t[i])&&"_name"in l&&"_len"in l))throw new Error("Invalid Style Definition: Styles should be defined using the StyleSheet.create method.");n.push(t[i]._name),r.push(t[i]._definition),o+=t[i]._len}var l;return o},rt=function(e,t,n){var r,o=[],i=[],l=nt(t,o,i,0);return 0===o.length?"":(r=1===o.length?"_".concat(o[0]):"_".concat(H(o.join())).concat((l%36).toString(36)),Xe(r,".".concat(r),i,e,n),r)},ot=function(e,t){return"".concat(t,"_").concat(H(e))},it=H,lt={create:function(e){for(var t={},n=Object.keys(e),r=0;r<n.length;r+=1){var o=n[r],i=e[o],l=JSON.stringify(i);t[o]={_len:l.length,_name:it(l,o),_definition:i}}return t},rehydrate:function(){(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).forEach((function(e){qe[e]=!0}))}},at="undefined"!=typeof window?null:{renderStatic:function(e){return Ze(),function(){if(Ge)throw new Error("Cannot buffer while already buffering");Ge=!0}(),{html:e(),css:{content:et().join(""),renderedClassNames:Object.keys(qe)}}}},ut=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:De;return{StyleSheet:B({},lt,{extend:function(r){var o=r.map((function(e){return e.selectorHandler})).filter((function(e){return e}));return e(t,n.concat(o))}}),StyleSheetServer:at,StyleSheetTestUtils:null,minify:function(e){it=e?H:ot},css:function(){for(var e=arguments.length,r=new Array(e),o=0;o<e;o++)r[o]=arguments[o];return rt(t,r,n)},flushToStyleTag:tt,injectAndGetClassName:rt,defaultSelectorHandlers:De,reset:Ze,resetInjectedStyle:Je}}(!0),ct=ut.StyleSheet,st=(ut.StyleSheetServer,ut.StyleSheetTestUtils,ut.css),ft=(ut.minify,ut.flushToStyleTag,ut.injectAndGetClassName,ut.defaultSelectorHandlers,ut.reset,ut.resetInjectedStyle,o(268)),dt=o.n(ft);function pt(){return pt=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},pt.apply(this,arguments)}var mt=function(t){var n=t.type,r=t.html,o=t.value,i=t.markAsRead,l=t.id,a=(0,e.useMemo)((function(){var e={"data-notification-type":n};return r&&(e.dangerouslySetInnerHTML=r),e}),[n,r]);return e.createElement("li",pt({},a,{onClick:function(){return i(l)}}),o)};mt.propTypes={id:dt().number,html:dt().shape({__html:dt().string}),type:dt().string,value:dt().string,markAsRead:dt().func},mt.defaultProps={type:"default",markAsRead:function(){}};const ht=mt;function yt(e){return yt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},yt(e)}function gt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,vt(r.key),r)}}function vt(e){var t=function(e,t){if("object"!=yt(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=yt(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==yt(t)?t:String(t)}function bt(e,t,n){return t=kt(t),function(e,t){if(t&&("object"===yt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,wt()?Reflect.construct(t,n||[],kt(e).constructor):t.apply(e,n))}function wt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(wt=function(){return!!e})()}function kt(e){return kt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},kt(e)}function xt(e,t){return xt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},xt(e,t)}function Et(e){return Et="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Et(e)}function St(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Ct(r.key),r)}}function Ct(e){var t=function(e,t){if("object"!=Et(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=Et(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Et(t)?t:String(t)}function Tt(e,t,n){return t=_t(t),function(e,t){if(t&&("object"===Et(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Pt(e)}(e,At()?Reflect.construct(t,n||[],_t(e).constructor):t.apply(e,n))}function At(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(At=function(){return!!e})()}function _t(e){return _t=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},_t(e)}function Pt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Ot(e,t){return Ot=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Ot(e,t)}var Nt=function(t){function n(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),(t=Tt(this,n,[e])).markAsRead=t.markAsRead.bind(Pt(t)),t}var r,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Ot(e,t)}(n,t),r=n,(o=[{key:"shouldComponentUpdate",value:function(e){return e.listNotifications.length>this.props.listNotifications.length}},{key:"markAsRead",value:function(e){console.log("Notification ".concat(e," has been marked as read"))}},{key:"render",value:function(){var t=this,n=this.props,r=n.displayDrawer,o=n.listNotifications;return e.createElement("div",{className:"container"},e.createElement("div",{className:"menuItem".concat(r?" display-menuItem":"")},"Your notifications"),e.createElement("div",{className:"Notifications".concat(r?" display-drawer":"")},e.createElement("button",{style:{position:"absolute",right:"16px",top:".8rem",fontSize:"16px",border:"none",background:"none",cursor:"pointer"},"aria-label":"Close",onClick:function(){console.log("Close button has been clicked\n")}},"x"),e.createElement("p",null,"Here is the list of notifications"),e.createElement("ul",null,o.map((function(n){return e.createElement(ht,{key:n.id,id:n.id,type:n.type,value:n.value,html:n.html,markAsRead:t.markAsRead})})))))}}])&&St(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),n}(e.Component);Nt.defaultProps={displayDrawer:!1,listNotifications:[]};const Mt=function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Component",r=function(r){function o(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o),bt(this,o,arguments)}var i,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&xt(e,t)}(o,r),i=o,(l=[{key:"componentDidMount",value:function(){console.log("Component ".concat(n," is mounted"))}},{key:"componentWillUnmount",value:function(){console.log("Component ".concat(n," is going to unmount"))}},{key:"render",value:function(){return e.createElement(t,this.props)}}])&&gt(i.prototype,l),Object.defineProperty(i,"prototype",{writable:!1}),o}(e.Component);return r.displayName="WithLogging(".concat(n,")"),r.getComponentName=function(){return n},r}(Nt,"Notifications");var It=o(728),zt={};function Bt(t){var n=t.isHeader,r=t.textFirstCell,o=t.textSecondCell;return e.createElement("tr",null,n?null===o?e.createElement("th",{colSpan:"2"},r):e.createElement(e.Fragment,null,e.createElement("th",null,r),e.createElement("th",null,o)):e.createElement(e.Fragment,null,e.createElement("td",null,r),e.createElement("td",null,o)))}zt.styleTagTransform=m(),zt.setAttributes=s(),zt.insert=u().bind(null,"head"),zt.domAPI=l(),zt.insertStyleElement=d(),r()(It.c,zt),It.c&&It.c.locals&&It.c.locals,Bt.propTypes={isHeader:dt().bool,textFirstCell:dt().string.isRequired,textSecondCell:dt().oneOfType([dt().string,dt().number])},Bt.defaultProps={isHeader:!1,textSecondCell:null};const jt=Bt,Rt=dt().shape({id:dt().number.isRequired,name:dt().string.isRequired,credit:dt().oneOfType([dt().string,dt().number]).isRequired});function Ft(t){var n=t.listCourses;return e.createElement("table",{id:"CourseList"},e.createElement("thead",null,e.createElement(jt,{isHeader:!0,textFirstCell:"Available courses"}),e.createElement(jt,{isHeader:!0,textFirstCell:"Course name",textSecondCell:"Credit"})),e.createElement("tbody",null,0===n.length?e.createElement(jt,{isHeader:!1,textFirstCell:"No course available yet"}):n.map((function(t){return e.createElement(jt,{key:t.id,isHeader:!1,textFirstCell:t.name,textSecondCell:t.credit})}))))}Ft.propTypes={listCourses:dt().arrayOf(Rt)},Ft.defaultProps={listCourses:[]};const Lt=Ft;var Dt=function(t){var n=t.title,r=t.children;return e.createElement("div",{className:"bodySection"},e.createElement("h2",null,n),r)};Dt.propTypes={title:dt().string.isRequired,children:dt().node},Dt.defaultProps={children:null};const Wt=Dt;var Ut=o(440),Ht={};Ht.styleTagTransform=m(),Ht.setAttributes=s(),Ht.insert=u().bind(null,"head"),Ht.domAPI=l(),Ht.insertStyleElement=d(),r()(Ut.c,Ht),Ut.c&&Ut.c.locals&&Ut.c.locals;var Vt=function(t){var n=t.title,r=t.children;return e.createElement("div",{className:"bodySectionWithMargin"},e.createElement(Wt,{title:n},r))};Vt.propsTypes={title:dt().string.isRequired,children:dt().node.isRequired};const Qt=Vt;function $t(e){return $t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},$t(e)}function qt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,en(r.key),r)}}function Kt(e,t,n){return t=Yt(t),function(e,t){if(t&&("object"===$t(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Xt(e)}(e,Gt()?Reflect.construct(t,n||[],Yt(e).constructor):t.apply(e,n))}function Gt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Gt=function(){return!!e})()}function Yt(e){return Yt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Yt(e)}function Xt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Zt(e,t){return Zt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Zt(e,t)}function Jt(e,t,n){return(t=en(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function en(e){var t=function(e,t){if("object"!=$t(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=$t(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==$t(t)?t:String(t)}var tn=function(t){function n(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),Jt(Xt(t=Kt(this,n,[e])),"handleKeyDown",(function(e){var n=t.state.logOut;"h"===e.key&&(e.ctrlKey||e.metaKey)&&(alert("Logging you out"),n())})),Jt(Xt(t),"handleLogin",(function(){t.setState({isLoggedIn:!0})})),t.state={isLoggedIn:t.props.isLoggedIn,logOut:t.props.logOut,listCourses:[{id:1,name:"ES6",credit:60},{id:2,name:"Webpack",credit:20},{id:3,name:"React",credit:40}],listNotifications:[{id:1,type:"default",value:"New course available"},{id:2,type:"urgent",value:"New resume available"},{id:3,type:"urgent",html:{__html:"<strong>Urgent requirement</strong> - complete by EOD"}}]},t}var r,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Zt(e,t)}(n,t),r=n,(o=[{key:"componentDidMount",value:function(){window.addEventListener("keydown",this.handleKeyDown)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("keydown",this.handleKeyDown)}},{key:"render",value:function(){var t=this.state,n=t.isLoggedIn,r=t.listCourses,o=t.listNotifications;return e.createElement(e.Fragment,null,e.createElement(Mt,{listNotifications:o}),e.createElement("div",{className:"App"},e.createElement(E,null),e.createElement("div",{className:st(nn.body)},n?e.createElement(Qt,{title:"Course list"},e.createElement(Lt,{listCourses:r})):e.createElement(Qt,{title:"Log in to continue"},e.createElement(T,{onLogin:this.handleLogin})),e.createElement(Wt,{title:"News from the School"},e.createElement("p",null,"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Consequuntur, adipisci?"))),e.createElement("div",{className:st(nn.footer)},e.createElement(b,null))))}}])&&qt(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),n}(e.Component),nn=ct.create({body:{display:"flex",flexDirection:"column",alignItems:"flex-start",borderTop:"3px solid #e1484c"},footer:{position:"absolute",bottom:0,borderTop:"3px solid #e1484c",width:"100%",textAlign:"center",fontStyle:"italic"}});tn.defaultProps={isLoggedIn:!1,logOut:function(){}},tn.propTypes={isLoggedIn:ft.PropTypes.bool,logOut:ft.PropTypes.func};const rn=tn;var on;t.render(e.createElement(e.StrictMode,null,e.createElement(rn,null)),document.getElementById("root")),on&&on instanceof Function&&o.e(728).then(o.bind(o,108)).then((function(e){var t=e.getCLS,n=e.getFID,r=e.getFCP,o=e.getLCP,i=e.getTTFB;t(on),n(on),r(on),o(on),i(on)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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ZUFFekI3VixFQUFBQSxjQUFDOFUsR0FBVyxDQUFDQyxNQUFPLHdCQUNsQi9VLEVBQUFBLGNBQUEsU0FBRyx1RkFHUEEsRUFBQUEsY0FBQSxPQUFLQyxVQUFXcEYsR0FBSTZhLEdBQU9JLFNBQ3pCOVYsRUFBQUEsY0FBQytWLEVBQU0sUUFLakIsMkVBQUNiLENBQUEsQ0FwRU0sQ0FBUzkxQixFQUFBQSxXQXVFWnMyQixHQUFTckUsR0FBV2pzQixPQUFPLENBQy9CcGMsS0FBTSxDQUNKbWtCLFFBQVMsT0FDVDZvQixjQUFlLFNBQ2ZuUSxXQUFZLGFBQ1pvUSxVQUFXLHFCQUViSCxPQUFRLENBQ04vTixTQUFVLFdBQ1ZtTyxPQUFRLEVBQ1JELFVBQVcsb0JBQ1h6aUMsTUFBTyxPQUNQMmlDLFVBQVcsU0FDWEMsVUFBVyxZQUlmbEIsR0FBSTM0QixhQUFlLENBQ2pCODRCLFlBQVksRUFDWkYsT0FBUSxXQUFPLEdBR2pCRCxHQUFJbkMsVUFBWSxDQUNkc0MsV0FBWXBrRCxHQUFBQSxVQUFVakIsS0FDdEJtbEQsT0FBUWxrRCxHQUFBQSxVQUFVaEIsTUFHcEIsWUMvR3dCLElBQUFvbUQsR0NNeEJDLEVBQUFBLE9BQ0V0VyxFQUFBQSxjQUFDQSxFQUFBQSxXQUFnQixLQUNmQSxFQUFBQSxjQUFDa1YsR0FBRyxPQUVOdnFELFNBQVM0ckQsZUFBZSxTRFRwQkYsSUFBZUEsY0FBdUIxWSxVQUN4Qyw2QkFBcUJwUSxNQUFLLFNBQUF3VyxHQUFpRCxJQUE5Q3lTLEVBQU16UyxFQUFOeVMsT0FBUUMsRUFBTTFTLEVBQU4wUyxPQUFRQyxFQUFNM1MsRUFBTjJTLE9BQVFDLEVBQU01UyxFQUFONFMsT0FBUUMsRUFBTzdTLEVBQVA2UyxRQUMzREosRUFBT0gsSUFDUEksRUFBT0osSUFDUEssRUFBT0wsSUFDUE0sRUFBT04sSUFDUE8sRUFBUVAsR0FDViIsInNvdXJjZXMiOlsid2VicGFjazovL3Rhc2tfMi93ZWJwYWNrL3J1bnRpbWUvbG9hZCBzY3JpcHQiLCJ3ZWJwYWNrOi8vdGFza18yLy4uLy4uL25vZGVfbW9kdWxlcy9hc2FwL2Jyb3dzZXItYXNhcC5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi4vLi4vbm9kZV9tb2R1bGVzL2FzYXAvYnJvd3Nlci1yYXcuanMiLCJ3ZWJwYWNrOi8vdGFza18yLy4uLy4uL25vZGVfbW9kdWxlcy9zdHJpbmctaGFzaC9pbmRleC5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9zcmMvQm9keVNlY3Rpb24vQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tLmNzcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9zcmMvQ291cnNlTGlzdC9Db3Vyc2VMaXN0LmNzcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9zcmMvRm9vdGVyL0Zvb3Rlci5jc3MiLCJ3ZWJwYWNrOi8vdGFza18yLy4vc3JjL0hlYWRlci9IZWFkZXIuY3NzIiwid2VicGFjazovL3Rhc2tfMi8uL3NyYy9Mb2dpbi9Mb2dpbi5jc3MiLCJ3ZWJwYWNrOi8vdGFza18yLy4vc3JjL05vdGlmaWNhdGlvbnMvTm90aWZpY2F0aW9ucy5jc3MiLCJ3ZWJwYWNrOi8vdGFza18yLy4vc3JjL2luZGV4LmNzcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3Rhc2tfMi8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3Rhc2tfMi8uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovL3Rhc2tfMi8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vdGFza18yLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL3Rhc2tfMi8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vdGFza18yLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdGFza18yLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL3Rhc2tfMi8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdGFza18yLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3Rhc2tfMi8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vdGFza18yLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3Rhc2tfMi8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly90YXNrXzIvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdGFza18yL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3Rhc2tfMi93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vdGFza18yL3dlYnBhY2svcnVudGltZS9lbnN1cmUgY2h1bmsiLCJ3ZWJwYWNrOi8vdGFza18yL3dlYnBhY2svcnVudGltZS9nZXQgamF2YXNjcmlwdCBjaHVuayBmaWxlbmFtZSIsIndlYnBhY2s6Ly90YXNrXzIvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly90YXNrXzIvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly90YXNrXzIvd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCIsIndlYnBhY2s6Ly90YXNrXzIvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vdGFza18yL3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL3Rhc2tfMi93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vdGFza18yLy4vc3JjL2luZGV4LmNzcz9jZmU0Iiwid2VicGFjazovL3Rhc2tfMi8uL3NyYy9Gb290ZXIvRm9vdGVyLmNzcz8xYmE2Iiwid2VicGFjazovL3Rhc2tfMi8uL3NyYy9Gb290ZXIvRm9vdGVyLmpzIiwid2VicGFjazovL3Rhc2tfMi8uL3NyYy91dGlscy91dGlscy5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9zcmMvYXNzZXRzL2hvbGJlcnRvbi1sb2dvLnBuZyIsIndlYnBhY2s6Ly90YXNrXzIvLi9zcmMvSGVhZGVyL0hlYWRlci5jc3M/Mjk3MiIsIndlYnBhY2s6Ly90YXNrXzIvLi9zcmMvSGVhZGVyL0hlYWRlci5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9zcmMvTG9naW4vTG9naW4uY3NzP2MwZjEiLCJ3ZWJwYWNrOi8vdGFza18yLy4vc3JjL0xvZ2luL0xvZ2luLmpzIiwid2VicGFjazovL3Rhc2tfMi8uL3NyYy9Ob3RpZmljYXRpb25zL05vdGlmaWNhdGlvbnMuY3NzP2IxMWYiLCJ3ZWJwYWNrOi8vdGFza18yLy4uLy4uL25vZGVfbW9kdWxlcy9hcGhyb2RpdGUvZXMvY2h1bmstZmViY2U0NmIuanMiLCJ3ZWJwYWNrOi8vdGFza18yLy4uLy4uL25vZGVfbW9kdWxlcy9hcGhyb2RpdGUvZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdGFza18yLy4vc3JjL05vdGlmaWNhdGlvbnMvTm90aWZpY2F0aW9uSXRlbS5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9zcmMvTm90aWZpY2F0aW9ucy9Ob3RpZmljYXRpb25zLmpzIiwid2VicGFjazovL3Rhc2tfMi8uL3NyYy9IT0MvV2l0aExvZ2dpbmcuanMiLCJ3ZWJwYWNrOi8vdGFza18yLy4vc3JjL0NvdXJzZUxpc3QvQ291cnNlTGlzdC5jc3M/MTIwNSIsIndlYnBhY2s6Ly90YXNrXzIvLi9zcmMvQ291cnNlTGlzdC9Db3Vyc2VMaXN0Um93LmpzIiwid2VicGFjazovL3Rhc2tfMi8uL3NyYy9Db3Vyc2VMaXN0L0NvdXJzZVNoYXBlLmpzIiwid2VicGFjazovL3Rhc2tfMi8uL3NyYy9Db3Vyc2VMaXN0L0NvdXJzZUxpc3QuanMiLCJ3ZWJwYWNrOi8vdGFza18yLy4vc3JjL0JvZHlTZWN0aW9uL0JvZHlTZWN0aW9uLmpzIiwid2VicGFjazovL3Rhc2tfMi8uL3NyYy9Cb2R5U2VjdGlvbi9Cb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20uY3NzPzFhNmEiLCJ3ZWJwYWNrOi8vdGFza18yLy4vc3JjL0JvZHlTZWN0aW9uL0JvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbS5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9zcmMvQXBwL0FwcC5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9zcmMvcmVwb3J0V2ViVml0YWxzLmpzIiwid2VicGFjazovL3Rhc2tfMi8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaW5Qcm9ncmVzcyA9IHt9O1xudmFyIGRhdGFXZWJwYWNrUHJlZml4ID0gXCJ0YXNrXzI6XCI7XG4vLyBsb2FkU2NyaXB0IGZ1bmN0aW9uIHRvIGxvYWQgYSBzY3JpcHQgdmlhIHNjcmlwdCB0YWdcbl9fd2VicGFja19yZXF1aXJlX18ubCA9ICh1cmwsIGRvbmUsIGtleSwgY2h1bmtJZCkgPT4ge1xuXHRpZihpblByb2dyZXNzW3VybF0pIHsgaW5Qcm9ncmVzc1t1cmxdLnB1c2goZG9uZSk7IHJldHVybjsgfVxuXHR2YXIgc2NyaXB0LCBuZWVkQXR0YWNoO1xuXHRpZihrZXkgIT09IHVuZGVmaW5lZCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IHNjcmlwdHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBzID0gc2NyaXB0c1tpXTtcblx0XHRcdGlmKHMuZ2V0QXR0cmlidXRlKFwic3JjXCIpID09IHVybCB8fCBzLmdldEF0dHJpYnV0ZShcImRhdGEtd2VicGFja1wiKSA9PSBkYXRhV2VicGFja1ByZWZpeCArIGtleSkgeyBzY3JpcHQgPSBzOyBicmVhazsgfVxuXHRcdH1cblx0fVxuXHRpZighc2NyaXB0KSB7XG5cdFx0bmVlZEF0dGFjaCA9IHRydWU7XG5cdFx0c2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG5cblx0XHRzY3JpcHQuY2hhcnNldCA9ICd1dGYtOCc7XG5cdFx0c2NyaXB0LnRpbWVvdXQgPSAxMjA7XG5cdFx0aWYgKF9fd2VicGFja19yZXF1aXJlX18ubmMpIHtcblx0XHRcdHNjcmlwdC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBfX3dlYnBhY2tfcmVxdWlyZV9fLm5jKTtcblx0XHR9XG5cdFx0c2NyaXB0LnNldEF0dHJpYnV0ZShcImRhdGEtd2VicGFja1wiLCBkYXRhV2VicGFja1ByZWZpeCArIGtleSk7XG5cblx0XHRzY3JpcHQuc3JjID0gdXJsO1xuXHR9XG5cdGluUHJvZ3Jlc3NbdXJsXSA9IFtkb25lXTtcblx0dmFyIG9uU2NyaXB0Q29tcGxldGUgPSAocHJldiwgZXZlbnQpID0+IHtcblx0XHQvLyBhdm9pZCBtZW0gbGVha3MgaW4gSUUuXG5cdFx0c2NyaXB0Lm9uZXJyb3IgPSBzY3JpcHQub25sb2FkID0gbnVsbDtcblx0XHRjbGVhclRpbWVvdXQodGltZW91dCk7XG5cdFx0dmFyIGRvbmVGbnMgPSBpblByb2dyZXNzW3VybF07XG5cdFx0ZGVsZXRlIGluUHJvZ3Jlc3NbdXJsXTtcblx0XHRzY3JpcHQucGFyZW50Tm9kZSAmJiBzY3JpcHQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzY3JpcHQpO1xuXHRcdGRvbmVGbnMgJiYgZG9uZUZucy5mb3JFYWNoKChmbikgPT4gKGZuKGV2ZW50KSkpO1xuXHRcdGlmKHByZXYpIHJldHVybiBwcmV2KGV2ZW50KTtcblx0fVxuXHR2YXIgdGltZW91dCA9IHNldFRpbWVvdXQob25TY3JpcHRDb21wbGV0ZS5iaW5kKG51bGwsIHVuZGVmaW5lZCwgeyB0eXBlOiAndGltZW91dCcsIHRhcmdldDogc2NyaXB0IH0pLCAxMjAwMDApO1xuXHRzY3JpcHQub25lcnJvciA9IG9uU2NyaXB0Q29tcGxldGUuYmluZChudWxsLCBzY3JpcHQub25lcnJvcik7XG5cdHNjcmlwdC5vbmxvYWQgPSBvblNjcmlwdENvbXBsZXRlLmJpbmQobnVsbCwgc2NyaXB0Lm9ubG9hZCk7XG5cdG5lZWRBdHRhY2ggJiYgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzY3JpcHQpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLy8gcmF3QXNhcCBwcm92aWRlcyBldmVyeXRoaW5nIHdlIG5lZWQgZXhjZXB0IGV4Y2VwdGlvbiBtYW5hZ2VtZW50LlxudmFyIHJhd0FzYXAgPSByZXF1aXJlKFwiLi9yYXdcIik7XG4vLyBSYXdUYXNrcyBhcmUgcmVjeWNsZWQgdG8gcmVkdWNlIEdDIGNodXJuLlxudmFyIGZyZWVUYXNrcyA9IFtdO1xuLy8gV2UgcXVldWUgZXJyb3JzIHRvIGVuc3VyZSB0aGV5IGFyZSB0aHJvd24gaW4gcmlnaHQgb3JkZXIgKEZJRk8pLlxuLy8gQXJyYXktYXMtcXVldWUgaXMgZ29vZCBlbm91Z2ggaGVyZSwgc2luY2Ugd2UgYXJlIGp1c3QgZGVhbGluZyB3aXRoIGV4Y2VwdGlvbnMuXG52YXIgcGVuZGluZ0Vycm9ycyA9IFtdO1xudmFyIHJlcXVlc3RFcnJvclRocm93ID0gcmF3QXNhcC5tYWtlUmVxdWVzdENhbGxGcm9tVGltZXIodGhyb3dGaXJzdEVycm9yKTtcblxuZnVuY3Rpb24gdGhyb3dGaXJzdEVycm9yKCkge1xuICAgIGlmIChwZW5kaW5nRXJyb3JzLmxlbmd0aCkge1xuICAgICAgICB0aHJvdyBwZW5kaW5nRXJyb3JzLnNoaWZ0KCk7XG4gICAgfVxufVxuXG4vKipcbiAqIENhbGxzIGEgdGFzayBhcyBzb29uIGFzIHBvc3NpYmxlIGFmdGVyIHJldHVybmluZywgaW4gaXRzIG93biBldmVudCwgd2l0aCBwcmlvcml0eVxuICogb3ZlciBvdGhlciBldmVudHMgbGlrZSBhbmltYXRpb24sIHJlZmxvdywgYW5kIHJlcGFpbnQuIEFuIGVycm9yIHRocm93biBmcm9tIGFuXG4gKiBldmVudCB3aWxsIG5vdCBpbnRlcnJ1cHQsIG5vciBldmVuIHN1YnN0YW50aWFsbHkgc2xvdyBkb3duIHRoZSBwcm9jZXNzaW5nIG9mXG4gKiBvdGhlciBldmVudHMsIGJ1dCB3aWxsIGJlIHJhdGhlciBwb3N0cG9uZWQgdG8gYSBsb3dlciBwcmlvcml0eSBldmVudC5cbiAqIEBwYXJhbSB7e2NhbGx9fSB0YXNrIEEgY2FsbGFibGUgb2JqZWN0LCB0eXBpY2FsbHkgYSBmdW5jdGlvbiB0aGF0IHRha2VzIG5vXG4gKiBhcmd1bWVudHMuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gYXNhcDtcbmZ1bmN0aW9uIGFzYXAodGFzaykge1xuICAgIHZhciByYXdUYXNrO1xuICAgIGlmIChmcmVlVGFza3MubGVuZ3RoKSB7XG4gICAgICAgIHJhd1Rhc2sgPSBmcmVlVGFza3MucG9wKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmF3VGFzayA9IG5ldyBSYXdUYXNrKCk7XG4gICAgfVxuICAgIHJhd1Rhc2sudGFzayA9IHRhc2s7XG4gICAgcmF3QXNhcChyYXdUYXNrKTtcbn1cblxuLy8gV2Ugd3JhcCB0YXNrcyB3aXRoIHJlY3ljbGFibGUgdGFzayBvYmplY3RzLiAgQSB0YXNrIG9iamVjdCBpbXBsZW1lbnRzXG4vLyBgY2FsbGAsIGp1c3QgbGlrZSBhIGZ1bmN0aW9uLlxuZnVuY3Rpb24gUmF3VGFzaygpIHtcbiAgICB0aGlzLnRhc2sgPSBudWxsO1xufVxuXG4vLyBUaGUgc29sZSBwdXJwb3NlIG9mIHdyYXBwaW5nIHRoZSB0YXNrIGlzIHRvIGNhdGNoIHRoZSBleGNlcHRpb24gYW5kIHJlY3ljbGVcbi8vIHRoZSB0YXNrIG9iamVjdCBhZnRlciBpdHMgc2luZ2xlIHVzZS5cblJhd1Rhc2sucHJvdG90eXBlLmNhbGwgPSBmdW5jdGlvbiAoKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgdGhpcy50YXNrLmNhbGwoKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBpZiAoYXNhcC5vbmVycm9yKSB7XG4gICAgICAgICAgICAvLyBUaGlzIGhvb2sgZXhpc3RzIHB1cmVseSBmb3IgdGVzdGluZyBwdXJwb3Nlcy5cbiAgICAgICAgICAgIC8vIEl0cyBuYW1lIHdpbGwgYmUgcGVyaW9kaWNhbGx5IHJhbmRvbWl6ZWQgdG8gYnJlYWsgYW55IGNvZGUgdGhhdFxuICAgICAgICAgICAgLy8gZGVwZW5kcyBvbiBpdHMgZXhpc3RlbmNlLlxuICAgICAgICAgICAgYXNhcC5vbmVycm9yKGVycm9yKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIEluIGEgd2ViIGJyb3dzZXIsIGV4Y2VwdGlvbnMgYXJlIG5vdCBmYXRhbC4gSG93ZXZlciwgdG8gYXZvaWRcbiAgICAgICAgICAgIC8vIHNsb3dpbmcgZG93biB0aGUgcXVldWUgb2YgcGVuZGluZyB0YXNrcywgd2UgcmV0aHJvdyB0aGUgZXJyb3IgaW4gYVxuICAgICAgICAgICAgLy8gbG93ZXIgcHJpb3JpdHkgdHVybi5cbiAgICAgICAgICAgIHBlbmRpbmdFcnJvcnMucHVzaChlcnJvcik7XG4gICAgICAgICAgICByZXF1ZXN0RXJyb3JUaHJvdygpO1xuICAgICAgICB9XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgICAgdGhpcy50YXNrID0gbnVsbDtcbiAgICAgICAgZnJlZVRhc2tzW2ZyZWVUYXNrcy5sZW5ndGhdID0gdGhpcztcbiAgICB9XG59O1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIFVzZSB0aGUgZmFzdGVzdCBtZWFucyBwb3NzaWJsZSB0byBleGVjdXRlIGEgdGFzayBpbiBpdHMgb3duIHR1cm4sIHdpdGhcbi8vIHByaW9yaXR5IG92ZXIgb3RoZXIgZXZlbnRzIGluY2x1ZGluZyBJTywgYW5pbWF0aW9uLCByZWZsb3csIGFuZCByZWRyYXdcbi8vIGV2ZW50cyBpbiBicm93c2Vycy5cbi8vXG4vLyBBbiBleGNlcHRpb24gdGhyb3duIGJ5IGEgdGFzayB3aWxsIHBlcm1hbmVudGx5IGludGVycnVwdCB0aGUgcHJvY2Vzc2luZyBvZlxuLy8gc3Vic2VxdWVudCB0YXNrcy4gVGhlIGhpZ2hlciBsZXZlbCBgYXNhcGAgZnVuY3Rpb24gZW5zdXJlcyB0aGF0IGlmIGFuXG4vLyBleGNlcHRpb24gaXMgdGhyb3duIGJ5IGEgdGFzaywgdGhhdCB0aGUgdGFzayBxdWV1ZSB3aWxsIGNvbnRpbnVlIGZsdXNoaW5nIGFzXG4vLyBzb29uIGFzIHBvc3NpYmxlLCBidXQgaWYgeW91IHVzZSBgcmF3QXNhcGAgZGlyZWN0bHksIHlvdSBhcmUgcmVzcG9uc2libGUgdG9cbi8vIGVpdGhlciBlbnN1cmUgdGhhdCBubyBleGNlcHRpb25zIGFyZSB0aHJvd24gZnJvbSB5b3VyIHRhc2ssIG9yIHRvIG1hbnVhbGx5XG4vLyBjYWxsIGByYXdBc2FwLnJlcXVlc3RGbHVzaGAgaWYgYW4gZXhjZXB0aW9uIGlzIHRocm93bi5cbm1vZHVsZS5leHBvcnRzID0gcmF3QXNhcDtcbmZ1bmN0aW9uIHJhd0FzYXAodGFzaykge1xuICAgIGlmICghcXVldWUubGVuZ3RoKSB7XG4gICAgICAgIHJlcXVlc3RGbHVzaCgpO1xuICAgICAgICBmbHVzaGluZyA9IHRydWU7XG4gICAgfVxuICAgIC8vIEVxdWl2YWxlbnQgdG8gcHVzaCwgYnV0IGF2b2lkcyBhIGZ1bmN0aW9uIGNhbGwuXG4gICAgcXVldWVbcXVldWUubGVuZ3RoXSA9IHRhc2s7XG59XG5cbnZhciBxdWV1ZSA9IFtdO1xuLy8gT25jZSBhIGZsdXNoIGhhcyBiZWVuIHJlcXVlc3RlZCwgbm8gZnVydGhlciBjYWxscyB0byBgcmVxdWVzdEZsdXNoYCBhcmVcbi8vIG5lY2Vzc2FyeSB1bnRpbCB0aGUgbmV4dCBgZmx1c2hgIGNvbXBsZXRlcy5cbnZhciBmbHVzaGluZyA9IGZhbHNlO1xuLy8gYHJlcXVlc3RGbHVzaGAgaXMgYW4gaW1wbGVtZW50YXRpb24tc3BlY2lmaWMgbWV0aG9kIHRoYXQgYXR0ZW1wdHMgdG8ga2lja1xuLy8gb2ZmIGEgYGZsdXNoYCBldmVudCBhcyBxdWlja2x5IGFzIHBvc3NpYmxlLiBgZmx1c2hgIHdpbGwgYXR0ZW1wdCB0byBleGhhdXN0XG4vLyB0aGUgZXZlbnQgcXVldWUgYmVmb3JlIHlpZWxkaW5nIHRvIHRoZSBicm93c2VyJ3Mgb3duIGV2ZW50IGxvb3AuXG52YXIgcmVxdWVzdEZsdXNoO1xuLy8gVGhlIHBvc2l0aW9uIG9mIHRoZSBuZXh0IHRhc2sgdG8gZXhlY3V0ZSBpbiB0aGUgdGFzayBxdWV1ZS4gVGhpcyBpc1xuLy8gcHJlc2VydmVkIGJldHdlZW4gY2FsbHMgdG8gYGZsdXNoYCBzbyB0aGF0IGl0IGNhbiBiZSByZXN1bWVkIGlmXG4vLyBhIHRhc2sgdGhyb3dzIGFuIGV4Y2VwdGlvbi5cbnZhciBpbmRleCA9IDA7XG4vLyBJZiBhIHRhc2sgc2NoZWR1bGVzIGFkZGl0aW9uYWwgdGFza3MgcmVjdXJzaXZlbHksIHRoZSB0YXNrIHF1ZXVlIGNhbiBncm93XG4vLyB1bmJvdW5kZWQuIFRvIHByZXZlbnQgbWVtb3J5IGV4aGF1c3Rpb24sIHRoZSB0YXNrIHF1ZXVlIHdpbGwgcGVyaW9kaWNhbGx5XG4vLyB0cnVuY2F0ZSBhbHJlYWR5LWNvbXBsZXRlZCB0YXNrcy5cbnZhciBjYXBhY2l0eSA9IDEwMjQ7XG5cbi8vIFRoZSBmbHVzaCBmdW5jdGlvbiBwcm9jZXNzZXMgYWxsIHRhc2tzIHRoYXQgaGF2ZSBiZWVuIHNjaGVkdWxlZCB3aXRoXG4vLyBgcmF3QXNhcGAgdW5sZXNzIGFuZCB1bnRpbCBvbmUgb2YgdGhvc2UgdGFza3MgdGhyb3dzIGFuIGV4Y2VwdGlvbi5cbi8vIElmIGEgdGFzayB0aHJvd3MgYW4gZXhjZXB0aW9uLCBgZmx1c2hgIGVuc3VyZXMgdGhhdCBpdHMgc3RhdGUgd2lsbCByZW1haW5cbi8vIGNvbnNpc3RlbnQgYW5kIHdpbGwgcmVzdW1lIHdoZXJlIGl0IGxlZnQgb2ZmIHdoZW4gY2FsbGVkIGFnYWluLlxuLy8gSG93ZXZlciwgYGZsdXNoYCBkb2VzIG5vdCBtYWtlIGFueSBhcnJhbmdlbWVudHMgdG8gYmUgY2FsbGVkIGFnYWluIGlmIGFuXG4vLyBleGNlcHRpb24gaXMgdGhyb3duLlxuZnVuY3Rpb24gZmx1c2goKSB7XG4gICAgd2hpbGUgKGluZGV4IDwgcXVldWUubGVuZ3RoKSB7XG4gICAgICAgIHZhciBjdXJyZW50SW5kZXggPSBpbmRleDtcbiAgICAgICAgLy8gQWR2YW5jZSB0aGUgaW5kZXggYmVmb3JlIGNhbGxpbmcgdGhlIHRhc2suIFRoaXMgZW5zdXJlcyB0aGF0IHdlIHdpbGxcbiAgICAgICAgLy8gYmVnaW4gZmx1c2hpbmcgb24gdGhlIG5leHQgdGFzayB0aGUgdGFzayB0aHJvd3MgYW4gZXJyb3IuXG4gICAgICAgIGluZGV4ID0gaW5kZXggKyAxO1xuICAgICAgICBxdWV1ZVtjdXJyZW50SW5kZXhdLmNhbGwoKTtcbiAgICAgICAgLy8gUHJldmVudCBsZWFraW5nIG1lbW9yeSBmb3IgbG9uZyBjaGFpbnMgb2YgcmVjdXJzaXZlIGNhbGxzIHRvIGBhc2FwYC5cbiAgICAgICAgLy8gSWYgd2UgY2FsbCBgYXNhcGAgd2l0aGluIHRhc2tzIHNjaGVkdWxlZCBieSBgYXNhcGAsIHRoZSBxdWV1ZSB3aWxsXG4gICAgICAgIC8vIGdyb3csIGJ1dCB0byBhdm9pZCBhbiBPKG4pIHdhbGsgZm9yIGV2ZXJ5IHRhc2sgd2UgZXhlY3V0ZSwgd2UgZG9uJ3RcbiAgICAgICAgLy8gc2hpZnQgdGFza3Mgb2ZmIHRoZSBxdWV1ZSBhZnRlciB0aGV5IGhhdmUgYmVlbiBleGVjdXRlZC5cbiAgICAgICAgLy8gSW5zdGVhZCwgd2UgcGVyaW9kaWNhbGx5IHNoaWZ0IDEwMjQgdGFza3Mgb2ZmIHRoZSBxdWV1ZS5cbiAgICAgICAgaWYgKGluZGV4ID4gY2FwYWNpdHkpIHtcbiAgICAgICAgICAgIC8vIE1hbnVhbGx5IHNoaWZ0IGFsbCB2YWx1ZXMgc3RhcnRpbmcgYXQgdGhlIGluZGV4IGJhY2sgdG8gdGhlXG4gICAgICAgICAgICAvLyBiZWdpbm5pbmcgb2YgdGhlIHF1ZXVlLlxuICAgICAgICAgICAgZm9yICh2YXIgc2NhbiA9IDAsIG5ld0xlbmd0aCA9IHF1ZXVlLmxlbmd0aCAtIGluZGV4OyBzY2FuIDwgbmV3TGVuZ3RoOyBzY2FuKyspIHtcbiAgICAgICAgICAgICAgICBxdWV1ZVtzY2FuXSA9IHF1ZXVlW3NjYW4gKyBpbmRleF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBxdWV1ZS5sZW5ndGggLT0gaW5kZXg7XG4gICAgICAgICAgICBpbmRleCA9IDA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcXVldWUubGVuZ3RoID0gMDtcbiAgICBpbmRleCA9IDA7XG4gICAgZmx1c2hpbmcgPSBmYWxzZTtcbn1cblxuLy8gYHJlcXVlc3RGbHVzaGAgaXMgaW1wbGVtZW50ZWQgdXNpbmcgYSBzdHJhdGVneSBiYXNlZCBvbiBkYXRhIGNvbGxlY3RlZCBmcm9tXG4vLyBldmVyeSBhdmFpbGFibGUgU2F1Y2VMYWJzIFNlbGVuaXVtIHdlYiBkcml2ZXIgd29ya2VyIGF0IHRpbWUgb2Ygd3JpdGluZy5cbi8vIGh0dHBzOi8vZG9jcy5nb29nbGUuY29tL3NwcmVhZHNoZWV0cy9kLzFtRy01VVlHdXA1cXhHZEVNV2toUDZCV0N6MDUzTlViMkUxUW9VVFUxNnVBL2VkaXQjZ2lkPTc4MzcyNDU5M1xuXG4vLyBTYWZhcmkgNiBhbmQgNi4xIGZvciBkZXNrdG9wLCBpUGFkLCBhbmQgaVBob25lIGFyZSB0aGUgb25seSBicm93c2VycyB0aGF0XG4vLyBoYXZlIFdlYktpdE11dGF0aW9uT2JzZXJ2ZXIgYnV0IG5vdCB1bi1wcmVmaXhlZCBNdXRhdGlvbk9ic2VydmVyLlxuLy8gTXVzdCB1c2UgYGdsb2JhbGAgb3IgYHNlbGZgIGluc3RlYWQgb2YgYHdpbmRvd2AgdG8gd29yayBpbiBib3RoIGZyYW1lcyBhbmQgd2ViXG4vLyB3b3JrZXJzLiBgZ2xvYmFsYCBpcyBhIHByb3Zpc2lvbiBvZiBCcm93c2VyaWZ5LCBNciwgTXJzLCBvciBNb3AuXG5cbi8qIGdsb2JhbHMgc2VsZiAqL1xudmFyIHNjb3BlID0gdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbCA6IHNlbGY7XG52YXIgQnJvd3Nlck11dGF0aW9uT2JzZXJ2ZXIgPSBzY29wZS5NdXRhdGlvbk9ic2VydmVyIHx8IHNjb3BlLldlYktpdE11dGF0aW9uT2JzZXJ2ZXI7XG5cbi8vIE11dGF0aW9uT2JzZXJ2ZXJzIGFyZSBkZXNpcmFibGUgYmVjYXVzZSB0aGV5IGhhdmUgaGlnaCBwcmlvcml0eSBhbmQgd29ya1xuLy8gcmVsaWFibHkgZXZlcnl3aGVyZSB0aGV5IGFyZSBpbXBsZW1lbnRlZC5cbi8vIFRoZXkgYXJlIGltcGxlbWVudGVkIGluIGFsbCBtb2Rlcm4gYnJvd3NlcnMuXG4vL1xuLy8gLSBBbmRyb2lkIDQtNC4zXG4vLyAtIENocm9tZSAyNi0zNFxuLy8gLSBGaXJlZm94IDE0LTI5XG4vLyAtIEludGVybmV0IEV4cGxvcmVyIDExXG4vLyAtIGlQYWQgU2FmYXJpIDYtNy4xXG4vLyAtIGlQaG9uZSBTYWZhcmkgNy03LjFcbi8vIC0gU2FmYXJpIDYtN1xuaWYgKHR5cGVvZiBCcm93c2VyTXV0YXRpb25PYnNlcnZlciA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgcmVxdWVzdEZsdXNoID0gbWFrZVJlcXVlc3RDYWxsRnJvbU11dGF0aW9uT2JzZXJ2ZXIoZmx1c2gpO1xuXG4vLyBNZXNzYWdlQ2hhbm5lbHMgYXJlIGRlc2lyYWJsZSBiZWNhdXNlIHRoZXkgZ2l2ZSBkaXJlY3QgYWNjZXNzIHRvIHRoZSBIVE1MXG4vLyB0YXNrIHF1ZXVlLCBhcmUgaW1wbGVtZW50ZWQgaW4gSW50ZXJuZXQgRXhwbG9yZXIgMTAsIFNhZmFyaSA1LjAtMSwgYW5kIE9wZXJhXG4vLyAxMS0xMiwgYW5kIGluIHdlYiB3b3JrZXJzIGluIG1hbnkgZW5naW5lcy5cbi8vIEFsdGhvdWdoIG1lc3NhZ2UgY2hhbm5lbHMgeWllbGQgdG8gYW55IHF1ZXVlZCByZW5kZXJpbmcgYW5kIElPIHRhc2tzLCB0aGV5XG4vLyB3b3VsZCBiZSBiZXR0ZXIgdGhhbiBpbXBvc2luZyB0aGUgNG1zIGRlbGF5IG9mIHRpbWVycy5cbi8vIEhvd2V2ZXIsIHRoZXkgZG8gbm90IHdvcmsgcmVsaWFibHkgaW4gSW50ZXJuZXQgRXhwbG9yZXIgb3IgU2FmYXJpLlxuXG4vLyBJbnRlcm5ldCBFeHBsb3JlciAxMCBpcyB0aGUgb25seSBicm93c2VyIHRoYXQgaGFzIHNldEltbWVkaWF0ZSBidXQgZG9lc1xuLy8gbm90IGhhdmUgTXV0YXRpb25PYnNlcnZlcnMuXG4vLyBBbHRob3VnaCBzZXRJbW1lZGlhdGUgeWllbGRzIHRvIHRoZSBicm93c2VyJ3MgcmVuZGVyZXIsIGl0IHdvdWxkIGJlXG4vLyBwcmVmZXJyYWJsZSB0byBmYWxsaW5nIGJhY2sgdG8gc2V0VGltZW91dCBzaW5jZSBpdCBkb2VzIG5vdCBoYXZlXG4vLyB0aGUgbWluaW11bSA0bXMgcGVuYWx0eS5cbi8vIFVuZm9ydHVuYXRlbHkgdGhlcmUgYXBwZWFycyB0byBiZSBhIGJ1ZyBpbiBJbnRlcm5ldCBFeHBsb3JlciAxMCBNb2JpbGUgKGFuZFxuLy8gRGVza3RvcCB0byBhIGxlc3NlciBleHRlbnQpIHRoYXQgcmVuZGVycyBib3RoIHNldEltbWVkaWF0ZSBhbmRcbi8vIE1lc3NhZ2VDaGFubmVsIHVzZWxlc3MgZm9yIHRoZSBwdXJwb3NlcyBvZiBBU0FQLlxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2tyaXNrb3dhbC9xL2lzc3Vlcy8zOTZcblxuLy8gVGltZXJzIGFyZSBpbXBsZW1lbnRlZCB1bml2ZXJzYWxseS5cbi8vIFdlIGZhbGwgYmFjayB0byB0aW1lcnMgaW4gd29ya2VycyBpbiBtb3N0IGVuZ2luZXMsIGFuZCBpbiBmb3JlZ3JvdW5kXG4vLyBjb250ZXh0cyBpbiB0aGUgZm9sbG93aW5nIGJyb3dzZXJzLlxuLy8gSG93ZXZlciwgbm90ZSB0aGF0IGV2ZW4gdGhpcyBzaW1wbGUgY2FzZSByZXF1aXJlcyBudWFuY2VzIHRvIG9wZXJhdGUgaW4gYVxuLy8gYnJvYWQgc3BlY3RydW0gb2YgYnJvd3NlcnMuXG4vL1xuLy8gLSBGaXJlZm94IDMtMTNcbi8vIC0gSW50ZXJuZXQgRXhwbG9yZXIgNi05XG4vLyAtIGlQYWQgU2FmYXJpIDQuM1xuLy8gLSBMeW54IDIuOC43XG59IGVsc2Uge1xuICAgIHJlcXVlc3RGbHVzaCA9IG1ha2VSZXF1ZXN0Q2FsbEZyb21UaW1lcihmbHVzaCk7XG59XG5cbi8vIGByZXF1ZXN0Rmx1c2hgIHJlcXVlc3RzIHRoYXQgdGhlIGhpZ2ggcHJpb3JpdHkgZXZlbnQgcXVldWUgYmUgZmx1c2hlZCBhc1xuLy8gc29vbiBhcyBwb3NzaWJsZS5cbi8vIFRoaXMgaXMgdXNlZnVsIHRvIHByZXZlbnQgYW4gZXJyb3IgdGhyb3duIGluIGEgdGFzayBmcm9tIHN0YWxsaW5nIHRoZSBldmVudFxuLy8gcXVldWUgaWYgdGhlIGV4Y2VwdGlvbiBoYW5kbGVkIGJ5IE5vZGUuanPigJlzXG4vLyBgcHJvY2Vzcy5vbihcInVuY2F1Z2h0RXhjZXB0aW9uXCIpYCBvciBieSBhIGRvbWFpbi5cbnJhd0FzYXAucmVxdWVzdEZsdXNoID0gcmVxdWVzdEZsdXNoO1xuXG4vLyBUbyByZXF1ZXN0IGEgaGlnaCBwcmlvcml0eSBldmVudCwgd2UgaW5kdWNlIGEgbXV0YXRpb24gb2JzZXJ2ZXIgYnkgdG9nZ2xpbmdcbi8vIHRoZSB0ZXh0IG9mIGEgdGV4dCBub2RlIGJldHdlZW4gXCIxXCIgYW5kIFwiLTFcIi5cbmZ1bmN0aW9uIG1ha2VSZXF1ZXN0Q2FsbEZyb21NdXRhdGlvbk9ic2VydmVyKGNhbGxiYWNrKSB7XG4gICAgdmFyIHRvZ2dsZSA9IDE7XG4gICAgdmFyIG9ic2VydmVyID0gbmV3IEJyb3dzZXJNdXRhdGlvbk9ic2VydmVyKGNhbGxiYWNrKTtcbiAgICB2YXIgbm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFwiXCIpO1xuICAgIG9ic2VydmVyLm9ic2VydmUobm9kZSwge2NoYXJhY3RlckRhdGE6IHRydWV9KTtcbiAgICByZXR1cm4gZnVuY3Rpb24gcmVxdWVzdENhbGwoKSB7XG4gICAgICAgIHRvZ2dsZSA9IC10b2dnbGU7XG4gICAgICAgIG5vZGUuZGF0YSA9IHRvZ2dsZTtcbiAgICB9O1xufVxuXG4vLyBUaGUgbWVzc2FnZSBjaGFubmVsIHRlY2huaXF1ZSB3YXMgZGlzY292ZXJlZCBieSBNYWx0ZSBVYmwgYW5kIHdhcyB0aGVcbi8vIG9yaWdpbmFsIGZvdW5kYXRpb24gZm9yIHRoaXMgbGlicmFyeS5cbi8vIGh0dHA6Ly93d3cubm9uYmxvY2tpbmcuaW8vMjAxMS8wNi93aW5kb3duZXh0dGljay5odG1sXG5cbi8vIFNhZmFyaSA2LjAuNSAoYXQgbGVhc3QpIGludGVybWl0dGVudGx5IGZhaWxzIHRvIGNyZWF0ZSBtZXNzYWdlIHBvcnRzIG9uIGFcbi8vIHBhZ2UncyBmaXJzdCBsb2FkLiBUaGFua2Z1bGx5LCB0aGlzIHZlcnNpb24gb2YgU2FmYXJpIHN1cHBvcnRzXG4vLyBNdXRhdGlvbk9ic2VydmVycywgc28gd2UgZG9uJ3QgbmVlZCB0byBmYWxsIGJhY2sgaW4gdGhhdCBjYXNlLlxuXG4vLyBmdW5jdGlvbiBtYWtlUmVxdWVzdENhbGxGcm9tTWVzc2FnZUNoYW5uZWwoY2FsbGJhY2spIHtcbi8vICAgICB2YXIgY2hhbm5lbCA9IG5ldyBNZXNzYWdlQ2hhbm5lbCgpO1xuLy8gICAgIGNoYW5uZWwucG9ydDEub25tZXNzYWdlID0gY2FsbGJhY2s7XG4vLyAgICAgcmV0dXJuIGZ1bmN0aW9uIHJlcXVlc3RDYWxsKCkge1xuLy8gICAgICAgICBjaGFubmVsLnBvcnQyLnBvc3RNZXNzYWdlKDApO1xuLy8gICAgIH07XG4vLyB9XG5cbi8vIEZvciByZWFzb25zIGV4cGxhaW5lZCBhYm92ZSwgd2UgYXJlIGFsc28gdW5hYmxlIHRvIHVzZSBgc2V0SW1tZWRpYXRlYFxuLy8gdW5kZXIgYW55IGNpcmN1bXN0YW5jZXMuXG4vLyBFdmVuIGlmIHdlIHdlcmUsIHRoZXJlIGlzIGFub3RoZXIgYnVnIGluIEludGVybmV0IEV4cGxvcmVyIDEwLlxuLy8gSXQgaXMgbm90IHN1ZmZpY2llbnQgdG8gYXNzaWduIGBzZXRJbW1lZGlhdGVgIHRvIGByZXF1ZXN0Rmx1c2hgIGJlY2F1c2Vcbi8vIGBzZXRJbW1lZGlhdGVgIG11c3QgYmUgY2FsbGVkICpieSBuYW1lKiBhbmQgdGhlcmVmb3JlIG11c3QgYmUgd3JhcHBlZCBpbiBhXG4vLyBjbG9zdXJlLlxuLy8gTmV2ZXIgZm9yZ2V0LlxuXG4vLyBmdW5jdGlvbiBtYWtlUmVxdWVzdENhbGxGcm9tU2V0SW1tZWRpYXRlKGNhbGxiYWNrKSB7XG4vLyAgICAgcmV0dXJuIGZ1bmN0aW9uIHJlcXVlc3RDYWxsKCkge1xuLy8gICAgICAgICBzZXRJbW1lZGlhdGUoY2FsbGJhY2spO1xuLy8gICAgIH07XG4vLyB9XG5cbi8vIFNhZmFyaSA2LjAgaGFzIGEgcHJvYmxlbSB3aGVyZSB0aW1lcnMgd2lsbCBnZXQgbG9zdCB3aGlsZSB0aGUgdXNlciBpc1xuLy8gc2Nyb2xsaW5nLiBUaGlzIHByb2JsZW0gZG9lcyBub3QgaW1wYWN0IEFTQVAgYmVjYXVzZSBTYWZhcmkgNi4wIHN1cHBvcnRzXG4vLyBtdXRhdGlvbiBvYnNlcnZlcnMsIHNvIHRoYXQgaW1wbGVtZW50YXRpb24gaXMgdXNlZCBpbnN0ZWFkLlxuLy8gSG93ZXZlciwgaWYgd2UgZXZlciBlbGVjdCB0byB1c2UgdGltZXJzIGluIFNhZmFyaSwgdGhlIHByZXZhbGVudCB3b3JrLWFyb3VuZFxuLy8gaXMgdG8gYWRkIGEgc2Nyb2xsIGV2ZW50IGxpc3RlbmVyIHRoYXQgY2FsbHMgZm9yIGEgZmx1c2guXG5cbi8vIGBzZXRUaW1lb3V0YCBkb2VzIG5vdCBjYWxsIHRoZSBwYXNzZWQgY2FsbGJhY2sgaWYgdGhlIGRlbGF5IGlzIGxlc3MgdGhhblxuLy8gYXBwcm94aW1hdGVseSA3IGluIHdlYiB3b3JrZXJzIGluIEZpcmVmb3ggOCB0aHJvdWdoIDE4LCBhbmQgc29tZXRpbWVzIG5vdFxuLy8gZXZlbiB0aGVuLlxuXG5mdW5jdGlvbiBtYWtlUmVxdWVzdENhbGxGcm9tVGltZXIoY2FsbGJhY2spIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gcmVxdWVzdENhbGwoKSB7XG4gICAgICAgIC8vIFdlIGRpc3BhdGNoIGEgdGltZW91dCB3aXRoIGEgc3BlY2lmaWVkIGRlbGF5IG9mIDAgZm9yIGVuZ2luZXMgdGhhdFxuICAgICAgICAvLyBjYW4gcmVsaWFibHkgYWNjb21tb2RhdGUgdGhhdCByZXF1ZXN0LiBUaGlzIHdpbGwgdXN1YWxseSBiZSBzbmFwcGVkXG4gICAgICAgIC8vIHRvIGEgNCBtaWxpc2Vjb25kIGRlbGF5LCBidXQgb25jZSB3ZSdyZSBmbHVzaGluZywgdGhlcmUncyBubyBkZWxheVxuICAgICAgICAvLyBiZXR3ZWVuIGV2ZW50cy5cbiAgICAgICAgdmFyIHRpbWVvdXRIYW5kbGUgPSBzZXRUaW1lb3V0KGhhbmRsZVRpbWVyLCAwKTtcbiAgICAgICAgLy8gSG93ZXZlciwgc2luY2UgdGhpcyB0aW1lciBnZXRzIGZyZXF1ZW50bHkgZHJvcHBlZCBpbiBGaXJlZm94XG4gICAgICAgIC8vIHdvcmtlcnMsIHdlIGVubGlzdCBhbiBpbnRlcnZhbCBoYW5kbGUgdGhhdCB3aWxsIHRyeSB0byBmaXJlXG4gICAgICAgIC8vIGFuIGV2ZW50IDIwIHRpbWVzIHBlciBzZWNvbmQgdW50aWwgaXQgc3VjY2VlZHMuXG4gICAgICAgIHZhciBpbnRlcnZhbEhhbmRsZSA9IHNldEludGVydmFsKGhhbmRsZVRpbWVyLCA1MCk7XG5cbiAgICAgICAgZnVuY3Rpb24gaGFuZGxlVGltZXIoKSB7XG4gICAgICAgICAgICAvLyBXaGljaGV2ZXIgdGltZXIgc3VjY2VlZHMgd2lsbCBjYW5jZWwgYm90aCB0aW1lcnMgYW5kXG4gICAgICAgICAgICAvLyBleGVjdXRlIHRoZSBjYWxsYmFjay5cbiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SGFuZGxlKTtcbiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWxIYW5kbGUpO1xuICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgfVxuICAgIH07XG59XG5cbi8vIFRoaXMgaXMgZm9yIGBhc2FwLmpzYCBvbmx5LlxuLy8gSXRzIG5hbWUgd2lsbCBiZSBwZXJpb2RpY2FsbHkgcmFuZG9taXplZCB0byBicmVhayBhbnkgY29kZSB0aGF0IGRlcGVuZHMgb25cbi8vIGl0cyBleGlzdGVuY2UuXG5yYXdBc2FwLm1ha2VSZXF1ZXN0Q2FsbEZyb21UaW1lciA9IG1ha2VSZXF1ZXN0Q2FsbEZyb21UaW1lcjtcblxuLy8gQVNBUCB3YXMgb3JpZ2luYWxseSBhIG5leHRUaWNrIHNoaW0gaW5jbHVkZWQgaW4gUS4gVGhpcyB3YXMgZmFjdG9yZWQgb3V0XG4vLyBpbnRvIHRoaXMgQVNBUCBwYWNrYWdlLiBJdCB3YXMgbGF0ZXIgYWRhcHRlZCB0byBSU1ZQIHdoaWNoIG1hZGUgZnVydGhlclxuLy8gYW1lbmRtZW50cy4gVGhlc2UgZGVjaXNpb25zLCBwYXJ0aWN1bGFybHkgdG8gbWFyZ2luYWxpemUgTWVzc2FnZUNoYW5uZWwgYW5kXG4vLyB0byBjYXB0dXJlIHRoZSBNdXRhdGlvbk9ic2VydmVyIGltcGxlbWVudGF0aW9uIGluIGEgY2xvc3VyZSwgd2VyZSBpbnRlZ3JhdGVkXG4vLyBiYWNrIGludG8gQVNBUCBwcm9wZXIuXG4vLyBodHRwczovL2dpdGh1Yi5jb20vdGlsZGVpby9yc3ZwLmpzL2Jsb2IvY2RkZjcyMzI1NDZhOWNmODU4NTI0Yjc1Y2RlNmY5ZWRmNzI2MjBhNy9saWIvcnN2cC9hc2FwLmpzXG4iLCJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gaGFzaChzdHIpIHtcbiAgdmFyIGhhc2ggPSA1MzgxLFxuICAgICAgaSAgICA9IHN0ci5sZW5ndGg7XG5cbiAgd2hpbGUoaSkge1xuICAgIGhhc2ggPSAoaGFzaCAqIDMzKSBeIHN0ci5jaGFyQ29kZUF0KC0taSk7XG4gIH1cblxuICAvKiBKYXZhU2NyaXB0IGRvZXMgYml0d2lzZSBvcGVyYXRpb25zIChsaWtlIFhPUiwgYWJvdmUpIG9uIDMyLWJpdCBzaWduZWRcbiAgICogaW50ZWdlcnMuIFNpbmNlIHdlIHdhbnQgdGhlIHJlc3VsdHMgdG8gYmUgYWx3YXlzIHBvc2l0aXZlLCBjb252ZXJ0IHRoZVxuICAgKiBzaWduZWQgaW50IHRvIGFuIHVuc2lnbmVkIGJ5IGRvaW5nIGFuIHVuc2lnbmVkIGJpdHNoaWZ0LiAqL1xuICByZXR1cm4gaGFzaCA+Pj4gMDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBoYXNoO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYC5ib2R5U2VjdGlvbldpdGhNYXJnaW4ge1xyXG4gIGJvcmRlci1ib3R0b206IDQwcHg7XHJcbn1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9Cb2R5U2VjdGlvbi9Cb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20uY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsbUJBQW1CO0FBQ3JCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5ib2R5U2VjdGlvbldpdGhNYXJnaW4ge1xcclxcbiAgYm9yZGVyLWJvdHRvbTogNDBweDtcXHJcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAjQ291cnNlTGlzdCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICBtYXJnaW4tdG9wOiAzMHB4O1xyXG59XHJcblxyXG4jQ291cnNlTGlzdCB0aCxcclxuI0NvdXJzZUxpc3QgdGQge1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XHJcbiAgcGFkZGluZzogOHB4O1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbn1cclxuI0NvdXJzZUxpc3QgdGgge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuI0NvdXJzZUxpc3QgdHIge1xyXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xyXG59XHJcblxyXG4jQ291cnNlTGlzdCB0cjpsYXN0LWNoaWxkIHtcclxuICBib3JkZXItYm90dG9tOiBub25lO1xyXG59XHJcbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL0NvdXJzZUxpc3QvQ291cnNlTGlzdC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxXQUFXO0VBQ1gseUJBQXlCO0VBQ3pCLGdCQUFnQjtBQUNsQjs7QUFFQTs7RUFFRSxzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIiNDb3Vyc2VMaXN0IHtcXHJcXG4gIHdpZHRoOiAxMDAlO1xcclxcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcXHJcXG4gIG1hcmdpbi10b3A6IDMwcHg7XFxyXFxufVxcclxcblxcclxcbiNDb3Vyc2VMaXN0IHRoLFxcclxcbiNDb3Vyc2VMaXN0IHRkIHtcXHJcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XFxyXFxuICBwYWRkaW5nOiA4cHg7XFxyXFxuICB0ZXh0LWFsaWduOiBsZWZ0O1xcclxcbn1cXHJcXG4jQ291cnNlTGlzdCB0aCB7XFxyXFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxufVxcclxcblxcclxcbiNDb3Vyc2VMaXN0IHRyIHtcXHJcXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xcclxcbn1cXHJcXG5cXHJcXG4jQ291cnNlTGlzdCB0cjpsYXN0LWNoaWxkIHtcXHJcXG4gIGJvcmRlci1ib3R0b206IG5vbmU7XFxyXFxufVxcclxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLkFwcC1mb290ZXIge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBib3R0b206IDA7XHJcbiAgbWFyZ2luLXRvcDogMjByZW07XHJcbiAgYm9yZGVyLXRvcDogM3B4IHNvbGlkIHZhcigtLXByaW1hcnktY29sb3IpO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcbi5BcHAtZm9vdGVyIHAge1xyXG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcclxufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL0Zvb3Rlci9Gb290ZXIuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxpQkFBaUI7RUFDakIsMENBQTBDO0VBQzFDLFdBQVc7RUFDWCxhQUFhO0VBQ2IsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5BcHAtZm9vdGVyIHtcXHJcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gIGJvdHRvbTogMDtcXHJcXG4gIG1hcmdpbi10b3A6IDIwcmVtO1xcclxcbiAgYm9yZGVyLXRvcDogM3B4IHNvbGlkIHZhcigtLXByaW1hcnktY29sb3IpO1xcclxcbiAgd2lkdGg6IDEwMCU7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxufVxcclxcblxcclxcbi5BcHAtZm9vdGVyIHAge1xcclxcbiAgZm9udC1zdHlsZTogaXRhbGljO1xcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYDpyb290IHtcclxuICAtLXByaW1hcnktY29sb3I6ICNlMDMyMzI7XHJcbn1cclxuLkFwcCB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbi5BcHAtaGVhZGVyIHtcclxuICBib3JkZXItYm90dG9tOiAzcHggc29saWQgdmFyKC0tcHJpbWFyeS1jb2xvcik7XHJcbiAgZGlzcGxheTogZmxleDtcclxufVxyXG5cclxuLkFwcC1oZWFkZXIgaW1nIHtcclxuICB3aWR0aDogMjAwcHg7XHJcbiAgaGVpZ2h0OiAyMDBweDtcclxufVxyXG5cclxuLkFwcC1oZWFkZXIgaDEge1xyXG4gIGNvbG9yOiB2YXIoLS1wcmltYXJ5LWNvbG9yKTtcclxuICBtYXJnaW46IGF1dG8gYXV0byBhdXRvIDA7XHJcbn1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9IZWFkZXIvSGVhZGVyLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLHdCQUF3QjtBQUMxQjtBQUNBO0VBQ0Usa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSw2Q0FBNkM7RUFDN0MsYUFBYTtBQUNmOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7QUFDZjs7QUFFQTtFQUNFLDJCQUEyQjtFQUMzQix3QkFBd0I7QUFDMUJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiOnJvb3Qge1xcclxcbiAgLS1wcmltYXJ5LWNvbG9yOiAjZTAzMjMyO1xcclxcbn1cXHJcXG4uQXBwIHtcXHJcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG59XFxyXFxuLkFwcC1oZWFkZXIge1xcclxcbiAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkIHZhcigtLXByaW1hcnktY29sb3IpO1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG59XFxyXFxuXFxyXFxuLkFwcC1oZWFkZXIgaW1nIHtcXHJcXG4gIHdpZHRoOiAyMDBweDtcXHJcXG4gIGhlaWdodDogMjAwcHg7XFxyXFxufVxcclxcblxcclxcbi5BcHAtaGVhZGVyIGgxIHtcXHJcXG4gIGNvbG9yOiB2YXIoLS1wcmltYXJ5LWNvbG9yKTtcXHJcXG4gIG1hcmdpbjogYXV0byBhdXRvIGF1dG8gMDtcXHJcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAuQXBwLWJvZHkge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuICBib3JkZXItYm90dG9tOiA0MHB4O1xyXG59XHJcblxyXG4uQXBwLWJvZHkgcCB7XHJcbiAgbWFyZ2luOiAzcmVtIDAgMCAycmVtO1xyXG59XHJcblxyXG4uQXBwLWJvZHkgLkFwcC1mb3JtIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIG1hcmdpbjogMXJlbSAwIDAgMnJlbTtcclxufVxyXG5cclxuLkFwcC1ib2R5IC5BcHAtZm9ybSBsYWJlbCxcclxuLkFwcC1ib2R5IC5BcHAtZm9ybSBpbnB1dCB7XHJcbiAgbWFyZ2luOiAwIDFyZW0gMCAwO1xyXG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvTG9naW4vTG9naW4uY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0Qix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHFCQUFxQjtBQUN2Qjs7QUFFQTs7RUFFRSxrQkFBa0I7QUFDcEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLkFwcC1ib2R5IHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XFxyXFxuICBib3JkZXItYm90dG9tOiA0MHB4O1xcclxcbn1cXHJcXG5cXHJcXG4uQXBwLWJvZHkgcCB7XFxyXFxuICBtYXJnaW46IDNyZW0gMCAwIDJyZW07XFxyXFxufVxcclxcblxcclxcbi5BcHAtYm9keSAuQXBwLWZvcm0ge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIG1hcmdpbjogMXJlbSAwIDAgMnJlbTtcXHJcXG59XFxyXFxuXFxyXFxuLkFwcC1ib2R5IC5BcHAtZm9ybSBsYWJlbCxcXHJcXG4uQXBwLWJvZHkgLkFwcC1mb3JtIGlucHV0IHtcXHJcXG4gIG1hcmdpbjogMCAxcmVtIDAgMDtcXHJcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAuTm90aWZpY2F0aW9ucyB7XHJcbiAgICBib3JkZXI6IDJweCBkb3R0ZWQgdmFyKC0taG9sYmVydG9uLXJlZCk7XHJcbiAgICBwYWRkaW5nOiAwLjFyZW0gMCAxcmVtO1xyXG4gICAgd2lkdGg6IDMwJTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcblxyXG4uTm90aWZpY2F0aW9ucyBidXR0b24ge1xyXG4gICAgcGFkZGluZy10b3A6IDFyZW07XHJcbn1cclxuXHJcbi5jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB3aWR0aDogOTklO1xyXG59XHJcbi5tZW51SXRlbSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xyXG59XHJcblxyXG4uTm90aWZpY2F0aW9uczpub3QoLmRpc3BsYXktZHJhd2VyKSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcbi5Ob3RpZmljYXRpb25zIGxpW2RhdGEtcHJpb3JpdHk9XCJkZWZhdWx0XCJdIHtcclxuICAgIGNvbG9yOiBkYXJrYmx1ZTtcclxuICB9XHJcbiAgXHJcbiAgLk5vdGlmaWNhdGlvbnMgbGlbZGF0YS1wcmlvcml0eT1cInVyZ2VudFwiXSB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG4gIH1cclxuICBcclxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvTm90aWZpY2F0aW9ucy9Ob3RpZmljYXRpb25zLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLHVDQUF1QztJQUN2QyxzQkFBc0I7SUFDdEIsVUFBVTtJQUNWLGFBQWE7SUFDYixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IscUJBQXFCO0lBQ3JCLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsVUFBVTtBQUNkO0FBQ0E7SUFDSSxhQUFhO0lBQ2Isa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjtBQUNBO0lBQ0ksZUFBZTtFQUNqQjs7RUFFQTtJQUNFLFVBQVU7RUFDWlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuTm90aWZpY2F0aW9ucyB7XFxyXFxuICAgIGJvcmRlcjogMnB4IGRvdHRlZCB2YXIoLS1ob2xiZXJ0b24tcmVkKTtcXHJcXG4gICAgcGFkZGluZzogMC4xcmVtIDAgMXJlbTtcXHJcXG4gICAgd2lkdGg6IDMwJTtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG59XFxyXFxuXFxyXFxuLk5vdGlmaWNhdGlvbnMgYnV0dG9uIHtcXHJcXG4gICAgcGFkZGluZy10b3A6IDFyZW07XFxyXFxufVxcclxcblxcclxcbi5jb250YWluZXIge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgd2lkdGg6IDk5JTtcXHJcXG59XFxyXFxuLm1lbnVJdGVtIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xcclxcbn1cXHJcXG5cXHJcXG4uTm90aWZpY2F0aW9uczpub3QoLmRpc3BsYXktZHJhd2VyKSB7XFxyXFxuICAgIGRpc3BsYXk6IG5vbmU7XFxyXFxufVxcclxcbi5Ob3RpZmljYXRpb25zIGxpW2RhdGEtcHJpb3JpdHk9XFxcImRlZmF1bHRcXFwiXSB7XFxyXFxuICAgIGNvbG9yOiBkYXJrYmx1ZTtcXHJcXG4gIH1cXHJcXG4gIFxcclxcbiAgLk5vdGlmaWNhdGlvbnMgbGlbZGF0YS1wcmlvcml0eT1cXFwidXJnZW50XFxcIl0ge1xcclxcbiAgICBjb2xvcjogcmVkO1xcclxcbiAgfVxcclxcbiAgXFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGBib2R5IHtcclxuICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAnU2Vnb2UgVUknLCAnUm9ib3RvJywgJ094eWdlbicsXHJcbiAgICAnVWJ1bnR1JywgJ0NhbnRhcmVsbCcsICdGaXJhIFNhbnMnLCAnRHJvaWQgU2FucycsICdIZWx2ZXRpY2EgTmV1ZScsXHJcbiAgICBzYW5zLXNlcmlmO1xyXG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xyXG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG5cclxuY29kZSB7XHJcbiAgZm9udC1mYW1pbHk6IHNvdXJjZS1jb2RlLXBybywgTWVubG8sIE1vbmFjbywgQ29uc29sYXMsICdDb3VyaWVyIE5ldycsXHJcbiAgICBtb25vc3BhY2U7XHJcbn1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9pbmRleC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRTs7Y0FFWTtFQUNaLG1DQUFtQztFQUNuQyxrQ0FBa0M7RUFDbEMsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0U7YUFDVztBQUNiXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImJvZHkge1xcclxcbiAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgJ1NlZ29lIFVJJywgJ1JvYm90bycsICdPeHlnZW4nLFxcclxcbiAgICAnVWJ1bnR1JywgJ0NhbnRhcmVsbCcsICdGaXJhIFNhbnMnLCAnRHJvaWQgU2FucycsICdIZWx2ZXRpY2EgTmV1ZScsXFxyXFxuICAgIHNhbnMtc2VyaWY7XFxyXFxuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcXHJcXG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XFxyXFxuICBvdmVyZmxvdzogaGlkZGVuO1xcclxcbn1cXHJcXG5cXHJcXG5jb2RlIHtcXHJcXG4gIGZvbnQtZmFtaWx5OiBzb3VyY2UtY29kZS1wcm8sIE1lbmxvLCBNb25hY28sIENvbnNvbGFzLCAnQ291cmllciBOZXcnLFxcclxcbiAgICBtb25vc3BhY2U7XFxyXFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQoKSB7fVxuZW1wdHlGdW5jdGlvbldpdGhSZXNldC5yZXNldFdhcm5pbmdDYWNoZSA9IGVtcHR5RnVuY3Rpb247XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB0aHJvdyBlcnI7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBiaWdpbnQ6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgZWxlbWVudFR5cGU6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbSxcblxuICAgIGNoZWNrUHJvcFR5cGVzOiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LFxuICAgIHJlc2V0V2FybmluZ0NhY2hlOiBlbXB0eUZ1bmN0aW9uXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoUmVhY3RJcy5pc0VsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xNC4wXG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLG49cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIikscj1yZXF1aXJlKFwic2NoZWR1bGVyXCIpO2Z1bmN0aW9uIHUoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9aWYoIWFhKXRocm93IEVycm9yKHUoMjI3KSk7XG5mdW5jdGlvbiBiYShhLGIsYyxkLGUsZixnLGgsayl7dmFyIGw9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsbCl9Y2F0Y2gobSl7dGhpcy5vbkVycm9yKG0pfX12YXIgZGE9ITEsZWE9bnVsbCxmYT0hMSxoYT1udWxsLGlhPXtvbkVycm9yOmZ1bmN0aW9uKGEpe2RhPSEwO2VhPWF9fTtmdW5jdGlvbiBqYShhLGIsYyxkLGUsZixnLGgsayl7ZGE9ITE7ZWE9bnVsbDtiYS5hcHBseShpYSxhcmd1bWVudHMpfWZ1bmN0aW9uIGthKGEsYixjLGQsZSxmLGcsaCxrKXtqYS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoZGEpe2lmKGRhKXt2YXIgbD1lYTtkYT0hMTtlYT1udWxsfWVsc2UgdGhyb3cgRXJyb3IodSgxOTgpKTtmYXx8KGZhPSEwLGhhPWwpfX12YXIgbGE9bnVsbCxtYT1udWxsLG5hPW51bGw7XG5mdW5jdGlvbiBvYShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9bmEoYyk7a2EoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH12YXIgcGE9bnVsbCxxYT17fTtcbmZ1bmN0aW9uIHJhKCl7aWYocGEpZm9yKHZhciBhIGluIHFhKXt2YXIgYj1xYVthXSxjPXBhLmluZGV4T2YoYSk7aWYoISgtMTxjKSl0aHJvdyBFcnJvcih1KDk2LGEpKTtpZighc2FbY10pe2lmKCFiLmV4dHJhY3RFdmVudHMpdGhyb3cgRXJyb3IodSg5NyxhKSk7c2FbY109YjtjPWIuZXZlbnRUeXBlcztmb3IodmFyIGQgaW4gYyl7dmFyIGU9dm9pZCAwO3ZhciBmPWNbZF0sZz1iLGg9ZDtpZih0YS5oYXNPd25Qcm9wZXJ0eShoKSl0aHJvdyBFcnJvcih1KDk5LGgpKTt0YVtoXT1mO3ZhciBrPWYucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM7aWYoayl7Zm9yKGUgaW4gaylrLmhhc093blByb3BlcnR5KGUpJiZ1YShrW2VdLGcsaCk7ZT0hMH1lbHNlIGYucmVnaXN0cmF0aW9uTmFtZT8odWEoZi5yZWdpc3RyYXRpb25OYW1lLGcsaCksZT0hMCk6ZT0hMTtpZighZSl0aHJvdyBFcnJvcih1KDk4LGQsYSkpO319fX1cbmZ1bmN0aW9uIHVhKGEsYixjKXtpZih2YVthXSl0aHJvdyBFcnJvcih1KDEwMCxhKSk7dmFbYV09Yjt3YVthXT1iLmV2ZW50VHlwZXNbY10uZGVwZW5kZW5jaWVzfXZhciBzYT1bXSx0YT17fSx2YT17fSx3YT17fTtmdW5jdGlvbiB4YShhKXt2YXIgYj0hMSxjO2ZvcihjIGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9YVtjXTtpZighcWEuaGFzT3duUHJvcGVydHkoYyl8fHFhW2NdIT09ZCl7aWYocWFbY10pdGhyb3cgRXJyb3IodSgxMDIsYykpO3FhW2NdPWQ7Yj0hMH19YiYmcmEoKX12YXIgeWE9IShcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnR8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpLHphPW51bGwsQWE9bnVsbCxCYT1udWxsO1xuZnVuY3Rpb24gQ2EoYSl7aWYoYT1tYShhKSl7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIHphKXRocm93IEVycm9yKHUoMjgwKSk7dmFyIGI9YS5zdGF0ZU5vZGU7YiYmKGI9bGEoYiksemEoYS5zdGF0ZU5vZGUsYS50eXBlLGIpKX19ZnVuY3Rpb24gRGEoYSl7QWE/QmE/QmEucHVzaChhKTpCYT1bYV06QWE9YX1mdW5jdGlvbiBFYSgpe2lmKEFhKXt2YXIgYT1BYSxiPUJhO0JhPUFhPW51bGw7Q2EoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKUNhKGJbYV0pfX1mdW5jdGlvbiBGYShhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIEdhKGEsYixjLGQsZSl7cmV0dXJuIGEoYixjLGQsZSl9ZnVuY3Rpb24gSGEoKXt9dmFyIElhPUZhLEphPSExLEthPSExO2Z1bmN0aW9uIExhKCl7aWYobnVsbCE9PUFhfHxudWxsIT09QmEpSGEoKSxFYSgpfVxuZnVuY3Rpb24gTWEoYSxiLGMpe2lmKEthKXJldHVybiBhKGIsYyk7S2E9ITA7dHJ5e3JldHVybiBJYShhLGIsYyl9ZmluYWxseXtLYT0hMSxMYSgpfX12YXIgTmE9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLE9hPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksUGE9e30sUWE9e307XG5mdW5jdGlvbiBSYShhKXtpZihPYS5jYWxsKFFhLGEpKXJldHVybiEwO2lmKE9hLmNhbGwoUGEsYSkpcmV0dXJuITE7aWYoTmEudGVzdChhKSlyZXR1cm4gUWFbYV09ITA7UGFbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gU2EoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBUYShhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxTYShhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIHYoYSxiLGMsZCxlLGYpe3RoaXMuYWNjZXB0c0Jvb2xlYW5zPTI9PT1ifHwzPT09Ynx8ND09PWI7dGhpcy5hdHRyaWJ1dGVOYW1lPWQ7dGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZTt0aGlzLm11c3RVc2VQcm9wZXJ0eT1jO3RoaXMucHJvcGVydHlOYW1lPWE7dGhpcy50eXBlPWI7dGhpcy5zYW5pdGl6ZVVSTD1mfXZhciBDPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMCwhMSxhLG51bGwsITEpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0NbYl09bmV3IHYoYiwxLCExLGFbMV0sbnVsbCwhMSl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMiwhMSxhLG51bGwsITEpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZGlzYWJsZVBpY3R1cmVJblBpY3R1cmUgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTtcbltcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMywhMCxhLG51bGwsITEpfSk7W1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsNCwhMSxhLG51bGwsITEpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSw2LCExLGEsbnVsbCwhMSl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO3ZhciBVYT0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIFZhKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKFVhLFxuVmEpO0NbYl09bmV3IHYoYiwxLCExLGEsbnVsbCwhMSl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShVYSxWYSk7Q1tiXT1uZXcgdihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMSl9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShVYSxWYSk7Q1tiXT1uZXcgdihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiLCExKX0pO1tcInRhYkluZGV4XCIsXCJjcm9zc09yaWdpblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO1xuQy54bGlua0hyZWY9bmV3IHYoXCJ4bGlua0hyZWZcIiwxLCExLFwieGxpbms6aHJlZlwiLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCEwKTtbXCJzcmNcIixcImhyZWZcIixcImFjdGlvblwiLFwiZm9ybUFjdGlvblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCEwKX0pO3ZhciBXYT1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDtXYS5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudERpc3BhdGNoZXJcIil8fChXYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyPXtjdXJyZW50Om51bGx9KTtXYS5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnXCIpfHwoV2EuUmVhY3RDdXJyZW50QmF0Y2hDb25maWc9e3N1c3BlbnNlOm51bGx9KTtcbmZ1bmN0aW9uIFhhKGEsYixjLGQpe3ZhciBlPUMuaGFzT3duUHJvcGVydHkoYik/Q1tiXTpudWxsO3ZhciBmPW51bGwhPT1lPzA9PT1lLnR5cGU6ZD8hMTohKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0/ITE6ITA7Znx8KFRhKGIsYyxlLGQpJiYoYz1udWxsKSxkfHxudWxsPT09ZT9SYShiKSYmKG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSk6ZS5tdXN0VXNlUHJvcGVydHk/YVtlLnByb3BlcnR5TmFtZV09bnVsbD09PWM/Mz09PWUudHlwZT8hMTpcIlwiOmM6KGI9ZS5hdHRyaWJ1dGVOYW1lLGQ9ZS5hdHRyaWJ1dGVOYW1lc3BhY2UsbnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6KGU9ZS50eXBlLGM9Mz09PWV8fDQ9PT1lJiYhMD09PWM/XCJcIjpcIlwiK2MsZD9hLnNldEF0dHJpYnV0ZU5TKGQsYixjKTphLnNldEF0dHJpYnV0ZShiLGMpKSkpfVxudmFyIFlhPS9eKC4qKVtcXFxcXFwvXS8sRT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLFphPUU/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsJGE9RT9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LGFiPUU/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGJiPUU/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LGNiPUU/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LGRiPUU/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGViPUU/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsZmI9RT9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLGdiPUU/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLGhiPUU/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLGliPUU/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik6XG42MDEyMCxqYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LGtiPUU/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsbGI9RT9TeW1ib2wuZm9yKFwicmVhY3QuYmxvY2tcIik6NjAxMjEsbWI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIG5iKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1tYiYmYVttYl18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1mdW5jdGlvbiBvYihhKXtpZigtMT09PWEuX3N0YXR1cyl7YS5fc3RhdHVzPTA7dmFyIGI9YS5fY3RvcjtiPWIoKTthLl9yZXN1bHQ9YjtiLnRoZW4oZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGI9Yi5kZWZhdWx0LGEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1iKX0sZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1iKX0pfX1cbmZ1bmN0aW9uIHBiKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgYWI6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2UgJGE6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIGNiOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIGJiOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgaGI6cmV0dXJuXCJTdXNwZW5zZVwiO2Nhc2UgaWI6cmV0dXJuXCJTdXNwZW5zZUxpc3RcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgZWI6cmV0dXJuXCJDb250ZXh0LkNvbnN1bWVyXCI7Y2FzZSBkYjpyZXR1cm5cIkNvbnRleHQuUHJvdmlkZXJcIjtjYXNlIGdiOnZhciBiPWEucmVuZGVyO2I9Yi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxcIlwiO3JldHVybiBhLmRpc3BsYXlOYW1lfHwoXCJcIiE9PWI/XCJGb3J3YXJkUmVmKFwiK2IrXCIpXCI6XG5cIkZvcndhcmRSZWZcIik7Y2FzZSBqYjpyZXR1cm4gcGIoYS50eXBlKTtjYXNlIGxiOnJldHVybiBwYihhLnJlbmRlcik7Y2FzZSBrYjppZihhPTE9PT1hLl9zdGF0dXM/YS5fcmVzdWx0Om51bGwpcmV0dXJuIHBiKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIHFiKGEpe3ZhciBiPVwiXCI7ZG97YTpzd2l0Y2goYS50YWcpe2Nhc2UgMzpjYXNlIDQ6Y2FzZSA2OmNhc2UgNzpjYXNlIDEwOmNhc2UgOTp2YXIgYz1cIlwiO2JyZWFrIGE7ZGVmYXVsdDp2YXIgZD1hLl9kZWJ1Z093bmVyLGU9YS5fZGVidWdTb3VyY2UsZj1wYihhLnR5cGUpO2M9bnVsbDtkJiYoYz1wYihkLnR5cGUpKTtkPWY7Zj1cIlwiO2U/Zj1cIiAoYXQgXCIrZS5maWxlTmFtZS5yZXBsYWNlKFlhLFwiXCIpK1wiOlwiK2UubGluZU51bWJlcitcIilcIjpjJiYoZj1cIiAoY3JlYXRlZCBieSBcIitjK1wiKVwiKTtjPVwiXFxuICAgIGluIFwiKyhkfHxcIlVua25vd25cIikrZn1iKz1jO2E9YS5yZXR1cm59d2hpbGUoYSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiByYihhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19ZnVuY3Rpb24gc2IoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIHRiKGEpe3ZhciBiPXNiKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiB4YihhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9dGIoYSkpfWZ1bmN0aW9uIHliKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1zYihhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfWZ1bmN0aW9uIHpiKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBuKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1cbmZ1bmN0aW9uIEFiKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPXJiKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24gQmIoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZYYShhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24gQ2IoYSxiKXtCYihhLGIpO3ZhciBjPXJiKGIudmFsdWUpLGQ9Yi50eXBlO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWQpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBpZihcInN1Ym1pdFwiPT09ZHx8XCJyZXNldFwiPT09ZCl7YS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtyZXR1cm59Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP0RiKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJkRiKGEsYi50eXBlLHJiKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gRWIoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIERiKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8YS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX1mdW5jdGlvbiBGYihhKXt2YXIgYj1cIlwiO2FhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsIT1hJiYoYis9YSl9KTtyZXR1cm4gYn1mdW5jdGlvbiBHYihhLGIpe2E9bih7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPUZiKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1cbmZ1bmN0aW9uIEhiKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIityYihjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gSWIoYSxiKXtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXRocm93IEVycm9yKHUoOTEpKTtyZXR1cm4gbih7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBKYihhLGIpe3ZhciBjPWIudmFsdWU7aWYobnVsbD09Yyl7Yz1iLmNoaWxkcmVuO2I9Yi5kZWZhdWx0VmFsdWU7aWYobnVsbCE9Yyl7aWYobnVsbCE9Yil0aHJvdyBFcnJvcih1KDkyKSk7aWYoQXJyYXkuaXNBcnJheShjKSl7aWYoISgxPj1jLmxlbmd0aCkpdGhyb3cgRXJyb3IodSg5MykpO2M9Y1swXX1iPWN9bnVsbD09YiYmKGI9XCJcIik7Yz1ifWEuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOnJiKGMpfX1cbmZ1bmN0aW9uIEtiKGEsYil7dmFyIGM9cmIoYi52YWx1ZSksZD1yYihiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIExiKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJlwiXCIhPT1iJiZudWxsIT09YiYmKGEudmFsdWU9Yil9dmFyIE1iPXtodG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLG1hdGhtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifTtcbmZ1bmN0aW9uIE5iKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gT2IoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP05iKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIFBiLFFiPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihhLm5hbWVzcGFjZVVSSSE9PU1iLnN2Z3x8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle1BiPVBifHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1BiLmlubmVySFRNTD1cIjxzdmc+XCIrYi52YWx1ZU9mKCkudG9TdHJpbmcoKStcIjwvc3ZnPlwiO2ZvcihiPVBiLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIFJiKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9ZnVuY3Rpb24gU2IoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtyZXR1cm4gY312YXIgVGI9e2FuaW1hdGlvbmVuZDpTYihcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjpTYihcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OlNiKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOlNiKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sVWI9e30sVmI9e307XG55YSYmKFZiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIFRiLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIFRiLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIFRiLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIFRiLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7ZnVuY3Rpb24gV2IoYSl7aWYoVWJbYV0pcmV0dXJuIFViW2FdO2lmKCFUYlthXSlyZXR1cm4gYTt2YXIgYj1UYlthXSxjO2ZvcihjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSYmYyBpbiBWYilyZXR1cm4gVWJbYV09YltjXTtyZXR1cm4gYX1cbnZhciBYYj1XYihcImFuaW1hdGlvbmVuZFwiKSxZYj1XYihcImFuaW1hdGlvbml0ZXJhdGlvblwiKSxaYj1XYihcImFuaW1hdGlvbnN0YXJ0XCIpLCRiPVdiKFwidHJhbnNpdGlvbmVuZFwiKSxhYz1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksYmM9bmV3IChcImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcCk7ZnVuY3Rpb24gY2MoYSl7dmFyIGI9YmMuZ2V0KGEpO3ZvaWQgMD09PWImJihiPW5ldyBNYXAsYmMuc2V0KGEsYikpO3JldHVybiBifVxuZnVuY3Rpb24gZGMoYSl7dmFyIGI9YSxjPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiLnJldHVybjspYj1iLnJldHVybjtlbHNle2E9YjtkbyBiPWEsMCE9PShiLmVmZmVjdFRhZyYxMDI2KSYmKGM9Yi5yZXR1cm4pLGE9Yi5yZXR1cm47d2hpbGUoYSl9cmV0dXJuIDM9PT1iLnRhZz9jOm51bGx9ZnVuY3Rpb24gZWMoYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9YS5tZW1vaXplZFN0YXRlO251bGw9PT1iJiYoYT1hLmFsdGVybmF0ZSxudWxsIT09YSYmKGI9YS5tZW1vaXplZFN0YXRlKSk7aWYobnVsbCE9PWIpcmV0dXJuIGIuZGVoeWRyYXRlZH1yZXR1cm4gbnVsbH1mdW5jdGlvbiBmYyhhKXtpZihkYyhhKSE9PWEpdGhyb3cgRXJyb3IodSgxODgpKTt9XG5mdW5jdGlvbiBnYyhhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYil7Yj1kYyhhKTtpZihudWxsPT09Yil0aHJvdyBFcnJvcih1KDE4OCkpO3JldHVybiBiIT09YT9udWxsOmF9Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWMucmV0dXJuO2lmKG51bGw9PT1lKWJyZWFrO3ZhciBmPWUuYWx0ZXJuYXRlO2lmKG51bGw9PT1mKXtkPWUucmV0dXJuO2lmKG51bGwhPT1kKXtjPWQ7Y29udGludWV9YnJlYWt9aWYoZS5jaGlsZD09PWYuY2hpbGQpe2ZvcihmPWUuY2hpbGQ7Zjspe2lmKGY9PT1jKXJldHVybiBmYyhlKSxhO2lmKGY9PT1kKXJldHVybiBmYyhlKSxiO2Y9Zi5zaWJsaW5nfXRocm93IEVycm9yKHUoMTg4KSk7fWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2Zvcih2YXIgZz0hMSxoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PVxuYyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpdGhyb3cgRXJyb3IodSgxODkpKTt9fWlmKGMuYWx0ZXJuYXRlIT09ZCl0aHJvdyBFcnJvcih1KDE5MCkpO31pZigzIT09Yy50YWcpdGhyb3cgRXJyb3IodSgxODgpKTtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIGhjKGEpe2E9Z2MoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBpYyhhLGIpe2lmKG51bGw9PWIpdGhyb3cgRXJyb3IodSgzMCkpO2lmKG51bGw9PWEpcmV0dXJuIGI7aWYoQXJyYXkuaXNBcnJheShhKSl7aWYoQXJyYXkuaXNBcnJheShiKSlyZXR1cm4gYS5wdXNoLmFwcGx5KGEsYiksYTthLnB1c2goYik7cmV0dXJuIGF9cmV0dXJuIEFycmF5LmlzQXJyYXkoYik/W2FdLmNvbmNhdChiKTpbYSxiXX1mdW5jdGlvbiBqYyhhLGIsYyl7QXJyYXkuaXNBcnJheShhKT9hLmZvckVhY2goYixjKTphJiZiLmNhbGwoYyxhKX12YXIga2M9bnVsbDtcbmZ1bmN0aW9uIGxjKGEpe2lmKGEpe3ZhciBiPWEuX2Rpc3BhdGNoTGlzdGVuZXJzLGM9YS5fZGlzcGF0Y2hJbnN0YW5jZXM7aWYoQXJyYXkuaXNBcnJheShiKSlmb3IodmFyIGQ9MDtkPGIubGVuZ3RoJiYhYS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpO2QrKylvYShhLGJbZF0sY1tkXSk7ZWxzZSBiJiZvYShhLGIsYyk7YS5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbDthLl9kaXNwYXRjaEluc3RhbmNlcz1udWxsO2EuaXNQZXJzaXN0ZW50KCl8fGEuY29uc3RydWN0b3IucmVsZWFzZShhKX19ZnVuY3Rpb24gbWMoYSl7bnVsbCE9PWEmJihrYz1pYyhrYyxhKSk7YT1rYztrYz1udWxsO2lmKGEpe2pjKGEsbGMpO2lmKGtjKXRocm93IEVycm9yKHUoOTUpKTtpZihmYSl0aHJvdyBhPWhhLGZhPSExLGhhPW51bGwsYTt9fVxuZnVuY3Rpb24gbmMoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfWZ1bmN0aW9uIG9jKGEpe2lmKCF5YSlyZXR1cm4hMTthPVwib25cIithO3ZhciBiPWEgaW4gZG9jdW1lbnQ7Ynx8KGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxiLnNldEF0dHJpYnV0ZShhLFwicmV0dXJuO1wiKSxiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBiW2FdKTtyZXR1cm4gYn12YXIgcGM9W107ZnVuY3Rpb24gcWMoYSl7YS50b3BMZXZlbFR5cGU9bnVsbDthLm5hdGl2ZUV2ZW50PW51bGw7YS50YXJnZXRJbnN0PW51bGw7YS5hbmNlc3RvcnMubGVuZ3RoPTA7MTA+cGMubGVuZ3RoJiZwYy5wdXNoKGEpfVxuZnVuY3Rpb24gcmMoYSxiLGMsZCl7aWYocGMubGVuZ3RoKXt2YXIgZT1wYy5wb3AoKTtlLnRvcExldmVsVHlwZT1hO2UuZXZlbnRTeXN0ZW1GbGFncz1kO2UubmF0aXZlRXZlbnQ9YjtlLnRhcmdldEluc3Q9YztyZXR1cm4gZX1yZXR1cm57dG9wTGV2ZWxUeXBlOmEsZXZlbnRTeXN0ZW1GbGFnczpkLG5hdGl2ZUV2ZW50OmIsdGFyZ2V0SW5zdDpjLGFuY2VzdG9yczpbXX19XG5mdW5jdGlvbiBzYyhhKXt2YXIgYj1hLnRhcmdldEluc3QsYz1iO2Rve2lmKCFjKXthLmFuY2VzdG9ycy5wdXNoKGMpO2JyZWFrfXZhciBkPWM7aWYoMz09PWQudGFnKWQ9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlbHNle2Zvcig7ZC5yZXR1cm47KWQ9ZC5yZXR1cm47ZD0zIT09ZC50YWc/bnVsbDpkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvfWlmKCFkKWJyZWFrO2I9Yy50YWc7NSE9PWImJjYhPT1ifHxhLmFuY2VzdG9ycy5wdXNoKGMpO2M9dGMoZCl9d2hpbGUoYyk7Zm9yKGM9MDtjPGEuYW5jZXN0b3JzLmxlbmd0aDtjKyspe2I9YS5hbmNlc3RvcnNbY107dmFyIGU9bmMoYS5uYXRpdmVFdmVudCk7ZD1hLnRvcExldmVsVHlwZTt2YXIgZj1hLm5hdGl2ZUV2ZW50LGc9YS5ldmVudFN5c3RlbUZsYWdzOzA9PT1jJiYoZ3w9NjQpO2Zvcih2YXIgaD1udWxsLGs9MDtrPHNhLmxlbmd0aDtrKyspe3ZhciBsPXNhW2tdO2wmJihsPWwuZXh0cmFjdEV2ZW50cyhkLGIsZixlLGcpKSYmKGg9XG5pYyhoLGwpKX1tYyhoKX19ZnVuY3Rpb24gdWMoYSxiLGMpe2lmKCFjLmhhcyhhKSl7c3dpdGNoKGEpe2Nhc2UgXCJzY3JvbGxcIjp2YyhiLFwic2Nyb2xsXCIsITApO2JyZWFrO2Nhc2UgXCJmb2N1c1wiOmNhc2UgXCJibHVyXCI6dmMoYixcImZvY3VzXCIsITApO3ZjKGIsXCJibHVyXCIsITApO2Muc2V0KFwiYmx1clwiLG51bGwpO2Muc2V0KFwiZm9jdXNcIixudWxsKTticmVhaztjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsb3NlXCI6b2MoYSkmJnZjKGIsYSwhMCk7YnJlYWs7Y2FzZSBcImludmFsaWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInJlc2V0XCI6YnJlYWs7ZGVmYXVsdDotMT09PWFjLmluZGV4T2YoYSkmJkYoYSxiKX1jLnNldChhLG51bGwpfX1cbnZhciB3Yyx4Yyx5Yyx6Yz0hMSxBYz1bXSxCYz1udWxsLENjPW51bGwsRGM9bnVsbCxFYz1uZXcgTWFwLEZjPW5ldyBNYXAsR2M9W10sSGM9XCJtb3VzZWRvd24gbW91c2V1cCB0b3VjaGNhbmNlbCB0b3VjaGVuZCB0b3VjaHN0YXJ0IGF1eGNsaWNrIGRibGNsaWNrIHBvaW50ZXJjYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlcnVwIGRyYWdlbmQgZHJhZ3N0YXJ0IGRyb3AgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIGlucHV0IHRleHRJbnB1dCBjbG9zZSBjYW5jZWwgY29weSBjdXQgcGFzdGUgY2xpY2sgY2hhbmdlIGNvbnRleHRtZW51IHJlc2V0IHN1Ym1pdFwiLnNwbGl0KFwiIFwiKSxJYz1cImZvY3VzIGJsdXIgZHJhZ2VudGVyIGRyYWdsZWF2ZSBtb3VzZW92ZXIgbW91c2VvdXQgcG9pbnRlcm92ZXIgcG9pbnRlcm91dCBnb3Rwb2ludGVyY2FwdHVyZSBsb3N0cG9pbnRlcmNhcHR1cmVcIi5zcGxpdChcIiBcIik7XG5mdW5jdGlvbiBKYyhhLGIpe3ZhciBjPWNjKGIpO0hjLmZvckVhY2goZnVuY3Rpb24oYSl7dWMoYSxiLGMpfSk7SWMuZm9yRWFjaChmdW5jdGlvbihhKXt1YyhhLGIsYyl9KX1mdW5jdGlvbiBLYyhhLGIsYyxkLGUpe3JldHVybntibG9ja2VkT246YSx0b3BMZXZlbFR5cGU6YixldmVudFN5c3RlbUZsYWdzOmN8MzIsbmF0aXZlRXZlbnQ6ZSxjb250YWluZXI6ZH19XG5mdW5jdGlvbiBMYyhhLGIpe3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOkJjPW51bGw7YnJlYWs7Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnbGVhdmVcIjpDYz1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwibW91c2VvdXRcIjpEYz1udWxsO2JyZWFrO2Nhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVyb3V0XCI6RWMuZGVsZXRlKGIucG9pbnRlcklkKTticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6RmMuZGVsZXRlKGIucG9pbnRlcklkKX19ZnVuY3Rpb24gTWMoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hfHxhLm5hdGl2ZUV2ZW50IT09ZilyZXR1cm4gYT1LYyhiLGMsZCxlLGYpLG51bGwhPT1iJiYoYj1OYyhiKSxudWxsIT09YiYmeGMoYikpLGE7YS5ldmVudFN5c3RlbUZsYWdzfD1kO3JldHVybiBhfVxuZnVuY3Rpb24gT2MoYSxiLGMsZCxlKXtzd2l0Y2goYil7Y2FzZSBcImZvY3VzXCI6cmV0dXJuIEJjPU1jKEJjLGEsYixjLGQsZSksITA7Y2FzZSBcImRyYWdlbnRlclwiOnJldHVybiBDYz1NYyhDYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJtb3VzZW92ZXJcIjpyZXR1cm4gRGM9TWMoRGMsYSxiLGMsZCxlKSwhMDtjYXNlIFwicG9pbnRlcm92ZXJcIjp2YXIgZj1lLnBvaW50ZXJJZDtFYy5zZXQoZixNYyhFYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSk7cmV0dXJuITA7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6cmV0dXJuIGY9ZS5wb2ludGVySWQsRmMuc2V0KGYsTWMoRmMuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpLCEwfXJldHVybiExfVxuZnVuY3Rpb24gUGMoYSl7dmFyIGI9dGMoYS50YXJnZXQpO2lmKG51bGwhPT1iKXt2YXIgYz1kYyhiKTtpZihudWxsIT09YylpZihiPWMudGFnLDEzPT09Yil7aWYoYj1lYyhjKSxudWxsIT09Yil7YS5ibG9ja2VkT249YjtyLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShhLnByaW9yaXR5LGZ1bmN0aW9uKCl7eWMoYyl9KTtyZXR1cm59fWVsc2UgaWYoMz09PWImJmMuc3RhdGVOb2RlLmh5ZHJhdGUpe2EuYmxvY2tlZE9uPTM9PT1jLnRhZz9jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7cmV0dXJufX1hLmJsb2NrZWRPbj1udWxsfWZ1bmN0aW9uIFFjKGEpe2lmKG51bGwhPT1hLmJsb2NrZWRPbilyZXR1cm4hMTt2YXIgYj1SYyhhLnRvcExldmVsVHlwZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYS5jb250YWluZXIsYS5uYXRpdmVFdmVudCk7aWYobnVsbCE9PWIpe3ZhciBjPU5jKGIpO251bGwhPT1jJiZ4YyhjKTthLmJsb2NrZWRPbj1iO3JldHVybiExfXJldHVybiEwfVxuZnVuY3Rpb24gU2MoYSxiLGMpe1FjKGEpJiZjLmRlbGV0ZShiKX1mdW5jdGlvbiBUYygpe2Zvcih6Yz0hMTswPEFjLmxlbmd0aDspe3ZhciBhPUFjWzBdO2lmKG51bGwhPT1hLmJsb2NrZWRPbil7YT1OYyhhLmJsb2NrZWRPbik7bnVsbCE9PWEmJndjKGEpO2JyZWFrfXZhciBiPVJjKGEudG9wTGV2ZWxUeXBlLGEuZXZlbnRTeXN0ZW1GbGFncyxhLmNvbnRhaW5lcixhLm5hdGl2ZUV2ZW50KTtudWxsIT09Yj9hLmJsb2NrZWRPbj1iOkFjLnNoaWZ0KCl9bnVsbCE9PUJjJiZRYyhCYykmJihCYz1udWxsKTtudWxsIT09Q2MmJlFjKENjKSYmKENjPW51bGwpO251bGwhPT1EYyYmUWMoRGMpJiYoRGM9bnVsbCk7RWMuZm9yRWFjaChTYyk7RmMuZm9yRWFjaChTYyl9ZnVuY3Rpb24gVWMoYSxiKXthLmJsb2NrZWRPbj09PWImJihhLmJsb2NrZWRPbj1udWxsLHpjfHwoemM9ITAsci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrKHIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksVGMpKSl9XG5mdW5jdGlvbiBWYyhhKXtmdW5jdGlvbiBiKGIpe3JldHVybiBVYyhiLGEpfWlmKDA8QWMubGVuZ3RoKXtVYyhBY1swXSxhKTtmb3IodmFyIGM9MTtjPEFjLmxlbmd0aDtjKyspe3ZhciBkPUFjW2NdO2QuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpfX1udWxsIT09QmMmJlVjKEJjLGEpO251bGwhPT1DYyYmVWMoQ2MsYSk7bnVsbCE9PURjJiZVYyhEYyxhKTtFYy5mb3JFYWNoKGIpO0ZjLmZvckVhY2goYik7Zm9yKGM9MDtjPEdjLmxlbmd0aDtjKyspZD1HY1tjXSxkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKTtmb3IoOzA8R2MubGVuZ3RoJiYoYz1HY1swXSxudWxsPT09Yy5ibG9ja2VkT24pOylQYyhjKSxudWxsPT09Yy5ibG9ja2VkT24mJkdjLnNoaWZ0KCl9XG52YXIgV2M9e30sWWM9bmV3IE1hcCxaYz1uZXcgTWFwLCRjPVtcImFib3J0XCIsXCJhYm9ydFwiLFhiLFwiYW5pbWF0aW9uRW5kXCIsWWIsXCJhbmltYXRpb25JdGVyYXRpb25cIixaYixcImFuaW1hdGlvblN0YXJ0XCIsXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCIsXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIixcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiLFwiZW1wdGllZFwiLFwiZW1wdGllZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIixcImVuZGVkXCIsXCJlbmRlZFwiLFwiZXJyb3JcIixcImVycm9yXCIsXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIixcImxvYWRcIixcImxvYWRcIixcImxvYWRlZGRhdGFcIixcImxvYWRlZERhdGFcIixcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiLFwibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIixcImxvc3Rwb2ludGVyY2FwdHVyZVwiLFwibG9zdFBvaW50ZXJDYXB0dXJlXCIsXCJwbGF5aW5nXCIsXCJwbGF5aW5nXCIsXCJwcm9ncmVzc1wiLFwicHJvZ3Jlc3NcIixcInNlZWtpbmdcIixcblwic2Vla2luZ1wiLFwic3RhbGxlZFwiLFwic3RhbGxlZFwiLFwic3VzcGVuZFwiLFwic3VzcGVuZFwiLFwidGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiLCRiLFwidHJhbnNpdGlvbkVuZFwiLFwid2FpdGluZ1wiLFwid2FpdGluZ1wiXTtmdW5jdGlvbiBhZChhLGIpe2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7Yys9Mil7dmFyIGQ9YVtjXSxlPWFbYysxXSxmPVwib25cIisoZVswXS50b1VwcGVyQ2FzZSgpK2Uuc2xpY2UoMSkpO2Y9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOmYsY2FwdHVyZWQ6ZitcIkNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltkXSxldmVudFByaW9yaXR5OmJ9O1pjLnNldChkLGIpO1ljLnNldChkLGYpO1djW2VdPWZ9fVxuYWQoXCJibHVyIGJsdXIgY2FuY2VsIGNhbmNlbCBjbGljayBjbGljayBjbG9zZSBjbG9zZSBjb250ZXh0bWVudSBjb250ZXh0TWVudSBjb3B5IGNvcHkgY3V0IGN1dCBhdXhjbGljayBhdXhDbGljayBkYmxjbGljayBkb3VibGVDbGljayBkcmFnZW5kIGRyYWdFbmQgZHJhZ3N0YXJ0IGRyYWdTdGFydCBkcm9wIGRyb3AgZm9jdXMgZm9jdXMgaW5wdXQgaW5wdXQgaW52YWxpZCBpbnZhbGlkIGtleWRvd24ga2V5RG93biBrZXlwcmVzcyBrZXlQcmVzcyBrZXl1cCBrZXlVcCBtb3VzZWRvd24gbW91c2VEb3duIG1vdXNldXAgbW91c2VVcCBwYXN0ZSBwYXN0ZSBwYXVzZSBwYXVzZSBwbGF5IHBsYXkgcG9pbnRlcmNhbmNlbCBwb2ludGVyQ2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJEb3duIHBvaW50ZXJ1cCBwb2ludGVyVXAgcmF0ZWNoYW5nZSByYXRlQ2hhbmdlIHJlc2V0IHJlc2V0IHNlZWtlZCBzZWVrZWQgc3VibWl0IHN1Ym1pdCB0b3VjaGNhbmNlbCB0b3VjaENhbmNlbCB0b3VjaGVuZCB0b3VjaEVuZCB0b3VjaHN0YXJ0IHRvdWNoU3RhcnQgdm9sdW1lY2hhbmdlIHZvbHVtZUNoYW5nZVwiLnNwbGl0KFwiIFwiKSwwKTtcbmFkKFwiZHJhZyBkcmFnIGRyYWdlbnRlciBkcmFnRW50ZXIgZHJhZ2V4aXQgZHJhZ0V4aXQgZHJhZ2xlYXZlIGRyYWdMZWF2ZSBkcmFnb3ZlciBkcmFnT3ZlciBtb3VzZW1vdmUgbW91c2VNb3ZlIG1vdXNlb3V0IG1vdXNlT3V0IG1vdXNlb3ZlciBtb3VzZU92ZXIgcG9pbnRlcm1vdmUgcG9pbnRlck1vdmUgcG9pbnRlcm91dCBwb2ludGVyT3V0IHBvaW50ZXJvdmVyIHBvaW50ZXJPdmVyIHNjcm9sbCBzY3JvbGwgdG9nZ2xlIHRvZ2dsZSB0b3VjaG1vdmUgdG91Y2hNb3ZlIHdoZWVsIHdoZWVsXCIuc3BsaXQoXCIgXCIpLDEpO2FkKCRjLDIpO2Zvcih2YXIgYmQ9XCJjaGFuZ2Ugc2VsZWN0aW9uY2hhbmdlIHRleHRJbnB1dCBjb21wb3NpdGlvbnN0YXJ0IGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9udXBkYXRlXCIuc3BsaXQoXCIgXCIpLGNkPTA7Y2Q8YmQubGVuZ3RoO2NkKyspWmMuc2V0KGJkW2NkXSwwKTtcbnZhciBkZD1yLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LGVkPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LGZkPSEwO2Z1bmN0aW9uIEYoYSxiKXt2YyhiLGEsITEpfWZ1bmN0aW9uIHZjKGEsYixjKXt2YXIgZD1aYy5nZXQoYik7c3dpdGNoKHZvaWQgMD09PWQ/MjpkKXtjYXNlIDA6ZD1nZC5iaW5kKG51bGwsYiwxLGEpO2JyZWFrO2Nhc2UgMTpkPWhkLmJpbmQobnVsbCxiLDEsYSk7YnJlYWs7ZGVmYXVsdDpkPWlkLmJpbmQobnVsbCxiLDEsYSl9Yz9hLmFkZEV2ZW50TGlzdGVuZXIoYixkLCEwKTphLmFkZEV2ZW50TGlzdGVuZXIoYixkLCExKX1mdW5jdGlvbiBnZChhLGIsYyxkKXtKYXx8SGEoKTt2YXIgZT1pZCxmPUphO0phPSEwO3RyeXtHYShlLGEsYixjLGQpfWZpbmFsbHl7KEphPWYpfHxMYSgpfX1mdW5jdGlvbiBoZChhLGIsYyxkKXtlZChkZCxpZC5iaW5kKG51bGwsYSxiLGMsZCkpfVxuZnVuY3Rpb24gaWQoYSxiLGMsZCl7aWYoZmQpaWYoMDxBYy5sZW5ndGgmJi0xPEhjLmluZGV4T2YoYSkpYT1LYyhudWxsLGEsYixjLGQpLEFjLnB1c2goYSk7ZWxzZXt2YXIgZT1SYyhhLGIsYyxkKTtpZihudWxsPT09ZSlMYyhhLGQpO2Vsc2UgaWYoLTE8SGMuaW5kZXhPZihhKSlhPUtjKGUsYSxiLGMsZCksQWMucHVzaChhKTtlbHNlIGlmKCFPYyhlLGEsYixjLGQpKXtMYyhhLGQpO2E9cmMoYSxkLG51bGwsYik7dHJ5e01hKHNjLGEpfWZpbmFsbHl7cWMoYSl9fX19XG5mdW5jdGlvbiBSYyhhLGIsYyxkKXtjPW5jKGQpO2M9dGMoYyk7aWYobnVsbCE9PWMpe3ZhciBlPWRjKGMpO2lmKG51bGw9PT1lKWM9bnVsbDtlbHNle3ZhciBmPWUudGFnO2lmKDEzPT09Zil7Yz1lYyhlKTtpZihudWxsIT09YylyZXR1cm4gYztjPW51bGx9ZWxzZSBpZigzPT09Zil7aWYoZS5zdGF0ZU5vZGUuaHlkcmF0ZSlyZXR1cm4gMz09PWUudGFnP2Uuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtjPW51bGx9ZWxzZSBlIT09YyYmKGM9bnVsbCl9fWE9cmMoYSxkLGMsYik7dHJ5e01hKHNjLGEpfWZpbmFsbHl7cWMoYSl9cmV0dXJuIG51bGx9XG52YXIgamQ9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLFxuZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0sa2Q9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKGpkKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2tkLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7amRbYl09amRbYV19KX0pO2Z1bmN0aW9uIGxkKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxqZC5oYXNPd25Qcm9wZXJ0eShhKSYmamRbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxuZnVuY3Rpb24gbWQoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpLGU9bGQoYyxiW2NdLGQpO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgbmQ9bih7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIG9kKGEsYil7aWYoYil7aWYobmRbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih1KDEzNyxhLFwiXCIpKTtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXtpZihudWxsIT1iLmNoaWxkcmVuKXRocm93IEVycm9yKHUoNjApKTtpZighKFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJfX2h0bWxcImluIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHUoNjEpKTt9aWYobnVsbCE9Yi5zdHlsZSYmXCJvYmplY3RcIiE9PXR5cGVvZiBiLnN0eWxlKXRocm93IEVycm9yKHUoNjIsXCJcIikpO319XG5mdW5jdGlvbiBwZChhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19dmFyIHFkPU1iLmh0bWw7ZnVuY3Rpb24gcmQoYSxiKXthPTk9PT1hLm5vZGVUeXBlfHwxMT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7dmFyIGM9Y2MoYSk7Yj13YVtiXTtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl1YyhiW2RdLGEsYyl9ZnVuY3Rpb24gc2QoKXt9XG5mdW5jdGlvbiB0ZChhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19ZnVuY3Rpb24gdWQoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfWZ1bmN0aW9uIHZkKGEsYil7dmFyIGM9dWQoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9dWQoYyl9fVxuZnVuY3Rpb24gd2QoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT93ZChhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9ZnVuY3Rpb24geGQoKXtmb3IodmFyIGE9d2luZG93LGI9dGQoKTtiIGluc3RhbmNlb2YgYS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXt2YXIgYz1cInN0cmluZ1wiPT09dHlwZW9mIGIuY29udGVudFdpbmRvdy5sb2NhdGlvbi5ocmVmfWNhdGNoKGQpe2M9ITF9aWYoYylhPWIuY29udGVudFdpbmRvdztlbHNlIGJyZWFrO2I9dGQoYS5kb2N1bWVudCl9cmV0dXJuIGJ9XG5mdW5jdGlvbiB5ZChhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfXZhciB6ZD1cIiRcIixBZD1cIi8kXCIsQmQ9XCIkP1wiLENkPVwiJCFcIixEZD1udWxsLEVkPW51bGw7ZnVuY3Rpb24gRmQoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpyZXR1cm4hIWIuYXV0b0ZvY3VzfXJldHVybiExfVxuZnVuY3Rpb24gR2QoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm9wdGlvblwiPT09YXx8XCJub3NjcmlwdFwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfXZhciBIZD1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCxJZD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDA7ZnVuY3Rpb24gSmQoYSl7Zm9yKDtudWxsIT1hO2E9YS5uZXh0U2libGluZyl7dmFyIGI9YS5ub2RlVHlwZTtpZigxPT09Ynx8Mz09PWIpYnJlYWt9cmV0dXJuIGF9XG5mdW5jdGlvbiBLZChhKXthPWEucHJldmlvdXNTaWJsaW5nO2Zvcih2YXIgYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKGM9PT16ZHx8Yz09PUNkfHxjPT09QmQpe2lmKDA9PT1iKXJldHVybiBhO2ItLX1lbHNlIGM9PT1BZCYmYisrfWE9YS5wcmV2aW91c1NpYmxpbmd9cmV0dXJuIG51bGx9dmFyIExkPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLE1kPVwiX19yZWFjdEludGVybmFsSW5zdGFuY2UkXCIrTGQsTmQ9XCJfX3JlYWN0RXZlbnRIYW5kbGVycyRcIitMZCxPZD1cIl9fcmVhY3RDb250YWluZXJlJFwiK0xkO1xuZnVuY3Rpb24gdGMoYSl7dmFyIGI9YVtNZF07aWYoYilyZXR1cm4gYjtmb3IodmFyIGM9YS5wYXJlbnROb2RlO2M7KXtpZihiPWNbT2RdfHxjW01kXSl7Yz1iLmFsdGVybmF0ZTtpZihudWxsIT09Yi5jaGlsZHx8bnVsbCE9PWMmJm51bGwhPT1jLmNoaWxkKWZvcihhPUtkKGEpO251bGwhPT1hOyl7aWYoYz1hW01kXSlyZXR1cm4gYzthPUtkKGEpfXJldHVybiBifWE9YztjPWEucGFyZW50Tm9kZX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBOYyhhKXthPWFbTWRdfHxhW09kXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWcmJjEzIT09YS50YWcmJjMhPT1hLnRhZz9udWxsOmF9ZnVuY3Rpb24gUGQoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO3Rocm93IEVycm9yKHUoMzMpKTt9ZnVuY3Rpb24gUWQoYSl7cmV0dXJuIGFbTmRdfHxudWxsfVxuZnVuY3Rpb24gUmQoYSl7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1cbmZ1bmN0aW9uIFNkKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYoIWMpcmV0dXJuIG51bGw7dmFyIGQ9bGEoYyk7aWYoIWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRW50ZXJcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2lmKGMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjKXRocm93IEVycm9yKHUoMjMxLFxuYix0eXBlb2YgYykpO3JldHVybiBjfWZ1bmN0aW9uIFRkKGEsYixjKXtpZihiPVNkKGEsYy5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lc1tiXSkpYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9aWMoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9aWMoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSl9ZnVuY3Rpb24gVWQoYSl7aWYoYSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyl7Zm9yKHZhciBiPWEuX3RhcmdldEluc3QsYz1bXTtiOyljLnB1c2goYiksYj1SZChiKTtmb3IoYj1jLmxlbmd0aDswPGItLTspVGQoY1tiXSxcImNhcHR1cmVkXCIsYSk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKylUZChjW2JdLFwiYnViYmxlZFwiLGEpfX1cbmZ1bmN0aW9uIFZkKGEsYixjKXthJiZjJiZjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJihiPVNkKGEsYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lKSkmJihjLl9kaXNwYXRjaExpc3RlbmVycz1pYyhjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz1pYyhjLl9kaXNwYXRjaEluc3RhbmNlcyxhKSl9ZnVuY3Rpb24gV2QoYSl7YSYmYS5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiZWZChhLl90YXJnZXRJbnN0LG51bGwsYSl9ZnVuY3Rpb24gWGQoYSl7amMoYSxVZCl9dmFyIFlkPW51bGwsWmQ9bnVsbCwkZD1udWxsO1xuZnVuY3Rpb24gYWUoKXtpZigkZClyZXR1cm4gJGQ7dmFyIGEsYj1aZCxjPWIubGVuZ3RoLGQsZT1cInZhbHVlXCJpbiBZZD9ZZC52YWx1ZTpZZC50ZXh0Q29udGVudCxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO3JldHVybiAkZD1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApfWZ1bmN0aW9uIGJlKCl7cmV0dXJuITB9ZnVuY3Rpb24gY2UoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIEcoYSxiLGMsZCl7dGhpcy5kaXNwYXRjaENvbmZpZz1hO3RoaXMuX3RhcmdldEluc3Q9Yjt0aGlzLm5hdGl2ZUV2ZW50PWM7YT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZTtmb3IodmFyIGUgaW4gYSlhLmhhc093blByb3BlcnR5KGUpJiYoKGI9YVtlXSk/dGhpc1tlXT1iKGMpOlwidGFyZ2V0XCI9PT1lP3RoaXMudGFyZ2V0PWQ6dGhpc1tlXT1jW2VdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Yy5kZWZhdWx0UHJldmVudGVkP2MuZGVmYXVsdFByZXZlbnRlZDohMT09PWMucmV0dXJuVmFsdWUpP2JlOmNlO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9Y2U7cmV0dXJuIHRoaXN9XG5uKEcucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiYoYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9YmUpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9YmUpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7dGhpcy5pc1BlcnNpc3RlbnQ9YmV9LGlzUGVyc2lzdGVudDpjZSxkZXN0cnVjdG9yOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2UsXG5iO2ZvcihiIGluIGEpdGhpc1tiXT1udWxsO3RoaXMubmF0aXZlRXZlbnQ9dGhpcy5fdGFyZ2V0SW5zdD10aGlzLmRpc3BhdGNoQ29uZmlnPW51bGw7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD10aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1jZTt0aGlzLl9kaXNwYXRjaEluc3RhbmNlcz10aGlzLl9kaXNwYXRjaExpc3RlbmVycz1udWxsfX0pO0cuSW50ZXJmYWNlPXt0eXBlOm51bGwsdGFyZ2V0Om51bGwsY3VycmVudFRhcmdldDpmdW5jdGlvbigpe3JldHVybiBudWxsfSxldmVudFBoYXNlOm51bGwsYnViYmxlczpudWxsLGNhbmNlbGFibGU6bnVsbCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOm51bGwsaXNUcnVzdGVkOm51bGx9O1xuRy5leHRlbmQ9ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe31mdW5jdGlvbiBjKCl7cmV0dXJuIGQuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBkPXRoaXM7Yi5wcm90b3R5cGU9ZC5wcm90b3R5cGU7dmFyIGU9bmV3IGI7bihlLGMucHJvdG90eXBlKTtjLnByb3RvdHlwZT1lO2MucHJvdG90eXBlLmNvbnN0cnVjdG9yPWM7Yy5JbnRlcmZhY2U9bih7fSxkLkludGVyZmFjZSxhKTtjLmV4dGVuZD1kLmV4dGVuZDtkZShjKTtyZXR1cm4gY307ZGUoRyk7ZnVuY3Rpb24gZWUoYSxiLGMsZCl7aWYodGhpcy5ldmVudFBvb2wubGVuZ3RoKXt2YXIgZT10aGlzLmV2ZW50UG9vbC5wb3AoKTt0aGlzLmNhbGwoZSxhLGIsYyxkKTtyZXR1cm4gZX1yZXR1cm4gbmV3IHRoaXMoYSxiLGMsZCl9XG5mdW5jdGlvbiBmZShhKXtpZighKGEgaW5zdGFuY2VvZiB0aGlzKSl0aHJvdyBFcnJvcih1KDI3OSkpO2EuZGVzdHJ1Y3RvcigpOzEwPnRoaXMuZXZlbnRQb29sLmxlbmd0aCYmdGhpcy5ldmVudFBvb2wucHVzaChhKX1mdW5jdGlvbiBkZShhKXthLmV2ZW50UG9vbD1bXTthLmdldFBvb2xlZD1lZTthLnJlbGVhc2U9ZmV9dmFyIGdlPUcuZXh0ZW5kKHtkYXRhOm51bGx9KSxoZT1HLmV4dGVuZCh7ZGF0YTpudWxsfSksaWU9WzksMTMsMjcsMzJdLGplPXlhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxrZT1udWxsO3lhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihrZT1kb2N1bWVudC5kb2N1bWVudE1vZGUpO1xudmFyIGxlPXlhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYha2UsbWU9eWEmJighamV8fGtlJiY4PGtlJiYxMT49a2UpLG5lPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLG9lPXtiZWZvcmVJbnB1dDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkJlZm9yZUlucHV0XCIsY2FwdHVyZWQ6XCJvbkJlZm9yZUlucHV0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdfSxjb21wb3NpdGlvbkVuZDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uRW5kXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uRW5kQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uZW5kIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblN0YXJ0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxuY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25VcGRhdGU6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblVwZGF0ZVwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvblVwZGF0ZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnVwZGF0ZSBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX19LHBlPSExO1xuZnVuY3Rpb24gcWUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT1pZS5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiYmx1clwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIHJlKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIHNlPSExO2Z1bmN0aW9uIHRlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiByZShiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7cGU9ITA7cmV0dXJuIG5lO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PW5lJiZwZT9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiB1ZShhLGIpe2lmKHNlKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFqZSYmcWUoYSxiKT8oYT1hZSgpLCRkPVpkPVlkPW51bGwsc2U9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIG1lJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciB2ZT17ZXZlbnRUeXBlczpvZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlO2lmKGplKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOnZhciBmPW9lLmNvbXBvc2l0aW9uU3RhcnQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpmPW9lLmNvbXBvc2l0aW9uRW5kO2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6Zj1vZS5jb21wb3NpdGlvblVwZGF0ZTticmVhayBifWY9dm9pZCAwfWVsc2Ugc2U/cWUoYSxjKSYmKGY9b2UuY29tcG9zaXRpb25FbmQpOlwia2V5ZG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoZj1vZS5jb21wb3NpdGlvblN0YXJ0KTtmPyhtZSYmXCJrb1wiIT09Yy5sb2NhbGUmJihzZXx8ZiE9PW9lLmNvbXBvc2l0aW9uU3RhcnQ/Zj09PW9lLmNvbXBvc2l0aW9uRW5kJiZzZSYmKGU9YWUoKSk6KFlkPWQsWmQ9XCJ2YWx1ZVwiaW4gWWQ/WWQudmFsdWU6WWQudGV4dENvbnRlbnQsc2U9ITApKSxmPWdlLmdldFBvb2xlZChmLFxuYixjLGQpLGU/Zi5kYXRhPWU6KGU9cmUoYyksbnVsbCE9PWUmJihmLmRhdGE9ZSkpLFhkKGYpLGU9Zik6ZT1udWxsOyhhPWxlP3RlKGEsYyk6dWUoYSxjKSk/KGI9aGUuZ2V0UG9vbGVkKG9lLmJlZm9yZUlucHV0LGIsYyxkKSxiLmRhdGE9YSxYZChiKSk6Yj1udWxsO3JldHVybiBudWxsPT09ZT9iOm51bGw9PT1iP2U6W2UsYl19fSx3ZT17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiB4ZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIXdlW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1cbnZhciB5ZT17Y2hhbmdlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ2hhbmdlXCIsY2FwdHVyZWQ6XCJvbkNoYW5nZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjaGFuZ2UgY2xpY2sgZm9jdXMgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fTtmdW5jdGlvbiB6ZShhLGIsYyl7YT1HLmdldFBvb2xlZCh5ZS5jaGFuZ2UsYSxiLGMpO2EudHlwZT1cImNoYW5nZVwiO0RhKGMpO1hkKGEpO3JldHVybiBhfXZhciBBZT1udWxsLEJlPW51bGw7ZnVuY3Rpb24gQ2UoYSl7bWMoYSl9ZnVuY3Rpb24gRGUoYSl7dmFyIGI9UGQoYSk7aWYoeWIoYikpcmV0dXJuIGF9ZnVuY3Rpb24gRWUoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgRmU9ITE7eWEmJihGZT1vYyhcImlucHV0XCIpJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpKTtcbmZ1bmN0aW9uIEdlKCl7QWUmJihBZS5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixIZSksQmU9QWU9bnVsbCl9ZnVuY3Rpb24gSGUoYSl7aWYoXCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJkRlKEJlKSlpZihhPXplKEJlLGEsbmMoYSkpLEphKW1jKGEpO2Vsc2V7SmE9ITA7dHJ5e0ZhKENlLGEpfWZpbmFsbHl7SmE9ITEsTGEoKX19fWZ1bmN0aW9uIEllKGEsYixjKXtcImZvY3VzXCI9PT1hPyhHZSgpLEFlPWIsQmU9YyxBZS5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixIZSkpOlwiYmx1clwiPT09YSYmR2UoKX1mdW5jdGlvbiBKZShhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiBEZShCZSl9ZnVuY3Rpb24gS2UoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiBEZShiKX1mdW5jdGlvbiBMZShhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiBEZShiKX1cbnZhciBNZT17ZXZlbnRUeXBlczp5ZSxfaXNJbnB1dEV2ZW50U3VwcG9ydGVkOkZlLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Yj9QZChiKTp3aW5kb3csZj1lLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoXCJzZWxlY3RcIj09PWZ8fFwiaW5wdXRcIj09PWYmJlwiZmlsZVwiPT09ZS50eXBlKXZhciBnPUVlO2Vsc2UgaWYoeGUoZSkpaWYoRmUpZz1MZTtlbHNle2c9SmU7dmFyIGg9SWV9ZWxzZShmPWUubm9kZU5hbWUpJiZcImlucHV0XCI9PT1mLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1lLnR5cGV8fFwicmFkaW9cIj09PWUudHlwZSkmJihnPUtlKTtpZihnJiYoZz1nKGEsYikpKXJldHVybiB6ZShnLGMsZCk7aCYmaChhLGUsYik7XCJibHVyXCI9PT1hJiYoYT1lLl93cmFwcGVyU3RhdGUpJiZhLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1lLnR5cGUmJkRiKGUsXCJudW1iZXJcIixlLnZhbHVlKX19LE5lPUcuZXh0ZW5kKHt2aWV3Om51bGwsZGV0YWlsOm51bGx9KSxcbk9lPXtBbHQ6XCJhbHRLZXlcIixDb250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBQZShhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPU9lW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gUWUoKXtyZXR1cm4gUGV9XG52YXIgUmU9MCxTZT0wLFRlPSExLFVlPSExLFZlPU5lLmV4dGVuZCh7c2NyZWVuWDpudWxsLHNjcmVlblk6bnVsbCxjbGllbnRYOm51bGwsY2xpZW50WTpudWxsLHBhZ2VYOm51bGwscGFnZVk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpRZSxidXR0b246bnVsbCxidXR0b25zOm51bGwscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gYS5yZWxhdGVkVGFyZ2V0fHwoYS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50KX0sbW92ZW1lbnRYOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRYXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WDt2YXIgYj1SZTtSZT1hLnNjcmVlblg7cmV0dXJuIFRlP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5YLWI6MDooVGU9ITAsMCl9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WVwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFk7XG52YXIgYj1TZTtTZT1hLnNjcmVlblk7cmV0dXJuIFVlP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5ZLWI6MDooVWU9ITAsMCl9fSksV2U9VmUuZXh0ZW5kKHtwb2ludGVySWQ6bnVsbCx3aWR0aDpudWxsLGhlaWdodDpudWxsLHByZXNzdXJlOm51bGwsdGFuZ2VudGlhbFByZXNzdXJlOm51bGwsdGlsdFg6bnVsbCx0aWx0WTpudWxsLHR3aXN0Om51bGwscG9pbnRlclR5cGU6bnVsbCxpc1ByaW1hcnk6bnVsbH0pLFhlPXttb3VzZUVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUVudGVyXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LG1vdXNlTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlTGVhdmVcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0scG9pbnRlckVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19LHBvaW50ZXJMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckxlYXZlXCIsXG5kZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19fSxZZT17ZXZlbnRUeXBlczpYZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEsZz1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoZiYmMD09PShlJjMyKSYmKGMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCl8fCFnJiYhZilyZXR1cm4gbnVsbDtmPWQud2luZG93PT09ZD9kOihmPWQub3duZXJEb2N1bWVudCk/Zi5kZWZhdWx0Vmlld3x8Zi5wYXJlbnRXaW5kb3c6d2luZG93O2lmKGcpe2lmKGc9YixiPShiPWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQpP3RjKGIpOm51bGwsbnVsbCE9PWIpe3ZhciBoPWRjKGIpO2lmKGIhPT1ofHw1IT09Yi50YWcmJjYhPT1iLnRhZyliPW51bGx9fWVsc2UgZz1udWxsO2lmKGc9PT1iKXJldHVybiBudWxsO2lmKFwibW91c2VvdXRcIj09PWF8fFwibW91c2VvdmVyXCI9PT1cbmEpe3ZhciBrPVZlO3ZhciBsPVhlLm1vdXNlTGVhdmU7dmFyIG09WGUubW91c2VFbnRlcjt2YXIgcD1cIm1vdXNlXCJ9ZWxzZSBpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpaz1XZSxsPVhlLnBvaW50ZXJMZWF2ZSxtPVhlLnBvaW50ZXJFbnRlcixwPVwicG9pbnRlclwiO2E9bnVsbD09Zz9mOlBkKGcpO2Y9bnVsbD09Yj9mOlBkKGIpO2w9ay5nZXRQb29sZWQobCxnLGMsZCk7bC50eXBlPXArXCJsZWF2ZVwiO2wudGFyZ2V0PWE7bC5yZWxhdGVkVGFyZ2V0PWY7Yz1rLmdldFBvb2xlZChtLGIsYyxkKTtjLnR5cGU9cCtcImVudGVyXCI7Yy50YXJnZXQ9ZjtjLnJlbGF0ZWRUYXJnZXQ9YTtkPWc7cD1iO2lmKGQmJnApYTp7az1kO209cDtnPTA7Zm9yKGE9azthO2E9UmQoYSkpZysrO2E9MDtmb3IoYj1tO2I7Yj1SZChiKSlhKys7Zm9yKDswPGctYTspaz1SZChrKSxnLS07Zm9yKDswPGEtZzspbT1SZChtKSxhLS07Zm9yKDtnLS07KXtpZihrPT09bXx8az09PW0uYWx0ZXJuYXRlKWJyZWFrIGE7XG5rPVJkKGspO209UmQobSl9az1udWxsfWVsc2Ugaz1udWxsO209aztmb3Ioaz1bXTtkJiZkIT09bTspe2c9ZC5hbHRlcm5hdGU7aWYobnVsbCE9PWcmJmc9PT1tKWJyZWFrO2sucHVzaChkKTtkPVJkKGQpfWZvcihkPVtdO3AmJnAhPT1tOyl7Zz1wLmFsdGVybmF0ZTtpZihudWxsIT09ZyYmZz09PW0pYnJlYWs7ZC5wdXNoKHApO3A9UmQocCl9Zm9yKHA9MDtwPGsubGVuZ3RoO3ArKylWZChrW3BdLFwiYnViYmxlZFwiLGwpO2ZvcihwPWQubGVuZ3RoOzA8cC0tOylWZChkW3BdLFwiY2FwdHVyZWRcIixjKTtyZXR1cm4gMD09PShlJjY0KT9bbF06W2wsY119fTtmdW5jdGlvbiBaZShhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyICRlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBPYmplY3QuaXM/T2JqZWN0LmlzOlplLGFmPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5mdW5jdGlvbiBiZihhLGIpe2lmKCRlKGEsYikpcmV0dXJuITA7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhfHxudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBifHxudWxsPT09YilyZXR1cm4hMTt2YXIgYz1PYmplY3Qua2V5cyhhKSxkPU9iamVjdC5rZXlzKGIpO2lmKGMubGVuZ3RoIT09ZC5sZW5ndGgpcmV0dXJuITE7Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrKylpZighYWYuY2FsbChiLGNbZF0pfHwhJGUoYVtjW2RdXSxiW2NbZF1dKSlyZXR1cm4hMTtyZXR1cm4hMH1cbnZhciBjZj15YSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLGRmPXtzZWxlY3Q6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25TZWxlY3RcIixjYXB0dXJlZDpcIm9uU2VsZWN0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXMga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fSxlZj1udWxsLGZmPW51bGwsZ2Y9bnVsbCxoZj0hMTtcbmZ1bmN0aW9uIGpmKGEsYil7dmFyIGM9Yi53aW5kb3c9PT1iP2IuZG9jdW1lbnQ6OT09PWIubm9kZVR5cGU/YjpiLm93bmVyRG9jdW1lbnQ7aWYoaGZ8fG51bGw9PWVmfHxlZiE9PXRkKGMpKXJldHVybiBudWxsO2M9ZWY7XCJzZWxlY3Rpb25TdGFydFwiaW4gYyYmeWQoYyk/Yz17c3RhcnQ6Yy5zZWxlY3Rpb25TdGFydCxlbmQ6Yy5zZWxlY3Rpb25FbmR9OihjPShjLm93bmVyRG9jdW1lbnQmJmMub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxjPXthbmNob3JOb2RlOmMuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6Yy5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmMuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmMuZm9jdXNPZmZzZXR9KTtyZXR1cm4gZ2YmJmJmKGdmLGMpP251bGw6KGdmPWMsYT1HLmdldFBvb2xlZChkZi5zZWxlY3QsZmYsYSxiKSxhLnR5cGU9XCJzZWxlY3RcIixhLnRhcmdldD1lZixYZChhKSxhKX1cbnZhciBrZj17ZXZlbnRUeXBlczpkZixleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQsZSxmKXtlPWZ8fChkLndpbmRvdz09PWQ/ZC5kb2N1bWVudDo5PT09ZC5ub2RlVHlwZT9kOmQub3duZXJEb2N1bWVudCk7aWYoIShmPSFlKSl7YTp7ZT1jYyhlKTtmPXdhLm9uU2VsZWN0O2Zvcih2YXIgZz0wO2c8Zi5sZW5ndGg7ZysrKWlmKCFlLmhhcyhmW2ddKSl7ZT0hMTticmVhayBhfWU9ITB9Zj0hZX1pZihmKXJldHVybiBudWxsO2U9Yj9QZChiKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c1wiOmlmKHhlKGUpfHxcInRydWVcIj09PWUuY29udGVudEVkaXRhYmxlKWVmPWUsZmY9YixnZj1udWxsO2JyZWFrO2Nhc2UgXCJibHVyXCI6Z2Y9ZmY9ZWY9bnVsbDticmVhaztjYXNlIFwibW91c2Vkb3duXCI6aGY9ITA7YnJlYWs7Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwiZHJhZ2VuZFwiOnJldHVybiBoZj0hMSxqZihjLGQpO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihjZilicmVhaztcbmNhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6cmV0dXJuIGpmKGMsZCl9cmV0dXJuIG51bGx9fSxsZj1HLmV4dGVuZCh7YW5pbWF0aW9uTmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksbWY9Ry5leHRlbmQoe2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxuZj1OZS5leHRlbmQoe3JlbGF0ZWRUYXJnZXQ6bnVsbH0pO2Z1bmN0aW9uIG9mKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7MTA9PT1hJiYoYT0xMyk7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfVxudmFyIHBmPXtFc2M6XCJFc2NhcGVcIixTcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSxxZj17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIixcbjExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLDExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0scmY9TmUuZXh0ZW5kKHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPXBmW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPW9mKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9xZlthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGxvY2F0aW9uOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLHJlcGVhdDpudWxsLGxvY2FsZTpudWxsLGdldE1vZGlmaWVyU3RhdGU6UWUsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/b2YoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/b2YoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KSxzZj1WZS5leHRlbmQoe2RhdGFUcmFuc2ZlcjpudWxsfSksdGY9TmUuZXh0ZW5kKHt0b3VjaGVzOm51bGwsdGFyZ2V0VG91Y2hlczpudWxsLGNoYW5nZWRUb3VjaGVzOm51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6UWV9KSx1Zj1HLmV4dGVuZCh7cHJvcGVydHlOYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSx2Zj1WZS5leHRlbmQoe2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpblxuYT8tYS53aGVlbERlbHRhWDowfSxkZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6bnVsbCxkZWx0YU1vZGU6bnVsbH0pLHdmPXtldmVudFR5cGVzOldjLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9WWMuZ2V0KGEpO2lmKCFlKXJldHVybiBudWxsO3N3aXRjaChhKXtjYXNlIFwia2V5cHJlc3NcIjppZigwPT09b2YoYykpcmV0dXJuIG51bGw7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjphPXJmO2JyZWFrO2Nhc2UgXCJibHVyXCI6Y2FzZSBcImZvY3VzXCI6YT1uZjticmVhaztjYXNlIFwiY2xpY2tcIjppZigyPT09Yy5idXR0b24pcmV0dXJuIG51bGw7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjphPVxuVmU7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6YT1zZjticmVhaztjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjphPXRmO2JyZWFrO2Nhc2UgWGI6Y2FzZSBZYjpjYXNlIFpiOmE9bGY7YnJlYWs7Y2FzZSAkYjphPXVmO2JyZWFrO2Nhc2UgXCJzY3JvbGxcIjphPU5lO2JyZWFrO2Nhc2UgXCJ3aGVlbFwiOmE9dmY7YnJlYWs7Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcInBhc3RlXCI6YT1tZjticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVydXBcIjphPVxuV2U7YnJlYWs7ZGVmYXVsdDphPUd9Yj1hLmdldFBvb2xlZChlLGIsYyxkKTtYZChiKTtyZXR1cm4gYn19O2lmKHBhKXRocm93IEVycm9yKHUoMTAxKSk7cGE9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoXCJSZXNwb25kZXJFdmVudFBsdWdpbiBTaW1wbGVFdmVudFBsdWdpbiBFbnRlckxlYXZlRXZlbnRQbHVnaW4gQ2hhbmdlRXZlbnRQbHVnaW4gU2VsZWN0RXZlbnRQbHVnaW4gQmVmb3JlSW5wdXRFdmVudFBsdWdpblwiLnNwbGl0KFwiIFwiKSk7cmEoKTt2YXIgeGY9TmM7bGE9UWQ7bWE9eGY7bmE9UGQ7eGEoe1NpbXBsZUV2ZW50UGx1Z2luOndmLEVudGVyTGVhdmVFdmVudFBsdWdpbjpZZSxDaGFuZ2VFdmVudFBsdWdpbjpNZSxTZWxlY3RFdmVudFBsdWdpbjprZixCZWZvcmVJbnB1dEV2ZW50UGx1Z2luOnZlfSk7dmFyIHlmPVtdLHpmPS0xO2Z1bmN0aW9uIEgoYSl7MD56Znx8KGEuY3VycmVudD15Zlt6Zl0seWZbemZdPW51bGwsemYtLSl9XG5mdW5jdGlvbiBJKGEsYil7emYrKzt5Zlt6Zl09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBBZj17fSxKPXtjdXJyZW50OkFmfSxLPXtjdXJyZW50OiExfSxCZj1BZjtmdW5jdGlvbiBDZihhLGIpe3ZhciBjPWEudHlwZS5jb250ZXh0VHlwZXM7aWYoIWMpcmV0dXJuIEFmO3ZhciBkPWEuc3RhdGVOb2RlO2lmKGQmJmQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD09PWIpcmV0dXJuIGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ7dmFyIGU9e30sZjtmb3IoZiBpbiBjKWVbZl09YltmXTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9YixhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWUpO3JldHVybiBlfWZ1bmN0aW9uIEwoYSl7YT1hLmNoaWxkQ29udGV4dFR5cGVzO3JldHVybiBudWxsIT09YSYmdm9pZCAwIT09YX1cbmZ1bmN0aW9uIERmKCl7SChLKTtIKEopfWZ1bmN0aW9uIEVmKGEsYixjKXtpZihKLmN1cnJlbnQhPT1BZil0aHJvdyBFcnJvcih1KDE2OCkpO0koSixiKTtJKEssYyl9ZnVuY3Rpb24gRmYoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2E9Yi5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGM7ZD1kLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBkKWlmKCEoZSBpbiBhKSl0aHJvdyBFcnJvcih1KDEwOCxwYihiKXx8XCJVbmtub3duXCIsZSkpO3JldHVybiBuKHt9LGMse30sZCl9ZnVuY3Rpb24gR2YoYSl7YT0oYT1hLnN0YXRlTm9kZSkmJmEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fEFmO0JmPUouY3VycmVudDtJKEosYSk7SShLLEsuY3VycmVudCk7cmV0dXJuITB9XG5mdW5jdGlvbiBIZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoIWQpdGhyb3cgRXJyb3IodSgxNjkpKTtjPyhhPUZmKGEsYixCZiksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1hLEgoSyksSChKKSxJKEosYSkpOkgoSyk7SShLLGMpfVxudmFyIElmPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LEpmPXIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayxLZj1yLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrLExmPXIudW5zdGFibGVfcmVxdWVzdFBhaW50LE1mPXIudW5zdGFibGVfbm93LE5mPXIudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwsT2Y9ci51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSxQZj1yLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LFFmPXIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksUmY9ci51bnN0YWJsZV9Mb3dQcmlvcml0eSxTZj1yLnVuc3RhYmxlX0lkbGVQcmlvcml0eSxUZj17fSxVZj1yLnVuc3RhYmxlX3Nob3VsZFlpZWxkLFZmPXZvaWQgMCE9PUxmP0xmOmZ1bmN0aW9uKCl7fSxXZj1udWxsLFhmPW51bGwsWWY9ITEsWmY9TWYoKSwkZj0xRTQ+WmY/TWY6ZnVuY3Rpb24oKXtyZXR1cm4gTWYoKS1aZn07XG5mdW5jdGlvbiBhZygpe3N3aXRjaChOZigpKXtjYXNlIE9mOnJldHVybiA5OTtjYXNlIFBmOnJldHVybiA5ODtjYXNlIFFmOnJldHVybiA5NztjYXNlIFJmOnJldHVybiA5NjtjYXNlIFNmOnJldHVybiA5NTtkZWZhdWx0OnRocm93IEVycm9yKHUoMzMyKSk7fX1mdW5jdGlvbiBiZyhhKXtzd2l0Y2goYSl7Y2FzZSA5OTpyZXR1cm4gT2Y7Y2FzZSA5ODpyZXR1cm4gUGY7Y2FzZSA5NzpyZXR1cm4gUWY7Y2FzZSA5NjpyZXR1cm4gUmY7Y2FzZSA5NTpyZXR1cm4gU2Y7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMzMikpO319ZnVuY3Rpb24gY2coYSxiKXthPWJnKGEpO3JldHVybiBJZihhLGIpfWZ1bmN0aW9uIGRnKGEsYixjKXthPWJnKGEpO3JldHVybiBKZihhLGIsYyl9ZnVuY3Rpb24gZWcoYSl7bnVsbD09PVdmPyhXZj1bYV0sWGY9SmYoT2YsZmcpKTpXZi5wdXNoKGEpO3JldHVybiBUZn1mdW5jdGlvbiBnZygpe2lmKG51bGwhPT1YZil7dmFyIGE9WGY7WGY9bnVsbDtLZihhKX1mZygpfVxuZnVuY3Rpb24gZmcoKXtpZighWWYmJm51bGwhPT1XZil7WWY9ITA7dmFyIGE9MDt0cnl7dmFyIGI9V2Y7Y2coOTksZnVuY3Rpb24oKXtmb3IoO2E8Yi5sZW5ndGg7YSsrKXt2YXIgYz1iW2FdO2RvIGM9YyghMCk7d2hpbGUobnVsbCE9PWMpfX0pO1dmPW51bGx9Y2F0Y2goYyl7dGhyb3cgbnVsbCE9PVdmJiYoV2Y9V2Yuc2xpY2UoYSsxKSksSmYoT2YsZ2cpLGM7fWZpbmFsbHl7WWY9ITF9fX1mdW5jdGlvbiBoZyhhLGIsYyl7Yy89MTA7cmV0dXJuIDEwNzM3NDE4MjEtKCgoMTA3Mzc0MTgyMS1hK2IvMTApL2N8MCkrMSkqY31mdW5jdGlvbiBpZyhhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW4oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKX1yZXR1cm4gYn12YXIgamc9e2N1cnJlbnQ6bnVsbH0sa2c9bnVsbCxsZz1udWxsLG1nPW51bGw7ZnVuY3Rpb24gbmcoKXttZz1sZz1rZz1udWxsfVxuZnVuY3Rpb24gb2coYSl7dmFyIGI9amcuY3VycmVudDtIKGpnKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIHBnKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKGEuY2hpbGRFeHBpcmF0aW9uVGltZTxiKWEuY2hpbGRFeHBpcmF0aW9uVGltZT1iLG51bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtlbHNlIGlmKG51bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiljLmNoaWxkRXhwaXJhdGlvblRpbWU9YjtlbHNlIGJyZWFrO2E9YS5yZXR1cm59fWZ1bmN0aW9uIHFnKGEsYil7a2c9YTttZz1sZz1udWxsO2E9YS5kZXBlbmRlbmNpZXM7bnVsbCE9PWEmJm51bGwhPT1hLmZpcnN0Q29udGV4dCYmKGEuZXhwaXJhdGlvblRpbWU+PWImJihyZz0hMCksYS5maXJzdENvbnRleHQ9bnVsbCl9XG5mdW5jdGlvbiBzZyhhLGIpe2lmKG1nIT09YSYmITEhPT1iJiYwIT09Yil7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBifHwxMDczNzQxODIzPT09YiltZz1hLGI9MTA3Mzc0MTgyMztiPXtjb250ZXh0OmEsb2JzZXJ2ZWRCaXRzOmIsbmV4dDpudWxsfTtpZihudWxsPT09bGcpe2lmKG51bGw9PT1rZyl0aHJvdyBFcnJvcih1KDMwOCkpO2xnPWI7a2cuZGVwZW5kZW5jaWVzPXtleHBpcmF0aW9uVGltZTowLGZpcnN0Q29udGV4dDpiLHJlc3BvbmRlcnM6bnVsbH19ZWxzZSBsZz1sZy5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgdGc9ITE7ZnVuY3Rpb24gdWcoYSl7YS51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEubWVtb2l6ZWRTdGF0ZSxiYXNlUXVldWU6bnVsbCxzaGFyZWQ6e3BlbmRpbmc6bnVsbH0sZWZmZWN0czpudWxsfX1cbmZ1bmN0aW9uIHZnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9PT1hJiYoYi51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGJhc2VRdWV1ZTphLmJhc2VRdWV1ZSxzaGFyZWQ6YS5zaGFyZWQsZWZmZWN0czphLmVmZmVjdHN9KX1mdW5jdGlvbiB3ZyhhLGIpe2E9e2V4cGlyYXRpb25UaW1lOmEsc3VzcGVuc2VDb25maWc6Yix0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9O3JldHVybiBhLm5leHQ9YX1mdW5jdGlvbiB4ZyhhLGIpe2E9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09YSl7YT1hLnNoYXJlZDt2YXIgYz1hLnBlbmRpbmc7bnVsbD09PWM/Yi5uZXh0PWI6KGIubmV4dD1jLm5leHQsYy5uZXh0PWIpO2EucGVuZGluZz1ifX1cbmZ1bmN0aW9uIHlnKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJnZnKGMsYSk7YT1hLnVwZGF0ZVF1ZXVlO2M9YS5iYXNlUXVldWU7bnVsbD09PWM/KGEuYmFzZVF1ZXVlPWIubmV4dD1iLGIubmV4dD1iKTooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yil9XG5mdW5jdGlvbiB6ZyhhLGIsYyxkKXt2YXIgZT1hLnVwZGF0ZVF1ZXVlO3RnPSExO3ZhciBmPWUuYmFzZVF1ZXVlLGc9ZS5zaGFyZWQucGVuZGluZztpZihudWxsIT09Zyl7aWYobnVsbCE9PWYpe3ZhciBoPWYubmV4dDtmLm5leHQ9Zy5uZXh0O2cubmV4dD1ofWY9ZztlLnNoYXJlZC5wZW5kaW5nPW51bGw7aD1hLmFsdGVybmF0ZTtudWxsIT09aCYmKGg9aC51cGRhdGVRdWV1ZSxudWxsIT09aCYmKGguYmFzZVF1ZXVlPWcpKX1pZihudWxsIT09Zil7aD1mLm5leHQ7dmFyIGs9ZS5iYXNlU3RhdGUsbD0wLG09bnVsbCxwPW51bGwseD1udWxsO2lmKG51bGwhPT1oKXt2YXIgej1oO2Rve2c9ei5leHBpcmF0aW9uVGltZTtpZihnPGQpe3ZhciBjYT17ZXhwaXJhdGlvblRpbWU6ei5leHBpcmF0aW9uVGltZSxzdXNwZW5zZUNvbmZpZzp6LnN1c3BlbnNlQ29uZmlnLHRhZzp6LnRhZyxwYXlsb2FkOnoucGF5bG9hZCxjYWxsYmFjazp6LmNhbGxiYWNrLG5leHQ6bnVsbH07bnVsbD09PXg/KHA9eD1cbmNhLG09ayk6eD14Lm5leHQ9Y2E7Zz5sJiYobD1nKX1lbHNle251bGwhPT14JiYoeD14Lm5leHQ9e2V4cGlyYXRpb25UaW1lOjEwNzM3NDE4MjMsc3VzcGVuc2VDb25maWc6ei5zdXNwZW5zZUNvbmZpZyx0YWc6ei50YWcscGF5bG9hZDp6LnBheWxvYWQsY2FsbGJhY2s6ei5jYWxsYmFjayxuZXh0Om51bGx9KTtBZyhnLHouc3VzcGVuc2VDb25maWcpO2E6e3ZhciBEPWEsdD16O2c9YjtjYT1jO3N3aXRjaCh0LnRhZyl7Y2FzZSAxOkQ9dC5wYXlsb2FkO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBEKXtrPUQuY2FsbChjYSxrLGcpO2JyZWFrIGF9az1EO2JyZWFrIGE7Y2FzZSAzOkQuZWZmZWN0VGFnPUQuZWZmZWN0VGFnJi00MDk3fDY0O2Nhc2UgMDpEPXQucGF5bG9hZDtnPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBEP0QuY2FsbChjYSxrLGcpOkQ7aWYobnVsbD09PWd8fHZvaWQgMD09PWcpYnJlYWsgYTtrPW4oe30sayxnKTticmVhayBhO2Nhc2UgMjp0Zz0hMH19bnVsbCE9PXouY2FsbGJhY2smJlxuKGEuZWZmZWN0VGFnfD0zMixnPWUuZWZmZWN0cyxudWxsPT09Zz9lLmVmZmVjdHM9W3pdOmcucHVzaCh6KSl9ej16Lm5leHQ7aWYobnVsbD09PXp8fHo9PT1oKWlmKGc9ZS5zaGFyZWQucGVuZGluZyxudWxsPT09ZylicmVhaztlbHNlIHo9Zi5uZXh0PWcubmV4dCxnLm5leHQ9aCxlLmJhc2VRdWV1ZT1mPWcsZS5zaGFyZWQucGVuZGluZz1udWxsfXdoaWxlKDEpfW51bGw9PT14P209azp4Lm5leHQ9cDtlLmJhc2VTdGF0ZT1tO2UuYmFzZVF1ZXVlPXg7QmcobCk7YS5leHBpcmF0aW9uVGltZT1sO2EubWVtb2l6ZWRTdGF0ZT1rfX1cbmZ1bmN0aW9uIENnKGEsYixjKXthPWIuZWZmZWN0cztiLmVmZmVjdHM9bnVsbDtpZihudWxsIT09YSlmb3IoYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgZD1hW2JdLGU9ZC5jYWxsYmFjaztpZihudWxsIT09ZSl7ZC5jYWxsYmFjaz1udWxsO2Q9ZTtlPWM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQpdGhyb3cgRXJyb3IodSgxOTEsZCkpO2QuY2FsbChlKX19fXZhciBEZz1XYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxFZz0obmV3IGFhLkNvbXBvbmVudCkucmVmcztmdW5jdGlvbiBGZyhhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bih7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jOzA9PT1hLmV4cGlyYXRpb25UaW1lJiYoYS51cGRhdGVRdWV1ZS5iYXNlU3RhdGU9Yyl9XG52YXIgSmc9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFsRmliZXIpP2RjKGEpPT09YTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1HZygpLGU9RGcuc3VzcGVuc2U7ZD1IZyhkLGEsZSk7ZT13ZyhkLGUpO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTt4ZyhhLGUpO0lnKGEsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPUdnKCksZT1EZy5zdXNwZW5zZTtkPUhnKGQsYSxlKTtlPXdnKGQsZSk7ZS50YWc9MTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7eGcoYSxlKTtJZyhhLGQpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYSxiKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgYz1HZygpLGQ9RGcuc3VzcGVuc2U7XG5jPUhnKGMsYSxkKTtkPXdnKGMsZCk7ZC50YWc9Mjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGQuY2FsbGJhY2s9Yik7eGcoYSxkKTtJZyhhLGMpfX07ZnVuY3Rpb24gS2coYSxiLGMsZCxlLGYsZyl7YT1hLnN0YXRlTm9kZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5zaG91bGRDb21wb25lbnRVcGRhdGU/YS5zaG91bGRDb21wb25lbnRVcGRhdGUoZCxmLGcpOmIucHJvdG90eXBlJiZiLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hYmYoYyxkKXx8IWJmKGUsZik6ITB9XG5mdW5jdGlvbiBMZyhhLGIsYyl7dmFyIGQ9ITEsZT1BZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/Zj1zZyhmKTooZT1MKGIpP0JmOkouY3VycmVudCxkPWIuY29udGV4dFR5cGVzLGY9KGQ9bnVsbCE9PWQmJnZvaWQgMCE9PWQpP0NmKGEsZSk6QWYpO2I9bmV3IGIoYyxmKTthLm1lbW9pemVkU3RhdGU9bnVsbCE9PWIuc3RhdGUmJnZvaWQgMCE9PWIuc3RhdGU/Yi5zdGF0ZTpudWxsO2IudXBkYXRlcj1KZzthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxGaWJlcj1hO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1lLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zik7cmV0dXJuIGJ9XG5mdW5jdGlvbiBNZyhhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmSmcuZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XG5mdW5jdGlvbiBOZyhhLGIsYyxkKXt2YXIgZT1hLnN0YXRlTm9kZTtlLnByb3BzPWM7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZS5yZWZzPUVnO3VnKGEpO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9lLmNvbnRleHQ9c2coZik6KGY9TChiKT9CZjpKLmN1cnJlbnQsZS5jb250ZXh0PUNmKGEsZikpO3pnKGEsYyxlLGQpO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihGZyhhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHxcbihiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZKZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSx6ZyhhLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmVmZmVjdFRhZ3w9NCl9dmFyIE9nPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBQZyhhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7aWYoYyl7aWYoMSE9PWMudGFnKXRocm93IEVycm9yKHUoMzA5KSk7dmFyIGQ9Yy5zdGF0ZU5vZGV9aWYoIWQpdGhyb3cgRXJyb3IodSgxNDcsYSkpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcztiPT09RWcmJihiPWQucmVmcz17fSk7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1pZihcInN0cmluZ1wiIT09dHlwZW9mIGEpdGhyb3cgRXJyb3IodSgyODQpKTtpZighYy5fb3duZXIpdGhyb3cgRXJyb3IodSgyOTAsYSkpO31yZXR1cm4gYX1cbmZ1bmN0aW9uIFFnKGEsYil7aWYoXCJ0ZXh0YXJlYVwiIT09YS50eXBlKXRocm93IEVycm9yKHUoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjpiLFwiXCIpKTt9XG5mdW5jdGlvbiBSZyhhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmVmZmVjdFRhZz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYil7YT1TZyhhLGIpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5lZmZlY3RUYWc9XG4yLGMpOmQ7Yi5lZmZlY3RUYWc9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZWZmZWN0VGFnPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj1UZyhjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLmVsZW1lbnRUeXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzKSxkLnJlZj1QZyhhLGIsYyksZC5yZXR1cm49YSxkO2Q9VWcoYy50eXBlLGMua2V5LGMucHJvcHMsbnVsbCxhLm1vZGUsZCk7ZC5yZWY9UGcoYSxiLGMpO2QucmV0dXJuPWE7cmV0dXJuIGR9ZnVuY3Rpb24gbChhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PVxuYy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1WZyhjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10pO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbShhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9V2coYyxhLm1vZGUsZCxmKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBwKGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj1UZyhcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBaYTpyZXR1cm4gYz1VZyhiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxjLnJlZj1QZyhhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2UgJGE6cmV0dXJuIGI9VmcoYixhLm1vZGUsYyksYi5yZXR1cm49YSxifWlmKE9nKGIpfHxcbm5iKGIpKXJldHVybiBiPVdnKGIsYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO1FnKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24geChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBaYTpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PWFiP20oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTprKGEsYixjLGQpOm51bGw7Y2FzZSAkYTpyZXR1cm4gYy5rZXk9PT1lP2woYSxiLGMsZCk6bnVsbH1pZihPZyhjKXx8bmIoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bShhLGIsYyxkLG51bGwpO1FnKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24geihhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPVxuYS5nZXQoYyl8fG51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIFphOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT1hYj9tKGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmsoYixhLGQsZSk7Y2FzZSAkYTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsbChiLGEsZCxlKX1pZihPZyhkKXx8bmIoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbShiLGEsZCxlLG51bGwpO1FnKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gY2EoZSxnLGgsayl7Zm9yKHZhciBsPW51bGwsdD1udWxsLG09Zyx5PWc9MCxBPW51bGw7bnVsbCE9PW0mJnk8aC5sZW5ndGg7eSsrKXttLmluZGV4Pnk/KEE9bSxtPW51bGwpOkE9bS5zaWJsaW5nO3ZhciBxPXgoZSxtLGhbeV0sayk7aWYobnVsbD09PXEpe251bGw9PT1tJiYobT1BKTticmVha31hJiZcbm0mJm51bGw9PT1xLmFsdGVybmF0ZSYmYihlLG0pO2c9ZihxLGcseSk7bnVsbD09PXQ/bD1xOnQuc2libGluZz1xO3Q9cTttPUF9aWYoeT09PWgubGVuZ3RoKXJldHVybiBjKGUsbSksbDtpZihudWxsPT09bSl7Zm9yKDt5PGgubGVuZ3RoO3krKyltPXAoZSxoW3ldLGspLG51bGwhPT1tJiYoZz1mKG0sZyx5KSxudWxsPT09dD9sPW06dC5zaWJsaW5nPW0sdD1tKTtyZXR1cm4gbH1mb3IobT1kKGUsbSk7eTxoLmxlbmd0aDt5KyspQT16KG0sZSx5LGhbeV0sayksbnVsbCE9PUEmJihhJiZudWxsIT09QS5hbHRlcm5hdGUmJm0uZGVsZXRlKG51bGw9PT1BLmtleT95OkEua2V5KSxnPWYoQSxnLHkpLG51bGw9PT10P2w9QTp0LnNpYmxpbmc9QSx0PUEpO2EmJm0uZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9ZnVuY3Rpb24gRChlLGcsaCxsKXt2YXIgaz1uYihoKTtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2Ygayl0aHJvdyBFcnJvcih1KDE1MCkpO2g9ay5jYWxsKGgpO1xuaWYobnVsbD09aCl0aHJvdyBFcnJvcih1KDE1MSkpO2Zvcih2YXIgbT1rPW51bGwsdD1nLHk9Zz0wLEE9bnVsbCxxPWgubmV4dCgpO251bGwhPT10JiYhcS5kb25lO3krKyxxPWgubmV4dCgpKXt0LmluZGV4Pnk/KEE9dCx0PW51bGwpOkE9dC5zaWJsaW5nO3ZhciBEPXgoZSx0LHEudmFsdWUsbCk7aWYobnVsbD09PUQpe251bGw9PT10JiYodD1BKTticmVha31hJiZ0JiZudWxsPT09RC5hbHRlcm5hdGUmJmIoZSx0KTtnPWYoRCxnLHkpO251bGw9PT1tP2s9RDptLnNpYmxpbmc9RDttPUQ7dD1BfWlmKHEuZG9uZSlyZXR1cm4gYyhlLHQpLGs7aWYobnVsbD09PXQpe2Zvcig7IXEuZG9uZTt5KysscT1oLm5leHQoKSlxPXAoZSxxLnZhbHVlLGwpLG51bGwhPT1xJiYoZz1mKHEsZyx5KSxudWxsPT09bT9rPXE6bS5zaWJsaW5nPXEsbT1xKTtyZXR1cm4ga31mb3IodD1kKGUsdCk7IXEuZG9uZTt5KysscT1oLm5leHQoKSlxPXoodCxlLHkscS52YWx1ZSxsKSxudWxsIT09cSYmKGEmJm51bGwhPT1cbnEuYWx0ZXJuYXRlJiZ0LmRlbGV0ZShudWxsPT09cS5rZXk/eTpxLmtleSksZz1mKHEsZyx5KSxudWxsPT09bT9rPXE6bS5zaWJsaW5nPXEsbT1xKTthJiZ0LmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBrfXJldHVybiBmdW5jdGlvbihhLGQsZixoKXt2YXIgaz1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT1hYiYmbnVsbD09PWYua2V5O2smJihmPWYucHJvcHMuY2hpbGRyZW4pO3ZhciBsPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY7aWYobClzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSBaYTphOntsPWYua2V5O2ZvcihrPWQ7bnVsbCE9PWs7KXtpZihrLmtleT09PWwpe3N3aXRjaChrLnRhZyl7Y2FzZSA3OmlmKGYudHlwZT09PWFiKXtjKGEsay5zaWJsaW5nKTtkPWUoayxmLnByb3BzLmNoaWxkcmVuKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWJyZWFrO2RlZmF1bHQ6aWYoay5lbGVtZW50VHlwZT09PWYudHlwZSl7YyhhLFxuay5zaWJsaW5nKTtkPWUoayxmLnByb3BzKTtkLnJlZj1QZyhhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX19YyhhLGspO2JyZWFrfWVsc2UgYihhLGspO2s9ay5zaWJsaW5nfWYudHlwZT09PWFiPyhkPVdnKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD1VZyhmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj1QZyhhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgJGE6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9XG5kLnNpYmxpbmd9ZD1WZyhmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZiksZC5yZXR1cm49YSxhPWQpOihjKGEsZCksZD1UZyhmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKTtpZihPZyhmKSlyZXR1cm4gY2EoYSxkLGYsaCk7aWYobmIoZikpcmV0dXJuIEQoYSxkLGYsaCk7bCYmUWcoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMDp0aHJvdyBhPWEudHlwZSxFcnJvcih1KDE1MixhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fFwiQ29tcG9uZW50XCIpKTt9cmV0dXJuIGMoYSxkKX19dmFyIFhnPVJnKCEwKSxZZz1SZyghMSksWmc9e30sJGc9e2N1cnJlbnQ6Wmd9LGFoPXtjdXJyZW50OlpnfSxiaD17Y3VycmVudDpaZ307XG5mdW5jdGlvbiBjaChhKXtpZihhPT09WmcpdGhyb3cgRXJyb3IodSgxNzQpKTtyZXR1cm4gYX1mdW5jdGlvbiBkaChhLGIpe0koYmgsYik7SShhaCxhKTtJKCRnLFpnKTthPWIubm9kZVR5cGU7c3dpdGNoKGEpe2Nhc2UgOTpjYXNlIDExOmI9KGI9Yi5kb2N1bWVudEVsZW1lbnQpP2IubmFtZXNwYWNlVVJJOk9iKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDphPTg9PT1hP2IucGFyZW50Tm9kZTpiLGI9YS5uYW1lc3BhY2VVUkl8fG51bGwsYT1hLnRhZ05hbWUsYj1PYihiLGEpfUgoJGcpO0koJGcsYil9ZnVuY3Rpb24gZWgoKXtIKCRnKTtIKGFoKTtIKGJoKX1mdW5jdGlvbiBmaChhKXtjaChiaC5jdXJyZW50KTt2YXIgYj1jaCgkZy5jdXJyZW50KTt2YXIgYz1PYihiLGEudHlwZSk7YiE9PWMmJihJKGFoLGEpLEkoJGcsYykpfWZ1bmN0aW9uIGdoKGEpe2FoLmN1cnJlbnQ9PT1hJiYoSCgkZyksSChhaCkpfXZhciBNPXtjdXJyZW50OjB9O1xuZnVuY3Rpb24gaGgoYSl7Zm9yKHZhciBiPWE7bnVsbCE9PWI7KXtpZigxMz09PWIudGFnKXt2YXIgYz1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsPT09Y3x8Yy5kYXRhPT09QmR8fGMuZGF0YT09PUNkKSlyZXR1cm4gYn1lbHNlIGlmKDE5PT09Yi50YWcmJnZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5yZXZlYWxPcmRlcil7aWYoMCE9PShiLmVmZmVjdFRhZyY2NCkpcmV0dXJuIGJ9ZWxzZSBpZihudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfXJldHVybiBudWxsfWZ1bmN0aW9uIGloKGEsYil7cmV0dXJue3Jlc3BvbmRlcjphLHByb3BzOmJ9fVxudmFyIGpoPVdhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsa2g9V2EuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsbGg9MCxOPW51bGwsTz1udWxsLFA9bnVsbCxtaD0hMTtmdW5jdGlvbiBRKCl7dGhyb3cgRXJyb3IodSgzMjEpKTt9ZnVuY3Rpb24gbmgoYSxiKXtpZihudWxsPT09YilyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoJiZjPGEubGVuZ3RoO2MrKylpZighJGUoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH1cbmZ1bmN0aW9uIG9oKGEsYixjLGQsZSxmKXtsaD1mO049YjtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7Yi5leHBpcmF0aW9uVGltZT0wO2poLmN1cnJlbnQ9bnVsbD09PWF8fG51bGw9PT1hLm1lbW9pemVkU3RhdGU/cGg6cWg7YT1jKGQsZSk7aWYoYi5leHBpcmF0aW9uVGltZT09PWxoKXtmPTA7ZG97Yi5leHBpcmF0aW9uVGltZT0wO2lmKCEoMjU+ZikpdGhyb3cgRXJyb3IodSgzMDEpKTtmKz0xO1A9Tz1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtqaC5jdXJyZW50PXJoO2E9YyhkLGUpfXdoaWxlKGIuZXhwaXJhdGlvblRpbWU9PT1saCl9amguY3VycmVudD1zaDtiPW51bGwhPT1PJiZudWxsIT09Ty5uZXh0O2xoPTA7UD1PPU49bnVsbDttaD0hMTtpZihiKXRocm93IEVycm9yKHUoMzAwKSk7cmV0dXJuIGF9XG5mdW5jdGlvbiB0aCgpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwsYmFzZVF1ZXVlOm51bGwscXVldWU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1QP04ubWVtb2l6ZWRTdGF0ZT1QPWE6UD1QLm5leHQ9YTtyZXR1cm4gUH1mdW5jdGlvbiB1aCgpe2lmKG51bGw9PT1PKXt2YXIgYT1OLmFsdGVybmF0ZTthPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsfWVsc2UgYT1PLm5leHQ7dmFyIGI9bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlOlAubmV4dDtpZihudWxsIT09YilQPWIsTz1hO2Vsc2V7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IodSgzMTApKTtPPWE7YT17bWVtb2l6ZWRTdGF0ZTpPLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOk8uYmFzZVN0YXRlLGJhc2VRdWV1ZTpPLmJhc2VRdWV1ZSxxdWV1ZTpPLnF1ZXVlLG5leHQ6bnVsbH07bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlPVA9YTpQPVAubmV4dD1hfXJldHVybiBQfVxuZnVuY3Rpb24gdmgoYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiB3aChhKXt2YXIgYj11aCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih1KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPU8sZT1kLmJhc2VRdWV1ZSxmPWMucGVuZGluZztpZihudWxsIT09Zil7aWYobnVsbCE9PWUpe3ZhciBnPWUubmV4dDtlLm5leHQ9Zi5uZXh0O2YubmV4dD1nfWQuYmFzZVF1ZXVlPWU9ZjtjLnBlbmRpbmc9bnVsbH1pZihudWxsIT09ZSl7ZT1lLm5leHQ7ZD1kLmJhc2VTdGF0ZTt2YXIgaD1nPWY9bnVsbCxrPWU7ZG97dmFyIGw9ay5leHBpcmF0aW9uVGltZTtpZihsPGxoKXt2YXIgbT17ZXhwaXJhdGlvblRpbWU6ay5leHBpcmF0aW9uVGltZSxzdXNwZW5zZUNvbmZpZzprLnN1c3BlbnNlQ29uZmlnLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfTtudWxsPT09aD8oZz1oPW0sZj1kKTpoPWgubmV4dD1tO2w+Ti5leHBpcmF0aW9uVGltZSYmXG4oTi5leHBpcmF0aW9uVGltZT1sLEJnKGwpKX1lbHNlIG51bGwhPT1oJiYoaD1oLm5leHQ9e2V4cGlyYXRpb25UaW1lOjEwNzM3NDE4MjMsc3VzcGVuc2VDb25maWc6ay5zdXNwZW5zZUNvbmZpZyxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLGVhZ2VyU3RhdGU6ay5lYWdlclN0YXRlLG5leHQ6bnVsbH0pLEFnKGwsay5zdXNwZW5zZUNvbmZpZyksZD1rLmVhZ2VyUmVkdWNlcj09PWE/ay5lYWdlclN0YXRlOmEoZCxrLmFjdGlvbik7az1rLm5leHR9d2hpbGUobnVsbCE9PWsmJmshPT1lKTtudWxsPT09aD9mPWQ6aC5uZXh0PWc7JGUoZCxiLm1lbW9pemVkU3RhdGUpfHwocmc9ITApO2IubWVtb2l6ZWRTdGF0ZT1kO2IuYmFzZVN0YXRlPWY7Yi5iYXNlUXVldWU9aDtjLmxhc3RSZW5kZXJlZFN0YXRlPWR9cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxjLmRpc3BhdGNoXX1cbmZ1bmN0aW9uIHhoKGEpe3ZhciBiPXVoKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHUoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9Yy5kaXNwYXRjaCxlPWMucGVuZGluZyxmPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZSl7Yy5wZW5kaW5nPW51bGw7dmFyIGc9ZT1lLm5leHQ7ZG8gZj1hKGYsZy5hY3Rpb24pLGc9Zy5uZXh0O3doaWxlKGchPT1lKTskZShmLGIubWVtb2l6ZWRTdGF0ZSl8fChyZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7bnVsbD09PWIuYmFzZVF1ZXVlJiYoYi5iYXNlU3RhdGU9Zik7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mfXJldHVybltmLGRdfVxuZnVuY3Rpb24geWgoYSl7dmFyIGI9dGgoKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSYmKGE9YSgpKTtiLm1lbW9pemVkU3RhdGU9Yi5iYXNlU3RhdGU9YTthPWIucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6dmgsbGFzdFJlbmRlcmVkU3RhdGU6YX07YT1hLmRpc3BhdGNoPXpoLmJpbmQobnVsbCxOLGEpO3JldHVybltiLm1lbW9pemVkU3RhdGUsYV19ZnVuY3Rpb24gQWgoYSxiLGMsZCl7YT17dGFnOmEsY3JlYXRlOmIsZGVzdHJveTpjLGRlcHM6ZCxuZXh0Om51bGx9O2I9Ti51cGRhdGVRdWV1ZTtudWxsPT09Yj8oYj17bGFzdEVmZmVjdDpudWxsfSxOLnVwZGF0ZVF1ZXVlPWIsYi5sYXN0RWZmZWN0PWEubmV4dD1hKTooYz1iLmxhc3RFZmZlY3QsbnVsbD09PWM/Yi5sYXN0RWZmZWN0PWEubmV4dD1hOihkPWMubmV4dCxjLm5leHQ9YSxhLm5leHQ9ZCxiLmxhc3RFZmZlY3Q9YSkpO3JldHVybiBhfVxuZnVuY3Rpb24gQmgoKXtyZXR1cm4gdWgoKS5tZW1vaXplZFN0YXRlfWZ1bmN0aW9uIENoKGEsYixjLGQpe3ZhciBlPXRoKCk7Ti5lZmZlY3RUYWd8PWE7ZS5tZW1vaXplZFN0YXRlPUFoKDF8YixjLHZvaWQgMCx2b2lkIDA9PT1kP251bGw6ZCl9ZnVuY3Rpb24gRGgoYSxiLGMsZCl7dmFyIGU9dWgoKTtkPXZvaWQgMD09PWQ/bnVsbDpkO3ZhciBmPXZvaWQgMDtpZihudWxsIT09Tyl7dmFyIGc9Ty5tZW1vaXplZFN0YXRlO2Y9Zy5kZXN0cm95O2lmKG51bGwhPT1kJiZuaChkLGcuZGVwcykpe0FoKGIsYyxmLGQpO3JldHVybn19Ti5lZmZlY3RUYWd8PWE7ZS5tZW1vaXplZFN0YXRlPUFoKDF8YixjLGYsZCl9ZnVuY3Rpb24gRWgoYSxiKXtyZXR1cm4gQ2goNTE2LDQsYSxiKX1mdW5jdGlvbiBGaChhLGIpe3JldHVybiBEaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIEdoKGEsYil7cmV0dXJuIERoKDQsMixhLGIpfVxuZnVuY3Rpb24gSGgoYSxiKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYT1hKCksYihhKSxmdW5jdGlvbigpe2IobnVsbCl9O2lmKG51bGwhPT1iJiZ2b2lkIDAhPT1iKXJldHVybiBhPWEoKSxiLmN1cnJlbnQ9YSxmdW5jdGlvbigpe2IuY3VycmVudD1udWxsfX1mdW5jdGlvbiBJaChhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIERoKDQsMixIaC5iaW5kKG51bGwsYixhKSxjKX1mdW5jdGlvbiBKaCgpe31mdW5jdGlvbiBLaChhLGIpe3RoKCkubWVtb2l6ZWRTdGF0ZT1bYSx2b2lkIDA9PT1iP251bGw6Yl07cmV0dXJuIGF9ZnVuY3Rpb24gTGgoYSxiKXt2YXIgYz11aCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmbmgoYixkWzFdKSlyZXR1cm4gZFswXTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9XG5mdW5jdGlvbiBNaChhLGIpe3ZhciBjPXVoKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZuaChiLGRbMV0pKXJldHVybiBkWzBdO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1mdW5jdGlvbiBOaChhLGIsYyl7dmFyIGQ9YWcoKTtjZyg5OD5kPzk4OmQsZnVuY3Rpb24oKXthKCEwKX0pO2NnKDk3PGQ/OTc6ZCxmdW5jdGlvbigpe3ZhciBkPWtoLnN1c3BlbnNlO2toLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXthKCExKSxjKCl9ZmluYWxseXtraC5zdXNwZW5zZT1kfX0pfVxuZnVuY3Rpb24gemgoYSxiLGMpe3ZhciBkPUdnKCksZT1EZy5zdXNwZW5zZTtkPUhnKGQsYSxlKTtlPXtleHBpcmF0aW9uVGltZTpkLHN1c3BlbnNlQ29uZmlnOmUsYWN0aW9uOmMsZWFnZXJSZWR1Y2VyOm51bGwsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH07dmFyIGY9Yi5wZW5kaW5nO251bGw9PT1mP2UubmV4dD1lOihlLm5leHQ9Zi5uZXh0LGYubmV4dD1lKTtiLnBlbmRpbmc9ZTtmPWEuYWx0ZXJuYXRlO2lmKGE9PT1OfHxudWxsIT09ZiYmZj09PU4pbWg9ITAsZS5leHBpcmF0aW9uVGltZT1saCxOLmV4cGlyYXRpb25UaW1lPWxoO2Vsc2V7aWYoMD09PWEuZXhwaXJhdGlvblRpbWUmJihudWxsPT09Znx8MD09PWYuZXhwaXJhdGlvblRpbWUpJiYoZj1iLmxhc3RSZW5kZXJlZFJlZHVjZXIsbnVsbCE9PWYpKXRyeXt2YXIgZz1iLmxhc3RSZW5kZXJlZFN0YXRlLGg9ZihnLGMpO2UuZWFnZXJSZWR1Y2VyPWY7ZS5lYWdlclN0YXRlPWg7aWYoJGUoaCxnKSlyZXR1cm59Y2F0Y2goayl7fWZpbmFsbHl7fUlnKGEsXG5kKX19XG52YXIgc2g9e3JlYWRDb250ZXh0OnNnLHVzZUNhbGxiYWNrOlEsdXNlQ29udGV4dDpRLHVzZUVmZmVjdDpRLHVzZUltcGVyYXRpdmVIYW5kbGU6USx1c2VMYXlvdXRFZmZlY3Q6USx1c2VNZW1vOlEsdXNlUmVkdWNlcjpRLHVzZVJlZjpRLHVzZVN0YXRlOlEsdXNlRGVidWdWYWx1ZTpRLHVzZVJlc3BvbmRlcjpRLHVzZURlZmVycmVkVmFsdWU6USx1c2VUcmFuc2l0aW9uOlF9LHBoPXtyZWFkQ29udGV4dDpzZyx1c2VDYWxsYmFjazpLaCx1c2VDb250ZXh0OnNnLHVzZUVmZmVjdDpFaCx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gQ2goNCwyLEhoLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gQ2goNCwyLGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXt2YXIgYz10aCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLFxuYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTthPWEuZGlzcGF0Y2g9emguYmluZChudWxsLE4sYSk7cmV0dXJuW2QubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlUmVmOmZ1bmN0aW9uKGEpe3ZhciBiPXRoKCk7YT17Y3VycmVudDphfTtyZXR1cm4gYi5tZW1vaXplZFN0YXRlPWF9LHVzZVN0YXRlOnloLHVzZURlYnVnVmFsdWU6SmgsdXNlUmVzcG9uZGVyOmloLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSxiKXt2YXIgYz15aChhKSxkPWNbMF0sZT1jWzFdO0VoKGZ1bmN0aW9uKCl7dmFyIGM9a2guc3VzcGVuc2U7a2guc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtraC5zdXNwZW5zZT1cbmN9fSxbYSxiXSk7cmV0dXJuIGR9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oYSl7dmFyIGI9eWgoITEpLGM9YlswXTtiPWJbMV07cmV0dXJuW0toKE5oLmJpbmQobnVsbCxiLGEpLFtiLGFdKSxjXX19LHFoPXtyZWFkQ29udGV4dDpzZyx1c2VDYWxsYmFjazpMaCx1c2VDb250ZXh0OnNnLHVzZUVmZmVjdDpGaCx1c2VJbXBlcmF0aXZlSGFuZGxlOkloLHVzZUxheW91dEVmZmVjdDpHaCx1c2VNZW1vOk1oLHVzZVJlZHVjZXI6d2gsdXNlUmVmOkJoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIHdoKHZoKX0sdXNlRGVidWdWYWx1ZTpKaCx1c2VSZXNwb25kZXI6aWgsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPXdoKHZoKSxkPWNbMF0sZT1jWzFdO0ZoKGZ1bmN0aW9uKCl7dmFyIGM9a2guc3VzcGVuc2U7a2guc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtraC5zdXNwZW5zZT1jfX0sW2EsYl0pO3JldHVybiBkfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPVxud2godmgpLGM9YlswXTtiPWJbMV07cmV0dXJuW0xoKE5oLmJpbmQobnVsbCxiLGEpLFtiLGFdKSxjXX19LHJoPXtyZWFkQ29udGV4dDpzZyx1c2VDYWxsYmFjazpMaCx1c2VDb250ZXh0OnNnLHVzZUVmZmVjdDpGaCx1c2VJbXBlcmF0aXZlSGFuZGxlOkloLHVzZUxheW91dEVmZmVjdDpHaCx1c2VNZW1vOk1oLHVzZVJlZHVjZXI6eGgsdXNlUmVmOkJoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIHhoKHZoKX0sdXNlRGVidWdWYWx1ZTpKaCx1c2VSZXNwb25kZXI6aWgsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPXhoKHZoKSxkPWNbMF0sZT1jWzFdO0ZoKGZ1bmN0aW9uKCl7dmFyIGM9a2guc3VzcGVuc2U7a2guc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtraC5zdXNwZW5zZT1jfX0sW2EsYl0pO3JldHVybiBkfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPXhoKHZoKSxjPWJbMF07Yj1iWzFdO3JldHVybltMaChOaC5iaW5kKG51bGwsXG5iLGEpLFtiLGFdKSxjXX19LE9oPW51bGwsUGg9bnVsbCxRaD0hMTtmdW5jdGlvbiBSaChhLGIpe3ZhciBjPVNoKDUsbnVsbCxudWxsLDApO2MuZWxlbWVudFR5cGU9XCJERUxFVEVEXCI7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtjLmVmZmVjdFRhZz04O251bGwhPT1hLmxhc3RFZmZlY3Q/KGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsYS5sYXN0RWZmZWN0PWMpOmEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PWN9XG5mdW5jdGlvbiBUaChhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDEzOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gVWgoYSl7aWYoUWgpe3ZhciBiPVBoO2lmKGIpe3ZhciBjPWI7aWYoIVRoKGEsYikpe2I9SmQoYy5uZXh0U2libGluZyk7aWYoIWJ8fCFUaChhLGIpKXthLmVmZmVjdFRhZz1hLmVmZmVjdFRhZyYtMTAyNXwyO1FoPSExO09oPWE7cmV0dXJufVJoKE9oLGMpfU9oPWE7UGg9SmQoYi5maXJzdENoaWxkKX1lbHNlIGEuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi0xMDI1fDIsUWg9ITEsT2g9YX19ZnVuY3Rpb24gVmgoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnJiYxMyE9PWEudGFnOylhPWEucmV0dXJuO09oPWF9XG5mdW5jdGlvbiBXaChhKXtpZihhIT09T2gpcmV0dXJuITE7aWYoIVFoKXJldHVybiBWaChhKSxRaD0hMCwhMTt2YXIgYj1hLnR5cGU7aWYoNSE9PWEudGFnfHxcImhlYWRcIiE9PWImJlwiYm9keVwiIT09YiYmIUdkKGIsYS5tZW1vaXplZFByb3BzKSlmb3IoYj1QaDtiOylSaChhLGIpLGI9SmQoYi5uZXh0U2libGluZyk7VmgoYSk7aWYoMTM9PT1hLnRhZyl7YT1hLm1lbW9pemVkU3RhdGU7YT1udWxsIT09YT9hLmRlaHlkcmF0ZWQ6bnVsbDtpZighYSl0aHJvdyBFcnJvcih1KDMxNykpO2E6e2E9YS5uZXh0U2libGluZztmb3IoYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKGM9PT1BZCl7aWYoMD09PWIpe1BoPUpkKGEubmV4dFNpYmxpbmcpO2JyZWFrIGF9Yi0tfWVsc2UgYyE9PXpkJiZjIT09Q2QmJmMhPT1CZHx8YisrfWE9YS5uZXh0U2libGluZ31QaD1udWxsfX1lbHNlIFBoPU9oP0pkKGEuc3RhdGVOb2RlLm5leHRTaWJsaW5nKTpudWxsO3JldHVybiEwfVxuZnVuY3Rpb24gWGgoKXtQaD1PaD1udWxsO1FoPSExfXZhciBZaD1XYS5SZWFjdEN1cnJlbnRPd25lcixyZz0hMTtmdW5jdGlvbiBSKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/WWcoYixudWxsLGMsZCk6WGcoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gWmgoYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO3FnKGIsZSk7ZD1vaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiFyZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZWZmZWN0VGFnJj0tNTE3LGEuZXhwaXJhdGlvblRpbWU8PWUmJihhLmV4cGlyYXRpb25UaW1lPTApLCRoKGEsYixlKTtiLmVmZmVjdFRhZ3w9MTtSKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gYWkoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFiaShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxjaShhLGIsZyxkLGUsZik7YT1VZyhjLnR5cGUsbnVsbCxkLG51bGwsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoZTxmJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOmJmLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuICRoKGEsYixmKTtiLmVmZmVjdFRhZ3w9MTthPVNnKGcsZCk7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxuZnVuY3Rpb24gY2koYSxiLGMsZCxlLGYpe3JldHVybiBudWxsIT09YSYmYmYoYS5tZW1vaXplZFByb3BzLGQpJiZhLnJlZj09PWIucmVmJiYocmc9ITEsZTxmKT8oYi5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lLCRoKGEsYixmKSk6ZGkoYSxiLGMsZCxmKX1mdW5jdGlvbiBlaShhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmVmZmVjdFRhZ3w9MTI4fWZ1bmN0aW9uIGRpKGEsYixjLGQsZSl7dmFyIGY9TChjKT9CZjpKLmN1cnJlbnQ7Zj1DZihiLGYpO3FnKGIsZSk7Yz1vaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiFyZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZWZmZWN0VGFnJj0tNTE3LGEuZXhwaXJhdGlvblRpbWU8PWUmJihhLmV4cGlyYXRpb25UaW1lPTApLCRoKGEsYixlKTtiLmVmZmVjdFRhZ3w9MTtSKGEsYixjLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gZmkoYSxiLGMsZCxlKXtpZihMKGMpKXt2YXIgZj0hMDtHZihiKX1lbHNlIGY9ITE7cWcoYixlKTtpZihudWxsPT09Yi5zdGF0ZU5vZGUpbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpLExnKGIsYyxkKSxOZyhiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD1zZyhsKToobD1MKGMpP0JmOkouY3VycmVudCxsPUNmKGIsbCkpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLHA9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO3B8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZNZyhiLGcsZCxsKTt0Zz0hMTt2YXIgeD1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT14O3pnKGIsZCxnLGUpO2s9Yi5tZW1vaXplZFN0YXRlO2ghPT1kfHx4IT09a3x8Sy5jdXJyZW50fHx0Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihGZyhiLGMsbSxkKSxrPWIubWVtb2l6ZWRTdGF0ZSksKGg9dGd8fEtnKGIsYyxoLGQseCxrLGwpKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksZD0hMSl9ZWxzZSBnPWIuc3RhdGVOb2RlLHZnKGEsYiksaD1iLm1lbW9pemVkUHJvcHMsZy5wcm9wcz1iLnR5cGU9PT1iLmVsZW1lbnRUeXBlP2g6aWcoYi50eXBlLGgpLGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZSxcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9c2cobCk6KGw9TChjKT9CZjpKLmN1cnJlbnQsbD1DZihiLGwpKSxtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLChwPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZNZyhiLGcsZCxsKSx0Zz0hMSxrPWIubWVtb2l6ZWRTdGF0ZSxnLnN0YXRlPWssemcoYixkLGcsZSkseD1iLm1lbW9pemVkU3RhdGUsaCE9PWR8fGshPT14fHxLLmN1cnJlbnR8fHRnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKEZnKGIsYyxtLGQpLHg9Yi5tZW1vaXplZFN0YXRlKSwobT10Z3x8S2coYixjLGgsZCxrLHgsbCkpPyhwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLFxueCxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLHgsbCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZWZmZWN0VGFnfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPXgpLGcucHJvcHM9ZCxnLnN0YXRlPXgsZy5jb250ZXh0PWwsZD1tKTpcbihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxkPSExKTtyZXR1cm4gZ2koYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24gZ2koYSxiLGMsZCxlLGYpe2VpKGEsYik7dmFyIGc9MCE9PShiLmVmZmVjdFRhZyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZIZihiLGMsITEpLCRoKGEsYixmKTtkPWIuc3RhdGVOb2RlO1loLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPVhnKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9WGcoYixudWxsLGgsZikpOlIoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmSGYoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiBoaShhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P0VmKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJkVmKGEsYi5jb250ZXh0LCExKTtkaChhLGIuY29udGFpbmVySW5mbyl9XG52YXIgaWk9e2RlaHlkcmF0ZWQ6bnVsbCxyZXRyeVRpbWU6MH07XG5mdW5jdGlvbiBqaShhLGIsYyl7dmFyIGQ9Yi5tb2RlLGU9Yi5wZW5kaW5nUHJvcHMsZj1NLmN1cnJlbnQsZz0hMSxoOyhoPTAhPT0oYi5lZmZlY3RUYWcmNjQpKXx8KGg9MCE9PShmJjIpJiYobnVsbD09PWF8fG51bGwhPT1hLm1lbW9pemVkU3RhdGUpKTtoPyhnPSEwLGIuZWZmZWN0VGFnJj0tNjUpOm51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlfHx2b2lkIDA9PT1lLmZhbGxiYWNrfHwhMD09PWUudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fChmfD0xKTtJKE0sZiYxKTtpZihudWxsPT09YSl7dm9pZCAwIT09ZS5mYWxsYmFjayYmVWgoYik7aWYoZyl7Zz1lLmZhbGxiYWNrO2U9V2cobnVsbCxkLDAsbnVsbCk7ZS5yZXR1cm49YjtpZigwPT09KGIubW9kZSYyKSlmb3IoYT1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxlLmNoaWxkPWE7bnVsbCE9PWE7KWEucmV0dXJuPWUsYT1hLnNpYmxpbmc7Yz1XZyhnLGQsYyxudWxsKTtjLnJldHVybj1cbmI7ZS5zaWJsaW5nPWM7Yi5tZW1vaXplZFN0YXRlPWlpO2IuY2hpbGQ9ZTtyZXR1cm4gY31kPWUuY2hpbGRyZW47Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGIuY2hpbGQ9WWcoYixudWxsLGQsYyl9aWYobnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSl7YT1hLmNoaWxkO2Q9YS5zaWJsaW5nO2lmKGcpe2U9ZS5mYWxsYmFjaztjPVNnKGEsYS5wZW5kaW5nUHJvcHMpO2MucmV0dXJuPWI7aWYoMD09PShiLm1vZGUmMikmJihnPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGchPT1hLmNoaWxkKSlmb3IoYy5jaGlsZD1nO251bGwhPT1nOylnLnJldHVybj1jLGc9Zy5zaWJsaW5nO2Q9U2coZCxlKTtkLnJldHVybj1iO2Muc2libGluZz1kO2MuY2hpbGRFeHBpcmF0aW9uVGltZT0wO2IubWVtb2l6ZWRTdGF0ZT1paTtiLmNoaWxkPWM7cmV0dXJuIGR9Yz1YZyhiLGEuY2hpbGQsZS5jaGlsZHJlbixjKTtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYi5jaGlsZD1cbmN9YT1hLmNoaWxkO2lmKGcpe2c9ZS5mYWxsYmFjaztlPVdnKG51bGwsZCwwLG51bGwpO2UucmV0dXJuPWI7ZS5jaGlsZD1hO251bGwhPT1hJiYoYS5yZXR1cm49ZSk7aWYoMD09PShiLm1vZGUmMikpZm9yKGE9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZS5jaGlsZD1hO251bGwhPT1hOylhLnJldHVybj1lLGE9YS5zaWJsaW5nO2M9V2coZyxkLGMsbnVsbCk7Yy5yZXR1cm49YjtlLnNpYmxpbmc9YztjLmVmZmVjdFRhZ3w9MjtlLmNoaWxkRXhwaXJhdGlvblRpbWU9MDtiLm1lbW9pemVkU3RhdGU9aWk7Yi5jaGlsZD1lO3JldHVybiBjfWIubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBiLmNoaWxkPVhnKGIsYSxlLmNoaWxkcmVuLGMpfVxuZnVuY3Rpb24ga2koYSxiKXthLmV4cGlyYXRpb25UaW1lPGImJihhLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPGImJihjLmV4cGlyYXRpb25UaW1lPWIpO3BnKGEucmV0dXJuLGIpfWZ1bmN0aW9uIGxpKGEsYixjLGQsZSxmKXt2YXIgZz1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWc/YS5tZW1vaXplZFN0YXRlPXtpc0JhY2t3YXJkczpiLHJlbmRlcmluZzpudWxsLHJlbmRlcmluZ1N0YXJ0VGltZTowLGxhc3Q6ZCx0YWlsOmMsdGFpbEV4cGlyYXRpb246MCx0YWlsTW9kZTplLGxhc3RFZmZlY3Q6Zn06KGcuaXNCYWNrd2FyZHM9YixnLnJlbmRlcmluZz1udWxsLGcucmVuZGVyaW5nU3RhcnRUaW1lPTAsZy5sYXN0PWQsZy50YWlsPWMsZy50YWlsRXhwaXJhdGlvbj0wLGcudGFpbE1vZGU9ZSxnLmxhc3RFZmZlY3Q9Zil9XG5mdW5jdGlvbiBtaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLnJldmVhbE9yZGVyLGY9ZC50YWlsO1IoYSxiLGQuY2hpbGRyZW4sYyk7ZD1NLmN1cnJlbnQ7aWYoMCE9PShkJjIpKWQ9ZCYxfDIsYi5lZmZlY3RUYWd8PTY0O2Vsc2V7aWYobnVsbCE9PWEmJjAhPT0oYS5lZmZlY3RUYWcmNjQpKWE6Zm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2lmKDEzPT09YS50YWcpbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYma2koYSxjKTtlbHNlIGlmKDE5PT09YS50YWcpa2koYSxjKTtlbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YilicmVhayBhO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1iKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfWQmPTF9SShNLGQpO2lmKDA9PT0oYi5tb2RlJjIpKWIubWVtb2l6ZWRTdGF0ZT1cbm51bGw7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcImZvcndhcmRzXCI6Yz1iLmNoaWxkO2ZvcihlPW51bGw7bnVsbCE9PWM7KWE9Yy5hbHRlcm5hdGUsbnVsbCE9PWEmJm51bGw9PT1oaChhKSYmKGU9YyksYz1jLnNpYmxpbmc7Yz1lO251bGw9PT1jPyhlPWIuY2hpbGQsYi5jaGlsZD1udWxsKTooZT1jLnNpYmxpbmcsYy5zaWJsaW5nPW51bGwpO2xpKGIsITEsZSxjLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwiYmFja3dhcmRzXCI6Yz1udWxsO2U9Yi5jaGlsZDtmb3IoYi5jaGlsZD1udWxsO251bGwhPT1lOyl7YT1lLmFsdGVybmF0ZTtpZihudWxsIT09YSYmbnVsbD09PWhoKGEpKXtiLmNoaWxkPWU7YnJlYWt9YT1lLnNpYmxpbmc7ZS5zaWJsaW5nPWM7Yz1lO2U9YX1saShiLCEwLGMsbnVsbCxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcInRvZ2V0aGVyXCI6bGkoYiwhMSxudWxsLG51bGwsdm9pZCAwLGIubGFzdEVmZmVjdCk7YnJlYWs7ZGVmYXVsdDpiLm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uICRoKGEsYixjKXtudWxsIT09YSYmKGIuZGVwZW5kZW5jaWVzPWEuZGVwZW5kZW5jaWVzKTt2YXIgZD1iLmV4cGlyYXRpb25UaW1lOzAhPT1kJiZCZyhkKTtpZihiLmNoaWxkRXhwaXJhdGlvblRpbWU8YylyZXR1cm4gbnVsbDtpZihudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQpdGhyb3cgRXJyb3IodSgxNTMpKTtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9U2coYSxhLnBlbmRpbmdQcm9wcyk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPVNnKGEsYS5wZW5kaW5nUHJvcHMpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9dmFyIG5pLG9pLHBpLHFpO1xubmk9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O29pPWZ1bmN0aW9uKCl7fTtcbnBpPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9YS5tZW1vaXplZFByb3BzO2lmKGYhPT1kKXt2YXIgZz1iLnN0YXRlTm9kZTtjaCgkZy5jdXJyZW50KTthPW51bGw7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOmY9emIoZyxmKTtkPXpiKGcsZCk7YT1bXTticmVhaztjYXNlIFwib3B0aW9uXCI6Zj1HYihnLGYpO2Q9R2IoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpmPW4oe30sZix7dmFsdWU6dm9pZCAwfSk7ZD1uKHt9LGQse3ZhbHVlOnZvaWQgMH0pO2E9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Zj1JYihnLGYpO2Q9SWIoZyxkKTthPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGYub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGcub25jbGljaz1zZCl9b2QoYyxkKTt2YXIgaCxrO2M9bnVsbDtmb3IoaCBpbiBmKWlmKCFkLmhhc093blByb3BlcnR5KGgpJiZmLmhhc093blByb3BlcnR5KGgpJiZudWxsIT1mW2hdKWlmKFwic3R5bGVcIj09PVxuaClmb3IoayBpbiBnPWZbaF0sZylnLmhhc093blByb3BlcnR5KGspJiYoY3x8KGM9e30pLGNba109XCJcIik7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiE9PWgmJlwiY2hpbGRyZW5cIiE9PWgmJlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1oJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09aCYmXCJhdXRvRm9jdXNcIiE9PWgmJih2YS5oYXNPd25Qcm9wZXJ0eShoKT9hfHwoYT1bXSk6KGE9YXx8W10pLnB1c2goaCxudWxsKSk7Zm9yKGggaW4gZCl7dmFyIGw9ZFtoXTtnPW51bGwhPWY/ZltoXTp2b2lkIDA7aWYoZC5oYXNPd25Qcm9wZXJ0eShoKSYmbCE9PWcmJihudWxsIT1sfHxudWxsIT1nKSlpZihcInN0eWxlXCI9PT1oKWlmKGcpe2ZvcihrIGluIGcpIWcuaGFzT3duUHJvcGVydHkoayl8fGwmJmwuaGFzT3duUHJvcGVydHkoayl8fChjfHwoYz17fSksY1trXT1cIlwiKTtmb3IoayBpbiBsKWwuaGFzT3duUHJvcGVydHkoaykmJmdba10hPT1sW2tdJiYoY3x8KGM9e30pLFxuY1trXT1sW2tdKX1lbHNlIGN8fChhfHwoYT1bXSksYS5wdXNoKGgsYykpLGM9bDtlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09aD8obD1sP2wuX19odG1sOnZvaWQgMCxnPWc/Zy5fX2h0bWw6dm9pZCAwLG51bGwhPWwmJmchPT1sJiYoYT1hfHxbXSkucHVzaChoLGwpKTpcImNoaWxkcmVuXCI9PT1oP2c9PT1sfHxcInN0cmluZ1wiIT09dHlwZW9mIGwmJlwibnVtYmVyXCIhPT10eXBlb2YgbHx8KGE9YXx8W10pLnB1c2goaCxcIlwiK2wpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1oJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09aCYmKHZhLmhhc093blByb3BlcnR5KGgpPyhudWxsIT1sJiZyZChlLGgpLGF8fGc9PT1sfHwoYT1bXSkpOihhPWF8fFtdKS5wdXNoKGgsbCkpfWMmJihhPWF8fFtdKS5wdXNoKFwic3R5bGVcIixjKTtlPWE7aWYoYi51cGRhdGVRdWV1ZT1lKWIuZWZmZWN0VGFnfD00fX07XG5xaT1mdW5jdGlvbihhLGIsYyxkKXtjIT09ZCYmKGIuZWZmZWN0VGFnfD00KX07ZnVuY3Rpb24gcmkoYSxiKXtzd2l0Y2goYS50YWlsTW9kZSl7Y2FzZSBcImhpZGRlblwiOmI9YS50YWlsO2Zvcih2YXIgYz1udWxsO251bGwhPT1iOyludWxsIT09Yi5hbHRlcm5hdGUmJihjPWIpLGI9Yi5zaWJsaW5nO251bGw9PT1jP2EudGFpbD1udWxsOmMuc2libGluZz1udWxsO2JyZWFrO2Nhc2UgXCJjb2xsYXBzZWRcIjpjPWEudGFpbDtmb3IodmFyIGQ9bnVsbDtudWxsIT09YzspbnVsbCE9PWMuYWx0ZXJuYXRlJiYoZD1jKSxjPWMuc2libGluZztudWxsPT09ZD9ifHxudWxsPT09YS50YWlsP2EudGFpbD1udWxsOmEudGFpbC5zaWJsaW5nPW51bGw6ZC5zaWJsaW5nPW51bGx9fVxuZnVuY3Rpb24gc2koYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmNhc2UgMTY6Y2FzZSAxNTpjYXNlIDA6Y2FzZSAxMTpjYXNlIDc6Y2FzZSA4OmNhc2UgMTI6Y2FzZSA5OmNhc2UgMTQ6cmV0dXJuIG51bGw7Y2FzZSAxOnJldHVybiBMKGIudHlwZSkmJkRmKCksbnVsbDtjYXNlIDM6cmV0dXJuIGVoKCksSChLKSxIKEopLGM9Yi5zdGF0ZU5vZGUsYy5wZW5kaW5nQ29udGV4dCYmKGMuY29udGV4dD1jLnBlbmRpbmdDb250ZXh0LGMucGVuZGluZ0NvbnRleHQ9bnVsbCksbnVsbCE9PWEmJm51bGwhPT1hLmNoaWxkfHwhV2goYil8fChiLmVmZmVjdFRhZ3w9NCksb2koYiksbnVsbDtjYXNlIDU6Z2goYik7Yz1jaChiaC5jdXJyZW50KTt2YXIgZT1iLnR5cGU7aWYobnVsbCE9PWEmJm51bGwhPWIuc3RhdGVOb2RlKXBpKGEsYixlLGQsYyksYS5yZWYhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpO2Vsc2V7aWYoIWQpe2lmKG51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih1KDE2NikpO1xucmV0dXJuIG51bGx9YT1jaCgkZy5jdXJyZW50KTtpZihXaChiKSl7ZD1iLnN0YXRlTm9kZTtlPWIudHlwZTt2YXIgZj1iLm1lbW9pemVkUHJvcHM7ZFtNZF09YjtkW05kXT1mO3N3aXRjaChlKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkYoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGE9MDthPGFjLmxlbmd0aDthKyspRihhY1thXSxkKTticmVhaztjYXNlIFwic291cmNlXCI6RihcImVycm9yXCIsZCk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RihcImVycm9yXCIsZCk7RihcImxvYWRcIixkKTticmVhaztjYXNlIFwiZm9ybVwiOkYoXCJyZXNldFwiLGQpO0YoXCJzdWJtaXRcIixkKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkYoXCJ0b2dnbGVcIixkKTticmVhaztjYXNlIFwiaW5wdXRcIjpBYihkLGYpO0YoXCJpbnZhbGlkXCIsZCk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpkLl93cmFwcGVyU3RhdGU9XG57d2FzTXVsdGlwbGU6ISFmLm11bHRpcGxlfTtGKFwiaW52YWxpZFwiLGQpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpKYihkLGYpLEYoXCJpbnZhbGlkXCIsZCkscmQoYyxcIm9uQ2hhbmdlXCIpfW9kKGUsZik7YT1udWxsO2Zvcih2YXIgZyBpbiBmKWlmKGYuaGFzT3duUHJvcGVydHkoZykpe3ZhciBoPWZbZ107XCJjaGlsZHJlblwiPT09Zz9cInN0cmluZ1wiPT09dHlwZW9mIGg/ZC50ZXh0Q29udGVudCE9PWgmJihhPVtcImNoaWxkcmVuXCIsaF0pOlwibnVtYmVyXCI9PT10eXBlb2YgaCYmZC50ZXh0Q29udGVudCE9PVwiXCIraCYmKGE9W1wiY2hpbGRyZW5cIixcIlwiK2hdKTp2YS5oYXNPd25Qcm9wZXJ0eShnKSYmbnVsbCE9aCYmcmQoYyxnKX1zd2l0Y2goZSl7Y2FzZSBcImlucHV0XCI6eGIoZCk7RWIoZCxmLCEwKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjp4YihkKTtMYihkKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGYub25DbGljayYmXG4oZC5vbmNsaWNrPXNkKX1jPWE7Yi51cGRhdGVRdWV1ZT1jO251bGwhPT1jJiYoYi5lZmZlY3RUYWd8PTQpfWVsc2V7Zz05PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudDthPT09cWQmJihhPU5iKGUpKTthPT09cWQ/XCJzY3JpcHRcIj09PWU/KGE9Zy5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGEuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsYT1hLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCkpOlwic3RyaW5nXCI9PT10eXBlb2YgZC5pcz9hPWcuY3JlYXRlRWxlbWVudChlLHtpczpkLmlzfSk6KGE9Zy5jcmVhdGVFbGVtZW50KGUpLFwic2VsZWN0XCI9PT1lJiYoZz1hLGQubXVsdGlwbGU/Zy5tdWx0aXBsZT0hMDpkLnNpemUmJihnLnNpemU9ZC5zaXplKSkpOmE9Zy5jcmVhdGVFbGVtZW50TlMoYSxlKTthW01kXT1iO2FbTmRdPWQ7bmkoYSxiLCExLCExKTtiLnN0YXRlTm9kZT1hO2c9cGQoZSxkKTtzd2l0Y2goZSl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpGKFwibG9hZFwiLFxuYSk7aD1kO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihoPTA7aDxhYy5sZW5ndGg7aCsrKUYoYWNbaF0sYSk7aD1kO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpGKFwiZXJyb3JcIixhKTtoPWQ7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RihcImVycm9yXCIsYSk7RihcImxvYWRcIixhKTtoPWQ7YnJlYWs7Y2FzZSBcImZvcm1cIjpGKFwicmVzZXRcIixhKTtGKFwic3VibWl0XCIsYSk7aD1kO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RihcInRvZ2dsZVwiLGEpO2g9ZDticmVhaztjYXNlIFwiaW5wdXRcIjpBYihhLGQpO2g9emIoYSxkKTtGKFwiaW52YWxpZFwiLGEpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwib3B0aW9uXCI6aD1HYihhLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhZC5tdWx0aXBsZX07aD1uKHt9LGQse3ZhbHVlOnZvaWQgMH0pO0YoXCJpbnZhbGlkXCIsYSk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOkpiKGEsXG5kKTtoPUliKGEsZCk7RihcImludmFsaWRcIixhKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7ZGVmYXVsdDpoPWR9b2QoZSxoKTt2YXIgaz1oO2ZvcihmIGluIGspaWYoay5oYXNPd25Qcm9wZXJ0eShmKSl7dmFyIGw9a1tmXTtcInN0eWxlXCI9PT1mP21kKGEsbCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zj8obD1sP2wuX19odG1sOnZvaWQgMCxudWxsIT1sJiZRYihhLGwpKTpcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2YgbD8oXCJ0ZXh0YXJlYVwiIT09ZXx8XCJcIiE9PWwpJiZSYihhLGwpOlwibnVtYmVyXCI9PT10eXBlb2YgbCYmUmIoYSxcIlwiK2wpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1mJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09ZiYmXCJhdXRvRm9jdXNcIiE9PWYmJih2YS5oYXNPd25Qcm9wZXJ0eShmKT9udWxsIT1sJiZyZChjLGYpOm51bGwhPWwmJlhhKGEsZixsLGcpKX1zd2l0Y2goZSl7Y2FzZSBcImlucHV0XCI6eGIoYSk7RWIoYSxkLCExKTtcbmJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOnhiKGEpO0xiKGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1kLnZhbHVlJiZhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIityYihkLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEubXVsdGlwbGU9ISFkLm11bHRpcGxlO2M9ZC52YWx1ZTtudWxsIT1jP0hiKGEsISFkLm11bHRpcGxlLGMsITEpOm51bGwhPWQuZGVmYXVsdFZhbHVlJiZIYihhLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgaC5vbkNsaWNrJiYoYS5vbmNsaWNrPXNkKX1GZChlLGQpJiYoYi5lZmZlY3RUYWd8PTQpfW51bGwhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpfXJldHVybiBudWxsO2Nhc2UgNjppZihhJiZudWxsIT1iLnN0YXRlTm9kZSlxaShhLGIsYS5tZW1vaXplZFByb3BzLGQpO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBkJiZudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjYpKTtcbmM9Y2goYmguY3VycmVudCk7Y2goJGcuY3VycmVudCk7V2goYik/KGM9Yi5zdGF0ZU5vZGUsZD1iLm1lbW9pemVkUHJvcHMsY1tNZF09YixjLm5vZGVWYWx1ZSE9PWQmJihiLmVmZmVjdFRhZ3w9NCkpOihjPSg5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZCksY1tNZF09YixiLnN0YXRlTm9kZT1jKX1yZXR1cm4gbnVsbDtjYXNlIDEzOkgoTSk7ZD1iLm1lbW9pemVkU3RhdGU7aWYoMCE9PShiLmVmZmVjdFRhZyY2NCkpcmV0dXJuIGIuZXhwaXJhdGlvblRpbWU9YyxiO2M9bnVsbCE9PWQ7ZD0hMTtudWxsPT09YT92b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMuZmFsbGJhY2smJldoKGIpOihlPWEubWVtb2l6ZWRTdGF0ZSxkPW51bGwhPT1lLGN8fG51bGw9PT1lfHwoZT1hLmNoaWxkLnNpYmxpbmcsbnVsbCE9PWUmJihmPWIuZmlyc3RFZmZlY3QsbnVsbCE9PWY/KGIuZmlyc3RFZmZlY3Q9ZSxlLm5leHRFZmZlY3Q9Zik6KGIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PVxuZSxlLm5leHRFZmZlY3Q9bnVsbCksZS5lZmZlY3RUYWc9OCkpKTtpZihjJiYhZCYmMCE9PShiLm1vZGUmMikpaWYobnVsbD09PWEmJiEwIT09Yi5tZW1vaXplZFByb3BzLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwwIT09KE0uY3VycmVudCYxKSlTPT09dGkmJihTPXVpKTtlbHNle2lmKFM9PT10aXx8Uz09PXVpKVM9dmk7MCE9PXdpJiZudWxsIT09VCYmKHhpKFQsVSkseWkoVCx3aSkpfWlmKGN8fGQpYi5lZmZlY3RUYWd8PTQ7cmV0dXJuIG51bGw7Y2FzZSA0OnJldHVybiBlaCgpLG9pKGIpLG51bGw7Y2FzZSAxMDpyZXR1cm4gb2coYiksbnVsbDtjYXNlIDE3OnJldHVybiBMKGIudHlwZSkmJkRmKCksbnVsbDtjYXNlIDE5OkgoTSk7ZD1iLm1lbW9pemVkU3RhdGU7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7ZT0wIT09KGIuZWZmZWN0VGFnJjY0KTtmPWQucmVuZGVyaW5nO2lmKG51bGw9PT1mKWlmKGUpcmkoZCwhMSk7ZWxzZXtpZihTIT09dGl8fG51bGwhPT1hJiYwIT09KGEuZWZmZWN0VGFnJlxuNjQpKWZvcihmPWIuY2hpbGQ7bnVsbCE9PWY7KXthPWhoKGYpO2lmKG51bGwhPT1hKXtiLmVmZmVjdFRhZ3w9NjQ7cmkoZCwhMSk7ZT1hLnVwZGF0ZVF1ZXVlO251bGwhPT1lJiYoYi51cGRhdGVRdWV1ZT1lLGIuZWZmZWN0VGFnfD00KTtudWxsPT09ZC5sYXN0RWZmZWN0JiYoYi5maXJzdEVmZmVjdD1udWxsKTtiLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0O2ZvcihkPWIuY2hpbGQ7bnVsbCE9PWQ7KWU9ZCxmPWMsZS5lZmZlY3RUYWcmPTIsZS5uZXh0RWZmZWN0PW51bGwsZS5maXJzdEVmZmVjdD1udWxsLGUubGFzdEVmZmVjdD1udWxsLGE9ZS5hbHRlcm5hdGUsbnVsbD09PWE/KGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGUuZXhwaXJhdGlvblRpbWU9ZixlLmNoaWxkPW51bGwsZS5tZW1vaXplZFByb3BzPW51bGwsZS5tZW1vaXplZFN0YXRlPW51bGwsZS51cGRhdGVRdWV1ZT1udWxsLGUuZGVwZW5kZW5jaWVzPW51bGwpOihlLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lLFxuZS5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lLGUuY2hpbGQ9YS5jaGlsZCxlLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzLGUubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGUsZS51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGY9YS5kZXBlbmRlbmNpZXMsZS5kZXBlbmRlbmNpZXM9bnVsbD09PWY/bnVsbDp7ZXhwaXJhdGlvblRpbWU6Zi5leHBpcmF0aW9uVGltZSxmaXJzdENvbnRleHQ6Zi5maXJzdENvbnRleHQscmVzcG9uZGVyczpmLnJlc3BvbmRlcnN9KSxkPWQuc2libGluZztJKE0sTS5jdXJyZW50JjF8Mik7cmV0dXJuIGIuY2hpbGR9Zj1mLnNpYmxpbmd9fWVsc2V7aWYoIWUpaWYoYT1oaChmKSxudWxsIT09YSl7aWYoYi5lZmZlY3RUYWd8PTY0LGU9ITAsYz1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1jJiYoYi51cGRhdGVRdWV1ZT1jLGIuZWZmZWN0VGFnfD00KSxyaShkLCEwKSxudWxsPT09ZC50YWlsJiZcImhpZGRlblwiPT09ZC50YWlsTW9kZSYmIWYuYWx0ZXJuYXRlKXJldHVybiBiPVxuYi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdCxudWxsIT09YiYmKGIubmV4dEVmZmVjdD1udWxsKSxudWxsfWVsc2UgMiokZigpLWQucmVuZGVyaW5nU3RhcnRUaW1lPmQudGFpbEV4cGlyYXRpb24mJjE8YyYmKGIuZWZmZWN0VGFnfD02NCxlPSEwLHJpKGQsITEpLGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPWMtMSk7ZC5pc0JhY2t3YXJkcz8oZi5zaWJsaW5nPWIuY2hpbGQsYi5jaGlsZD1mKTooYz1kLmxhc3QsbnVsbCE9PWM/Yy5zaWJsaW5nPWY6Yi5jaGlsZD1mLGQubGFzdD1mKX1yZXR1cm4gbnVsbCE9PWQudGFpbD8oMD09PWQudGFpbEV4cGlyYXRpb24mJihkLnRhaWxFeHBpcmF0aW9uPSRmKCkrNTAwKSxjPWQudGFpbCxkLnJlbmRlcmluZz1jLGQudGFpbD1jLnNpYmxpbmcsZC5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCxkLnJlbmRlcmluZ1N0YXJ0VGltZT0kZigpLGMuc2libGluZz1udWxsLGI9TS5jdXJyZW50LEkoTSxlP2ImMXwyOmImMSksYyk6bnVsbH10aHJvdyBFcnJvcih1KDE1NixcbmIudGFnKSk7fWZ1bmN0aW9uIHppKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOkwoYS50eXBlKSYmRGYoKTt2YXIgYj1hLmVmZmVjdFRhZztyZXR1cm4gYiY0MDk2PyhhLmVmZmVjdFRhZz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAzOmVoKCk7SChLKTtIKEopO2I9YS5lZmZlY3RUYWc7aWYoMCE9PShiJjY0KSl0aHJvdyBFcnJvcih1KDI4NSkpO2EuZWZmZWN0VGFnPWImLTQwOTd8NjQ7cmV0dXJuIGE7Y2FzZSA1OnJldHVybiBnaChhKSxudWxsO2Nhc2UgMTM6cmV0dXJuIEgoTSksYj1hLmVmZmVjdFRhZyxiJjQwOTY/KGEuZWZmZWN0VGFnPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDE5OnJldHVybiBIKE0pLG51bGw7Y2FzZSA0OnJldHVybiBlaCgpLG51bGw7Y2FzZSAxMDpyZXR1cm4gb2coYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1mdW5jdGlvbiBBaShhLGIpe3JldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOnFiKGIpfX1cbnZhciBCaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldDtmdW5jdGlvbiBDaShhLGIpe3ZhciBjPWIuc291cmNlLGQ9Yi5zdGFjaztudWxsPT09ZCYmbnVsbCE9PWMmJihkPXFiKGMpKTtudWxsIT09YyYmcGIoYy50eXBlKTtiPWIudmFsdWU7bnVsbCE9PWEmJjE9PT1hLnRhZyYmcGIoYS50eXBlKTt0cnl7Y29uc29sZS5lcnJvcihiKX1jYXRjaChlKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgZTt9KX19ZnVuY3Rpb24gRGkoYSxiKXt0cnl7Yi5wcm9wcz1hLm1lbW9pemVkUHJvcHMsYi5zdGF0ZT1hLm1lbW9pemVkU3RhdGUsYi5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGMpe0VpKGEsYyl9fWZ1bmN0aW9uIEZpKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe0VpKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIEdpKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6cmV0dXJuO2Nhc2UgMTppZihiLmVmZmVjdFRhZyYyNTYmJm51bGwhPT1hKXt2YXIgYz1hLm1lbW9pemVkUHJvcHMsZD1hLm1lbW9pemVkU3RhdGU7YT1iLnN0YXRlTm9kZTtiPWEuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoYi5lbGVtZW50VHlwZT09PWIudHlwZT9jOmlnKGIudHlwZSxjKSxkKTthLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlPWJ9cmV0dXJuO2Nhc2UgMzpjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OnJldHVybn10aHJvdyBFcnJvcih1KDE2MykpO31cbmZ1bmN0aW9uIEhpKGEsYil7Yj1iLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe3ZhciBjPWI9Yi5uZXh0O2Rve2lmKChjLnRhZyZhKT09PWEpe3ZhciBkPWMuZGVzdHJveTtjLmRlc3Ryb3k9dm9pZCAwO3ZvaWQgMCE9PWQmJmQoKX1jPWMubmV4dH13aGlsZShjIT09Yil9fWZ1bmN0aW9uIElpKGEsYil7Yj1iLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe3ZhciBjPWI9Yi5uZXh0O2Rve2lmKChjLnRhZyZhKT09PWEpe3ZhciBkPWMuY3JlYXRlO2MuZGVzdHJveT1kKCl9Yz1jLm5leHR9d2hpbGUoYyE9PWIpfX1cbmZ1bmN0aW9uIEppKGEsYixjKXtzd2l0Y2goYy50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpJaSgzLGMpO3JldHVybjtjYXNlIDE6YT1jLnN0YXRlTm9kZTtpZihjLmVmZmVjdFRhZyY0KWlmKG51bGw9PT1iKWEuY29tcG9uZW50RGlkTW91bnQoKTtlbHNle3ZhciBkPWMuZWxlbWVudFR5cGU9PT1jLnR5cGU/Yi5tZW1vaXplZFByb3BzOmlnKGMudHlwZSxiLm1lbW9pemVkUHJvcHMpO2EuY29tcG9uZW50RGlkVXBkYXRlKGQsYi5tZW1vaXplZFN0YXRlLGEuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpfWI9Yy51cGRhdGVRdWV1ZTtudWxsIT09YiYmQ2coYyxiLGEpO3JldHVybjtjYXNlIDM6Yj1jLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthPW51bGw7aWYobnVsbCE9PWMuY2hpbGQpc3dpdGNoKGMuY2hpbGQudGFnKXtjYXNlIDU6YT1jLmNoaWxkLnN0YXRlTm9kZTticmVhaztjYXNlIDE6YT1jLmNoaWxkLnN0YXRlTm9kZX1DZyhjLGIsYSl9cmV0dXJuO1xuY2FzZSA1OmE9Yy5zdGF0ZU5vZGU7bnVsbD09PWImJmMuZWZmZWN0VGFnJjQmJkZkKGMudHlwZSxjLm1lbW9pemVkUHJvcHMpJiZhLmZvY3VzKCk7cmV0dXJuO2Nhc2UgNjpyZXR1cm47Y2FzZSA0OnJldHVybjtjYXNlIDEyOnJldHVybjtjYXNlIDEzOm51bGw9PT1jLm1lbW9pemVkU3RhdGUmJihjPWMuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYz1jLm1lbW9pemVkU3RhdGUsbnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsIT09YyYmVmMoYykpKSk7cmV0dXJuO2Nhc2UgMTk6Y2FzZSAxNzpjYXNlIDIwOmNhc2UgMjE6cmV0dXJufXRocm93IEVycm9yKHUoMTYzKSk7fVxuZnVuY3Rpb24gS2koYSxiLGMpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiBMaSYmTGkoYik7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6Y2FzZSAyMjphPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWEmJihhPWEubGFzdEVmZmVjdCxudWxsIT09YSkpe3ZhciBkPWEubmV4dDtjZyg5NzxjPzk3OmMsZnVuY3Rpb24oKXt2YXIgYT1kO2Rve3ZhciBjPWEuZGVzdHJveTtpZih2b2lkIDAhPT1jKXt2YXIgZz1iO3RyeXtjKCl9Y2F0Y2goaCl7RWkoZyxoKX19YT1hLm5leHR9d2hpbGUoYSE9PWQpfSl9YnJlYWs7Y2FzZSAxOkZpKGIpO2M9Yi5zdGF0ZU5vZGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGMuY29tcG9uZW50V2lsbFVubW91bnQmJkRpKGIsYyk7YnJlYWs7Y2FzZSA1OkZpKGIpO2JyZWFrO2Nhc2UgNDpNaShhLGIsYyl9fVxuZnVuY3Rpb24gTmkoYSl7dmFyIGI9YS5hbHRlcm5hdGU7YS5yZXR1cm49bnVsbDthLmNoaWxkPW51bGw7YS5tZW1vaXplZFN0YXRlPW51bGw7YS51cGRhdGVRdWV1ZT1udWxsO2EuZGVwZW5kZW5jaWVzPW51bGw7YS5hbHRlcm5hdGU9bnVsbDthLmZpcnN0RWZmZWN0PW51bGw7YS5sYXN0RWZmZWN0PW51bGw7YS5wZW5kaW5nUHJvcHM9bnVsbDthLm1lbW9pemVkUHJvcHM9bnVsbDthLnN0YXRlTm9kZT1udWxsO251bGwhPT1iJiZOaShiKX1mdW5jdGlvbiBPaShhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIFBpKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKE9pKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iLnJldHVybn10aHJvdyBFcnJvcih1KDE2MCkpO31iPWMuc3RhdGVOb2RlO3N3aXRjaChjLnRhZyl7Y2FzZSA1OnZhciBkPSExO2JyZWFrO2Nhc2UgMzpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2Nhc2UgNDpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgxNjEpKTt9Yy5lZmZlY3RUYWcmMTYmJihSYihiLFwiXCIpLGMuZWZmZWN0VGFnJj0tMTcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8T2koYy5yZXR1cm4pKXtjPW51bGw7YnJlYWsgYX1jPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Zm9yKGM9Yy5zaWJsaW5nOzUhPT1jLnRhZyYmNiE9PWMudGFnJiYxOCE9PWMudGFnOyl7aWYoYy5lZmZlY3RUYWcmMiljb250aW51ZSBiO1xuaWYobnVsbD09PWMuY2hpbGR8fDQ9PT1jLnRhZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZC5yZXR1cm49YyxjPWMuY2hpbGR9aWYoIShjLmVmZmVjdFRhZyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1kP1FpKGEsYyxiKTpSaShhLGMsYil9XG5mdW5jdGlvbiBRaShhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj84PT09Yy5ub2RlVHlwZT9jLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsYik6Yy5pbnNlcnRCZWZvcmUoYSxiKTooOD09PWMubm9kZVR5cGU/KGI9Yy5wYXJlbnROb2RlLGIuaW5zZXJ0QmVmb3JlKGEsYykpOihiPWMsYi5hcHBlbmRDaGlsZChhKSksYz1jLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWMmJnZvaWQgMCE9PWN8fG51bGwhPT1iLm9uY2xpY2t8fChiLm9uY2xpY2s9c2QpKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoUWkoYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylRaShhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBSaShhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj9jLmluc2VydEJlZm9yZShhLGIpOmMuYXBwZW5kQ2hpbGQoYSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKFJpKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspUmkoYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gTWkoYSxiLGMpe2Zvcih2YXIgZD1iLGU9ITEsZixnOzspe2lmKCFlKXtlPWQucmV0dXJuO2E6Zm9yKDs7KXtpZihudWxsPT09ZSl0aHJvdyBFcnJvcih1KDE2MCkpO2Y9ZS5zdGF0ZU5vZGU7c3dpdGNoKGUudGFnKXtjYXNlIDU6Zz0hMTticmVhayBhO2Nhc2UgMzpmPWYuY29udGFpbmVySW5mbztnPSEwO2JyZWFrIGE7Y2FzZSA0OmY9Zi5jb250YWluZXJJbmZvO2c9ITA7YnJlYWsgYX1lPWUucmV0dXJufWU9ITB9aWYoNT09PWQudGFnfHw2PT09ZC50YWcpe2E6Zm9yKHZhciBoPWEsaz1kLGw9YyxtPWs7OylpZihLaShoLG0sbCksbnVsbCE9PW0uY2hpbGQmJjQhPT1tLnRhZyltLmNoaWxkLnJldHVybj1tLG09bS5jaGlsZDtlbHNle2lmKG09PT1rKWJyZWFrIGE7Zm9yKDtudWxsPT09bS5zaWJsaW5nOyl7aWYobnVsbD09PW0ucmV0dXJufHxtLnJldHVybj09PWspYnJlYWsgYTttPW0ucmV0dXJufW0uc2libGluZy5yZXR1cm49bS5yZXR1cm47bT1tLnNpYmxpbmd9Zz8oaD1cbmYsaz1kLnN0YXRlTm9kZSw4PT09aC5ub2RlVHlwZT9oLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoayk6aC5yZW1vdmVDaGlsZChrKSk6Zi5yZW1vdmVDaGlsZChkLnN0YXRlTm9kZSl9ZWxzZSBpZig0PT09ZC50YWcpe2lmKG51bGwhPT1kLmNoaWxkKXtmPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87Zz0hMDtkLmNoaWxkLnJldHVybj1kO2Q9ZC5jaGlsZDtjb250aW51ZX19ZWxzZSBpZihLaShhLGQsYyksbnVsbCE9PWQuY2hpbGQpe2QuY2hpbGQucmV0dXJuPWQ7ZD1kLmNoaWxkO2NvbnRpbnVlfWlmKGQ9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWQuc2libGluZzspe2lmKG51bGw9PT1kLnJldHVybnx8ZC5yZXR1cm49PT1iKXJldHVybjtkPWQucmV0dXJuOzQ9PT1kLnRhZyYmKGU9ITEpfWQuc2libGluZy5yZXR1cm49ZC5yZXR1cm47ZD1kLnNpYmxpbmd9fVxuZnVuY3Rpb24gU2koYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOkhpKDMsYik7cmV0dXJuO2Nhc2UgMTpyZXR1cm47Y2FzZSA1OnZhciBjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe3ZhciBkPWIubWVtb2l6ZWRQcm9wcyxlPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO2E9Yi50eXBlO3ZhciBmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKG51bGwhPT1mKXtjW05kXT1kO1wiaW5wdXRcIj09PWEmJlwicmFkaW9cIj09PWQudHlwZSYmbnVsbCE9ZC5uYW1lJiZCYihjLGQpO3BkKGEsZSk7Yj1wZChhLGQpO2ZvcihlPTA7ZTxmLmxlbmd0aDtlKz0yKXt2YXIgZz1mW2VdLGg9ZltlKzFdO1wic3R5bGVcIj09PWc/bWQoYyxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP1FiKGMsaCk6XCJjaGlsZHJlblwiPT09Zz9SYihjLGgpOlhhKGMsZyxoLGIpfXN3aXRjaChhKXtjYXNlIFwiaW5wdXRcIjpDYihjLGQpO2JyZWFrO1xuY2FzZSBcInRleHRhcmVhXCI6S2IoYyxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGUsYy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZC5tdWx0aXBsZSxhPWQudmFsdWUsbnVsbCE9YT9IYihjLCEhZC5tdWx0aXBsZSxhLCExKTpiIT09ISFkLm11bHRpcGxlJiYobnVsbCE9ZC5kZWZhdWx0VmFsdWU/SGIoYywhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApOkhiKGMsISFkLm11bHRpcGxlLGQubXVsdGlwbGU/W106XCJcIiwhMSkpfX19cmV0dXJuO2Nhc2UgNjppZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjIpKTtiLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yi5tZW1vaXplZFByb3BzO3JldHVybjtjYXNlIDM6Yj1iLnN0YXRlTm9kZTtiLmh5ZHJhdGUmJihiLmh5ZHJhdGU9ITEsVmMoYi5jb250YWluZXJJbmZvKSk7cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6Yz1iO251bGw9PT1iLm1lbW9pemVkU3RhdGU/XG5kPSExOihkPSEwLGM9Yi5jaGlsZCxUaT0kZigpKTtpZihudWxsIT09YylhOmZvcihhPWM7Oyl7aWYoNT09PWEudGFnKWY9YS5zdGF0ZU5vZGUsZD8oZj1mLnN0eWxlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLnNldFByb3BlcnR5P2Yuc2V0UHJvcGVydHkoXCJkaXNwbGF5XCIsXCJub25lXCIsXCJpbXBvcnRhbnRcIik6Zi5kaXNwbGF5PVwibm9uZVwiKTooZj1hLnN0YXRlTm9kZSxlPWEubWVtb2l6ZWRQcm9wcy5zdHlsZSxlPXZvaWQgMCE9PWUmJm51bGwhPT1lJiZlLmhhc093blByb3BlcnR5KFwiZGlzcGxheVwiKT9lLmRpc3BsYXk6bnVsbCxmLnN0eWxlLmRpc3BsYXk9bGQoXCJkaXNwbGF5XCIsZSkpO2Vsc2UgaWYoNj09PWEudGFnKWEuc3RhdGVOb2RlLm5vZGVWYWx1ZT1kP1wiXCI6YS5tZW1vaXplZFByb3BzO2Vsc2UgaWYoMTM9PT1hLnRhZyYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZS5kZWh5ZHJhdGVkKXtmPWEuY2hpbGQuc2libGluZztmLnJldHVybj1hO2E9XG5mO2NvbnRpbnVlfWVsc2UgaWYobnVsbCE9PWEuY2hpbGQpe2EuY2hpbGQucmV0dXJuPWE7YT1hLmNoaWxkO2NvbnRpbnVlfWlmKGE9PT1jKWJyZWFrO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1jKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfVVpKGIpO3JldHVybjtjYXNlIDE5OlVpKGIpO3JldHVybjtjYXNlIDE3OnJldHVybn10aHJvdyBFcnJvcih1KDE2MykpO31mdW5jdGlvbiBVaShhKXt2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbD09PWMmJihjPWEuc3RhdGVOb2RlPW5ldyBCaSk7Yi5mb3JFYWNoKGZ1bmN0aW9uKGIpe3ZhciBkPVZpLmJpbmQobnVsbCxhLGIpO2MuaGFzKGIpfHwoYy5hZGQoYiksYi50aGVuKGQsZCkpfSl9fVxudmFyIFdpPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwO2Z1bmN0aW9uIFhpKGEsYixjKXtjPXdnKGMsbnVsbCk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7WWl8fChZaT0hMCxaaT1kKTtDaShhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uICRpKGEsYixjKXtjPXdnKGMsbnVsbCk7Yy50YWc9Mzt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe0NpKGEsYik7cmV0dXJuIGQoZSl9fXZhciBmPWEuc3RhdGVOb2RlO251bGwhPT1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5jb21wb25lbnREaWRDYXRjaCYmKGMuY2FsbGJhY2s9ZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCYmKG51bGw9PT1haj9haj1uZXcgU2V0KFt0aGlzXSk6YWouYWRkKHRoaXMpLENpKGEsYikpO3ZhciBjPWIuc3RhY2s7dGhpcy5jb21wb25lbnREaWRDYXRjaChiLnZhbHVlLHtjb21wb25lbnRTdGFjazpudWxsIT09Yz9jOlwiXCJ9KX0pO3JldHVybiBjfVxudmFyIGJqPU1hdGguY2VpbCxjaj1XYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGRqPVdhLlJlYWN0Q3VycmVudE93bmVyLFY9MCxlaj04LGZqPTE2LGdqPTMyLHRpPTAsaGo9MSxpaj0yLHVpPTMsdmk9NCxqaj01LFc9VixUPW51bGwsWD1udWxsLFU9MCxTPXRpLGtqPW51bGwsbGo9MTA3Mzc0MTgyMyxtaj0xMDczNzQxODIzLG5qPW51bGwsd2k9MCxvaj0hMSxUaT0wLHBqPTUwMCxZPW51bGwsWWk9ITEsWmk9bnVsbCxhaj1udWxsLHFqPSExLHJqPW51bGwsc2o9OTAsdGo9bnVsbCx1aj0wLHZqPW51bGwsd2o9MDtmdW5jdGlvbiBHZygpe3JldHVybihXJihmanxnaikpIT09Vj8xMDczNzQxODIxLSgkZigpLzEwfDApOjAhPT13aj93ajp3aj0xMDczNzQxODIxLSgkZigpLzEwfDApfVxuZnVuY3Rpb24gSGcoYSxiLGMpe2I9Yi5tb2RlO2lmKDA9PT0oYiYyKSlyZXR1cm4gMTA3Mzc0MTgyMzt2YXIgZD1hZygpO2lmKDA9PT0oYiY0KSlyZXR1cm4gOTk9PT1kPzEwNzM3NDE4MjM6MTA3Mzc0MTgyMjtpZigoVyZmaikhPT1WKXJldHVybiBVO2lmKG51bGwhPT1jKWE9aGcoYSxjLnRpbWVvdXRNc3wwfHw1RTMsMjUwKTtlbHNlIHN3aXRjaChkKXtjYXNlIDk5OmE9MTA3Mzc0MTgyMzticmVhaztjYXNlIDk4OmE9aGcoYSwxNTAsMTAwKTticmVhaztjYXNlIDk3OmNhc2UgOTY6YT1oZyhhLDVFMywyNTApO2JyZWFrO2Nhc2UgOTU6YT0yO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMjYpKTt9bnVsbCE9PVQmJmE9PT1VJiYtLWE7cmV0dXJuIGF9XG5mdW5jdGlvbiBJZyhhLGIpe2lmKDUwPHVqKXRocm93IHVqPTAsdmo9bnVsbCxFcnJvcih1KDE4NSkpO2E9eGooYSxiKTtpZihudWxsIT09YSl7dmFyIGM9YWcoKTsxMDczNzQxODIzPT09Yj8oVyZlaikhPT1WJiYoVyYoZmp8Z2opKT09PVY/eWooYSk6KFooYSksVz09PVYmJmdnKCkpOlooYSk7KFcmNCk9PT1WfHw5OCE9PWMmJjk5IT09Y3x8KG51bGw9PT10aj90aj1uZXcgTWFwKFtbYSxiXV0pOihjPXRqLmdldChhKSwodm9pZCAwPT09Y3x8Yz5iKSYmdGouc2V0KGEsYikpKX19XG5mdW5jdGlvbiB4aihhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGQ9YS5yZXR1cm4sZT1udWxsO2lmKG51bGw9PT1kJiYzPT09YS50YWcpZT1hLnN0YXRlTm9kZTtlbHNlIGZvcig7bnVsbCE9PWQ7KXtjPWQuYWx0ZXJuYXRlO2QuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoZC5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO251bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09ZC5yZXR1cm4mJjM9PT1kLnRhZyl7ZT1kLnN0YXRlTm9kZTticmVha31kPWQucmV0dXJufW51bGwhPT1lJiYoVD09PWUmJihCZyhiKSxTPT09dmkmJnhpKGUsVSkpLHlpKGUsYikpO3JldHVybiBlfVxuZnVuY3Rpb24gemooYSl7dmFyIGI9YS5sYXN0RXhwaXJlZFRpbWU7aWYoMCE9PWIpcmV0dXJuIGI7Yj1hLmZpcnN0UGVuZGluZ1RpbWU7aWYoIUFqKGEsYikpcmV0dXJuIGI7dmFyIGM9YS5sYXN0UGluZ2VkVGltZTthPWEubmV4dEtub3duUGVuZGluZ0xldmVsO2E9Yz5hP2M6YTtyZXR1cm4gMj49YSYmYiE9PWE/MDphfVxuZnVuY3Rpb24gWihhKXtpZigwIT09YS5sYXN0RXhwaXJlZFRpbWUpYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjMsYS5jYWxsYmFja1ByaW9yaXR5PTk5LGEuY2FsbGJhY2tOb2RlPWVnKHlqLmJpbmQobnVsbCxhKSk7ZWxzZXt2YXIgYj16aihhKSxjPWEuY2FsbGJhY2tOb2RlO2lmKDA9PT1iKW51bGwhPT1jJiYoYS5jYWxsYmFja05vZGU9bnVsbCxhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MCxhLmNhbGxiYWNrUHJpb3JpdHk9OTApO2Vsc2V7dmFyIGQ9R2coKTsxMDczNzQxODIzPT09Yj9kPTk5OjE9PT1ifHwyPT09Yj9kPTk1OihkPTEwKigxMDczNzQxODIxLWIpLTEwKigxMDczNzQxODIxLWQpLGQ9MD49ZD85OToyNTA+PWQ/OTg6NTI1MD49ZD85Nzo5NSk7aWYobnVsbCE9PWMpe3ZhciBlPWEuY2FsbGJhY2tQcmlvcml0eTtpZihhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9PT1iJiZlPj1kKXJldHVybjtjIT09VGYmJktmKGMpfWEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT1cbmI7YS5jYWxsYmFja1ByaW9yaXR5PWQ7Yj0xMDczNzQxODIzPT09Yj9lZyh5ai5iaW5kKG51bGwsYSkpOmRnKGQsQmouYmluZChudWxsLGEpLHt0aW1lb3V0OjEwKigxMDczNzQxODIxLWIpLSRmKCl9KTthLmNhbGxiYWNrTm9kZT1ifX19XG5mdW5jdGlvbiBCaihhLGIpe3dqPTA7aWYoYilyZXR1cm4gYj1HZygpLENqKGEsYiksWihhKSxudWxsO3ZhciBjPXpqKGEpO2lmKDAhPT1jKXtiPWEuY2FsbGJhY2tOb2RlO2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDMyNykpO0RqKCk7YT09PVQmJmM9PT1VfHxFaihhLGMpO2lmKG51bGwhPT1YKXt2YXIgZD1XO1d8PWZqO3ZhciBlPUZqKCk7ZG8gdHJ5e0dqKCk7YnJlYWt9Y2F0Y2goaCl7SGooYSxoKX13aGlsZSgxKTtuZygpO1c9ZDtjai5jdXJyZW50PWU7aWYoUz09PWhqKXRocm93IGI9a2osRWooYSxjKSx4aShhLGMpLFooYSksYjtpZihudWxsPT09WClzd2l0Y2goZT1hLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlLGEuZmluaXNoZWRFeHBpcmF0aW9uVGltZT1jLGQ9UyxUPW51bGwsZCl7Y2FzZSB0aTpjYXNlIGhqOnRocm93IEVycm9yKHUoMzQ1KSk7Y2FzZSBpajpDaihhLDI8Yz8yOmMpO2JyZWFrO2Nhc2UgdWk6eGkoYSxjKTtkPWEubGFzdFN1c3BlbmRlZFRpbWU7XG5jPT09ZCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPUlqKGUpKTtpZigxMDczNzQxODIzPT09bGomJihlPVRpK3BqLSRmKCksMTA8ZSkpe2lmKG9qKXt2YXIgZj1hLmxhc3RQaW5nZWRUaW1lO2lmKDA9PT1mfHxmPj1jKXthLmxhc3RQaW5nZWRUaW1lPWM7RWooYSxjKTticmVha319Zj16aihhKTtpZigwIT09ZiYmZiE9PWMpYnJlYWs7aWYoMCE9PWQmJmQhPT1jKXthLmxhc3RQaW5nZWRUaW1lPWQ7YnJlYWt9YS50aW1lb3V0SGFuZGxlPUhkKEpqLmJpbmQobnVsbCxhKSxlKTticmVha31KaihhKTticmVhaztjYXNlIHZpOnhpKGEsYyk7ZD1hLmxhc3RTdXNwZW5kZWRUaW1lO2M9PT1kJiYoYS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9SWooZSkpO2lmKG9qJiYoZT1hLmxhc3RQaW5nZWRUaW1lLDA9PT1lfHxlPj1jKSl7YS5sYXN0UGluZ2VkVGltZT1jO0VqKGEsYyk7YnJlYWt9ZT16aihhKTtpZigwIT09ZSYmZSE9PWMpYnJlYWs7aWYoMCE9PWQmJmQhPT1jKXthLmxhc3RQaW5nZWRUaW1lPVxuZDticmVha30xMDczNzQxODIzIT09bWo/ZD0xMCooMTA3Mzc0MTgyMS1taiktJGYoKToxMDczNzQxODIzPT09bGo/ZD0wOihkPTEwKigxMDczNzQxODIxLWxqKS01RTMsZT0kZigpLGM9MTAqKDEwNzM3NDE4MjEtYyktZSxkPWUtZCwwPmQmJihkPTApLGQ9KDEyMD5kPzEyMDo0ODA+ZD80ODA6MTA4MD5kPzEwODA6MTkyMD5kPzE5MjA6M0UzPmQ/M0UzOjQzMjA+ZD80MzIwOjE5NjAqYmooZC8xOTYwKSktZCxjPGQmJihkPWMpKTtpZigxMDxkKXthLnRpbWVvdXRIYW5kbGU9SGQoSmouYmluZChudWxsLGEpLGQpO2JyZWFrfUpqKGEpO2JyZWFrO2Nhc2Ugamo6aWYoMTA3Mzc0MTgyMyE9PWxqJiZudWxsIT09bmope2Y9bGo7dmFyIGc9bmo7ZD1nLmJ1c3lNaW5EdXJhdGlvbk1zfDA7MD49ZD9kPTA6KGU9Zy5idXN5RGVsYXlNc3wwLGY9JGYoKS0oMTAqKDEwNzM3NDE4MjEtZiktKGcudGltZW91dE1zfDB8fDVFMykpLGQ9Zjw9ZT8wOmUrZC1mKTtpZigxMDxkKXt4aShhLGMpO2EudGltZW91dEhhbmRsZT1cbkhkKEpqLmJpbmQobnVsbCxhKSxkKTticmVha319SmooYSk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMyOSkpO31aKGEpO2lmKGEuY2FsbGJhY2tOb2RlPT09YilyZXR1cm4gQmouYmluZChudWxsLGEpfX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIHlqKGEpe3ZhciBiPWEubGFzdEV4cGlyZWRUaW1lO2I9MCE9PWI/YjoxMDczNzQxODIzO2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDMyNykpO0RqKCk7YT09PVQmJmI9PT1VfHxFaihhLGIpO2lmKG51bGwhPT1YKXt2YXIgYz1XO1d8PWZqO3ZhciBkPUZqKCk7ZG8gdHJ5e0tqKCk7YnJlYWt9Y2F0Y2goZSl7SGooYSxlKX13aGlsZSgxKTtuZygpO1c9Yztjai5jdXJyZW50PWQ7aWYoUz09PWhqKXRocm93IGM9a2osRWooYSxiKSx4aShhLGIpLFooYSksYztpZihudWxsIT09WCl0aHJvdyBFcnJvcih1KDI2MSkpO2EuZmluaXNoZWRXb3JrPWEuY3VycmVudC5hbHRlcm5hdGU7YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPWI7VD1udWxsO0pqKGEpO1ooYSl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gTGooKXtpZihudWxsIT09dGope3ZhciBhPXRqO3RqPW51bGw7YS5mb3JFYWNoKGZ1bmN0aW9uKGEsYyl7Q2ooYyxhKTtaKGMpfSk7Z2coKX19XG5mdW5jdGlvbiBNaihhLGIpe3ZhciBjPVc7V3w9MTt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtXPWMsVz09PVYmJmdnKCl9fWZ1bmN0aW9uIE5qKGEsYil7dmFyIGM9VztXJj0tMjtXfD1lajt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtXPWMsVz09PVYmJmdnKCl9fVxuZnVuY3Rpb24gRWooYSxiKXthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRFeHBpcmF0aW9uVGltZT0wO3ZhciBjPWEudGltZW91dEhhbmRsZTstMSE9PWMmJihhLnRpbWVvdXRIYW5kbGU9LTEsSWQoYykpO2lmKG51bGwhPT1YKWZvcihjPVgucmV0dXJuO251bGwhPT1jOyl7dmFyIGQ9Yztzd2l0Y2goZC50YWcpe2Nhc2UgMTpkPWQudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09ZCYmdm9pZCAwIT09ZCYmRGYoKTticmVhaztjYXNlIDM6ZWgoKTtIKEspO0goSik7YnJlYWs7Y2FzZSA1OmdoKGQpO2JyZWFrO2Nhc2UgNDplaCgpO2JyZWFrO2Nhc2UgMTM6SChNKTticmVhaztjYXNlIDE5OkgoTSk7YnJlYWs7Y2FzZSAxMDpvZyhkKX1jPWMucmV0dXJufVQ9YTtYPVNnKGEuY3VycmVudCxudWxsKTtVPWI7Uz10aTtraj1udWxsO21qPWxqPTEwNzM3NDE4MjM7bmo9bnVsbDt3aT0wO29qPSExfVxuZnVuY3Rpb24gSGooYSxiKXtkb3t0cnl7bmcoKTtqaC5jdXJyZW50PXNoO2lmKG1oKWZvcih2YXIgYz1OLm1lbW9pemVkU3RhdGU7bnVsbCE9PWM7KXt2YXIgZD1jLnF1ZXVlO251bGwhPT1kJiYoZC5wZW5kaW5nPW51bGwpO2M9Yy5uZXh0fWxoPTA7UD1PPU49bnVsbDttaD0hMTtpZihudWxsPT09WHx8bnVsbD09PVgucmV0dXJuKXJldHVybiBTPWhqLGtqPWIsWD1udWxsO2E6e3ZhciBlPWEsZj1YLnJldHVybixnPVgsaD1iO2I9VTtnLmVmZmVjdFRhZ3w9MjA0ODtnLmZpcnN0RWZmZWN0PWcubGFzdEVmZmVjdD1udWxsO2lmKG51bGwhPT1oJiZcIm9iamVjdFwiPT09dHlwZW9mIGgmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBoLnRoZW4pe3ZhciBrPWg7aWYoMD09PShnLm1vZGUmMikpe3ZhciBsPWcuYWx0ZXJuYXRlO2w/KGcudXBkYXRlUXVldWU9bC51cGRhdGVRdWV1ZSxnLm1lbW9pemVkU3RhdGU9bC5tZW1vaXplZFN0YXRlLGcuZXhwaXJhdGlvblRpbWU9bC5leHBpcmF0aW9uVGltZSk6KGcudXBkYXRlUXVldWU9XG5udWxsLGcubWVtb2l6ZWRTdGF0ZT1udWxsKX12YXIgbT0wIT09KE0uY3VycmVudCYxKSxwPWY7ZG97dmFyIHg7aWYoeD0xMz09PXAudGFnKXt2YXIgej1wLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PXopeD1udWxsIT09ei5kZWh5ZHJhdGVkPyEwOiExO2Vsc2V7dmFyIGNhPXAubWVtb2l6ZWRQcm9wczt4PXZvaWQgMD09PWNhLmZhbGxiYWNrPyExOiEwIT09Y2EudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2s/ITA6bT8hMTohMH19aWYoeCl7dmFyIEQ9cC51cGRhdGVRdWV1ZTtpZihudWxsPT09RCl7dmFyIHQ9bmV3IFNldDt0LmFkZChrKTtwLnVwZGF0ZVF1ZXVlPXR9ZWxzZSBELmFkZChrKTtpZigwPT09KHAubW9kZSYyKSl7cC5lZmZlY3RUYWd8PTY0O2cuZWZmZWN0VGFnJj0tMjk4MTtpZigxPT09Zy50YWcpaWYobnVsbD09PWcuYWx0ZXJuYXRlKWcudGFnPTE3O2Vsc2V7dmFyIHk9d2coMTA3Mzc0MTgyMyxudWxsKTt5LnRhZz0yO3hnKGcseSl9Zy5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzO1xuYnJlYWsgYX1oPXZvaWQgMDtnPWI7dmFyIEE9ZS5waW5nQ2FjaGU7bnVsbD09PUE/KEE9ZS5waW5nQ2FjaGU9bmV3IFdpLGg9bmV3IFNldCxBLnNldChrLGgpKTooaD1BLmdldChrKSx2b2lkIDA9PT1oJiYoaD1uZXcgU2V0LEEuc2V0KGssaCkpKTtpZighaC5oYXMoZykpe2guYWRkKGcpO3ZhciBxPU9qLmJpbmQobnVsbCxlLGssZyk7ay50aGVuKHEscSl9cC5lZmZlY3RUYWd8PTQwOTY7cC5leHBpcmF0aW9uVGltZT1iO2JyZWFrIGF9cD1wLnJldHVybn13aGlsZShudWxsIT09cCk7aD1FcnJvcigocGIoZy50eXBlKXx8XCJBIFJlYWN0IGNvbXBvbmVudFwiKStcIiBzdXNwZW5kZWQgd2hpbGUgcmVuZGVyaW5nLCBidXQgbm8gZmFsbGJhY2sgVUkgd2FzIHNwZWNpZmllZC5cXG5cXG5BZGQgYSA8U3VzcGVuc2UgZmFsbGJhY2s9Li4uPiBjb21wb25lbnQgaGlnaGVyIGluIHRoZSB0cmVlIHRvIHByb3ZpZGUgYSBsb2FkaW5nIGluZGljYXRvciBvciBwbGFjZWhvbGRlciB0byBkaXNwbGF5LlwiK3FiKGcpKX1TIT09XG5qaiYmKFM9aWopO2g9QWkoaCxnKTtwPWY7ZG97c3dpdGNoKHAudGFnKXtjYXNlIDM6az1oO3AuZWZmZWN0VGFnfD00MDk2O3AuZXhwaXJhdGlvblRpbWU9Yjt2YXIgQj1YaShwLGssYik7eWcocCxCKTticmVhayBhO2Nhc2UgMTprPWg7dmFyIHc9cC50eXBlLHViPXAuc3RhdGVOb2RlO2lmKDA9PT0ocC5lZmZlY3RUYWcmNjQpJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHcuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09dWImJlwiZnVuY3Rpb25cIj09PXR5cGVvZiB1Yi5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1hanx8IWFqLmhhcyh1YikpKSl7cC5lZmZlY3RUYWd8PTQwOTY7cC5leHBpcmF0aW9uVGltZT1iO3ZhciB2Yj0kaShwLGssYik7eWcocCx2Yik7YnJlYWsgYX19cD1wLnJldHVybn13aGlsZShudWxsIT09cCl9WD1QaihYKX1jYXRjaChYYyl7Yj1YYztjb250aW51ZX1icmVha313aGlsZSgxKX1cbmZ1bmN0aW9uIEZqKCl7dmFyIGE9Y2ouY3VycmVudDtjai5jdXJyZW50PXNoO3JldHVybiBudWxsPT09YT9zaDphfWZ1bmN0aW9uIEFnKGEsYil7YTxsaiYmMjxhJiYobGo9YSk7bnVsbCE9PWImJmE8bWomJjI8YSYmKG1qPWEsbmo9Yil9ZnVuY3Rpb24gQmcoYSl7YT53aSYmKHdpPWEpfWZ1bmN0aW9uIEtqKCl7Zm9yKDtudWxsIT09WDspWD1RaihYKX1mdW5jdGlvbiBHaigpe2Zvcig7bnVsbCE9PVgmJiFVZigpOylYPVFqKFgpfWZ1bmN0aW9uIFFqKGEpe3ZhciBiPVJqKGEuYWx0ZXJuYXRlLGEsVSk7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iJiYoYj1QaihhKSk7ZGouY3VycmVudD1udWxsO3JldHVybiBifVxuZnVuY3Rpb24gUGooYSl7WD1hO2Rve3ZhciBiPVguYWx0ZXJuYXRlO2E9WC5yZXR1cm47aWYoMD09PShYLmVmZmVjdFRhZyYyMDQ4KSl7Yj1zaShiLFgsVSk7aWYoMT09PVV8fDEhPT1YLmNoaWxkRXhwaXJhdGlvblRpbWUpe2Zvcih2YXIgYz0wLGQ9WC5jaGlsZDtudWxsIT09ZDspe3ZhciBlPWQuZXhwaXJhdGlvblRpbWUsZj1kLmNoaWxkRXhwaXJhdGlvblRpbWU7ZT5jJiYoYz1lKTtmPmMmJihjPWYpO2Q9ZC5zaWJsaW5nfVguY2hpbGRFeHBpcmF0aW9uVGltZT1jfWlmKG51bGwhPT1iKXJldHVybiBiO251bGwhPT1hJiYwPT09KGEuZWZmZWN0VGFnJjIwNDgpJiYobnVsbD09PWEuZmlyc3RFZmZlY3QmJihhLmZpcnN0RWZmZWN0PVguZmlyc3RFZmZlY3QpLG51bGwhPT1YLmxhc3RFZmZlY3QmJihudWxsIT09YS5sYXN0RWZmZWN0JiYoYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9WC5maXJzdEVmZmVjdCksYS5sYXN0RWZmZWN0PVgubGFzdEVmZmVjdCksMTxYLmVmZmVjdFRhZyYmKG51bGwhPT1cbmEubGFzdEVmZmVjdD9hLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1YOmEuZmlyc3RFZmZlY3Q9WCxhLmxhc3RFZmZlY3Q9WCkpfWVsc2V7Yj16aShYKTtpZihudWxsIT09YilyZXR1cm4gYi5lZmZlY3RUYWcmPTIwNDcsYjtudWxsIT09YSYmKGEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PW51bGwsYS5lZmZlY3RUYWd8PTIwNDgpfWI9WC5zaWJsaW5nO2lmKG51bGwhPT1iKXJldHVybiBiO1g9YX13aGlsZShudWxsIT09WCk7Uz09PXRpJiYoUz1qaik7cmV0dXJuIG51bGx9ZnVuY3Rpb24gSWooYSl7dmFyIGI9YS5leHBpcmF0aW9uVGltZTthPWEuY2hpbGRFeHBpcmF0aW9uVGltZTtyZXR1cm4gYj5hP2I6YX1mdW5jdGlvbiBKaihhKXt2YXIgYj1hZygpO2NnKDk5LFNqLmJpbmQobnVsbCxhLGIpKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIFNqKGEsYil7ZG8gRGooKTt3aGlsZShudWxsIT09cmopO2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDMyNykpO3ZhciBjPWEuZmluaXNoZWRXb3JrLGQ9YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lO2lmKG51bGw9PT1jKXJldHVybiBudWxsO2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTA7aWYoYz09PWEuY3VycmVudCl0aHJvdyBFcnJvcih1KDE3NykpO2EuY2FsbGJhY2tOb2RlPW51bGw7YS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPTA7YS5jYWxsYmFja1ByaW9yaXR5PTkwO2EubmV4dEtub3duUGVuZGluZ0xldmVsPTA7dmFyIGU9SWooYyk7YS5maXJzdFBlbmRpbmdUaW1lPWU7ZDw9YS5sYXN0U3VzcGVuZGVkVGltZT9hLmZpcnN0U3VzcGVuZGVkVGltZT1hLmxhc3RTdXNwZW5kZWRUaW1lPWEubmV4dEtub3duUGVuZGluZ0xldmVsPTA6ZDw9YS5maXJzdFN1c3BlbmRlZFRpbWUmJihhLmZpcnN0U3VzcGVuZGVkVGltZT1cbmQtMSk7ZDw9YS5sYXN0UGluZ2VkVGltZSYmKGEubGFzdFBpbmdlZFRpbWU9MCk7ZDw9YS5sYXN0RXhwaXJlZFRpbWUmJihhLmxhc3RFeHBpcmVkVGltZT0wKTthPT09VCYmKFg9VD1udWxsLFU9MCk7MTxjLmVmZmVjdFRhZz9udWxsIT09Yy5sYXN0RWZmZWN0PyhjLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGU9Yy5maXJzdEVmZmVjdCk6ZT1jOmU9Yy5maXJzdEVmZmVjdDtpZihudWxsIT09ZSl7dmFyIGY9VztXfD1najtkai5jdXJyZW50PW51bGw7RGQ9ZmQ7dmFyIGc9eGQoKTtpZih5ZChnKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gZyl2YXIgaD17c3RhcnQ6Zy5zZWxlY3Rpb25TdGFydCxlbmQ6Zy5zZWxlY3Rpb25FbmR9O2Vsc2UgYTp7aD0oaD1nLm93bmVyRG9jdW1lbnQpJiZoLmRlZmF1bHRWaWV3fHx3aW5kb3c7dmFyIGs9aC5nZXRTZWxlY3Rpb24mJmguZ2V0U2VsZWN0aW9uKCk7aWYoayYmMCE9PWsucmFuZ2VDb3VudCl7aD1rLmFuY2hvck5vZGU7dmFyIGw9ay5hbmNob3JPZmZzZXQsXG5tPWsuZm9jdXNOb2RlO2s9ay5mb2N1c09mZnNldDt0cnl7aC5ub2RlVHlwZSxtLm5vZGVUeXBlfWNhdGNoKHdiKXtoPW51bGw7YnJlYWsgYX12YXIgcD0wLHg9LTEsej0tMSxjYT0wLEQ9MCx0PWcseT1udWxsO2I6Zm9yKDs7KXtmb3IodmFyIEE7Oyl7dCE9PWh8fDAhPT1sJiYzIT09dC5ub2RlVHlwZXx8KHg9cCtsKTt0IT09bXx8MCE9PWsmJjMhPT10Lm5vZGVUeXBlfHwoej1wK2spOzM9PT10Lm5vZGVUeXBlJiYocCs9dC5ub2RlVmFsdWUubGVuZ3RoKTtpZihudWxsPT09KEE9dC5maXJzdENoaWxkKSlicmVhazt5PXQ7dD1BfWZvcig7Oyl7aWYodD09PWcpYnJlYWsgYjt5PT09aCYmKytjYT09PWwmJih4PXApO3k9PT1tJiYrK0Q9PT1rJiYoej1wKTtpZihudWxsIT09KEE9dC5uZXh0U2libGluZykpYnJlYWs7dD15O3k9dC5wYXJlbnROb2RlfXQ9QX1oPS0xPT09eHx8LTE9PT16P251bGw6e3N0YXJ0OngsZW5kOnp9fWVsc2UgaD1udWxsfWg9aHx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgaD1cbm51bGw7RWQ9e2FjdGl2ZUVsZW1lbnREZXRhY2hlZDpudWxsLGZvY3VzZWRFbGVtOmcsc2VsZWN0aW9uUmFuZ2U6aH07ZmQ9ITE7WT1lO2RvIHRyeXtUaigpfWNhdGNoKHdiKXtpZihudWxsPT09WSl0aHJvdyBFcnJvcih1KDMzMCkpO0VpKFksd2IpO1k9WS5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1ZKTtZPWU7ZG8gdHJ5e2ZvcihnPWEsaD1iO251bGwhPT1ZOyl7dmFyIHE9WS5lZmZlY3RUYWc7cSYxNiYmUmIoWS5zdGF0ZU5vZGUsXCJcIik7aWYocSYxMjgpe3ZhciBCPVkuYWx0ZXJuYXRlO2lmKG51bGwhPT1CKXt2YXIgdz1CLnJlZjtudWxsIT09dyYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiB3P3cobnVsbCk6dy5jdXJyZW50PW51bGwpfX1zd2l0Y2gocSYxMDM4KXtjYXNlIDI6UGkoWSk7WS5lZmZlY3RUYWcmPS0zO2JyZWFrO2Nhc2UgNjpQaShZKTtZLmVmZmVjdFRhZyY9LTM7U2koWS5hbHRlcm5hdGUsWSk7YnJlYWs7Y2FzZSAxMDI0OlkuZWZmZWN0VGFnJj0tMTAyNTticmVhaztjYXNlIDEwMjg6WS5lZmZlY3RUYWcmPVxuLTEwMjU7U2koWS5hbHRlcm5hdGUsWSk7YnJlYWs7Y2FzZSA0OlNpKFkuYWx0ZXJuYXRlLFkpO2JyZWFrO2Nhc2UgODpsPVksTWkoZyxsLGgpLE5pKGwpfVk9WS5uZXh0RWZmZWN0fX1jYXRjaCh3Yil7aWYobnVsbD09PVkpdGhyb3cgRXJyb3IodSgzMzApKTtFaShZLHdiKTtZPVkubmV4dEVmZmVjdH13aGlsZShudWxsIT09WSk7dz1FZDtCPXhkKCk7cT13LmZvY3VzZWRFbGVtO2g9dy5zZWxlY3Rpb25SYW5nZTtpZihCIT09cSYmcSYmcS5vd25lckRvY3VtZW50JiZ3ZChxLm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHEpKXtudWxsIT09aCYmeWQocSkmJihCPWguc3RhcnQsdz1oLmVuZCx2b2lkIDA9PT13JiYodz1CKSxcInNlbGVjdGlvblN0YXJ0XCJpbiBxPyhxLnNlbGVjdGlvblN0YXJ0PUIscS5zZWxlY3Rpb25FbmQ9TWF0aC5taW4odyxxLnZhbHVlLmxlbmd0aCkpOih3PShCPXEub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZCLmRlZmF1bHRWaWV3fHx3aW5kb3csdy5nZXRTZWxlY3Rpb24mJlxuKHc9dy5nZXRTZWxlY3Rpb24oKSxsPXEudGV4dENvbnRlbnQubGVuZ3RoLGc9TWF0aC5taW4oaC5zdGFydCxsKSxoPXZvaWQgMD09PWguZW5kP2c6TWF0aC5taW4oaC5lbmQsbCksIXcuZXh0ZW5kJiZnPmgmJihsPWgsaD1nLGc9bCksbD12ZChxLGcpLG09dmQocSxoKSxsJiZtJiYoMSE9PXcucmFuZ2VDb3VudHx8dy5hbmNob3JOb2RlIT09bC5ub2RlfHx3LmFuY2hvck9mZnNldCE9PWwub2Zmc2V0fHx3LmZvY3VzTm9kZSE9PW0ubm9kZXx8dy5mb2N1c09mZnNldCE9PW0ub2Zmc2V0KSYmKEI9Qi5jcmVhdGVSYW5nZSgpLEIuc2V0U3RhcnQobC5ub2RlLGwub2Zmc2V0KSx3LnJlbW92ZUFsbFJhbmdlcygpLGc+aD8ody5hZGRSYW5nZShCKSx3LmV4dGVuZChtLm5vZGUsbS5vZmZzZXQpKTooQi5zZXRFbmQobS5ub2RlLG0ub2Zmc2V0KSx3LmFkZFJhbmdlKEIpKSkpKSk7Qj1bXTtmb3Iodz1xO3c9dy5wYXJlbnROb2RlOykxPT09dy5ub2RlVHlwZSYmQi5wdXNoKHtlbGVtZW50OncsbGVmdDp3LnNjcm9sbExlZnQsXG50b3A6dy5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgcS5mb2N1cyYmcS5mb2N1cygpO2ZvcihxPTA7cTxCLmxlbmd0aDtxKyspdz1CW3FdLHcuZWxlbWVudC5zY3JvbGxMZWZ0PXcubGVmdCx3LmVsZW1lbnQuc2Nyb2xsVG9wPXcudG9wfWZkPSEhRGQ7RWQ9RGQ9bnVsbDthLmN1cnJlbnQ9YztZPWU7ZG8gdHJ5e2ZvcihxPWE7bnVsbCE9PVk7KXt2YXIgdWI9WS5lZmZlY3RUYWc7dWImMzYmJkppKHEsWS5hbHRlcm5hdGUsWSk7aWYodWImMTI4KXtCPXZvaWQgMDt2YXIgdmI9WS5yZWY7aWYobnVsbCE9PXZiKXt2YXIgWGM9WS5zdGF0ZU5vZGU7c3dpdGNoKFkudGFnKXtjYXNlIDU6Qj1YYzticmVhaztkZWZhdWx0OkI9WGN9XCJmdW5jdGlvblwiPT09dHlwZW9mIHZiP3ZiKEIpOnZiLmN1cnJlbnQ9Qn19WT1ZLm5leHRFZmZlY3R9fWNhdGNoKHdiKXtpZihudWxsPT09WSl0aHJvdyBFcnJvcih1KDMzMCkpO0VpKFksd2IpO1k9WS5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1ZKTtZPVxubnVsbDtWZigpO1c9Zn1lbHNlIGEuY3VycmVudD1jO2lmKHFqKXFqPSExLHJqPWEsc2o9YjtlbHNlIGZvcihZPWU7bnVsbCE9PVk7KWI9WS5uZXh0RWZmZWN0LFkubmV4dEVmZmVjdD1udWxsLFk9YjtiPWEuZmlyc3RQZW5kaW5nVGltZTswPT09YiYmKGFqPW51bGwpOzEwNzM3NDE4MjM9PT1iP2E9PT12aj91aisrOih1aj0wLHZqPWEpOnVqPTA7XCJmdW5jdGlvblwiPT09dHlwZW9mIFVqJiZVaihjLnN0YXRlTm9kZSxkKTtaKGEpO2lmKFlpKXRocm93IFlpPSExLGE9WmksWmk9bnVsbCxhO2lmKChXJmVqKSE9PVYpcmV0dXJuIG51bGw7Z2coKTtyZXR1cm4gbnVsbH1mdW5jdGlvbiBUaigpe2Zvcig7bnVsbCE9PVk7KXt2YXIgYT1ZLmVmZmVjdFRhZzswIT09KGEmMjU2KSYmR2koWS5hbHRlcm5hdGUsWSk7MD09PShhJjUxMil8fHFqfHwocWo9ITAsZGcoOTcsZnVuY3Rpb24oKXtEaigpO3JldHVybiBudWxsfSkpO1k9WS5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIERqKCl7aWYoOTAhPT1zail7dmFyIGE9OTc8c2o/OTc6c2o7c2o9OTA7cmV0dXJuIGNnKGEsVmopfX1mdW5jdGlvbiBWaigpe2lmKG51bGw9PT1yailyZXR1cm4hMTt2YXIgYT1yajtyaj1udWxsO2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDMzMSkpO3ZhciBiPVc7V3w9Z2o7Zm9yKGE9YS5jdXJyZW50LmZpcnN0RWZmZWN0O251bGwhPT1hOyl7dHJ5e3ZhciBjPWE7aWYoMCE9PShjLmVmZmVjdFRhZyY1MTIpKXN3aXRjaChjLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOkhpKDUsYyksSWkoNSxjKX19Y2F0Y2goZCl7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IodSgzMzApKTtFaShhLGQpfWM9YS5uZXh0RWZmZWN0O2EubmV4dEVmZmVjdD1udWxsO2E9Y31XPWI7Z2coKTtyZXR1cm4hMH1cbmZ1bmN0aW9uIFdqKGEsYixjKXtiPUFpKGMsYik7Yj1YaShhLGIsMTA3Mzc0MTgyMyk7eGcoYSxiKTthPXhqKGEsMTA3Mzc0MTgyMyk7bnVsbCE9PWEmJlooYSl9ZnVuY3Rpb24gRWkoYSxiKXtpZigzPT09YS50YWcpV2ooYSxhLGIpO2Vsc2UgZm9yKHZhciBjPWEucmV0dXJuO251bGwhPT1jOyl7aWYoMz09PWMudGFnKXtXaihjLGEsYik7YnJlYWt9ZWxzZSBpZigxPT09Yy50YWcpe3ZhciBkPWMuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1hanx8IWFqLmhhcyhkKSkpe2E9QWkoYixhKTthPSRpKGMsYSwxMDczNzQxODIzKTt4ZyhjLGEpO2M9eGooYywxMDczNzQxODIzKTtudWxsIT09YyYmWihjKTticmVha319Yz1jLnJldHVybn19XG5mdW5jdGlvbiBPaihhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO1Q9PT1hJiZVPT09Yz9TPT09dml8fFM9PT11aSYmMTA3Mzc0MTgyMz09PWxqJiYkZigpLVRpPHBqP0VqKGEsVSk6b2o9ITA6QWooYSxjKSYmKGI9YS5sYXN0UGluZ2VkVGltZSwwIT09YiYmYjxjfHwoYS5sYXN0UGluZ2VkVGltZT1jLFooYSkpKX1mdW5jdGlvbiBWaShhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO251bGwhPT1jJiZjLmRlbGV0ZShiKTtiPTA7MD09PWImJihiPUdnKCksYj1IZyhiLGEsbnVsbCkpO2E9eGooYSxiKTtudWxsIT09YSYmWihhKX12YXIgUmo7XG5Saj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTtpZihudWxsIT09YSl7dmFyIGU9Yi5wZW5kaW5nUHJvcHM7aWYoYS5tZW1vaXplZFByb3BzIT09ZXx8Sy5jdXJyZW50KXJnPSEwO2Vsc2V7aWYoZDxjKXtyZz0hMTtzd2l0Y2goYi50YWcpe2Nhc2UgMzpoaShiKTtYaCgpO2JyZWFrO2Nhc2UgNTpmaChiKTtpZihiLm1vZGUmNCYmMSE9PWMmJmUuaGlkZGVuKXJldHVybiBiLmV4cGlyYXRpb25UaW1lPWIuY2hpbGRFeHBpcmF0aW9uVGltZT0xLG51bGw7YnJlYWs7Y2FzZSAxOkwoYi50eXBlKSYmR2YoYik7YnJlYWs7Y2FzZSA0OmRoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMDpkPWIubWVtb2l6ZWRQcm9wcy52YWx1ZTtlPWIudHlwZS5fY29udGV4dDtJKGpnLGUuX2N1cnJlbnRWYWx1ZSk7ZS5fY3VycmVudFZhbHVlPWQ7YnJlYWs7Y2FzZSAxMzppZihudWxsIT09Yi5tZW1vaXplZFN0YXRlKXtkPWIuY2hpbGQuY2hpbGRFeHBpcmF0aW9uVGltZTtcbmlmKDAhPT1kJiZkPj1jKXJldHVybiBqaShhLGIsYyk7SShNLE0uY3VycmVudCYxKTtiPSRoKGEsYixjKTtyZXR1cm4gbnVsbCE9PWI/Yi5zaWJsaW5nOm51bGx9SShNLE0uY3VycmVudCYxKTticmVhaztjYXNlIDE5OmQ9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPj1jO2lmKDAhPT0oYS5lZmZlY3RUYWcmNjQpKXtpZihkKXJldHVybiBtaShhLGIsYyk7Yi5lZmZlY3RUYWd8PTY0fWU9Yi5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYoZS5yZW5kZXJpbmc9bnVsbCxlLnRhaWw9bnVsbCk7SShNLE0uY3VycmVudCk7aWYoIWQpcmV0dXJuIG51bGx9cmV0dXJuICRoKGEsYixjKX1yZz0hMX19ZWxzZSByZz0hMTtiLmV4cGlyYXRpb25UaW1lPTA7c3dpdGNoKGIudGFnKXtjYXNlIDI6ZD1iLnR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7ZT1DZihiLEouY3VycmVudCk7cWcoYixjKTtlPW9oKG51bGwsXG5iLGQsYSxlLGMpO2IuZWZmZWN0VGFnfD0xO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZil7Yi50YWc9MTtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYoTChkKSl7dmFyIGY9ITA7R2YoYil9ZWxzZSBmPSExO2IubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZS5zdGF0ZSYmdm9pZCAwIT09ZS5zdGF0ZT9lLnN0YXRlOm51bGw7dWcoYik7dmFyIGc9ZC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJkZnKGIsZCxnLGEpO2UudXBkYXRlcj1KZztiLnN0YXRlTm9kZT1lO2UuX3JlYWN0SW50ZXJuYWxGaWJlcj1iO05nKGIsZCxhLGMpO2I9Z2kobnVsbCxiLGQsITAsZixjKX1lbHNlIGIudGFnPTAsUihudWxsLGIsZSxjKSxiPWIuY2hpbGQ7cmV0dXJuIGI7Y2FzZSAxNjphOntlPWIuZWxlbWVudFR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1cbm51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wcztvYihlKTtpZigxIT09ZS5fc3RhdHVzKXRocm93IGUuX3Jlc3VsdDtlPWUuX3Jlc3VsdDtiLnR5cGU9ZTtmPWIudGFnPVhqKGUpO2E9aWcoZSxhKTtzd2l0Y2goZil7Y2FzZSAwOmI9ZGkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTpiPWZpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDExOmI9WmgobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTQ6Yj1haShudWxsLGIsZSxpZyhlLnR5cGUsYSksZCxjKTticmVhayBhfXRocm93IEVycm9yKHUoMzA2LGUsXCJcIikpO31yZXR1cm4gYjtjYXNlIDA6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmlnKGQsZSksZGkoYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmlnKGQsZSksZmkoYSxiLGQsZSxjKTtcbmNhc2UgMzpoaShiKTtkPWIudXBkYXRlUXVldWU7aWYobnVsbD09PWF8fG51bGw9PT1kKXRocm93IEVycm9yKHUoMjgyKSk7ZD1iLnBlbmRpbmdQcm9wcztlPWIubWVtb2l6ZWRTdGF0ZTtlPW51bGwhPT1lP2UuZWxlbWVudDpudWxsO3ZnKGEsYik7emcoYixkLG51bGwsYyk7ZD1iLm1lbW9pemVkU3RhdGUuZWxlbWVudDtpZihkPT09ZSlYaCgpLGI9JGgoYSxiLGMpO2Vsc2V7aWYoZT1iLnN0YXRlTm9kZS5oeWRyYXRlKVBoPUpkKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8uZmlyc3RDaGlsZCksT2g9YixlPVFoPSEwO2lmKGUpZm9yKGM9WWcoYixudWxsLGQsYyksYi5jaGlsZD1jO2M7KWMuZWZmZWN0VGFnPWMuZWZmZWN0VGFnJi0zfDEwMjQsYz1jLnNpYmxpbmc7ZWxzZSBSKGEsYixkLGMpLFhoKCk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgNTpyZXR1cm4gZmgoYiksbnVsbD09PWEmJlVoKGIpLGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6XG5udWxsLGc9ZS5jaGlsZHJlbixHZChkLGUpP2c9bnVsbDpudWxsIT09ZiYmR2QoZCxmKSYmKGIuZWZmZWN0VGFnfD0xNiksZWkoYSxiKSxiLm1vZGUmNCYmMSE9PWMmJmUuaGlkZGVuPyhiLmV4cGlyYXRpb25UaW1lPWIuY2hpbGRFeHBpcmF0aW9uVGltZT0xLGI9bnVsbCk6KFIoYSxiLGcsYyksYj1iLmNoaWxkKSxiO2Nhc2UgNjpyZXR1cm4gbnVsbD09PWEmJlVoKGIpLG51bGw7Y2FzZSAxMzpyZXR1cm4gamkoYSxiLGMpO2Nhc2UgNDpyZXR1cm4gZGgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxkPWIucGVuZGluZ1Byb3BzLG51bGw9PT1hP2IuY2hpbGQ9WGcoYixudWxsLGQsYyk6UihhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmlnKGQsZSksWmgoYSxiLGQsZSxjKTtjYXNlIDc6cmV0dXJuIFIoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBSKGEsXG5iLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMjpyZXR1cm4gUihhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEwOmE6e2Q9Yi50eXBlLl9jb250ZXh0O2U9Yi5wZW5kaW5nUHJvcHM7Zz1iLm1lbW9pemVkUHJvcHM7Zj1lLnZhbHVlO3ZhciBoPWIudHlwZS5fY29udGV4dDtJKGpnLGguX2N1cnJlbnRWYWx1ZSk7aC5fY3VycmVudFZhbHVlPWY7aWYobnVsbCE9PWcpaWYoaD1nLnZhbHVlLGY9JGUoaCxmKT8wOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM/ZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHMoaCxmKToxMDczNzQxODIzKXwwLDA9PT1mKXtpZihnLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIUsuY3VycmVudCl7Yj0kaChhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoaD1iLmNoaWxkLG51bGwhPT1oJiYoaC5yZXR1cm49Yik7bnVsbCE9PWg7KXt2YXIgaz1oLmRlcGVuZGVuY2llcztpZihudWxsIT09XG5rKXtnPWguY2hpbGQ7Zm9yKHZhciBsPWsuZmlyc3RDb250ZXh0O251bGwhPT1sOyl7aWYobC5jb250ZXh0PT09ZCYmMCE9PShsLm9ic2VydmVkQml0cyZmKSl7MT09PWgudGFnJiYobD13ZyhjLG51bGwpLGwudGFnPTIseGcoaCxsKSk7aC5leHBpcmF0aW9uVGltZTxjJiYoaC5leHBpcmF0aW9uVGltZT1jKTtsPWguYWx0ZXJuYXRlO251bGwhPT1sJiZsLmV4cGlyYXRpb25UaW1lPGMmJihsLmV4cGlyYXRpb25UaW1lPWMpO3BnKGgucmV0dXJuLGMpO2suZXhwaXJhdGlvblRpbWU8YyYmKGsuZXhwaXJhdGlvblRpbWU9Yyk7YnJlYWt9bD1sLm5leHR9fWVsc2UgZz0xMD09PWgudGFnP2gudHlwZT09PWIudHlwZT9udWxsOmguY2hpbGQ6aC5jaGlsZDtpZihudWxsIT09ZylnLnJldHVybj1oO2Vsc2UgZm9yKGc9aDtudWxsIT09Zzspe2lmKGc9PT1iKXtnPW51bGw7YnJlYWt9aD1nLnNpYmxpbmc7aWYobnVsbCE9PWgpe2gucmV0dXJuPWcucmV0dXJuO2c9aDticmVha31nPWcucmV0dXJufWg9XG5nfVIoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxkPWYuY2hpbGRyZW4scWcoYixjKSxlPXNnKGUsZi51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChlKSxiLmVmZmVjdFRhZ3w9MSxSKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUsZj1pZyhlLGIucGVuZGluZ1Byb3BzKSxmPWlnKGUudHlwZSxmKSxhaShhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4gY2koYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmlnKGQsZSksbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpLGIudGFnPTEsTChkKT8oYT0hMCxHZihiKSk6YT0hMSxxZyhiLGMpLExnKGIsZCxlKSxOZyhiLGQsZSxjKSxnaShudWxsLFxuYixkLCEwLGEsYyk7Y2FzZSAxOTpyZXR1cm4gbWkoYSxiLGMpfXRocm93IEVycm9yKHUoMTU2LGIudGFnKSk7fTt2YXIgVWo9bnVsbCxMaT1udWxsO2Z1bmN0aW9uIFlqKGEpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXJldHVybiExO3ZhciBiPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZihiLmlzRGlzYWJsZWR8fCFiLnN1cHBvcnRzRmliZXIpcmV0dXJuITA7dHJ5e3ZhciBjPWIuaW5qZWN0KGEpO1VqPWZ1bmN0aW9uKGEpe3RyeXtiLm9uQ29tbWl0RmliZXJSb290KGMsYSx2b2lkIDAsNjQ9PT0oYS5jdXJyZW50LmVmZmVjdFRhZyY2NCkpfWNhdGNoKGUpe319O0xpPWZ1bmN0aW9uKGEpe3RyeXtiLm9uQ29tbWl0RmliZXJVbm1vdW50KGMsYSl9Y2F0Y2goZSl7fX19Y2F0Y2goZCl7fXJldHVybiEwfVxuZnVuY3Rpb24gWmooYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmRlcGVuZGVuY2llcz10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLmVmZmVjdFRhZz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRFeHBpcmF0aW9uVGltZT10aGlzLmV4cGlyYXRpb25UaW1lPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBTaChhLGIsYyxkKXtyZXR1cm4gbmV3IFpqKGEsYixjLGQpfVxuZnVuY3Rpb24gYmkoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1mdW5jdGlvbiBYaihhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYmkoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PWdiKXJldHVybiAxMTtpZihhPT09amIpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gU2coYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1TaChhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLmVmZmVjdFRhZz0wLGMubmV4dEVmZmVjdD1udWxsLGMuZmlyc3RFZmZlY3Q9bnVsbCxjLmxhc3RFZmZlY3Q9bnVsbCk7Yy5jaGlsZEV4cGlyYXRpb25UaW1lPWEuY2hpbGRFeHBpcmF0aW9uVGltZTtjLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWU7Yy5jaGlsZD1hLmNoaWxkO2MubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7Yy5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtjLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7Yj1hLmRlcGVuZGVuY2llcztjLmRlcGVuZGVuY2llcz1udWxsPT09Yj9udWxsOntleHBpcmF0aW9uVGltZTpiLmV4cGlyYXRpb25UaW1lLFxuZmlyc3RDb250ZXh0OmIuZmlyc3RDb250ZXh0LHJlc3BvbmRlcnM6Yi5yZXNwb25kZXJzfTtjLnNpYmxpbmc9YS5zaWJsaW5nO2MuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cbmZ1bmN0aW9uIFVnKGEsYixjLGQsZSxmKXt2YXIgZz0yO2Q9YTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSliaShhKSYmKGc9MSk7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpZz01O2Vsc2UgYTpzd2l0Y2goYSl7Y2FzZSBhYjpyZXR1cm4gV2coYy5jaGlsZHJlbixlLGYsYik7Y2FzZSBmYjpnPTg7ZXw9NzticmVhaztjYXNlIGJiOmc9ODtlfD0xO2JyZWFrO2Nhc2UgY2I6cmV0dXJuIGE9U2goMTIsYyxiLGV8OCksYS5lbGVtZW50VHlwZT1jYixhLnR5cGU9Y2IsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBoYjpyZXR1cm4gYT1TaCgxMyxjLGIsZSksYS50eXBlPWhiLGEuZWxlbWVudFR5cGU9aGIsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBpYjpyZXR1cm4gYT1TaCgxOSxjLGIsZSksYS5lbGVtZW50VHlwZT1pYixhLmV4cGlyYXRpb25UaW1lPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgZGI6Zz1cbjEwO2JyZWFrIGE7Y2FzZSBlYjpnPTk7YnJlYWsgYTtjYXNlIGdiOmc9MTE7YnJlYWsgYTtjYXNlIGpiOmc9MTQ7YnJlYWsgYTtjYXNlIGtiOmc9MTY7ZD1udWxsO2JyZWFrIGE7Y2FzZSBsYjpnPTIyO2JyZWFrIGF9dGhyb3cgRXJyb3IodSgxMzAsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpKTt9Yj1TaChnLGMsYixlKTtiLmVsZW1lbnRUeXBlPWE7Yi50eXBlPWQ7Yi5leHBpcmF0aW9uVGltZT1mO3JldHVybiBifWZ1bmN0aW9uIFdnKGEsYixjLGQpe2E9U2goNyxhLGQsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIFRnKGEsYixjKXthPVNoKDYsYSxudWxsLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIFZnKGEsYixjKXtiPVNoKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmV4cGlyYXRpb25UaW1lPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifVxuZnVuY3Rpb24gYWsoYSxiLGMpe3RoaXMudGFnPWI7dGhpcy5jdXJyZW50PW51bGw7dGhpcy5jb250YWluZXJJbmZvPWE7dGhpcy5waW5nQ2FjaGU9dGhpcy5wZW5kaW5nQ2hpbGRyZW49bnVsbDt0aGlzLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDt0aGlzLmZpbmlzaGVkV29yaz1udWxsO3RoaXMudGltZW91dEhhbmRsZT0tMTt0aGlzLnBlbmRpbmdDb250ZXh0PXRoaXMuY29udGV4dD1udWxsO3RoaXMuaHlkcmF0ZT1jO3RoaXMuY2FsbGJhY2tOb2RlPW51bGw7dGhpcy5jYWxsYmFja1ByaW9yaXR5PTkwO3RoaXMubGFzdEV4cGlyZWRUaW1lPXRoaXMubGFzdFBpbmdlZFRpbWU9dGhpcy5uZXh0S25vd25QZW5kaW5nTGV2ZWw9dGhpcy5sYXN0U3VzcGVuZGVkVGltZT10aGlzLmZpcnN0U3VzcGVuZGVkVGltZT10aGlzLmZpcnN0UGVuZGluZ1RpbWU9MH1cbmZ1bmN0aW9uIEFqKGEsYil7dmFyIGM9YS5maXJzdFN1c3BlbmRlZFRpbWU7YT1hLmxhc3RTdXNwZW5kZWRUaW1lO3JldHVybiAwIT09YyYmYz49YiYmYTw9Yn1mdW5jdGlvbiB4aShhLGIpe3ZhciBjPWEuZmlyc3RTdXNwZW5kZWRUaW1lLGQ9YS5sYXN0U3VzcGVuZGVkVGltZTtjPGImJihhLmZpcnN0U3VzcGVuZGVkVGltZT1iKTtpZihkPmJ8fDA9PT1jKWEubGFzdFN1c3BlbmRlZFRpbWU9YjtiPD1hLmxhc3RQaW5nZWRUaW1lJiYoYS5sYXN0UGluZ2VkVGltZT0wKTtiPD1hLmxhc3RFeHBpcmVkVGltZSYmKGEubGFzdEV4cGlyZWRUaW1lPTApfVxuZnVuY3Rpb24geWkoYSxiKXtiPmEuZmlyc3RQZW5kaW5nVGltZSYmKGEuZmlyc3RQZW5kaW5nVGltZT1iKTt2YXIgYz1hLmZpcnN0U3VzcGVuZGVkVGltZTswIT09YyYmKGI+PWM/YS5maXJzdFN1c3BlbmRlZFRpbWU9YS5sYXN0U3VzcGVuZGVkVGltZT1hLm5leHRLbm93blBlbmRpbmdMZXZlbD0wOmI+PWEubGFzdFN1c3BlbmRlZFRpbWUmJihhLmxhc3RTdXNwZW5kZWRUaW1lPWIrMSksYj5hLm5leHRLbm93blBlbmRpbmdMZXZlbCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPWIpKX1mdW5jdGlvbiBDaihhLGIpe3ZhciBjPWEubGFzdEV4cGlyZWRUaW1lO2lmKDA9PT1jfHxjPmIpYS5sYXN0RXhwaXJlZFRpbWU9Yn1cbmZ1bmN0aW9uIGJrKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPUdnKCksZz1EZy5zdXNwZW5zZTtmPUhnKGYsZSxnKTthOmlmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbEZpYmVyO2I6e2lmKGRjKGMpIT09Y3x8MSE9PWMudGFnKXRocm93IEVycm9yKHUoMTcwKSk7dmFyIGg9Yztkb3tzd2l0Y2goaC50YWcpe2Nhc2UgMzpoPWguc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoTChoLnR5cGUpKXtoPWguc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpO3Rocm93IEVycm9yKHUoMTcxKSk7fWlmKDE9PT1jLnRhZyl7dmFyIGs9Yy50eXBlO2lmKEwoaykpe2M9RmYoYyxrLGgpO2JyZWFrIGF9fWM9aH1lbHNlIGM9QWY7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj13ZyhmLGcpO2IucGF5bG9hZD17ZWxlbWVudDphfTtkPXZvaWQgMD09PVxuZD9udWxsOmQ7bnVsbCE9PWQmJihiLmNhbGxiYWNrPWQpO3hnKGUsYik7SWcoZSxmKTtyZXR1cm4gZn1mdW5jdGlvbiBjayhhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIGRrKGEsYil7YT1hLm1lbW9pemVkU3RhdGU7bnVsbCE9PWEmJm51bGwhPT1hLmRlaHlkcmF0ZWQmJmEucmV0cnlUaW1lPGImJihhLnJldHJ5VGltZT1iKX1mdW5jdGlvbiBlayhhLGIpe2RrKGEsYik7KGE9YS5hbHRlcm5hdGUpJiZkayhhLGIpfVxuZnVuY3Rpb24gZmsoYSxiLGMpe2M9bnVsbCE9YyYmITA9PT1jLmh5ZHJhdGU7dmFyIGQ9bmV3IGFrKGEsYixjKSxlPVNoKDMsbnVsbCxudWxsLDI9PT1iPzc6MT09PWI/MzowKTtkLmN1cnJlbnQ9ZTtlLnN0YXRlTm9kZT1kO3VnKGUpO2FbT2RdPWQuY3VycmVudDtjJiYwIT09YiYmSmMoYSw5PT09YS5ub2RlVHlwZT9hOmEub3duZXJEb2N1bWVudCk7dGhpcy5faW50ZXJuYWxSb290PWR9ZmsucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhKXtiayhhLHRoaXMuX2ludGVybmFsUm9vdCxudWxsLG51bGwpfTtmay5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX2ludGVybmFsUm9vdCxiPWEuY29udGFpbmVySW5mbztiayhudWxsLGEsbnVsbCxmdW5jdGlvbigpe2JbT2RdPW51bGx9KX07XG5mdW5jdGlvbiBnayhhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9ZnVuY3Rpb24gaGsoYSxiKXtifHwoYj1hPzk9PT1hLm5vZGVUeXBlP2EuZG9jdW1lbnRFbGVtZW50OmEuZmlyc3RDaGlsZDpudWxsLGI9ISghYnx8MSE9PWIubm9kZVR5cGV8fCFiLmhhc0F0dHJpYnV0ZShcImRhdGEtcmVhY3Ryb290XCIpKSk7aWYoIWIpZm9yKHZhciBjO2M9YS5sYXN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYyk7cmV0dXJuIG5ldyBmayhhLDAsYj97aHlkcmF0ZTohMH06dm9pZCAwKX1cbmZ1bmN0aW9uIGlrKGEsYixjLGQsZSl7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe3ZhciBnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGg9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9Y2soZyk7aC5jYWxsKGEpfX1iayhiLGcsYSxlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPWhrKGMsZCk7Zz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBrPWU7ZT1mdW5jdGlvbigpe3ZhciBhPWNrKGcpO2suY2FsbChhKX19TmooZnVuY3Rpb24oKXtiayhiLGcsYSxlKX0pfXJldHVybiBjayhnKX1mdW5jdGlvbiBqayhhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOiRhLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxud2M9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9aGcoR2coKSwxNTAsMTAwKTtJZyhhLGIpO2VrKGEsYil9fTt4Yz1mdW5jdGlvbihhKXsxMz09PWEudGFnJiYoSWcoYSwzKSxlayhhLDMpKX07eWM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9R2coKTtiPUhnKGIsYSxudWxsKTtJZyhhLGIpO2VrKGEsYil9fTtcbnphPWZ1bmN0aW9uKGEsYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6Q2IoYSxjKTtiPWMubmFtZTtpZihcInJhZGlvXCI9PT1jLnR5cGUmJm51bGwhPWIpe2ZvcihjPWE7Yy5wYXJlbnROb2RlOyljPWMucGFyZW50Tm9kZTtjPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWU9XCIrSlNPTi5zdHJpbmdpZnkoXCJcIitiKSsnXVt0eXBlPVwicmFkaW9cIl0nKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKXt2YXIgZD1jW2JdO2lmKGQhPT1hJiZkLmZvcm09PT1hLmZvcm0pe3ZhciBlPVFkKGQpO2lmKCFlKXRocm93IEVycm9yKHUoOTApKTt5YihkKTtDYihkLGUpfX19YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6S2IoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLnZhbHVlLG51bGwhPWImJkhiKGEsISFjLm11bHRpcGxlLGIsITEpfX07RmE9TWo7XG5HYT1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPVc7V3w9NDt0cnl7cmV0dXJuIGNnKDk4LGEuYmluZChudWxsLGIsYyxkLGUpKX1maW5hbGx5e1c9ZixXPT09ViYmZ2coKX19O0hhPWZ1bmN0aW9uKCl7KFcmKDF8Zmp8Z2opKT09PVYmJihMaigpLERqKCkpfTtJYT1mdW5jdGlvbihhLGIpe3ZhciBjPVc7V3w9Mjt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtXPWMsVz09PVYmJmdnKCl9fTtmdW5jdGlvbiBrayhhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO2lmKCFnayhiKSl0aHJvdyBFcnJvcih1KDIwMCkpO3JldHVybiBqayhhLGIsbnVsbCxjKX12YXIgbGs9e0V2ZW50czpbTmMsUGQsUWQseGEsdGEsWGQsZnVuY3Rpb24oYSl7amMoYSxXZCl9LERhLEVhLGlkLG1jLERqLHtjdXJyZW50OiExfV19O1xuKGZ1bmN0aW9uKGEpe3ZhciBiPWEuZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U7cmV0dXJuIFlqKG4oe30sYSx7b3ZlcnJpZGVIb29rU3RhdGU6bnVsbCxvdmVycmlkZVByb3BzOm51bGwsc2V0U3VzcGVuc2VIYW5kbGVyOm51bGwsc2NoZWR1bGVVcGRhdGU6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjpXYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9aGMoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBiP2IoYSk6bnVsbH0sZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoOm51bGwsc2NoZWR1bGVSZWZyZXNoOm51bGwsc2NoZWR1bGVSb290Om51bGwsc2V0UmVmcmVzaEhhbmRsZXI6bnVsbCxnZXRDdXJyZW50RmliZXI6bnVsbH0pKX0pKHtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTp0YyxidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE2LjE0LjBcIixcbnJlbmRlcmVyUGFja2FnZU5hbWU6XCJyZWFjdC1kb21cIn0pO2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9bGs7ZXhwb3J0cy5jcmVhdGVQb3J0YWw9a2s7ZXhwb3J0cy5maW5kRE9NTm9kZT1mdW5jdGlvbihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKDE9PT1hLm5vZGVUeXBlKXJldHVybiBhO3ZhciBiPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjtpZih2b2lkIDA9PT1iKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXIpdGhyb3cgRXJyb3IodSgxODgpKTt0aHJvdyBFcnJvcih1KDI2OCxPYmplY3Qua2V5cyhhKSkpO31hPWhjKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX07XG5leHBvcnRzLmZsdXNoU3luYz1mdW5jdGlvbihhLGIpe2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDE4NykpO3ZhciBjPVc7V3w9MTt0cnl7cmV0dXJuIGNnKDk5LGEuYmluZChudWxsLGIpKX1maW5hbGx5e1c9YyxnZygpfX07ZXhwb3J0cy5oeWRyYXRlPWZ1bmN0aW9uKGEsYixjKXtpZighZ2soYikpdGhyb3cgRXJyb3IodSgyMDApKTtyZXR1cm4gaWsobnVsbCxhLGIsITAsYyl9O2V4cG9ydHMucmVuZGVyPWZ1bmN0aW9uKGEsYixjKXtpZighZ2soYikpdGhyb3cgRXJyb3IodSgyMDApKTtyZXR1cm4gaWsobnVsbCxhLGIsITEsYyl9O1xuZXhwb3J0cy51bm1vdW50Q29tcG9uZW50QXROb2RlPWZ1bmN0aW9uKGEpe2lmKCFnayhhKSl0aHJvdyBFcnJvcih1KDQwKSk7cmV0dXJuIGEuX3JlYWN0Um9vdENvbnRhaW5lcj8oTmooZnVuY3Rpb24oKXtpayhudWxsLG51bGwsYSwhMSxmdW5jdGlvbigpe2EuX3JlYWN0Um9vdENvbnRhaW5lcj1udWxsO2FbT2RdPW51bGx9KX0pLCEwKTohMX07ZXhwb3J0cy51bnN0YWJsZV9iYXRjaGVkVXBkYXRlcz1NajtleHBvcnRzLnVuc3RhYmxlX2NyZWF0ZVBvcnRhbD1mdW5jdGlvbihhLGIpe3JldHVybiBrayhhLGIsMjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGwpfTtcbmV4cG9ydHMudW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI9ZnVuY3Rpb24oYSxiLGMsZCl7aWYoIWdrKGMpKXRocm93IEVycm9yKHUoMjAwKSk7aWYobnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbEZpYmVyKXRocm93IEVycm9yKHUoMzgpKTtyZXR1cm4gaWsoYSxiLGMsITEsZCl9O2V4cG9ydHMudmVyc2lvbj1cIjE2LjE0LjBcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTQuMFxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGw9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHA9bj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxxPW4/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixyPW4/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHQ9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx2PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHc9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx4PW4/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHk9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsej1uP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LEE9bj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTpcbjYwMTE2LEI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIEMoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9XG52YXIgRD17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sRT17fTtmdW5jdGlvbiBGKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUU7dGhpcy51cGRhdGVyPWN8fER9Ri5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtGLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWEpdGhyb3cgRXJyb3IoQyg4NSkpO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07Ri5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07XG5mdW5jdGlvbiBHKCl7fUcucHJvdG90eXBlPUYucHJvdG90eXBlO2Z1bmN0aW9uIEgoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RTt0aGlzLnVwZGF0ZXI9Y3x8RH12YXIgST1ILnByb3RvdHlwZT1uZXcgRztJLmNvbnN0cnVjdG9yPUg7bChJLEYucHJvdG90eXBlKTtJLmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBKPXtjdXJyZW50Om51bGx9LEs9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixjKXt2YXIgZSxkPXt9LGc9bnVsbCxrPW51bGw7aWYobnVsbCE9Yilmb3IoZSBpbiB2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KSxiKUsuY2FsbChiLGUpJiYhTC5oYXNPd25Qcm9wZXJ0eShlKSYmKGRbZV09YltlXSk7dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWQuY2hpbGRyZW49YztlbHNlIGlmKDE8Zil7Zm9yKHZhciBoPUFycmF5KGYpLG09MDttPGY7bSsrKWhbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1ofWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihlIGluIGY9YS5kZWZhdWx0UHJvcHMsZil2b2lkIDA9PT1kW2VdJiYoZFtlXT1mW2VdKTtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEsa2V5OmcscmVmOmsscHJvcHM6ZCxfb3duZXI6Si5jdXJyZW50fX1cbmZ1bmN0aW9uIE4oYSxiKXtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIE8oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PXB9ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIisoXCJcIithKS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgUD0vXFwvKy9nLFE9W107ZnVuY3Rpb24gUihhLGIsYyxlKXtpZihRLmxlbmd0aCl7dmFyIGQ9US5wb3AoKTtkLnJlc3VsdD1hO2Qua2V5UHJlZml4PWI7ZC5mdW5jPWM7ZC5jb250ZXh0PWU7ZC5jb3VudD0wO3JldHVybiBkfXJldHVybntyZXN1bHQ6YSxrZXlQcmVmaXg6YixmdW5jOmMsY29udGV4dDplLGNvdW50OjB9fVxuZnVuY3Rpb24gUyhhKXthLnJlc3VsdD1udWxsO2Eua2V5UHJlZml4PW51bGw7YS5mdW5jPW51bGw7YS5jb250ZXh0PW51bGw7YS5jb3VudD0wOzEwPlEubGVuZ3RoJiZRLnB1c2goYSl9XG5mdW5jdGlvbiBUKGEsYixjLGUpe3ZhciBkPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1kfHxcImJvb2xlYW5cIj09PWQpYT1udWxsO3ZhciBnPSExO2lmKG51bGw9PT1hKWc9ITA7ZWxzZSBzd2l0Y2goZCl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpnPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBwOmNhc2UgcTpnPSEwfX1pZihnKXJldHVybiBjKGUsYSxcIlwiPT09Yj9cIi5cIitVKGEsMCk6YiksMTtnPTA7Yj1cIlwiPT09Yj9cIi5cIjpiK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBrPTA7azxhLmxlbmd0aDtrKyspe2Q9YVtrXTt2YXIgZj1iK1UoZCxrKTtnKz1UKGQsZixjLGUpfWVsc2UgaWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYT9mPW51bGw6KGY9QiYmYVtCXXx8YVtcIkBAaXRlcmF0b3JcIl0sZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgZj9mOm51bGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxrPVxuMDshKGQ9YS5uZXh0KCkpLmRvbmU7KWQ9ZC52YWx1ZSxmPWIrVShkLGsrKyksZys9VChkLGYsYyxlKTtlbHNlIGlmKFwib2JqZWN0XCI9PT1kKXRocm93IGM9XCJcIithLEVycm9yKEMoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PWM/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6YyxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gVihhLGIsYyl7cmV0dXJuIG51bGw9PWE/MDpUKGEsXCJcIixiLGMpfWZ1bmN0aW9uIFUoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoYS5rZXkpOmIudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIFcoYSxiKXthLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspfVxuZnVuY3Rpb24gYWEoYSxiLGMpe3ZhciBlPWEucmVzdWx0LGQ9YS5rZXlQcmVmaXg7YT1hLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspO0FycmF5LmlzQXJyYXkoYSk/WChhLGUsYyxmdW5jdGlvbihhKXtyZXR1cm4gYX0pOm51bGwhPWEmJihPKGEpJiYoYT1OKGEsZCsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIikrYykpLGUucHVzaChhKSl9ZnVuY3Rpb24gWChhLGIsYyxlLGQpe3ZhciBnPVwiXCI7bnVsbCE9YyYmKGc9KFwiXCIrYykucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKTtiPVIoYixnLGUsZCk7VihhLGFhLGIpO1MoYil9dmFyIFk9e2N1cnJlbnQ6bnVsbH07ZnVuY3Rpb24gWigpe3ZhciBhPVkuY3VycmVudDtpZihudWxsPT09YSl0aHJvdyBFcnJvcihDKDMyMSkpO3JldHVybiBhfVxudmFyIGJhPXtSZWFjdEN1cnJlbnREaXNwYXRjaGVyOlksUmVhY3RDdXJyZW50QmF0Y2hDb25maWc6e3N1c3BlbnNlOm51bGx9LFJlYWN0Q3VycmVudE93bmVyOkosSXNTb21lUmVuZGVyZXJBY3Rpbmc6e2N1cnJlbnQ6ITF9LGFzc2lnbjpsfTtleHBvcnRzLkNoaWxkcmVuPXttYXA6ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGU9W107WChhLGUsbnVsbCxiLGMpO3JldHVybiBlfSxmb3JFYWNoOmZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO2I9UihudWxsLG51bGwsYixjKTtWKGEsVyxiKTtTKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gVihhLGZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1goYSxiLG51bGwsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtpZighTyhhKSl0aHJvdyBFcnJvcihDKDE0MykpO3JldHVybiBhfX07XG5leHBvcnRzLkNvbXBvbmVudD1GO2V4cG9ydHMuRnJhZ21lbnQ9cjtleHBvcnRzLlByb2ZpbGVyPXU7ZXhwb3J0cy5QdXJlQ29tcG9uZW50PUg7ZXhwb3J0cy5TdHJpY3RNb2RlPXQ7ZXhwb3J0cy5TdXNwZW5zZT15O2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9YmE7XG5leHBvcnRzLmNsb25lRWxlbWVudD1mdW5jdGlvbihhLGIsYyl7aWYobnVsbD09PWF8fHZvaWQgMD09PWEpdGhyb3cgRXJyb3IoQygyNjcsYSkpO3ZhciBlPWwoe30sYS5wcm9wcyksZD1hLmtleSxnPWEucmVmLGs9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihnPWIucmVmLGs9Si5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGQ9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBmPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGggaW4gYilLLmNhbGwoYixoKSYmIUwuaGFzT3duUHJvcGVydHkoaCkmJihlW2hdPXZvaWQgMD09PWJbaF0mJnZvaWQgMCE9PWY/ZltoXTpiW2hdKX12YXIgaD1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWgpZS5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxoKXtmPUFycmF5KGgpO2Zvcih2YXIgbT0wO208aDttKyspZlttXT1hcmd1bWVudHNbbSsyXTtlLmNoaWxkcmVuPWZ9cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsXG5rZXk6ZCxyZWY6Zyxwcm9wczplLF9vd25lcjprfX07ZXhwb3J0cy5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6dyxfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6YixfY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnYsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX07ZXhwb3J0cy5jcmVhdGVFbGVtZW50PU07ZXhwb3J0cy5jcmVhdGVGYWN0b3J5PWZ1bmN0aW9uKGEpe3ZhciBiPU0uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifTtleHBvcnRzLmNyZWF0ZVJlZj1mdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fTtleHBvcnRzLmZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOngscmVuZGVyOmF9fTtleHBvcnRzLmlzVmFsaWRFbGVtZW50PU87XG5leHBvcnRzLmxhenk9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOkEsX2N0b3I6YSxfc3RhdHVzOi0xLF9yZXN1bHQ6bnVsbH19O2V4cG9ydHMubWVtbz1mdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjp6LHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX07ZXhwb3J0cy51c2VDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlQ2FsbGJhY2soYSxiKX07ZXhwb3J0cy51c2VDb250ZXh0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VDb250ZXh0KGEsYil9O2V4cG9ydHMudXNlRGVidWdWYWx1ZT1mdW5jdGlvbigpe307ZXhwb3J0cy51c2VFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUltcGVyYXRpdmVIYW5kbGU9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBaKCkudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsYyl9O1xuZXhwb3J0cy51c2VMYXlvdXRFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUxheW91dEVmZmVjdChhLGIpfTtleHBvcnRzLnVzZU1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZU1lbW8oYSxiKX07ZXhwb3J0cy51c2VSZWR1Y2VyPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gWigpLnVzZVJlZHVjZXIoYSxiLGMpfTtleHBvcnRzLnVzZVJlZj1mdW5jdGlvbihhKXtyZXR1cm4gWigpLnVzZVJlZihhKX07ZXhwb3J0cy51c2VTdGF0ZT1mdW5jdGlvbihhKXtyZXR1cm4gWigpLnVzZVN0YXRlKGEpfTtleHBvcnRzLnZlcnNpb249XCIxNi4xNC4wXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MC4xOS4xXG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGYsZyxoLGssbDtcbmlmKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciBwPW51bGwscT1udWxsLHQ9ZnVuY3Rpb24oKXtpZihudWxsIT09cCl0cnl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtwKCEwLGEpO3A9bnVsbH1jYXRjaChiKXt0aHJvdyBzZXRUaW1lb3V0KHQsMCksYjt9fSx1PURhdGUubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gRGF0ZS5ub3coKS11fTtmPWZ1bmN0aW9uKGEpe251bGwhPT1wP3NldFRpbWVvdXQoZiwwLGEpOihwPWEsc2V0VGltZW91dCh0LDApKX07Zz1mdW5jdGlvbihhLGIpe3E9c2V0VGltZW91dChhLGIpfTtoPWZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHEpfTtrPWZ1bmN0aW9uKCl7cmV0dXJuITF9O2w9ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbigpe319ZWxzZXt2YXIgdz13aW5kb3cucGVyZm9ybWFuY2UseD13aW5kb3cuRGF0ZSxcbnk9d2luZG93LnNldFRpbWVvdXQsej13aW5kb3cuY2xlYXJUaW1lb3V0O2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSl7dmFyIEE9d2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBBJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBjYW5jZWxBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIil9aWYoXCJvYmplY3RcIj09PVxudHlwZW9mIHcmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiB3Lm5vdylleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB3Lm5vdygpfTtlbHNle3ZhciBCPXgubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4geC5ub3coKS1CfX12YXIgQz0hMSxEPW51bGwsRT0tMSxGPTUsRz0wO2s9ZnVuY3Rpb24oKXtyZXR1cm4gZXhwb3J0cy51bnN0YWJsZV9ub3coKT49R307bD1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbihhKXswPmF8fDEyNTxhP2NvbnNvbGUuZXJyb3IoXCJmb3JjZUZyYW1lUmF0ZSB0YWtlcyBhIHBvc2l0aXZlIGludCBiZXR3ZWVuIDAgYW5kIDEyNSwgZm9yY2luZyBmcmFtZXJhdGVzIGhpZ2hlciB0aGFuIDEyNSBmcHMgaXMgbm90IHVuc3VwcG9ydGVkXCIpOkY9MDxhP01hdGguZmxvb3IoMUUzL2EpOjV9O3ZhciBIPW5ldyBNZXNzYWdlQ2hhbm5lbCxJPUgucG9ydDI7SC5wb3J0MS5vbm1lc3NhZ2U9XG5mdW5jdGlvbigpe2lmKG51bGwhPT1EKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO0c9YStGO3RyeXtEKCEwLGEpP0kucG9zdE1lc3NhZ2UobnVsbCk6KEM9ITEsRD1udWxsKX1jYXRjaChiKXt0aHJvdyBJLnBvc3RNZXNzYWdlKG51bGwpLGI7fX1lbHNlIEM9ITF9O2Y9ZnVuY3Rpb24oYSl7RD1hO0N8fChDPSEwLEkucG9zdE1lc3NhZ2UobnVsbCkpfTtnPWZ1bmN0aW9uKGEsYil7RT15KGZ1bmN0aW9uKCl7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sYil9O2g9ZnVuY3Rpb24oKXt6KEUpO0U9LTF9fWZ1bmN0aW9uIEooYSxiKXt2YXIgYz1hLmxlbmd0aDthLnB1c2goYik7YTpmb3IoOzspe3ZhciBkPWMtMT4+PjEsZT1hW2RdO2lmKHZvaWQgMCE9PWUmJjA8SyhlLGIpKWFbZF09YixhW2NdPWUsYz1kO2Vsc2UgYnJlYWsgYX19ZnVuY3Rpb24gTChhKXthPWFbMF07cmV0dXJuIHZvaWQgMD09PWE/bnVsbDphfVxuZnVuY3Rpb24gTShhKXt2YXIgYj1hWzBdO2lmKHZvaWQgMCE9PWIpe3ZhciBjPWEucG9wKCk7aWYoYyE9PWIpe2FbMF09YzthOmZvcih2YXIgZD0wLGU9YS5sZW5ndGg7ZDxlOyl7dmFyIG09MiooZCsxKS0xLG49YVttXSx2PW0rMSxyPWFbdl07aWYodm9pZCAwIT09biYmMD5LKG4sYykpdm9pZCAwIT09ciYmMD5LKHIsbik/KGFbZF09cixhW3ZdPWMsZD12KTooYVtkXT1uLGFbbV09YyxkPW0pO2Vsc2UgaWYodm9pZCAwIT09ciYmMD5LKHIsYykpYVtkXT1yLGFbdl09YyxkPXY7ZWxzZSBicmVhayBhfX1yZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBLKGEsYil7dmFyIGM9YS5zb3J0SW5kZXgtYi5zb3J0SW5kZXg7cmV0dXJuIDAhPT1jP2M6YS5pZC1iLmlkfXZhciBOPVtdLE89W10sUD0xLFE9bnVsbCxSPTMsUz0hMSxUPSExLFU9ITE7XG5mdW5jdGlvbiBWKGEpe2Zvcih2YXIgYj1MKE8pO251bGwhPT1iOyl7aWYobnVsbD09PWIuY2FsbGJhY2spTShPKTtlbHNlIGlmKGIuc3RhcnRUaW1lPD1hKU0oTyksYi5zb3J0SW5kZXg9Yi5leHBpcmF0aW9uVGltZSxKKE4sYik7ZWxzZSBicmVhaztiPUwoTyl9fWZ1bmN0aW9uIFcoYSl7VT0hMTtWKGEpO2lmKCFUKWlmKG51bGwhPT1MKE4pKVQ9ITAsZihYKTtlbHNle3ZhciBiPUwoTyk7bnVsbCE9PWImJmcoVyxiLnN0YXJ0VGltZS1hKX19XG5mdW5jdGlvbiBYKGEsYil7VD0hMTtVJiYoVT0hMSxoKCkpO1M9ITA7dmFyIGM9Ujt0cnl7VihiKTtmb3IoUT1MKE4pO251bGwhPT1RJiYoIShRLmV4cGlyYXRpb25UaW1lPmIpfHxhJiYhaygpKTspe3ZhciBkPVEuY2FsbGJhY2s7aWYobnVsbCE9PWQpe1EuY2FsbGJhY2s9bnVsbDtSPVEucHJpb3JpdHlMZXZlbDt2YXIgZT1kKFEuZXhwaXJhdGlvblRpbWU8PWIpO2I9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT9RLmNhbGxiYWNrPWU6UT09PUwoTikmJk0oTik7VihiKX1lbHNlIE0oTik7UT1MKE4pfWlmKG51bGwhPT1RKXZhciBtPSEwO2Vsc2V7dmFyIG49TChPKTtudWxsIT09biYmZyhXLG4uc3RhcnRUaW1lLWIpO209ITF9cmV0dXJuIG19ZmluYWxseXtRPW51bGwsUj1jLFM9ITF9fVxuZnVuY3Rpb24gWShhKXtzd2l0Y2goYSl7Y2FzZSAxOnJldHVybi0xO2Nhc2UgMjpyZXR1cm4gMjUwO2Nhc2UgNTpyZXR1cm4gMTA3Mzc0MTgyMztjYXNlIDQ6cmV0dXJuIDFFNDtkZWZhdWx0OnJldHVybiA1RTN9fXZhciBaPWw7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtleHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX1Byb2ZpbGluZz1udWxsO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe2EuY2FsbGJhY2s9bnVsbH07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe1R8fFN8fChUPSEwLGYoWCkpfTtcbmV4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gUn07ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBMKE4pfTtleHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKFIpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPVJ9dmFyIGM9UjtSPWI7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtSPWN9fTtleHBvcnRzLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX3JlcXVlc3RQYWludD1aO2V4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9UjtSPWE7dHJ5e3JldHVybiBiKCl9ZmluYWxseXtSPWN9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXt2YXIgZT1jLmRlbGF5O2U9XCJudW1iZXJcIj09PXR5cGVvZiBlJiYwPGU/ZCtlOmQ7Yz1cIm51bWJlclwiPT09dHlwZW9mIGMudGltZW91dD9jLnRpbWVvdXQ6WShhKX1lbHNlIGM9WShhKSxlPWQ7Yz1lK2M7YT17aWQ6UCsrLGNhbGxiYWNrOmIscHJpb3JpdHlMZXZlbDphLHN0YXJ0VGltZTplLGV4cGlyYXRpb25UaW1lOmMsc29ydEluZGV4Oi0xfTtlPmQ/KGEuc29ydEluZGV4PWUsSihPLGEpLG51bGw9PT1MKE4pJiZhPT09TChPKSYmKFU/aCgpOlU9ITAsZyhXLGUtZCkpKTooYS5zb3J0SW5kZXg9YyxKKE4sYSksVHx8U3x8KFQ9ITAsZihYKSkpO3JldHVybiBhfTtcbmV4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO1YoYSk7dmFyIGI9TChOKTtyZXR1cm4gYiE9PVEmJm51bGwhPT1RJiZudWxsIT09YiYmbnVsbCE9PWIuY2FsbGJhY2smJmIuc3RhcnRUaW1lPD1hJiZiLmV4cGlyYXRpb25UaW1lPFEuZXhwaXJhdGlvblRpbWV8fGsoKX07ZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9UjtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz1SO1I9Yjt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7Uj1jfX19O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZiA9IHt9O1xuLy8gVGhpcyBmaWxlIGNvbnRhaW5zIG9ubHkgdGhlIGVudHJ5IGNodW5rLlxuLy8gVGhlIGNodW5rIGxvYWRpbmcgZnVuY3Rpb24gZm9yIGFkZGl0aW9uYWwgY2h1bmtzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmUgPSAoY2h1bmtJZCkgPT4ge1xuXHRyZXR1cm4gUHJvbWlzZS5hbGwoT2JqZWN0LmtleXMoX193ZWJwYWNrX3JlcXVpcmVfXy5mKS5yZWR1Y2UoKHByb21pc2VzLCBrZXkpID0+IHtcblx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmZba2V5XShjaHVua0lkLCBwcm9taXNlcyk7XG5cdFx0cmV0dXJuIHByb21pc2VzO1xuXHR9LCBbXSkpO1xufTsiLCIvLyBUaGlzIGZ1bmN0aW9uIGFsbG93IHRvIHJlZmVyZW5jZSBhc3luYyBjaHVua3Ncbl9fd2VicGFja19yZXF1aXJlX18udSA9IChjaHVua0lkKSA9PiB7XG5cdC8vIHJldHVybiB1cmwgZm9yIGZpbGVuYW1lcyBiYXNlZCBvbiB0ZW1wbGF0ZVxuXHRyZXR1cm4gXCJcIiArIGNodW5rSWQgKyBcIi5idW5kbGUuanNcIjtcbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjO1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHtcblx0XHRcdHZhciBpID0gc2NyaXB0cy5sZW5ndGggLSAxO1xuXHRcdFx0d2hpbGUgKGkgPiAtMSAmJiAhc2NyaXB0VXJsKSBzY3JpcHRVcmwgPSBzY3JpcHRzW2ktLV0uc3JjO1xuXHRcdH1cblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiLy8gbm8gYmFzZVVSSVxuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBbcmVzb2x2ZSwgcmVqZWN0LCBQcm9taXNlXSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG5cdDU5MDogMFxufTtcblxuX193ZWJwYWNrX3JlcXVpcmVfXy5mLmogPSAoY2h1bmtJZCwgcHJvbWlzZXMpID0+IHtcblx0XHQvLyBKU09OUCBjaHVuayBsb2FkaW5nIGZvciBqYXZhc2NyaXB0XG5cdFx0dmFyIGluc3RhbGxlZENodW5rRGF0YSA9IF9fd2VicGFja19yZXF1aXJlX18ubyhpbnN0YWxsZWRDaHVua3MsIGNodW5rSWQpID8gaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdIDogdW5kZWZpbmVkO1xuXHRcdGlmKGluc3RhbGxlZENodW5rRGF0YSAhPT0gMCkgeyAvLyAwIG1lYW5zIFwiYWxyZWFkeSBpbnN0YWxsZWRcIi5cblxuXHRcdFx0Ly8gYSBQcm9taXNlIG1lYW5zIFwiY3VycmVudGx5IGxvYWRpbmdcIi5cblx0XHRcdGlmKGluc3RhbGxlZENodW5rRGF0YSkge1xuXHRcdFx0XHRwcm9taXNlcy5wdXNoKGluc3RhbGxlZENodW5rRGF0YVsyXSk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRpZih0cnVlKSB7IC8vIGFsbCBjaHVua3MgaGF2ZSBKU1xuXHRcdFx0XHRcdC8vIHNldHVwIFByb21pc2UgaW4gY2h1bmsgY2FjaGVcblx0XHRcdFx0XHR2YXIgcHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IChpbnN0YWxsZWRDaHVua0RhdGEgPSBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gPSBbcmVzb2x2ZSwgcmVqZWN0XSkpO1xuXHRcdFx0XHRcdHByb21pc2VzLnB1c2goaW5zdGFsbGVkQ2h1bmtEYXRhWzJdID0gcHJvbWlzZSk7XG5cblx0XHRcdFx0XHQvLyBzdGFydCBjaHVuayBsb2FkaW5nXG5cdFx0XHRcdFx0dmFyIHVybCA9IF9fd2VicGFja19yZXF1aXJlX18ucCArIF9fd2VicGFja19yZXF1aXJlX18udShjaHVua0lkKTtcblx0XHRcdFx0XHQvLyBjcmVhdGUgZXJyb3IgYmVmb3JlIHN0YWNrIHVud291bmQgdG8gZ2V0IHVzZWZ1bCBzdGFja3RyYWNlIGxhdGVyXG5cdFx0XHRcdFx0dmFyIGVycm9yID0gbmV3IEVycm9yKCk7XG5cdFx0XHRcdFx0dmFyIGxvYWRpbmdFbmRlZCA9IChldmVudCkgPT4ge1xuXHRcdFx0XHRcdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGluc3RhbGxlZENodW5rcywgY2h1bmtJZCkpIHtcblx0XHRcdFx0XHRcdFx0aW5zdGFsbGVkQ2h1bmtEYXRhID0gaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdO1xuXHRcdFx0XHRcdFx0XHRpZihpbnN0YWxsZWRDaHVua0RhdGEgIT09IDApIGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA9IHVuZGVmaW5lZDtcblx0XHRcdFx0XHRcdFx0aWYoaW5zdGFsbGVkQ2h1bmtEYXRhKSB7XG5cdFx0XHRcdFx0XHRcdFx0dmFyIGVycm9yVHlwZSA9IGV2ZW50ICYmIChldmVudC50eXBlID09PSAnbG9hZCcgPyAnbWlzc2luZycgOiBldmVudC50eXBlKTtcblx0XHRcdFx0XHRcdFx0XHR2YXIgcmVhbFNyYyA9IGV2ZW50ICYmIGV2ZW50LnRhcmdldCAmJiBldmVudC50YXJnZXQuc3JjO1xuXHRcdFx0XHRcdFx0XHRcdGVycm9yLm1lc3NhZ2UgPSAnTG9hZGluZyBjaHVuayAnICsgY2h1bmtJZCArICcgZmFpbGVkLlxcbignICsgZXJyb3JUeXBlICsgJzogJyArIHJlYWxTcmMgKyAnKSc7XG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3IubmFtZSA9ICdDaHVua0xvYWRFcnJvcic7XG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3IudHlwZSA9IGVycm9yVHlwZTtcblx0XHRcdFx0XHRcdFx0XHRlcnJvci5yZXF1ZXN0ID0gcmVhbFNyYztcblx0XHRcdFx0XHRcdFx0XHRpbnN0YWxsZWRDaHVua0RhdGFbMV0oZXJyb3IpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmwodXJsLCBsb2FkaW5nRW5kZWQsIFwiY2h1bmstXCIgKyBjaHVua0lkLCBjaHVua0lkKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cbn07XG5cbi8vIG5vIHByZWZldGNoaW5nXG5cbi8vIG5vIHByZWxvYWRlZFxuXG4vLyBubyBITVJcblxuLy8gbm8gSE1SIG1hbmlmZXN0XG5cbi8vIG5vIG9uIGNodW5rcyBsb2FkZWRcblxuLy8gaW5zdGFsbCBhIEpTT05QIGNhbGxiYWNrIGZvciBjaHVuayBsb2FkaW5nXG52YXIgd2VicGFja0pzb25wQ2FsbGJhY2sgPSAocGFyZW50Q2h1bmtMb2FkaW5nRnVuY3Rpb24sIGRhdGEpID0+IHtcblx0dmFyIFtjaHVua0lkcywgbW9yZU1vZHVsZXMsIHJ1bnRpbWVdID0gZGF0YTtcblx0Ly8gYWRkIFwibW9yZU1vZHVsZXNcIiB0byB0aGUgbW9kdWxlcyBvYmplY3QsXG5cdC8vIHRoZW4gZmxhZyBhbGwgXCJjaHVua0lkc1wiIGFzIGxvYWRlZCBhbmQgZmlyZSBjYWxsYmFja1xuXHR2YXIgbW9kdWxlSWQsIGNodW5rSWQsIGkgPSAwO1xuXHRpZihjaHVua0lkcy5zb21lKChpZCkgPT4gKGluc3RhbGxlZENodW5rc1tpZF0gIT09IDApKSkge1xuXHRcdGZvcihtb2R1bGVJZCBpbiBtb3JlTW9kdWxlcykge1xuXHRcdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKG1vcmVNb2R1bGVzLCBtb2R1bGVJZCkpIHtcblx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tW21vZHVsZUlkXSA9IG1vcmVNb2R1bGVzW21vZHVsZUlkXTtcblx0XHRcdH1cblx0XHR9XG5cdFx0aWYocnVudGltZSkgdmFyIHJlc3VsdCA9IHJ1bnRpbWUoX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cdH1cblx0aWYocGFyZW50Q2h1bmtMb2FkaW5nRnVuY3Rpb24pIHBhcmVudENodW5rTG9hZGluZ0Z1bmN0aW9uKGRhdGEpO1xuXHRmb3IoO2kgPCBjaHVua0lkcy5sZW5ndGg7IGkrKykge1xuXHRcdGNodW5rSWQgPSBjaHVua0lkc1tpXTtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oaW5zdGFsbGVkQ2h1bmtzLCBjaHVua0lkKSAmJiBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0pIHtcblx0XHRcdGluc3RhbGxlZENodW5rc1tjaHVua0lkXVswXSgpO1xuXHRcdH1cblx0XHRpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gPSAwO1xuXHR9XG5cbn1cblxudmFyIGNodW5rTG9hZGluZ0dsb2JhbCA9IHNlbGZbXCJ3ZWJwYWNrQ2h1bmt0YXNrXzJcIl0gPSBzZWxmW1wid2VicGFja0NodW5rdGFza18yXCJdIHx8IFtdO1xuY2h1bmtMb2FkaW5nR2xvYmFsLmZvckVhY2god2VicGFja0pzb25wQ2FsbGJhY2suYmluZChudWxsLCAwKSk7XG5jaHVua0xvYWRpbmdHbG9iYWwucHVzaCA9IHdlYnBhY2tKc29ucENhbGxiYWNrLmJpbmQobnVsbCwgY2h1bmtMb2FkaW5nR2xvYmFsLnB1c2guYmluZChjaHVua0xvYWRpbmdHbG9iYWwpKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9pbmRleC5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2luZGV4LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9Gb290ZXIuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9Gb290ZXIuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgJy4vRm9vdGVyLmNzcyc7XHJcbmltcG9ydCB7IGdldEZvb3RlckNvcHksIGdldEZ1bGxZZWFyIH0gZnJvbSAnLi4vdXRpbHMvdXRpbHMnO1xyXG5cclxuXHJcbmZ1bmN0aW9uIEZvb3RlciAoKSB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lPVwiQXBwLWZvb3RlclwiPlxyXG4gICAgICA8cD5Db3B5cmlnaHQge2dldEZ1bGxZZWFyKCl9IC0ge2dldEZvb3RlckNvcHkoKX08L3A+XHJcbiAgICA8L2Rpdj5cclxuICApXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEZvb3RlcjsiLCJjb25zdCBnZXRGdWxsWWVhciA9ICgpID0+IHtcclxuICByZXR1cm4gbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpO1xyXG59XHJcblxyXG5jb25zdCBnZXRGb290ZXJDb3B5ID0gKGlzSW5kZXgpID0+IHtcclxuICByZXR1cm4gaXNJbmRleCA/IFwiSG9sYmVydG9uIFNjaG9vbFwiIDogXCJIb2xiZXJ0b24gU2Nob29sIG1haW4gZGFzaGJvYXJkXCI7XHJcbn1cclxuXHJcbmNvbnN0IGdldExhdGVzdE5vdGlmaWNhdGlvbiA9ICgpID0+IHtcclxuICByZXR1cm4gJzxzdHJvbmc+VXJnZW50IHJlcXVpcmVtZW50PC9zdHJvbmc+IC0gY29tcGxldGUgYnkgRU9EJztcclxufVxyXG5cclxuZXhwb3J0IHsgZ2V0RnVsbFllYXIsIGdldEZvb3RlckNvcHksIGdldExhdGVzdE5vdGlmaWNhdGlvbiB9IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImZmNTAxZDgyN2M5ZjRiNmQzYWM0NTVjNWFlNTYyNGI4LnBuZ1wiOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9IZWFkZXIuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9IZWFkZXIuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgaG9sYmVydG9uTG9nbyBmcm9tICcuLi9hc3NldHMvaG9sYmVydG9uLWxvZ28ucG5nJztcclxuaW1wb3J0ICcuLi9IZWFkZXIvSGVhZGVyLmNzcyc7XHJcbmZ1bmN0aW9uIEhlYWRlcigpIHtcclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBjbGFzc05hbWU9XCJBcHBcIj5cclxuICAgICAgPGRpdiBjbGFzc05hbWU9J0FwcC1oZWFkZXInPlxyXG4gICAgICAgIDxpbWcgc3JjPXtob2xiZXJ0b25Mb2dvfSBhbHQ9XCJIb2xiZXJ0b24gbG9nb1wiIC8+XHJcbiAgICAgICAgPGgxPlNjaG9vbCBkYXNoYm9hcmQ8L2gxPlxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gIClcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgSGVhZGVyOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9Mb2dpbi5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL0xvZ2luLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCAnLi9Mb2dpbi5jc3MnO1xyXG5cclxuZnVuY3Rpb24gTG9naW4gKCkge1xyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZT1cIkFwcFwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiQXBwLWJvZHlcIj5cclxuICAgICAgICAgICAgPHA+TG9naW4gdG8gYWNjZXNzIHRoZSBmdWxsIGRhc2hib2FyZDwvcD5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJBcHAtZm9ybVwiPlxyXG4gICAgICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJlbWFpbFwiPkVtYWlsOjwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cImVtYWlsXCIgaWQ9XCJlbWFpbFwiIG5hbWU9XCJlbWFpbFwiPjwvaW5wdXQ+XHJcbiAgICAgICAgICAgICAgICA8bGFiZWwgaHRtbEZvcj1cInBhc3N3b3JkXCI+UGFzc3dvcmQ6PC9sYWJlbD5cclxuICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwicGFzc3dvcmRcIiBpZD1cInBhc3N3b3JkXCIgbmFtZT1cInBhc3N3b3JkXCI+PC9pbnB1dD5cclxuICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cInN1Ym1pdFwiPk9LPC9idXR0b24+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICApXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IExvZ2luOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9Ob3RpZmljYXRpb25zLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vTm90aWZpY2F0aW9ucy5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgc3RyaW5nSGFzaCBmcm9tICdzdHJpbmctaGFzaCc7XG5pbXBvcnQgYXNhcCBmcm9tICdhc2FwJztcblxuZnVuY3Rpb24gX3R5cGVvZihvYmopIHtcbiAgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiKSB7XG4gICAgX3R5cGVvZiA9IGZ1bmN0aW9uIChvYmopIHtcbiAgICAgIHJldHVybiB0eXBlb2Ygb2JqO1xuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgX3R5cGVvZiA9IGZ1bmN0aW9uIChvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqO1xuICAgIH07XG4gIH1cblxuICByZXR1cm4gX3R5cGVvZihvYmopO1xufVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn1cblxuZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHtcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTtcbiAgICB2YXIgb3duS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG5cbiAgICBpZiAodHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIG93bktleXMgPSBvd25LZXlzLmNvbmNhdChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZSkuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBzeW0pLmVudW1lcmFibGU7XG4gICAgICB9KSk7XG4gICAgfVxuXG4gICAgb3duS2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn1cblxuZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikge1xuICByZXR1cm4gX2FycmF5V2l0aG91dEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF9ub25JdGVyYWJsZVNwcmVhZCgpO1xufVxuXG5mdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGFycikpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShhcnIubGVuZ3RoKTsgaSA8IGFyci5sZW5ndGg7IGkrKykgYXJyMltpXSA9IGFycltpXTtcblxuICAgIHJldHVybiBhcnIyO1xuICB9XG59XG5cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikge1xuICBpZiAoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChpdGVyKSB8fCBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoaXRlcikgPT09IFwiW29iamVjdCBBcmd1bWVudHNdXCIpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpO1xufVxuXG5mdW5jdGlvbiBfbm9uSXRlcmFibGVTcHJlYWQoKSB7XG4gIHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gc3ByZWFkIG5vbi1pdGVyYWJsZSBpbnN0YW5jZVwiKTtcbn1cblxuLyogQGZsb3cgKi9cbi8qIDo6XG50eXBlIE9iamVjdE1hcCA9IHsgW2lkOnN0cmluZ106IGFueSB9O1xuKi9cblxudmFyIFVQUEVSQ0FTRV9SRSA9IC8oW0EtWl0pL2c7XG5cbnZhciBVUFBFUkNBU0VfUkVfVE9fS0VCQUIgPSBmdW5jdGlvbiBVUFBFUkNBU0VfUkVfVE9fS0VCQUIobWF0Y2hcbi8qIDogc3RyaW5nICovXG4pIHtcbiAgcmV0dXJuIChcbiAgICAvKiA6IHN0cmluZyAqL1xuICAgIFwiLVwiLmNvbmNhdChtYXRjaC50b0xvd2VyQ2FzZSgpKVxuICApO1xufTtcblxudmFyIGtlYmFiaWZ5U3R5bGVOYW1lID0gZnVuY3Rpb24ga2ViYWJpZnlTdHlsZU5hbWUoc3RyaW5nXG4vKiA6IHN0cmluZyAqL1xuKVxuLyogOiBzdHJpbmcgKi9cbntcbiAgdmFyIHJlc3VsdCA9IHN0cmluZy5yZXBsYWNlKFVQUEVSQ0FTRV9SRSwgVVBQRVJDQVNFX1JFX1RPX0tFQkFCKTtcblxuICBpZiAocmVzdWx0WzBdID09PSAnbScgJiYgcmVzdWx0WzFdID09PSAncycgJiYgcmVzdWx0WzJdID09PSAnLScpIHtcbiAgICByZXR1cm4gXCItXCIuY29uY2F0KHJlc3VsdCk7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufTtcbi8qKlxuICogQ1NTIHByb3BlcnRpZXMgd2hpY2ggYWNjZXB0IG51bWJlcnMgYnV0IGFyZSBub3QgaW4gdW5pdHMgb2YgXCJweFwiLlxuICogVGFrZW4gZnJvbSBSZWFjdCdzIENTU1Byb3BlcnR5LmpzXG4gKi9cblxudmFyIGlzVW5pdGxlc3NOdW1iZXIgPSB7XG4gIGFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiB0cnVlLFxuICBib3JkZXJJbWFnZU91dHNldDogdHJ1ZSxcbiAgYm9yZGVySW1hZ2VTbGljZTogdHJ1ZSxcbiAgYm9yZGVySW1hZ2VXaWR0aDogdHJ1ZSxcbiAgYm94RmxleDogdHJ1ZSxcbiAgYm94RmxleEdyb3VwOiB0cnVlLFxuICBib3hPcmRpbmFsR3JvdXA6IHRydWUsXG4gIGNvbHVtbkNvdW50OiB0cnVlLFxuICBmbGV4OiB0cnVlLFxuICBmbGV4R3JvdzogdHJ1ZSxcbiAgZmxleFBvc2l0aXZlOiB0cnVlLFxuICBmbGV4U2hyaW5rOiB0cnVlLFxuICBmbGV4TmVnYXRpdmU6IHRydWUsXG4gIGZsZXhPcmRlcjogdHJ1ZSxcbiAgZ3JpZFJvdzogdHJ1ZSxcbiAgZ3JpZENvbHVtbjogdHJ1ZSxcbiAgZm9udFdlaWdodDogdHJ1ZSxcbiAgbGluZUNsYW1wOiB0cnVlLFxuICBsaW5lSGVpZ2h0OiB0cnVlLFxuICBvcGFjaXR5OiB0cnVlLFxuICBvcmRlcjogdHJ1ZSxcbiAgb3JwaGFuczogdHJ1ZSxcbiAgdGFiU2l6ZTogdHJ1ZSxcbiAgd2lkb3dzOiB0cnVlLFxuICB6SW5kZXg6IHRydWUsXG4gIHpvb206IHRydWUsXG4gIC8vIFNWRy1yZWxhdGVkIHByb3BlcnRpZXNcbiAgZmlsbE9wYWNpdHk6IHRydWUsXG4gIGZsb29kT3BhY2l0eTogdHJ1ZSxcbiAgc3RvcE9wYWNpdHk6IHRydWUsXG4gIHN0cm9rZURhc2hhcnJheTogdHJ1ZSxcbiAgc3Ryb2tlRGFzaG9mZnNldDogdHJ1ZSxcbiAgc3Ryb2tlTWl0ZXJsaW1pdDogdHJ1ZSxcbiAgc3Ryb2tlT3BhY2l0eTogdHJ1ZSxcbiAgc3Ryb2tlV2lkdGg6IHRydWVcbn07XG4vKipcbiAqIFRha2VuIGZyb20gUmVhY3QncyBDU1NQcm9wZXJ0eS5qc1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBwcmVmaXggdmVuZG9yLXNwZWNpZmljIHByZWZpeCwgZWc6IFdlYmtpdFxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBzdHlsZSBuYW1lLCBlZzogdHJhbnNpdGlvbkR1cmF0aW9uXG4gKiBAcmV0dXJuIHtzdHJpbmd9IHN0eWxlIG5hbWUgcHJlZml4ZWQgd2l0aCBgcHJlZml4YCwgcHJvcGVybHkgY2FtZWxDYXNlZCwgZWc6XG4gKiBXZWJraXRUcmFuc2l0aW9uRHVyYXRpb25cbiAqL1xuXG5mdW5jdGlvbiBwcmVmaXhLZXkocHJlZml4LCBrZXkpIHtcbiAgcmV0dXJuIHByZWZpeCArIGtleS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIGtleS5zdWJzdHJpbmcoMSk7XG59XG4vKipcbiAqIFN1cHBvcnQgc3R5bGUgbmFtZXMgdGhhdCBtYXkgY29tZSBwYXNzZWQgaW4gcHJlZml4ZWQgYnkgYWRkaW5nIHBlcm11dGF0aW9uc1xuICogb2YgdmVuZG9yIHByZWZpeGVzLlxuICogVGFrZW4gZnJvbSBSZWFjdCdzIENTU1Byb3BlcnR5LmpzXG4gKi9cblxuXG52YXIgcHJlZml4ZXMgPSBbJ1dlYmtpdCcsICdtcycsICdNb3onLCAnTyddOyAvLyBVc2luZyBPYmplY3Qua2V5cyBoZXJlLCBvciBlbHNlIHRoZSB2YW5pbGxhIGZvci1pbiBsb29wIG1ha2VzIElFOCBnbyBpbnRvIGFuXG4vLyBpbmZpbml0ZSBsb29wLCBiZWNhdXNlIGl0IGl0ZXJhdGVzIG92ZXIgdGhlIG5ld2x5IGFkZGVkIHByb3BzIHRvby5cbi8vIFRha2VuIGZyb20gUmVhY3QncyBDU1NQcm9wZXJ0eS5qc1xuXG5PYmplY3Qua2V5cyhpc1VuaXRsZXNzTnVtYmVyKS5mb3JFYWNoKGZ1bmN0aW9uIChwcm9wKSB7XG4gIHByZWZpeGVzLmZvckVhY2goZnVuY3Rpb24gKHByZWZpeCkge1xuICAgIGlzVW5pdGxlc3NOdW1iZXJbcHJlZml4S2V5KHByZWZpeCwgcHJvcCldID0gaXNVbml0bGVzc051bWJlcltwcm9wXTtcbiAgfSk7XG59KTtcbnZhciBzdHJpbmdpZnlWYWx1ZSA9IGZ1bmN0aW9uIHN0cmluZ2lmeVZhbHVlKGtleVxuLyogOiBzdHJpbmcgKi9cbiwgcHJvcFxuLyogOiBhbnkgKi9cbilcbi8qIDogc3RyaW5nICovXG57XG4gIGlmICh0eXBlb2YgcHJvcCA9PT0gXCJudW1iZXJcIikge1xuICAgIGlmIChpc1VuaXRsZXNzTnVtYmVyW2tleV0pIHtcbiAgICAgIHJldHVybiBcIlwiICsgcHJvcDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHByb3AgKyBcInB4XCI7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHJldHVybiAnJyArIHByb3A7XG4gIH1cbn07XG52YXIgc3RyaW5naWZ5QW5kSW1wb3J0YW50aWZ5VmFsdWUgPSBmdW5jdGlvbiBzdHJpbmdpZnlBbmRJbXBvcnRhbnRpZnlWYWx1ZShrZXlcbi8qIDogc3RyaW5nICovXG4sIHByb3Bcbi8qIDogYW55ICovXG4pIHtcbiAgcmV0dXJuIChcbiAgICAvKiA6IHN0cmluZyAqL1xuICAgIGltcG9ydGFudGlmeShzdHJpbmdpZnlWYWx1ZShrZXksIHByb3ApKVxuICApO1xufTsgLy8gVHVybiBhIHN0cmluZyBpbnRvIGEgaGFzaCBzdHJpbmcgb2YgYmFzZS0zNiB2YWx1ZXMgKHVzaW5nIGxldHRlcnMgYW5kIG51bWJlcnMpXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcblxudmFyIGhhc2hTdHJpbmcgPSBmdW5jdGlvbiBoYXNoU3RyaW5nKHN0cmluZ1xuLyogOiBzdHJpbmcgKi9cbiwga2V5XG4vKiA6ID9zdHJpbmcgKi9cbikge1xuICByZXR1cm4gKFxuICAgIC8qIHN0cmluZyAqL1xuICAgIHN0cmluZ0hhc2goc3RyaW5nKS50b1N0cmluZygzNilcbiAgKTtcbn07IC8vIEhhc2ggYSBqYXZhc2NyaXB0IG9iamVjdCB1c2luZyBKU09OLnN0cmluZ2lmeS4gVGhpcyBpcyB2ZXJ5IGZhc3QsIGFib3V0IDNcbi8vIG1pY3Jvc2Vjb25kcyBvbiBteSBjb21wdXRlciBmb3IgYSBzYW1wbGUgb2JqZWN0OlxuLy8gaHR0cDovL2pzcGVyZi5jb20vdGVzdC1oYXNoZm52MzJhLWhhc2gvNVxuLy9cbi8vIE5vdGUgdGhhdCB0aGlzIHVzZXMgSlNPTi5zdHJpbmdpZnkgdG8gc3RyaW5naWZ5IHRoZSBvYmplY3RzIHNvIGluIG9yZGVyIGZvclxuLy8gdGhpcyB0byBwcm9kdWNlIGNvbnNpc3RlbnQgaGFzaGVzIGJyb3dzZXJzIG5lZWQgdG8gaGF2ZSBhIGNvbnNpc3RlbnRcbi8vIG9yZGVyaW5nIG9mIG9iamVjdHMuIEJlbiBBbHBlcnQgc2F5cyB0aGF0IEZhY2Vib29rIGRlcGVuZHMgb24gdGhpcywgc28gd2Vcbi8vIGNhbiBwcm9iYWJseSBkZXBlbmQgb24gdGhpcyB0b28uXG5cbnZhciBoYXNoT2JqZWN0ID0gZnVuY3Rpb24gaGFzaE9iamVjdChvYmplY3Rcbi8qIDogT2JqZWN0TWFwICovXG4pIHtcbiAgcmV0dXJuIChcbiAgICAvKiA6IHN0cmluZyAqL1xuICAgIGhhc2hTdHJpbmcoSlNPTi5zdHJpbmdpZnkob2JqZWN0KSlcbiAgKTtcbn07IC8vIEdpdmVuIGEgc2luZ2xlIHN0eWxlIHZhbHVlIHN0cmluZyBsaWtlIHRoZSBcImJcIiBmcm9tIFwiYTogYjtcIiwgYWRkcyAhaW1wb3J0YW50XG4vLyB0byBnZW5lcmF0ZSBcImIgIWltcG9ydGFudFwiLlxuXG52YXIgaW1wb3J0YW50aWZ5ID0gZnVuY3Rpb24gaW1wb3J0YW50aWZ5KHN0cmluZ1xuLyogOiBzdHJpbmcgKi9cbikge1xuICByZXR1cm4gKFxuICAgIC8qIDogc3RyaW5nICovXG4gICAgLy8gQnJhY2tldCBzdHJpbmcgY2hhcmFjdGVyIGFjY2VzcyBpcyB2ZXJ5IGZhc3QsIGFuZCBpbiB0aGUgZGVmYXVsdCBjYXNlIHdlXG4gICAgLy8gbm9ybWFsbHkgZG9uJ3QgZXhwZWN0IHRoZXJlIHRvIGJlIFwiIWltcG9ydGFudFwiIGF0IHRoZSBlbmQgb2YgdGhlIHN0cmluZ1xuICAgIC8vIHNvIHdlIGNhbiB1c2UgdGhpcyBzaW1wbGUgY2hlY2sgdG8gdGFrZSBhbiBvcHRpbWl6ZWQgcGF0aC4gSWYgdGhlcmVcbiAgICAvLyBoYXBwZW5zIHRvIGJlIGEgXCIhXCIgaW4gdGhpcyBwb3NpdGlvbiwgd2UgZm9sbG93IHVwIHdpdGggYSBtb3JlIHRob3JvdWdoXG4gICAgLy8gY2hlY2suXG4gICAgc3RyaW5nW3N0cmluZy5sZW5ndGggLSAxMF0gPT09ICchJyAmJiBzdHJpbmcuc2xpY2UoLTExKSA9PT0gJyAhaW1wb3J0YW50JyA/IHN0cmluZyA6IFwiXCIuY29uY2F0KHN0cmluZywgXCIgIWltcG9ydGFudFwiKVxuICApO1xufTtcblxuLyogQGZsb3cgKi9cbnZhciBNQVBfRVhJU1RTID0gdHlwZW9mIE1hcCAhPT0gJ3VuZGVmaW5lZCc7XG5cbnZhciBPcmRlcmVkRWxlbWVudHMgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKCkge1xuICAvKiA6OlxuICBlbGVtZW50czoge1tzdHJpbmddOiBhbnl9O1xuICBrZXlPcmRlcjogc3RyaW5nW107XG4gICovXG4gIGZ1bmN0aW9uIE9yZGVyZWRFbGVtZW50cygpIHtcbiAgICB0aGlzLmVsZW1lbnRzID0ge307XG4gICAgdGhpcy5rZXlPcmRlciA9IFtdO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IE9yZGVyZWRFbGVtZW50cy5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmZvckVhY2ggPSBmdW5jdGlvbiBmb3JFYWNoKGNhbGxiYWNrXG4gIC8qIDogKHN0cmluZywgYW55KSA9PiB2b2lkICovXG4gICkge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5rZXlPcmRlci5sZW5ndGg7IGkrKykge1xuICAgICAgLy8gKHZhbHVlLCBrZXkpIHRvIG1hdGNoIE1hcCdzIEFQSVxuICAgICAgY2FsbGJhY2sodGhpcy5lbGVtZW50c1t0aGlzLmtleU9yZGVyW2ldXSwgdGhpcy5rZXlPcmRlcltpXSk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5zZXQgPSBmdW5jdGlvbiBzZXQoa2V5XG4gIC8qIDogc3RyaW5nICovXG4gICwgdmFsdWVcbiAgLyogOiBhbnkgKi9cbiAgLCBzaG91bGRSZW9yZGVyXG4gIC8qIDogP2Jvb2xlYW4gKi9cbiAgKSB7XG4gICAgaWYgKCF0aGlzLmVsZW1lbnRzLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgIHRoaXMua2V5T3JkZXIucHVzaChrZXkpO1xuICAgIH0gZWxzZSBpZiAoc2hvdWxkUmVvcmRlcikge1xuICAgICAgdmFyIGluZGV4ID0gdGhpcy5rZXlPcmRlci5pbmRleE9mKGtleSk7XG4gICAgICB0aGlzLmtleU9yZGVyLnNwbGljZShpbmRleCwgMSk7XG4gICAgICB0aGlzLmtleU9yZGVyLnB1c2goa2V5KTtcbiAgICB9XG5cbiAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgdGhpcy5lbGVtZW50c1trZXldID0gdmFsdWU7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKE1BUF9FWElTVFMgJiYgdmFsdWUgaW5zdGFuY2VvZiBNYXAgfHwgdmFsdWUgaW5zdGFuY2VvZiBPcmRlcmVkRWxlbWVudHMpIHtcbiAgICAgIC8vIFdlIGhhdmUgZm91bmQgYSBuZXN0ZWQgTWFwLCBzbyB3ZSBuZWVkIHRvIHJlY3Vyc2Ugc28gdGhhdCBhbGxcbiAgICAgIC8vIG9mIHRoZSBuZXN0ZWQgb2JqZWN0cyBhbmQgTWFwcyBhcmUgbWVyZ2VkIHByb3Blcmx5LlxuICAgICAgdmFyIG5lc3RlZCA9IHRoaXMuZWxlbWVudHMuaGFzT3duUHJvcGVydHkoa2V5KSA/IHRoaXMuZWxlbWVudHNba2V5XSA6IG5ldyBPcmRlcmVkRWxlbWVudHMoKTtcbiAgICAgIHZhbHVlLmZvckVhY2goZnVuY3Rpb24gKHZhbHVlLCBrZXkpIHtcbiAgICAgICAgbmVzdGVkLnNldChrZXksIHZhbHVlLCBzaG91bGRSZW9yZGVyKTtcbiAgICAgIH0pO1xuICAgICAgdGhpcy5lbGVtZW50c1trZXldID0gbmVzdGVkO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICghQXJyYXkuaXNBcnJheSh2YWx1ZSkgJiYgX3R5cGVvZih2YWx1ZSkgPT09ICdvYmplY3QnKSB7XG4gICAgICAvLyBXZSBoYXZlIGZvdW5kIGEgbmVzdGVkIG9iamVjdCwgc28gd2UgbmVlZCB0byByZWN1cnNlIHNvIHRoYXQgYWxsXG4gICAgICAvLyBvZiB0aGUgbmVzdGVkIG9iamVjdHMgYW5kIE1hcHMgYXJlIG1lcmdlZCBwcm9wZXJseS5cbiAgICAgIHZhciBfbmVzdGVkID0gdGhpcy5lbGVtZW50cy5oYXNPd25Qcm9wZXJ0eShrZXkpID8gdGhpcy5lbGVtZW50c1trZXldIDogbmV3IE9yZGVyZWRFbGVtZW50cygpO1xuXG4gICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHZhbHVlKTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIF9uZXN0ZWQuc2V0KGtleXNbaV0sIHZhbHVlW2tleXNbaV1dLCBzaG91bGRSZW9yZGVyKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5lbGVtZW50c1trZXldID0gX25lc3RlZDtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLmVsZW1lbnRzW2tleV0gPSB2YWx1ZTtcbiAgfTtcblxuICBfcHJvdG8uZ2V0ID0gZnVuY3Rpb24gZ2V0KGtleVxuICAvKiA6IHN0cmluZyAqL1xuICApXG4gIC8qIDogYW55ICovXG4gIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50c1trZXldO1xuICB9O1xuXG4gIF9wcm90by5oYXMgPSBmdW5jdGlvbiBoYXMoa2V5XG4gIC8qIDogc3RyaW5nICovXG4gIClcbiAgLyogOiBib29sZWFuICovXG4gIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50cy5oYXNPd25Qcm9wZXJ0eShrZXkpO1xuICB9O1xuXG4gIF9wcm90by5hZGRTdHlsZVR5cGUgPSBmdW5jdGlvbiBhZGRTdHlsZVR5cGUoc3R5bGVUeXBlXG4gIC8qIDogYW55ICovXG4gIClcbiAgLyogOiB2b2lkICovXG4gIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgaWYgKE1BUF9FWElTVFMgJiYgc3R5bGVUeXBlIGluc3RhbmNlb2YgTWFwIHx8IHN0eWxlVHlwZSBpbnN0YW5jZW9mIE9yZGVyZWRFbGVtZW50cykge1xuICAgICAgc3R5bGVUeXBlLmZvckVhY2goZnVuY3Rpb24gKHZhbHVlLCBrZXkpIHtcbiAgICAgICAgX3RoaXMuc2V0KGtleSwgdmFsdWUsIHRydWUpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXMoc3R5bGVUeXBlKTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHRoaXMuc2V0KGtleXNbaV0sIHN0eWxlVHlwZVtrZXlzW2ldXSwgdHJ1ZSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBPcmRlcmVkRWxlbWVudHM7XG59KCk7XG5cbmZ1bmN0aW9uIHVud3JhcEV4cG9ydHMgKHgpIHtcblx0cmV0dXJuIHggJiYgeC5fX2VzTW9kdWxlICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh4LCAnZGVmYXVsdCcpID8geC5kZWZhdWx0IDogeDtcbn1cblxuZnVuY3Rpb24gY3JlYXRlQ29tbW9uanNNb2R1bGUoZm4sIG1vZHVsZSkge1xuXHRyZXR1cm4gbW9kdWxlID0geyBleHBvcnRzOiB7fSB9LCBmbihtb2R1bGUsIG1vZHVsZS5leHBvcnRzKSwgbW9kdWxlLmV4cG9ydHM7XG59XG5cbmZ1bmN0aW9uIGdldENqc0V4cG9ydEZyb21OYW1lc3BhY2UgKG4pIHtcblx0cmV0dXJuIG4gJiYgbi5kZWZhdWx0IHx8IG47XG59XG5cbnZhciBjYXBpdGFsaXplU3RyaW5nXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjYXBpdGFsaXplU3RyaW5nO1xuZnVuY3Rpb24gY2FwaXRhbGl6ZVN0cmluZyhzdHIpIHtcbiAgcmV0dXJuIHN0ci5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHN0ci5zbGljZSgxKTtcbn1cbn0pO1xuXG51bndyYXBFeHBvcnRzKGNhcGl0YWxpemVTdHJpbmdfMSk7XG5cbnZhciBwcmVmaXhQcm9wZXJ0eV8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gcHJlZml4UHJvcGVydHk7XG5cblxuXG52YXIgX2NhcGl0YWxpemVTdHJpbmcyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChjYXBpdGFsaXplU3RyaW5nXzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBwcmVmaXhQcm9wZXJ0eShwcmVmaXhQcm9wZXJ0aWVzLCBwcm9wZXJ0eSwgc3R5bGUpIHtcbiAgaWYgKHByZWZpeFByb3BlcnRpZXMuaGFzT3duUHJvcGVydHkocHJvcGVydHkpKSB7XG4gICAgdmFyIG5ld1N0eWxlID0ge307XG4gICAgdmFyIHJlcXVpcmVkUHJlZml4ZXMgPSBwcmVmaXhQcm9wZXJ0aWVzW3Byb3BlcnR5XTtcbiAgICB2YXIgY2FwaXRhbGl6ZWRQcm9wZXJ0eSA9ICgwLCBfY2FwaXRhbGl6ZVN0cmluZzIuZGVmYXVsdCkocHJvcGVydHkpO1xuICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXMoc3R5bGUpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHN0eWxlUHJvcGVydHkgPSBrZXlzW2ldO1xuICAgICAgaWYgKHN0eWxlUHJvcGVydHkgPT09IHByb3BlcnR5KSB7XG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgcmVxdWlyZWRQcmVmaXhlcy5sZW5ndGg7IGorKykge1xuICAgICAgICAgIG5ld1N0eWxlW3JlcXVpcmVkUHJlZml4ZXNbal0gKyBjYXBpdGFsaXplZFByb3BlcnR5XSA9IHN0eWxlW3Byb3BlcnR5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbmV3U3R5bGVbc3R5bGVQcm9wZXJ0eV0gPSBzdHlsZVtzdHlsZVByb3BlcnR5XTtcbiAgICB9XG4gICAgcmV0dXJuIG5ld1N0eWxlO1xuICB9XG4gIHJldHVybiBzdHlsZTtcbn1cbn0pO1xuXG51bndyYXBFeHBvcnRzKHByZWZpeFByb3BlcnR5XzEpO1xuXG52YXIgcHJlZml4VmFsdWVfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHByZWZpeFZhbHVlO1xuZnVuY3Rpb24gcHJlZml4VmFsdWUocGx1Z2lucywgcHJvcGVydHksIHZhbHVlLCBzdHlsZSwgbWV0YURhdGEpIHtcbiAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHBsdWdpbnMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICB2YXIgcHJvY2Vzc2VkVmFsdWUgPSBwbHVnaW5zW2ldKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUsIG1ldGFEYXRhKTtcblxuICAgIC8vIHdlIGNhbiBzdG9wIHByb2Nlc3NpbmcgaWYgYSB2YWx1ZSBpcyByZXR1cm5lZFxuICAgIC8vIGFzIGFsbCBwbHVnaW4gY3JpdGVyaWEgYXJlIHVuaXF1ZVxuICAgIGlmIChwcm9jZXNzZWRWYWx1ZSkge1xuICAgICAgcmV0dXJuIHByb2Nlc3NlZFZhbHVlO1xuICAgIH1cbiAgfVxufVxufSk7XG5cbnVud3JhcEV4cG9ydHMocHJlZml4VmFsdWVfMSk7XG5cbnZhciBhZGROZXdWYWx1ZXNPbmx5XzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBhZGROZXdWYWx1ZXNPbmx5O1xuZnVuY3Rpb24gYWRkSWZOZXcobGlzdCwgdmFsdWUpIHtcbiAgaWYgKGxpc3QuaW5kZXhPZih2YWx1ZSkgPT09IC0xKSB7XG4gICAgbGlzdC5wdXNoKHZhbHVlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBhZGROZXdWYWx1ZXNPbmx5KGxpc3QsIHZhbHVlcykge1xuICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZXMpKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHZhbHVlcy5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICAgICAgYWRkSWZOZXcobGlzdCwgdmFsdWVzW2ldKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgYWRkSWZOZXcobGlzdCwgdmFsdWVzKTtcbiAgfVxufVxufSk7XG5cbnVud3JhcEV4cG9ydHMoYWRkTmV3VmFsdWVzT25seV8xKTtcblxudmFyIGlzT2JqZWN0XzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBpc09iamVjdDtcbmZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIE9iamVjdCAmJiAhQXJyYXkuaXNBcnJheSh2YWx1ZSk7XG59XG59KTtcblxudW53cmFwRXhwb3J0cyhpc09iamVjdF8xKTtcblxudmFyIGNyZWF0ZVByZWZpeGVyXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjcmVhdGVQcmVmaXhlcjtcblxuXG5cbnZhciBfcHJlZml4UHJvcGVydHkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChwcmVmaXhQcm9wZXJ0eV8xKTtcblxuXG5cbnZhciBfcHJlZml4VmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChwcmVmaXhWYWx1ZV8xKTtcblxuXG5cbnZhciBfYWRkTmV3VmFsdWVzT25seTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGFkZE5ld1ZhbHVlc09ubHlfMSk7XG5cblxuXG52YXIgX2lzT2JqZWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoaXNPYmplY3RfMSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIGNyZWF0ZVByZWZpeGVyKF9yZWYpIHtcbiAgdmFyIHByZWZpeE1hcCA9IF9yZWYucHJlZml4TWFwLFxuICAgICAgcGx1Z2lucyA9IF9yZWYucGx1Z2lucztcblxuICByZXR1cm4gZnVuY3Rpb24gcHJlZml4KHN0eWxlKSB7XG4gICAgZm9yICh2YXIgcHJvcGVydHkgaW4gc3R5bGUpIHtcbiAgICAgIHZhciB2YWx1ZSA9IHN0eWxlW3Byb3BlcnR5XTtcblxuICAgICAgLy8gaGFuZGxlIG5lc3RlZCBvYmplY3RzXG4gICAgICBpZiAoKDAsIF9pc09iamVjdDIuZGVmYXVsdCkodmFsdWUpKSB7XG4gICAgICAgIHN0eWxlW3Byb3BlcnR5XSA9IHByZWZpeCh2YWx1ZSk7XG4gICAgICAgIC8vIGhhbmRsZSBhcnJheSB2YWx1ZXNcbiAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgdmFyIGNvbWJpbmVkVmFsdWUgPSBbXTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gdmFsdWUubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgICAgICB2YXIgcHJvY2Vzc2VkVmFsdWUgPSAoMCwgX3ByZWZpeFZhbHVlMi5kZWZhdWx0KShwbHVnaW5zLCBwcm9wZXJ0eSwgdmFsdWVbaV0sIHN0eWxlLCBwcmVmaXhNYXApO1xuICAgICAgICAgICgwLCBfYWRkTmV3VmFsdWVzT25seTIuZGVmYXVsdCkoY29tYmluZWRWYWx1ZSwgcHJvY2Vzc2VkVmFsdWUgfHwgdmFsdWVbaV0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gb25seSBtb2RpZnkgdGhlIHZhbHVlIGlmIGl0IHdhcyB0b3VjaGVkXG4gICAgICAgIC8vIGJ5IGFueSBwbHVnaW4gdG8gcHJldmVudCB1bm5lY2Vzc2FyeSBtdXRhdGlvbnNcbiAgICAgICAgaWYgKGNvbWJpbmVkVmFsdWUubGVuZ3RoID4gMCkge1xuICAgICAgICAgIHN0eWxlW3Byb3BlcnR5XSA9IGNvbWJpbmVkVmFsdWU7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBfcHJvY2Vzc2VkVmFsdWUgPSAoMCwgX3ByZWZpeFZhbHVlMi5kZWZhdWx0KShwbHVnaW5zLCBwcm9wZXJ0eSwgdmFsdWUsIHN0eWxlLCBwcmVmaXhNYXApO1xuXG4gICAgICAgIC8vIG9ubHkgbW9kaWZ5IHRoZSB2YWx1ZSBpZiBpdCB3YXMgdG91Y2hlZFxuICAgICAgICAvLyBieSBhbnkgcGx1Z2luIHRvIHByZXZlbnQgdW5uZWNlc3NhcnkgbXV0YXRpb25zXG4gICAgICAgIGlmIChfcHJvY2Vzc2VkVmFsdWUpIHtcbiAgICAgICAgICBzdHlsZVtwcm9wZXJ0eV0gPSBfcHJvY2Vzc2VkVmFsdWU7XG4gICAgICAgIH1cblxuICAgICAgICBzdHlsZSA9ICgwLCBfcHJlZml4UHJvcGVydHkyLmRlZmF1bHQpKHByZWZpeE1hcCwgcHJvcGVydHksIHN0eWxlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gc3R5bGU7XG4gIH07XG59XG59KTtcblxudmFyIGNyZWF0ZVByZWZpeGVyID0gdW53cmFwRXhwb3J0cyhjcmVhdGVQcmVmaXhlcl8xKTtcblxudmFyIGJhY2tncm91bmRDbGlwXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBiYWNrZ3JvdW5kQ2xpcDtcblxuLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL2JhY2tncm91bmQtY2xpcCNCcm93c2VyX2NvbXBhdGliaWxpdHlcbmZ1bmN0aW9uIGJhY2tncm91bmRDbGlwKHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiB2YWx1ZSA9PT0gJ3RleHQnKSB7XG4gICAgcmV0dXJuIFsnLXdlYmtpdC10ZXh0JywgJ3RleHQnXTtcbiAgfVxufVxufSk7XG5cbnZhciBiYWNrZ3JvdW5kQ2xpcCA9IHVud3JhcEV4cG9ydHMoYmFja2dyb3VuZENsaXBfMSk7XG5cbnZhciBpc1ByZWZpeGVkVmFsdWVfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGlzUHJlZml4ZWRWYWx1ZTtcbnZhciByZWdleCA9IC8td2Via2l0LXwtbW96LXwtbXMtLztcblxuZnVuY3Rpb24gaXNQcmVmaXhlZFZhbHVlKHZhbHVlKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmIHJlZ2V4LnRlc3QodmFsdWUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG59KTtcblxudW53cmFwRXhwb3J0cyhpc1ByZWZpeGVkVmFsdWVfMSk7XG5cbnZhciBjYWxjXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjYWxjO1xuXG5cblxudmFyIF9pc1ByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChpc1ByZWZpeGVkVmFsdWVfMSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBwcmVmaXhlcyA9IFsnLXdlYmtpdC0nLCAnLW1vei0nLCAnJ107XG5mdW5jdGlvbiBjYWxjKHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiAhKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSAmJiB2YWx1ZS5pbmRleE9mKCdjYWxjKCcpID4gLTEpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKC9jYWxjXFwoL2csIHByZWZpeCArICdjYWxjKCcpO1xuICAgIH0pO1xuICB9XG59XG59KTtcblxudmFyIGNhbGMgPSB1bndyYXBFeHBvcnRzKGNhbGNfMSk7XG5cbnZhciBjcm9zc0ZhZGVfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGNyb3NzRmFkZTtcblxuXG5cbnZhciBfaXNQcmVmaXhlZFZhbHVlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoaXNQcmVmaXhlZFZhbHVlXzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyBodHRwOi8vY2FuaXVzZS5jb20vI3NlYXJjaD1jcm9zcy1mYWRlXG52YXIgcHJlZml4ZXMgPSBbJy13ZWJraXQtJywgJyddO1xuZnVuY3Rpb24gY3Jvc3NGYWRlKHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiAhKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSAmJiB2YWx1ZS5pbmRleE9mKCdjcm9zcy1mYWRlKCcpID4gLTEpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKC9jcm9zcy1mYWRlXFwoL2csIHByZWZpeCArICdjcm9zcy1mYWRlKCcpO1xuICAgIH0pO1xuICB9XG59XG59KTtcblxudmFyIGNyb3NzRmFkZSA9IHVud3JhcEV4cG9ydHMoY3Jvc3NGYWRlXzEpO1xuXG52YXIgY3Vyc29yXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjdXJzb3I7XG52YXIgcHJlZml4ZXMgPSBbJy13ZWJraXQtJywgJy1tb3otJywgJyddO1xuXG52YXIgdmFsdWVzID0ge1xuICAnem9vbS1pbic6IHRydWUsXG4gICd6b29tLW91dCc6IHRydWUsXG4gIGdyYWI6IHRydWUsXG4gIGdyYWJiaW5nOiB0cnVlXG59O1xuXG5mdW5jdGlvbiBjdXJzb3IocHJvcGVydHksIHZhbHVlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ2N1cnNvcicgJiYgdmFsdWVzLmhhc093blByb3BlcnR5KHZhbHVlKSkge1xuICAgIHJldHVybiBwcmVmaXhlcy5tYXAoZnVuY3Rpb24gKHByZWZpeCkge1xuICAgICAgcmV0dXJuIHByZWZpeCArIHZhbHVlO1xuICAgIH0pO1xuICB9XG59XG59KTtcblxudmFyIGN1cnNvciA9IHVud3JhcEV4cG9ydHMoY3Vyc29yXzEpO1xuXG52YXIgZmlsdGVyXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBmaWx0ZXI7XG5cblxuXG52YXIgX2lzUHJlZml4ZWRWYWx1ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGlzUHJlZml4ZWRWYWx1ZV8xKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gaHR0cDovL2Nhbml1c2UuY29tLyNmZWF0PWNzcy1maWx0ZXItZnVuY3Rpb25cbnZhciBwcmVmaXhlcyA9IFsnLXdlYmtpdC0nLCAnJ107XG5mdW5jdGlvbiBmaWx0ZXIocHJvcGVydHksIHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmICEoMCwgX2lzUHJlZml4ZWRWYWx1ZTIuZGVmYXVsdCkodmFsdWUpICYmIHZhbHVlLmluZGV4T2YoJ2ZpbHRlcignKSA+IC0xKSB7XG4gICAgcmV0dXJuIHByZWZpeGVzLm1hcChmdW5jdGlvbiAocHJlZml4KSB7XG4gICAgICByZXR1cm4gdmFsdWUucmVwbGFjZSgvZmlsdGVyXFwoL2csIHByZWZpeCArICdmaWx0ZXIoJyk7XG4gICAgfSk7XG4gIH1cbn1cbn0pO1xuXG52YXIgZmlsdGVyID0gdW53cmFwRXhwb3J0cyhmaWx0ZXJfMSk7XG5cbnZhciBmbGV4XzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBmbGV4O1xudmFyIHZhbHVlcyA9IHtcbiAgZmxleDogWyctd2Via2l0LWJveCcsICctbW96LWJveCcsICctbXMtZmxleGJveCcsICctd2Via2l0LWZsZXgnLCAnZmxleCddLFxuICAnaW5saW5lLWZsZXgnOiBbJy13ZWJraXQtaW5saW5lLWJveCcsICctbW96LWlubGluZS1ib3gnLCAnLW1zLWlubGluZS1mbGV4Ym94JywgJy13ZWJraXQtaW5saW5lLWZsZXgnLCAnaW5saW5lLWZsZXgnXVxufTtcblxuZnVuY3Rpb24gZmxleChwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHByb3BlcnR5ID09PSAnZGlzcGxheScgJiYgdmFsdWVzLmhhc093blByb3BlcnR5KHZhbHVlKSkge1xuICAgIHJldHVybiB2YWx1ZXNbdmFsdWVdO1xuICB9XG59XG59KTtcblxudmFyIGZsZXggPSB1bndyYXBFeHBvcnRzKGZsZXhfMSk7XG5cbnZhciBmbGV4Ym94SUVfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGZsZXhib3hJRTtcbnZhciBhbHRlcm5hdGl2ZVZhbHVlcyA9IHtcbiAgJ3NwYWNlLWFyb3VuZCc6ICdkaXN0cmlidXRlJyxcbiAgJ3NwYWNlLWJldHdlZW4nOiAnanVzdGlmeScsXG4gICdmbGV4LXN0YXJ0JzogJ3N0YXJ0JyxcbiAgJ2ZsZXgtZW5kJzogJ2VuZCdcbn07XG52YXIgYWx0ZXJuYXRpdmVQcm9wcyA9IHtcbiAgYWxpZ25Db250ZW50OiAnbXNGbGV4TGluZVBhY2snLFxuICBhbGlnblNlbGY6ICdtc0ZsZXhJdGVtQWxpZ24nLFxuICBhbGlnbkl0ZW1zOiAnbXNGbGV4QWxpZ24nLFxuICBqdXN0aWZ5Q29udGVudDogJ21zRmxleFBhY2snLFxuICBvcmRlcjogJ21zRmxleE9yZGVyJyxcbiAgZmxleEdyb3c6ICdtc0ZsZXhQb3NpdGl2ZScsXG4gIGZsZXhTaHJpbms6ICdtc0ZsZXhOZWdhdGl2ZScsXG4gIGZsZXhCYXNpczogJ21zRmxleFByZWZlcnJlZFNpemUnXG4gIC8vIEZ1bGwgZXhwYW5kZWQgc3ludGF4IGlzIGZsZXgtZ3JvdyB8IGZsZXgtc2hyaW5rIHwgZmxleC1iYXNpcy5cbn07dmFyIGZsZXhTaG9ydGhhbmRNYXBwaW5ncyA9IHtcbiAgYXV0bzogJzEgMSBhdXRvJyxcbiAgaW5oZXJpdDogJ2luaGVyaXQnLFxuICBpbml0aWFsOiAnMCAxIGF1dG8nLFxuICBub25lOiAnMCAwIGF1dG8nLFxuICB1bnNldDogJ3Vuc2V0J1xufTtcbnZhciBpc1VuaXRsZXNzTnVtYmVyID0gL15cXGQrKFxcLlxcZCspPyQvO1xuXG5mdW5jdGlvbiBmbGV4Ym94SUUocHJvcGVydHksIHZhbHVlLCBzdHlsZSkge1xuICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGFsdGVybmF0aXZlUHJvcHMsIHByb3BlcnR5KSkge1xuICAgIHN0eWxlW2FsdGVybmF0aXZlUHJvcHNbcHJvcGVydHldXSA9IGFsdGVybmF0aXZlVmFsdWVzW3ZhbHVlXSB8fCB2YWx1ZTtcbiAgfVxuICBpZiAocHJvcGVydHkgPT09ICdmbGV4Jykge1xuICAgIC8vIEZvciBjZXJ0YWluIHZhbHVlcyB3ZSBjYW4gZG8gc3RyYWlnaHQgbWFwcGluZ3MgYmFzZWQgb24gdGhlIHNwZWNcbiAgICAvLyBmb3IgdGhlIGV4cGFuc2lvbnMuXG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChmbGV4U2hvcnRoYW5kTWFwcGluZ3MsIHZhbHVlKSkge1xuICAgICAgc3R5bGUubXNGbGV4ID0gZmxleFNob3J0aGFuZE1hcHBpbmdzW3ZhbHVlXTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8gSGVyZSB3ZSBoYXZlIG5vIGRpcmVjdCBtYXBwaW5nLCBzbyB3ZSBmYXZvciBsb29raW5nIGZvciBhXG4gICAgLy8gdW5pdGxlc3MgcG9zaXRpdmUgbnVtYmVyIGFzIHRoYXQgd2lsbCBiZSB0aGUgbW9zdCBjb21tb24gdXNlLWNhc2UuXG4gICAgaWYgKGlzVW5pdGxlc3NOdW1iZXIudGVzdCh2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zRmxleCA9IHZhbHVlICsgJyAxIDAlJztcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBUaGUgbmV4dCB0aGluZyB3ZSBjYW4gbG9vayBmb3IgaXMgaWYgdGhlcmUgYXJlIG11bHRpcGxlIHZhbHVlcy5cbiAgICB2YXIgZmxleFZhbHVlcyA9IHZhbHVlLnNwbGl0KC9cXHMvKTtcbiAgICAvLyBJZiB3ZSBvbmx5IGhhdmUgYSBzaW5nbGUgdmFsdWUgdGhhdCB3YXNuJ3QgYSBwb3NpdGl2ZSB1bml0bGVzc1xuICAgIC8vIG9yIGEgcHJlLW1hcHBlZCB2YWx1ZSwgdGhlbiB3ZSBjYW4gYXNzdW1lIGl0IGlzIGEgdW5pdCB2YWx1ZS5cbiAgICBzd2l0Y2ggKGZsZXhWYWx1ZXMubGVuZ3RoKSB7XG4gICAgICBjYXNlIDE6XG4gICAgICAgIHN0eWxlLm1zRmxleCA9ICcxIDEgJyArIHZhbHVlO1xuICAgICAgICByZXR1cm47XG4gICAgICBjYXNlIDI6XG4gICAgICAgIC8vIElmIHdlIGhhdmUgMiB1bml0cywgdGhlbiB3ZSBleHBlY3QgdGhhdCB0aGUgZmlyc3Qgd2lsbFxuICAgICAgICAvLyBhbHdheXMgYmUgYSB1bml0bGVzcyBudW1iZXIgYW5kIHJlcHJlc2VudHMgZmxleC1ncm93LlxuICAgICAgICAvLyBUaGUgc2Vjb25kIHVuaXQgd2lsbCByZXByZXNlbnQgZmxleC1zaHJpbmsgZm9yIGEgdW5pdGxlc3NcbiAgICAgICAgLy8gdmFsdWUsIG9yIGZsZXgtYmFzaXMgb3RoZXJ3aXNlLlxuICAgICAgICBpZiAoaXNVbml0bGVzc051bWJlci50ZXN0KGZsZXhWYWx1ZXNbMV0pKSB7XG4gICAgICAgICAgc3R5bGUubXNGbGV4ID0gZmxleFZhbHVlc1swXSArICcgJyArIGZsZXhWYWx1ZXNbMV0gKyAnIDAlJztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzdHlsZS5tc0ZsZXggPSBmbGV4VmFsdWVzWzBdICsgJyAxICcgKyBmbGV4VmFsdWVzWzFdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybjtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHN0eWxlLm1zRmxleCA9IHZhbHVlO1xuICAgIH1cbiAgfVxufVxufSk7XG5cbnZhciBmbGV4Ym94SUUgPSB1bndyYXBFeHBvcnRzKGZsZXhib3hJRV8xKTtcblxudmFyIGZsZXhib3hPbGRfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGZsZXhib3hPbGQ7XG52YXIgYWx0ZXJuYXRpdmVWYWx1ZXMgPSB7XG4gICdzcGFjZS1hcm91bmQnOiAnanVzdGlmeScsXG4gICdzcGFjZS1iZXR3ZWVuJzogJ2p1c3RpZnknLFxuICAnZmxleC1zdGFydCc6ICdzdGFydCcsXG4gICdmbGV4LWVuZCc6ICdlbmQnLFxuICAnd3JhcC1yZXZlcnNlJzogJ211bHRpcGxlJyxcbiAgd3JhcDogJ211bHRpcGxlJ1xufTtcblxudmFyIGFsdGVybmF0aXZlUHJvcHMgPSB7XG4gIGFsaWduSXRlbXM6ICdXZWJraXRCb3hBbGlnbicsXG4gIGp1c3RpZnlDb250ZW50OiAnV2Via2l0Qm94UGFjaycsXG4gIGZsZXhXcmFwOiAnV2Via2l0Qm94TGluZXMnLFxuICBmbGV4R3JvdzogJ1dlYmtpdEJveEZsZXgnXG59O1xuXG5mdW5jdGlvbiBmbGV4Ym94T2xkKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUpIHtcbiAgaWYgKHByb3BlcnR5ID09PSAnZmxleERpcmVjdGlvbicgJiYgdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgIGlmICh2YWx1ZS5pbmRleE9mKCdjb2x1bW4nKSA+IC0xKSB7XG4gICAgICBzdHlsZS5XZWJraXRCb3hPcmllbnQgPSAndmVydGljYWwnO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZS5XZWJraXRCb3hPcmllbnQgPSAnaG9yaXpvbnRhbCc7XG4gICAgfVxuICAgIGlmICh2YWx1ZS5pbmRleE9mKCdyZXZlcnNlJykgPiAtMSkge1xuICAgICAgc3R5bGUuV2Via2l0Qm94RGlyZWN0aW9uID0gJ3JldmVyc2UnO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZS5XZWJraXRCb3hEaXJlY3Rpb24gPSAnbm9ybWFsJztcbiAgICB9XG4gIH1cbiAgaWYgKGFsdGVybmF0aXZlUHJvcHMuaGFzT3duUHJvcGVydHkocHJvcGVydHkpKSB7XG4gICAgc3R5bGVbYWx0ZXJuYXRpdmVQcm9wc1twcm9wZXJ0eV1dID0gYWx0ZXJuYXRpdmVWYWx1ZXNbdmFsdWVdIHx8IHZhbHVlO1xuICB9XG59XG59KTtcblxudmFyIGZsZXhib3hPbGQgPSB1bndyYXBFeHBvcnRzKGZsZXhib3hPbGRfMSk7XG5cbnZhciBncmFkaWVudF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZ3JhZGllbnQ7XG5cblxuXG52YXIgX2lzUHJlZml4ZWRWYWx1ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGlzUHJlZml4ZWRWYWx1ZV8xKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxudmFyIHByZWZpeGVzID0gWyctd2Via2l0LScsICctbW96LScsICcnXTtcblxudmFyIHZhbHVlcyA9IC9saW5lYXItZ3JhZGllbnR8cmFkaWFsLWdyYWRpZW50fHJlcGVhdGluZy1saW5lYXItZ3JhZGllbnR8cmVwZWF0aW5nLXJhZGlhbC1ncmFkaWVudC9naTtcblxuZnVuY3Rpb24gZ3JhZGllbnQocHJvcGVydHksIHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmICEoMCwgX2lzUHJlZml4ZWRWYWx1ZTIuZGVmYXVsdCkodmFsdWUpICYmIHZhbHVlcy50ZXN0KHZhbHVlKSkge1xuICAgIHJldHVybiBwcmVmaXhlcy5tYXAoZnVuY3Rpb24gKHByZWZpeCkge1xuICAgICAgcmV0dXJuIHZhbHVlLnJlcGxhY2UodmFsdWVzLCBmdW5jdGlvbiAoZ3JhZCkge1xuICAgICAgICByZXR1cm4gcHJlZml4ICsgZ3JhZDtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG59XG59KTtcblxudmFyIGdyYWRpZW50ID0gdW53cmFwRXhwb3J0cyhncmFkaWVudF8xKTtcblxudmFyIGdyaWRfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9zbGljZWRUb0FycmF5ID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBzbGljZUl0ZXJhdG9yKGFyciwgaSkgeyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSkgX2lbXCJyZXR1cm5cIl0oKTsgfSBmaW5hbGx5IHsgaWYgKF9kKSB0aHJvdyBfZTsgfSB9IHJldHVybiBfYXJyOyB9IHJldHVybiBmdW5jdGlvbiAoYXJyLCBpKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHsgcmV0dXJuIGFycjsgfSBlbHNlIGlmIChTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpIHsgcmV0dXJuIHNsaWNlSXRlcmF0b3IoYXJyLCBpKTsgfSBlbHNlIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2VcIik7IH0gfTsgfSgpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBncmlkO1xuZnVuY3Rpb24gaXNTaW1wbGVQb3NpdGlvblZhbHVlKHZhbHVlKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInICYmICFpc05hTih2YWx1ZSk7XG59XG5cbnZhciBhbGlnbm1lbnRWYWx1ZXMgPSBbJ2NlbnRlcicsICdlbmQnLCAnc3RhcnQnLCAnc3RyZXRjaCddO1xuXG52YXIgZGlzcGxheVZhbHVlcyA9IHtcbiAgJ2lubGluZS1ncmlkJzogWyctbXMtaW5saW5lLWdyaWQnLCAnaW5saW5lLWdyaWQnXSxcbiAgZ3JpZDogWyctbXMtZ3JpZCcsICdncmlkJ11cbn07XG5cbnZhciBwcm9wZXJ0eUNvbnZlcnRlcnMgPSB7XG4gIGFsaWduU2VsZjogZnVuY3Rpb24gYWxpZ25TZWxmKHZhbHVlLCBzdHlsZSkge1xuICAgIGlmIChhbGlnbm1lbnRWYWx1ZXMuaW5kZXhPZih2YWx1ZSkgPiAtMSkge1xuICAgICAgc3R5bGUubXNHcmlkUm93QWxpZ24gPSB2YWx1ZTtcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZENvbHVtbjogZnVuY3Rpb24gZ3JpZENvbHVtbih2YWx1ZSwgc3R5bGUpIHtcbiAgICBpZiAoaXNTaW1wbGVQb3NpdGlvblZhbHVlKHZhbHVlKSkge1xuICAgICAgc3R5bGUubXNHcmlkQ29sdW1uID0gdmFsdWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBfdmFsdWUkc3BsaXQkbWFwID0gdmFsdWUuc3BsaXQoJy8nKS5tYXAoZnVuY3Rpb24gKHBvc2l0aW9uKSB7XG4gICAgICAgIHJldHVybiArcG9zaXRpb247XG4gICAgICB9KSxcbiAgICAgICAgICBfdmFsdWUkc3BsaXQkbWFwMiA9IF9zbGljZWRUb0FycmF5KF92YWx1ZSRzcGxpdCRtYXAsIDIpLFxuICAgICAgICAgIHN0YXJ0ID0gX3ZhbHVlJHNwbGl0JG1hcDJbMF0sXG4gICAgICAgICAgZW5kID0gX3ZhbHVlJHNwbGl0JG1hcDJbMV07XG5cbiAgICAgIHByb3BlcnR5Q29udmVydGVycy5ncmlkQ29sdW1uU3RhcnQoc3RhcnQsIHN0eWxlKTtcbiAgICAgIHByb3BlcnR5Q29udmVydGVycy5ncmlkQ29sdW1uRW5kKGVuZCwgc3R5bGUpO1xuICAgIH1cbiAgfSxcblxuICBncmlkQ29sdW1uRW5kOiBmdW5jdGlvbiBncmlkQ29sdW1uRW5kKHZhbHVlLCBzdHlsZSkge1xuICAgIHZhciBtc0dyaWRDb2x1bW4gPSBzdHlsZS5tc0dyaWRDb2x1bW47XG5cbiAgICBpZiAoaXNTaW1wbGVQb3NpdGlvblZhbHVlKHZhbHVlKSAmJiBpc1NpbXBsZVBvc2l0aW9uVmFsdWUobXNHcmlkQ29sdW1uKSkge1xuICAgICAgc3R5bGUubXNHcmlkQ29sdW1uU3BhbiA9IHZhbHVlIC0gbXNHcmlkQ29sdW1uO1xuICAgIH1cbiAgfSxcblxuICBncmlkQ29sdW1uU3RhcnQ6IGZ1bmN0aW9uIGdyaWRDb2x1bW5TdGFydCh2YWx1ZSwgc3R5bGUpIHtcbiAgICBpZiAoaXNTaW1wbGVQb3NpdGlvblZhbHVlKHZhbHVlKSkge1xuICAgICAgc3R5bGUubXNHcmlkQ29sdW1uID0gdmFsdWU7XG4gICAgfVxuICB9LFxuXG4gIGdyaWRSb3c6IGZ1bmN0aW9uIGdyaWRSb3codmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zR3JpZFJvdyA9IHZhbHVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgX3ZhbHVlJHNwbGl0JG1hcDMgPSB2YWx1ZS5zcGxpdCgnLycpLm1hcChmdW5jdGlvbiAocG9zaXRpb24pIHtcbiAgICAgICAgcmV0dXJuICtwb3NpdGlvbjtcbiAgICAgIH0pLFxuICAgICAgICAgIF92YWx1ZSRzcGxpdCRtYXA0ID0gX3NsaWNlZFRvQXJyYXkoX3ZhbHVlJHNwbGl0JG1hcDMsIDIpLFxuICAgICAgICAgIHN0YXJ0ID0gX3ZhbHVlJHNwbGl0JG1hcDRbMF0sXG4gICAgICAgICAgZW5kID0gX3ZhbHVlJHNwbGl0JG1hcDRbMV07XG5cbiAgICAgIHByb3BlcnR5Q29udmVydGVycy5ncmlkUm93U3RhcnQoc3RhcnQsIHN0eWxlKTtcbiAgICAgIHByb3BlcnR5Q29udmVydGVycy5ncmlkUm93RW5kKGVuZCwgc3R5bGUpO1xuICAgIH1cbiAgfSxcblxuICBncmlkUm93RW5kOiBmdW5jdGlvbiBncmlkUm93RW5kKHZhbHVlLCBzdHlsZSkge1xuICAgIHZhciBtc0dyaWRSb3cgPSBzdHlsZS5tc0dyaWRSb3c7XG5cbiAgICBpZiAoaXNTaW1wbGVQb3NpdGlvblZhbHVlKHZhbHVlKSAmJiBpc1NpbXBsZVBvc2l0aW9uVmFsdWUobXNHcmlkUm93KSkge1xuICAgICAgc3R5bGUubXNHcmlkUm93U3BhbiA9IHZhbHVlIC0gbXNHcmlkUm93O1xuICAgIH1cbiAgfSxcblxuICBncmlkUm93U3RhcnQ6IGZ1bmN0aW9uIGdyaWRSb3dTdGFydCh2YWx1ZSwgc3R5bGUpIHtcbiAgICBpZiAoaXNTaW1wbGVQb3NpdGlvblZhbHVlKHZhbHVlKSkge1xuICAgICAgc3R5bGUubXNHcmlkUm93ID0gdmFsdWU7XG4gICAgfVxuICB9LFxuXG4gIGdyaWRUZW1wbGF0ZUNvbHVtbnM6IGZ1bmN0aW9uIGdyaWRUZW1wbGF0ZUNvbHVtbnModmFsdWUsIHN0eWxlKSB7XG4gICAgc3R5bGUubXNHcmlkQ29sdW1ucyA9IHZhbHVlO1xuICB9LFxuXG4gIGdyaWRUZW1wbGF0ZVJvd3M6IGZ1bmN0aW9uIGdyaWRUZW1wbGF0ZVJvd3ModmFsdWUsIHN0eWxlKSB7XG4gICAgc3R5bGUubXNHcmlkUm93cyA9IHZhbHVlO1xuICB9LFxuXG4gIGp1c3RpZnlTZWxmOiBmdW5jdGlvbiBqdXN0aWZ5U2VsZih2YWx1ZSwgc3R5bGUpIHtcbiAgICBpZiAoYWxpZ25tZW50VmFsdWVzLmluZGV4T2YodmFsdWUpID4gLTEpIHtcbiAgICAgIHN0eWxlLm1zR3JpZENvbHVtbkFsaWduID0gdmFsdWU7XG4gICAgfVxuICB9XG59O1xuXG5mdW5jdGlvbiBncmlkKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUpIHtcbiAgaWYgKHByb3BlcnR5ID09PSAnZGlzcGxheScgJiYgdmFsdWUgaW4gZGlzcGxheVZhbHVlcykge1xuICAgIHJldHVybiBkaXNwbGF5VmFsdWVzW3ZhbHVlXTtcbiAgfVxuXG4gIGlmIChwcm9wZXJ0eSBpbiBwcm9wZXJ0eUNvbnZlcnRlcnMpIHtcbiAgICB2YXIgcHJvcGVydHlDb252ZXJ0ZXIgPSBwcm9wZXJ0eUNvbnZlcnRlcnNbcHJvcGVydHldO1xuICAgIHByb3BlcnR5Q29udmVydGVyKHZhbHVlLCBzdHlsZSk7XG4gIH1cbn1cbn0pO1xuXG52YXIgZ3JpZCA9IHVud3JhcEV4cG9ydHMoZ3JpZF8xKTtcblxudmFyIGltYWdlU2V0XzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBpbWFnZVNldDtcblxuXG5cbnZhciBfaXNQcmVmaXhlZFZhbHVlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoaXNQcmVmaXhlZFZhbHVlXzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyBodHRwOi8vY2FuaXVzZS5jb20vI2ZlYXQ9Y3NzLWltYWdlLXNldFxudmFyIHByZWZpeGVzID0gWyctd2Via2l0LScsICcnXTtcbmZ1bmN0aW9uIGltYWdlU2V0KHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiAhKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSAmJiB2YWx1ZS5pbmRleE9mKCdpbWFnZS1zZXQoJykgPiAtMSkge1xuICAgIHJldHVybiBwcmVmaXhlcy5tYXAoZnVuY3Rpb24gKHByZWZpeCkge1xuICAgICAgcmV0dXJuIHZhbHVlLnJlcGxhY2UoL2ltYWdlLXNldFxcKC9nLCBwcmVmaXggKyAnaW1hZ2Utc2V0KCcpO1xuICAgIH0pO1xuICB9XG59XG59KTtcblxudmFyIGltYWdlU2V0ID0gdW53cmFwRXhwb3J0cyhpbWFnZVNldF8xKTtcblxudmFyIGxvZ2ljYWxfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGxvZ2ljYWw7XG52YXIgYWx0ZXJuYXRpdmVQcm9wcyA9IHtcbiAgbWFyZ2luQmxvY2tTdGFydDogWydXZWJraXRNYXJnaW5CZWZvcmUnXSxcbiAgbWFyZ2luQmxvY2tFbmQ6IFsnV2Via2l0TWFyZ2luQWZ0ZXInXSxcbiAgbWFyZ2luSW5saW5lU3RhcnQ6IFsnV2Via2l0TWFyZ2luU3RhcnQnLCAnTW96TWFyZ2luU3RhcnQnXSxcbiAgbWFyZ2luSW5saW5lRW5kOiBbJ1dlYmtpdE1hcmdpbkVuZCcsICdNb3pNYXJnaW5FbmQnXSxcbiAgcGFkZGluZ0Jsb2NrU3RhcnQ6IFsnV2Via2l0UGFkZGluZ0JlZm9yZSddLFxuICBwYWRkaW5nQmxvY2tFbmQ6IFsnV2Via2l0UGFkZGluZ0FmdGVyJ10sXG4gIHBhZGRpbmdJbmxpbmVTdGFydDogWydXZWJraXRQYWRkaW5nU3RhcnQnLCAnTW96UGFkZGluZ1N0YXJ0J10sXG4gIHBhZGRpbmdJbmxpbmVFbmQ6IFsnV2Via2l0UGFkZGluZ0VuZCcsICdNb3pQYWRkaW5nRW5kJ10sXG4gIGJvcmRlckJsb2NrU3RhcnQ6IFsnV2Via2l0Qm9yZGVyQmVmb3JlJ10sXG4gIGJvcmRlckJsb2NrU3RhcnRDb2xvcjogWydXZWJraXRCb3JkZXJCZWZvcmVDb2xvciddLFxuICBib3JkZXJCbG9ja1N0YXJ0U3R5bGU6IFsnV2Via2l0Qm9yZGVyQmVmb3JlU3R5bGUnXSxcbiAgYm9yZGVyQmxvY2tTdGFydFdpZHRoOiBbJ1dlYmtpdEJvcmRlckJlZm9yZVdpZHRoJ10sXG4gIGJvcmRlckJsb2NrRW5kOiBbJ1dlYmtpdEJvcmRlckFmdGVyJ10sXG4gIGJvcmRlckJsb2NrRW5kQ29sb3I6IFsnV2Via2l0Qm9yZGVyQWZ0ZXJDb2xvciddLFxuICBib3JkZXJCbG9ja0VuZFN0eWxlOiBbJ1dlYmtpdEJvcmRlckFmdGVyU3R5bGUnXSxcbiAgYm9yZGVyQmxvY2tFbmRXaWR0aDogWydXZWJraXRCb3JkZXJBZnRlcldpZHRoJ10sXG4gIGJvcmRlcklubGluZVN0YXJ0OiBbJ1dlYmtpdEJvcmRlclN0YXJ0JywgJ01vekJvcmRlclN0YXJ0J10sXG4gIGJvcmRlcklubGluZVN0YXJ0Q29sb3I6IFsnV2Via2l0Qm9yZGVyU3RhcnRDb2xvcicsICdNb3pCb3JkZXJTdGFydENvbG9yJ10sXG4gIGJvcmRlcklubGluZVN0YXJ0U3R5bGU6IFsnV2Via2l0Qm9yZGVyU3RhcnRTdHlsZScsICdNb3pCb3JkZXJTdGFydFN0eWxlJ10sXG4gIGJvcmRlcklubGluZVN0YXJ0V2lkdGg6IFsnV2Via2l0Qm9yZGVyU3RhcnRXaWR0aCcsICdNb3pCb3JkZXJTdGFydFdpZHRoJ10sXG4gIGJvcmRlcklubGluZUVuZDogWydXZWJraXRCb3JkZXJFbmQnLCAnTW96Qm9yZGVyRW5kJ10sXG4gIGJvcmRlcklubGluZUVuZENvbG9yOiBbJ1dlYmtpdEJvcmRlckVuZENvbG9yJywgJ01vekJvcmRlckVuZENvbG9yJ10sXG4gIGJvcmRlcklubGluZUVuZFN0eWxlOiBbJ1dlYmtpdEJvcmRlckVuZFN0eWxlJywgJ01vekJvcmRlckVuZFN0eWxlJ10sXG4gIGJvcmRlcklubGluZUVuZFdpZHRoOiBbJ1dlYmtpdEJvcmRlckVuZFdpZHRoJywgJ01vekJvcmRlckVuZFdpZHRoJ11cbn07XG5cbmZ1bmN0aW9uIGxvZ2ljYWwocHJvcGVydHksIHZhbHVlLCBzdHlsZSkge1xuICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGFsdGVybmF0aXZlUHJvcHMsIHByb3BlcnR5KSkge1xuICAgIHZhciBhbHRlcm5hdGl2ZVByb3BMaXN0ID0gYWx0ZXJuYXRpdmVQcm9wc1twcm9wZXJ0eV07XG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGFsdGVybmF0aXZlUHJvcExpc3QubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgIHN0eWxlW2FsdGVybmF0aXZlUHJvcExpc3RbaV1dID0gdmFsdWU7XG4gICAgfVxuICB9XG59XG59KTtcblxudmFyIGxvZ2ljYWwgPSB1bndyYXBFeHBvcnRzKGxvZ2ljYWxfMSk7XG5cbnZhciBwb3NpdGlvbl8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gcG9zaXRpb247XG5mdW5jdGlvbiBwb3NpdGlvbihwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHByb3BlcnR5ID09PSAncG9zaXRpb24nICYmIHZhbHVlID09PSAnc3RpY2t5Jykge1xuICAgIHJldHVybiBbJy13ZWJraXQtc3RpY2t5JywgJ3N0aWNreSddO1xuICB9XG59XG59KTtcblxudmFyIHBvc2l0aW9uID0gdW53cmFwRXhwb3J0cyhwb3NpdGlvbl8xKTtcblxudmFyIHNpemluZ18xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gc2l6aW5nO1xudmFyIHByZWZpeGVzID0gWyctd2Via2l0LScsICctbW96LScsICcnXTtcblxudmFyIHByb3BlcnRpZXMgPSB7XG4gIG1heEhlaWdodDogdHJ1ZSxcbiAgbWF4V2lkdGg6IHRydWUsXG4gIHdpZHRoOiB0cnVlLFxuICBoZWlnaHQ6IHRydWUsXG4gIGNvbHVtbldpZHRoOiB0cnVlLFxuICBtaW5XaWR0aDogdHJ1ZSxcbiAgbWluSGVpZ2h0OiB0cnVlXG59O1xudmFyIHZhbHVlcyA9IHtcbiAgJ21pbi1jb250ZW50JzogdHJ1ZSxcbiAgJ21heC1jb250ZW50JzogdHJ1ZSxcbiAgJ2ZpbGwtYXZhaWxhYmxlJzogdHJ1ZSxcbiAgJ2ZpdC1jb250ZW50JzogdHJ1ZSxcbiAgJ2NvbnRhaW4tZmxvYXRzJzogdHJ1ZVxufTtcblxuZnVuY3Rpb24gc2l6aW5nKHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAocHJvcGVydGllcy5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkgJiYgdmFsdWVzLmhhc093blByb3BlcnR5KHZhbHVlKSkge1xuICAgIHJldHVybiBwcmVmaXhlcy5tYXAoZnVuY3Rpb24gKHByZWZpeCkge1xuICAgICAgcmV0dXJuIHByZWZpeCArIHZhbHVlO1xuICAgIH0pO1xuICB9XG59XG59KTtcblxudmFyIHNpemluZyA9IHVud3JhcEV4cG9ydHMoc2l6aW5nXzEpO1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby12YXIsIHByZWZlci10ZW1wbGF0ZSAqL1xudmFyIHVwcGVyY2FzZVBhdHRlcm4gPSAvW0EtWl0vZztcbnZhciBtc1BhdHRlcm4gPSAvXm1zLS87XG52YXIgY2FjaGUgPSB7fTtcblxuZnVuY3Rpb24gdG9IeXBoZW5Mb3dlcihtYXRjaCkge1xuICByZXR1cm4gJy0nICsgbWF0Y2gudG9Mb3dlckNhc2UoKVxufVxuXG5mdW5jdGlvbiBoeXBoZW5hdGVTdHlsZU5hbWUobmFtZSkge1xuICBpZiAoY2FjaGUuaGFzT3duUHJvcGVydHkobmFtZSkpIHtcbiAgICByZXR1cm4gY2FjaGVbbmFtZV1cbiAgfVxuXG4gIHZhciBoTmFtZSA9IG5hbWUucmVwbGFjZSh1cHBlcmNhc2VQYXR0ZXJuLCB0b0h5cGhlbkxvd2VyKTtcbiAgcmV0dXJuIChjYWNoZVtuYW1lXSA9IG1zUGF0dGVybi50ZXN0KGhOYW1lKSA/ICctJyArIGhOYW1lIDogaE5hbWUpXG59XG5cbnZhciBoeXBoZW5hdGVTdHlsZU5hbWUkMSA9IC8qI19fUFVSRV9fKi9PYmplY3QuZnJlZXplKHtcbiAgZGVmYXVsdDogaHlwaGVuYXRlU3R5bGVOYW1lXG59KTtcblxudmFyIF9oeXBoZW5hdGVTdHlsZU5hbWUgPSBnZXRDanNFeHBvcnRGcm9tTmFtZXNwYWNlKGh5cGhlbmF0ZVN0eWxlTmFtZSQxKTtcblxudmFyIGh5cGhlbmF0ZVByb3BlcnR5XzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBoeXBoZW5hdGVQcm9wZXJ0eTtcblxuXG5cbnZhciBfaHlwaGVuYXRlU3R5bGVOYW1lMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2h5cGhlbmF0ZVN0eWxlTmFtZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIGh5cGhlbmF0ZVByb3BlcnR5KHByb3BlcnR5KSB7XG4gIHJldHVybiAoMCwgX2h5cGhlbmF0ZVN0eWxlTmFtZTIuZGVmYXVsdCkocHJvcGVydHkpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG59KTtcblxudW53cmFwRXhwb3J0cyhoeXBoZW5hdGVQcm9wZXJ0eV8xKTtcblxudmFyIHRyYW5zaXRpb25fMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHRyYW5zaXRpb247XG5cblxuXG52YXIgX2h5cGhlbmF0ZVByb3BlcnR5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoaHlwaGVuYXRlUHJvcGVydHlfMSk7XG5cblxuXG52YXIgX2lzUHJlZml4ZWRWYWx1ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGlzUHJlZml4ZWRWYWx1ZV8xKTtcblxuXG5cbnZhciBfY2FwaXRhbGl6ZVN0cmluZzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGNhcGl0YWxpemVTdHJpbmdfMSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBwcm9wZXJ0aWVzID0ge1xuICB0cmFuc2l0aW9uOiB0cnVlLFxuICB0cmFuc2l0aW9uUHJvcGVydHk6IHRydWUsXG4gIFdlYmtpdFRyYW5zaXRpb246IHRydWUsXG4gIFdlYmtpdFRyYW5zaXRpb25Qcm9wZXJ0eTogdHJ1ZSxcbiAgTW96VHJhbnNpdGlvbjogdHJ1ZSxcbiAgTW96VHJhbnNpdGlvblByb3BlcnR5OiB0cnVlXG59O1xuXG5cbnZhciBwcmVmaXhNYXBwaW5nID0ge1xuICBXZWJraXQ6ICctd2Via2l0LScsXG4gIE1vejogJy1tb3otJyxcbiAgbXM6ICctbXMtJ1xufTtcblxuZnVuY3Rpb24gcHJlZml4VmFsdWUodmFsdWUsIHByb3BlcnR5UHJlZml4TWFwKSB7XG4gIGlmICgoMCwgX2lzUHJlZml4ZWRWYWx1ZTIuZGVmYXVsdCkodmFsdWUpKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG5cbiAgLy8gb25seSBzcGxpdCBtdWx0aSB2YWx1ZXMsIG5vdCBjdWJpYyBiZXppZXJzXG4gIHZhciBtdWx0aXBsZVZhbHVlcyA9IHZhbHVlLnNwbGl0KC8sKD8hW14oKV0qKD86XFwoW14oKV0qXFwpKT9cXCkpL2cpO1xuXG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSBtdWx0aXBsZVZhbHVlcy5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICAgIHZhciBzaW5nbGVWYWx1ZSA9IG11bHRpcGxlVmFsdWVzW2ldO1xuICAgIHZhciB2YWx1ZXMgPSBbc2luZ2xlVmFsdWVdO1xuICAgIGZvciAodmFyIHByb3BlcnR5IGluIHByb3BlcnR5UHJlZml4TWFwKSB7XG4gICAgICB2YXIgZGFzaENhc2VQcm9wZXJ0eSA9ICgwLCBfaHlwaGVuYXRlUHJvcGVydHkyLmRlZmF1bHQpKHByb3BlcnR5KTtcblxuICAgICAgaWYgKHNpbmdsZVZhbHVlLmluZGV4T2YoZGFzaENhc2VQcm9wZXJ0eSkgPiAtMSAmJiBkYXNoQ2FzZVByb3BlcnR5ICE9PSAnb3JkZXInKSB7XG4gICAgICAgIHZhciBwcmVmaXhlcyA9IHByb3BlcnR5UHJlZml4TWFwW3Byb3BlcnR5XTtcbiAgICAgICAgZm9yICh2YXIgaiA9IDAsIHBMZW4gPSBwcmVmaXhlcy5sZW5ndGg7IGogPCBwTGVuOyArK2opIHtcbiAgICAgICAgICAvLyBqb2luIGFsbCBwcmVmaXhlcyBhbmQgY3JlYXRlIGEgbmV3IHZhbHVlXG4gICAgICAgICAgdmFsdWVzLnVuc2hpZnQoc2luZ2xlVmFsdWUucmVwbGFjZShkYXNoQ2FzZVByb3BlcnR5LCBwcmVmaXhNYXBwaW5nW3ByZWZpeGVzW2pdXSArIGRhc2hDYXNlUHJvcGVydHkpKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIG11bHRpcGxlVmFsdWVzW2ldID0gdmFsdWVzLmpvaW4oJywnKTtcbiAgfVxuXG4gIHJldHVybiBtdWx0aXBsZVZhbHVlcy5qb2luKCcsJyk7XG59XG5cbmZ1bmN0aW9uIHRyYW5zaXRpb24ocHJvcGVydHksIHZhbHVlLCBzdHlsZSwgcHJvcGVydHlQcmVmaXhNYXApIHtcbiAgLy8gYWxzbyBjaGVjayBmb3IgYWxyZWFkeSBwcmVmaXhlZCB0cmFuc2l0aW9uc1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiBwcm9wZXJ0aWVzLmhhc093blByb3BlcnR5KHByb3BlcnR5KSkge1xuICAgIHZhciBvdXRwdXRWYWx1ZSA9IHByZWZpeFZhbHVlKHZhbHVlLCBwcm9wZXJ0eVByZWZpeE1hcCk7XG4gICAgLy8gaWYgdGhlIHByb3BlcnR5IGlzIGFscmVhZHkgcHJlZml4ZWRcbiAgICB2YXIgd2Via2l0T3V0cHV0ID0gb3V0cHV0VmFsdWUuc3BsaXQoLywoPyFbXigpXSooPzpcXChbXigpXSpcXCkpP1xcKSkvZykuZmlsdGVyKGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgIHJldHVybiAhLy1tb3otfC1tcy0vLnRlc3QodmFsKTtcbiAgICB9KS5qb2luKCcsJyk7XG5cbiAgICBpZiAocHJvcGVydHkuaW5kZXhPZignV2Via2l0JykgPiAtMSkge1xuICAgICAgcmV0dXJuIHdlYmtpdE91dHB1dDtcbiAgICB9XG5cbiAgICB2YXIgbW96T3V0cHV0ID0gb3V0cHV0VmFsdWUuc3BsaXQoLywoPyFbXigpXSooPzpcXChbXigpXSpcXCkpP1xcKSkvZykuZmlsdGVyKGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgIHJldHVybiAhLy13ZWJraXQtfC1tcy0vLnRlc3QodmFsKTtcbiAgICB9KS5qb2luKCcsJyk7XG5cbiAgICBpZiAocHJvcGVydHkuaW5kZXhPZignTW96JykgPiAtMSkge1xuICAgICAgcmV0dXJuIG1vek91dHB1dDtcbiAgICB9XG5cbiAgICBzdHlsZVsnV2Via2l0JyArICgwLCBfY2FwaXRhbGl6ZVN0cmluZzIuZGVmYXVsdCkocHJvcGVydHkpXSA9IHdlYmtpdE91dHB1dDtcbiAgICBzdHlsZVsnTW96JyArICgwLCBfY2FwaXRhbGl6ZVN0cmluZzIuZGVmYXVsdCkocHJvcGVydHkpXSA9IG1vek91dHB1dDtcbiAgICByZXR1cm4gb3V0cHV0VmFsdWU7XG4gIH1cbn1cbn0pO1xuXG52YXIgdHJhbnNpdGlvbiA9IHVud3JhcEV4cG9ydHModHJhbnNpdGlvbl8xKTtcblxudmFyIHcgPSBbXCJXZWJraXRcIl07XG52YXIgbSA9IFtcIk1velwiXTtcbnZhciBtcyA9IFtcIm1zXCJdO1xudmFyIHdtID0gW1wiV2Via2l0XCIsIFwiTW96XCJdO1xudmFyIHdtcyA9IFtcIldlYmtpdFwiLCBcIm1zXCJdO1xudmFyIHdtbXMgPSBbXCJXZWJraXRcIiwgXCJNb3pcIiwgXCJtc1wiXTtcbnZhciBzdGF0aWNEYXRhID0ge1xuICBwbHVnaW5zOiBbYmFja2dyb3VuZENsaXAsIGNhbGMsIGNyb3NzRmFkZSwgY3Vyc29yLCBmaWx0ZXIsIGZsZXgsIGZsZXhib3hJRSwgZmxleGJveE9sZCwgZ3JhZGllbnQsIGdyaWQsIGltYWdlU2V0LCBsb2dpY2FsLCBwb3NpdGlvbiwgc2l6aW5nLCB0cmFuc2l0aW9uXSxcbiAgcHJlZml4TWFwOiB7XG4gICAgXCJ0cmFuc2Zvcm1cIjogd21zLFxuICAgIFwidHJhbnNmb3JtT3JpZ2luXCI6IHdtcyxcbiAgICBcInRyYW5zZm9ybU9yaWdpblhcIjogd21zLFxuICAgIFwidHJhbnNmb3JtT3JpZ2luWVwiOiB3bXMsXG4gICAgXCJiYWNrZmFjZVZpc2liaWxpdHlcIjogdyxcbiAgICBcInBlcnNwZWN0aXZlXCI6IHcsXG4gICAgXCJwZXJzcGVjdGl2ZU9yaWdpblwiOiB3LFxuICAgIFwidHJhbnNmb3JtU3R5bGVcIjogdyxcbiAgICBcInRyYW5zZm9ybU9yaWdpblpcIjogdyxcbiAgICBcImFuaW1hdGlvblwiOiB3LFxuICAgIFwiYW5pbWF0aW9uRGVsYXlcIjogdyxcbiAgICBcImFuaW1hdGlvbkRpcmVjdGlvblwiOiB3LFxuICAgIFwiYW5pbWF0aW9uRmlsbE1vZGVcIjogdyxcbiAgICBcImFuaW1hdGlvbkR1cmF0aW9uXCI6IHcsXG4gICAgXCJhbmltYXRpb25JdGVyYXRpb25Db3VudFwiOiB3LFxuICAgIFwiYW5pbWF0aW9uTmFtZVwiOiB3LFxuICAgIFwiYW5pbWF0aW9uUGxheVN0YXRlXCI6IHcsXG4gICAgXCJhbmltYXRpb25UaW1pbmdGdW5jdGlvblwiOiB3LFxuICAgIFwiYXBwZWFyYW5jZVwiOiB3bSxcbiAgICBcInVzZXJTZWxlY3RcIjogd21tcyxcbiAgICBcImZvbnRLZXJuaW5nXCI6IHcsXG4gICAgXCJ0ZXh0RW1waGFzaXNQb3NpdGlvblwiOiB3LFxuICAgIFwidGV4dEVtcGhhc2lzXCI6IHcsXG4gICAgXCJ0ZXh0RW1waGFzaXNTdHlsZVwiOiB3LFxuICAgIFwidGV4dEVtcGhhc2lzQ29sb3JcIjogdyxcbiAgICBcImJveERlY29yYXRpb25CcmVha1wiOiB3LFxuICAgIFwiY2xpcFBhdGhcIjogdyxcbiAgICBcIm1hc2tJbWFnZVwiOiB3LFxuICAgIFwibWFza01vZGVcIjogdyxcbiAgICBcIm1hc2tSZXBlYXRcIjogdyxcbiAgICBcIm1hc2tQb3NpdGlvblwiOiB3LFxuICAgIFwibWFza0NsaXBcIjogdyxcbiAgICBcIm1hc2tPcmlnaW5cIjogdyxcbiAgICBcIm1hc2tTaXplXCI6IHcsXG4gICAgXCJtYXNrQ29tcG9zaXRlXCI6IHcsXG4gICAgXCJtYXNrXCI6IHcsXG4gICAgXCJtYXNrQm9yZGVyU291cmNlXCI6IHcsXG4gICAgXCJtYXNrQm9yZGVyTW9kZVwiOiB3LFxuICAgIFwibWFza0JvcmRlclNsaWNlXCI6IHcsXG4gICAgXCJtYXNrQm9yZGVyV2lkdGhcIjogdyxcbiAgICBcIm1hc2tCb3JkZXJPdXRzZXRcIjogdyxcbiAgICBcIm1hc2tCb3JkZXJSZXBlYXRcIjogdyxcbiAgICBcIm1hc2tCb3JkZXJcIjogdyxcbiAgICBcIm1hc2tUeXBlXCI6IHcsXG4gICAgXCJ0ZXh0RGVjb3JhdGlvblN0eWxlXCI6IHdtLFxuICAgIFwidGV4dERlY29yYXRpb25Ta2lwXCI6IHdtLFxuICAgIFwidGV4dERlY29yYXRpb25MaW5lXCI6IHdtLFxuICAgIFwidGV4dERlY29yYXRpb25Db2xvclwiOiB3bSxcbiAgICBcImZpbHRlclwiOiB3LFxuICAgIFwiZm9udEZlYXR1cmVTZXR0aW5nc1wiOiB3bSxcbiAgICBcImJyZWFrQWZ0ZXJcIjogd21tcyxcbiAgICBcImJyZWFrQmVmb3JlXCI6IHdtbXMsXG4gICAgXCJicmVha0luc2lkZVwiOiB3bW1zLFxuICAgIFwiY29sdW1uQ291bnRcIjogd20sXG4gICAgXCJjb2x1bW5GaWxsXCI6IHdtLFxuICAgIFwiY29sdW1uR2FwXCI6IHdtLFxuICAgIFwiY29sdW1uUnVsZVwiOiB3bSxcbiAgICBcImNvbHVtblJ1bGVDb2xvclwiOiB3bSxcbiAgICBcImNvbHVtblJ1bGVTdHlsZVwiOiB3bSxcbiAgICBcImNvbHVtblJ1bGVXaWR0aFwiOiB3bSxcbiAgICBcImNvbHVtbnNcIjogd20sXG4gICAgXCJjb2x1bW5TcGFuXCI6IHdtLFxuICAgIFwiY29sdW1uV2lkdGhcIjogd20sXG4gICAgXCJ3cml0aW5nTW9kZVwiOiB3bXMsXG4gICAgXCJmbGV4XCI6IHdtcyxcbiAgICBcImZsZXhCYXNpc1wiOiB3LFxuICAgIFwiZmxleERpcmVjdGlvblwiOiB3bXMsXG4gICAgXCJmbGV4R3Jvd1wiOiB3LFxuICAgIFwiZmxleEZsb3dcIjogd21zLFxuICAgIFwiZmxleFNocmlua1wiOiB3LFxuICAgIFwiZmxleFdyYXBcIjogd21zLFxuICAgIFwiYWxpZ25Db250ZW50XCI6IHcsXG4gICAgXCJhbGlnbkl0ZW1zXCI6IHcsXG4gICAgXCJhbGlnblNlbGZcIjogdyxcbiAgICBcImp1c3RpZnlDb250ZW50XCI6IHcsXG4gICAgXCJvcmRlclwiOiB3LFxuICAgIFwidHJhbnNpdGlvbkRlbGF5XCI6IHcsXG4gICAgXCJ0cmFuc2l0aW9uRHVyYXRpb25cIjogdyxcbiAgICBcInRyYW5zaXRpb25Qcm9wZXJ0eVwiOiB3LFxuICAgIFwidHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uXCI6IHcsXG4gICAgXCJiYWNrZHJvcEZpbHRlclwiOiB3LFxuICAgIFwic2Nyb2xsU25hcFR5cGVcIjogd21zLFxuICAgIFwic2Nyb2xsU25hcFBvaW50c1hcIjogd21zLFxuICAgIFwic2Nyb2xsU25hcFBvaW50c1lcIjogd21zLFxuICAgIFwic2Nyb2xsU25hcERlc3RpbmF0aW9uXCI6IHdtcyxcbiAgICBcInNjcm9sbFNuYXBDb29yZGluYXRlXCI6IHdtcyxcbiAgICBcInNoYXBlSW1hZ2VUaHJlc2hvbGRcIjogdyxcbiAgICBcInNoYXBlSW1hZ2VNYXJnaW5cIjogdyxcbiAgICBcInNoYXBlSW1hZ2VPdXRzaWRlXCI6IHcsXG4gICAgXCJoeXBoZW5zXCI6IHdtbXMsXG4gICAgXCJmbG93SW50b1wiOiB3bXMsXG4gICAgXCJmbG93RnJvbVwiOiB3bXMsXG4gICAgXCJyZWdpb25GcmFnbWVudFwiOiB3bXMsXG4gICAgXCJ0ZXh0T3JpZW50YXRpb25cIjogdyxcbiAgICBcImJveFNpemluZ1wiOiBtLFxuICAgIFwidGV4dEFsaWduTGFzdFwiOiBtLFxuICAgIFwidGFiU2l6ZVwiOiBtLFxuICAgIFwid3JhcEZsb3dcIjogbXMsXG4gICAgXCJ3cmFwVGhyb3VnaFwiOiBtcyxcbiAgICBcIndyYXBNYXJnaW5cIjogbXMsXG4gICAgXCJ0b3VjaEFjdGlvblwiOiBtcyxcbiAgICBcInRleHRTaXplQWRqdXN0XCI6IHdtcyxcbiAgICBcImJvcmRlckltYWdlXCI6IHcsXG4gICAgXCJib3JkZXJJbWFnZU91dHNldFwiOiB3LFxuICAgIFwiYm9yZGVySW1hZ2VSZXBlYXRcIjogdyxcbiAgICBcImJvcmRlckltYWdlU2xpY2VcIjogdyxcbiAgICBcImJvcmRlckltYWdlU291cmNlXCI6IHcsXG4gICAgXCJib3JkZXJJbWFnZVdpZHRoXCI6IHdcbiAgfVxufTtcblxudmFyIHByZWZpeEFsbCA9IGNyZWF0ZVByZWZpeGVyKHN0YXRpY0RhdGEpO1xuLyogOjpcbmltcG9ydCB0eXBlIHsgU2hlZXREZWZpbml0aW9uIH0gZnJvbSAnLi9pbmRleC5qcyc7XG50eXBlIFN0cmluZ0hhbmRsZXJzID0geyBbaWQ6c3RyaW5nXTogRnVuY3Rpb24gfTtcbnR5cGUgU2VsZWN0b3JDYWxsYmFjayA9IChzZWxlY3Rvcjogc3RyaW5nKSA9PiBzdHJpbmdbXTtcbmV4cG9ydCB0eXBlIFNlbGVjdG9ySGFuZGxlciA9IChcbiAgICBzZWxlY3Rvcjogc3RyaW5nLFxuICAgIGJhc2VTZWxlY3Rvcjogc3RyaW5nLFxuICAgIGNhbGxiYWNrOiBTZWxlY3RvckNhbGxiYWNrXG4pID0+IHN0cmluZ1tdIHwgc3RyaW5nIHwgbnVsbDtcbiovXG5cbi8qKlxuICogYHNlbGVjdG9ySGFuZGxlcnNgIGFyZSBmdW5jdGlvbnMgd2hpY2ggaGFuZGxlIHNwZWNpYWwgc2VsZWN0b3JzIHdoaWNoIGFjdFxuICogZGlmZmVyZW50bHkgdGhhbiBub3JtYWwgc3R5bGUgZGVmaW5pdGlvbnMuIFRoZXNlIGZ1bmN0aW9ucyBsb29rIGF0IHRoZVxuICogY3VycmVudCBzZWxlY3RvciBhbmQgY2FuIGdlbmVyYXRlIENTUyBmb3IgdGhlIHN0eWxlcyBpbiB0aGVpciBzdWJ0cmVlIGJ5XG4gKiBjYWxsaW5nIHRoZSBjYWxsYmFjayB3aXRoIGEgbmV3IHNlbGVjdG9yLlxuICpcbiAqIEZvciBleGFtcGxlLCB3aGVuIGdlbmVyYXRpbmcgc3R5bGVzIHdpdGggYSBiYXNlIHNlbGVjdG9yIG9mICcuZm9vJyBhbmQgdGhlXG4gKiBmb2xsb3dpbmcgc3R5bGVzIG9iamVjdDpcbiAqXG4gKiAgIHtcbiAqICAgICAnOm50aC1jaGlsZCgybiknOiB7XG4gKiAgICAgICAnOmhvdmVyJzoge1xuICogICAgICAgICBjb2xvcjogJ3JlZCdcbiAqICAgICAgIH1cbiAqICAgICB9XG4gKiAgIH1cbiAqXG4gKiB3aGVuIHdlIHJlYWNoIHRoZSAnOmhvdmVyJyBzdHlsZSwgd2Ugd291bGQgY2FsbCBvdXIgc2VsZWN0b3IgaGFuZGxlcnMgbGlrZVxuICpcbiAqICAgaGFuZGxlcignOmhvdmVyJywgJy5mb286bnRoLWNoaWxkKDJuKScsIGNhbGxiYWNrKVxuICpcbiAqIFNpbmNlIG91ciBgcHNldWRvU2VsZWN0b3JzYCBoYW5kbGVzICc6aG92ZXInIHN0eWxlcywgdGhhdCBoYW5kbGVyIHdvdWxkIGNhbGxcbiAqIHRoZSBjYWxsYmFjayBsaWtlXG4gKlxuICogICBjYWxsYmFjaygnLmZvbzpudGgtY2hpbGQoMm4pOmhvdmVyJylcbiAqXG4gKiB0byBnZW5lcmF0ZSBpdHMgc3VidHJlZSBgeyBjb2xvcjogJ3JlZCcgfWAgc3R5bGVzIHdpdGggYVxuICogJy5mb286bnRoLWNoaWxkKDJuKTpob3Zlcicgc2VsZWN0b3IuIFRoZSBjYWxsYmFjayB3b3VsZCByZXR1cm4gYW4gYXJyYXkgb2YgQ1NTXG4gKiBydWxlcyBsaWtlXG4gKlxuICogICBbJy5mb286bnRoLWNoaWxkKDJuKTpob3Zlcntjb2xvcjpyZWQgIWltcG9ydGFudDt9J11cbiAqXG4gKiBhbmQgdGhlIGhhbmRsZXIgd291bGQgdGhlbiByZXR1cm4gdGhhdCByZXN1bHRpbmcgQ1NTLlxuICpcbiAqIGBkZWZhdWx0U2VsZWN0b3JIYW5kbGVyc2AgaXMgdGhlIGxpc3Qgb2YgZGVmYXVsdCBoYW5kbGVycyB1c2VkIGluIGEgY2FsbCB0b1xuICogYGdlbmVyYXRlQ1NTYC5cbiAqXG4gKiBAbmFtZSBTZWxlY3RvckhhbmRsZXJcbiAqIEBmdW5jdGlvblxuICogQHBhcmFtIHtzdHJpbmd9IHNlbGVjdG9yOiBUaGUgY3VycmVudGx5IGluc3BlY3RlZCBzZWxlY3Rvci4gJzpob3ZlcicgaW4gdGhlXG4gKiAgICAgZXhhbXBsZSBhYm92ZS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlU2VsZWN0b3I6IFRoZSBzZWxlY3RvciBvZiB0aGUgcGFyZW50IHN0eWxlcy5cbiAqICAgICAnLmZvbzpudGgtY2hpbGQoMm4pJyBpbiB0aGUgZXhhbXBsZSBhYm92ZS5cbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGdlbmVyYXRlU3VidHJlZVN0eWxlczogQSBmdW5jdGlvbiB3aGljaCBjYW4gYmUgY2FsbGVkIHRvXG4gKiAgICAgZ2VuZXJhdGUgQ1NTIGZvciB0aGUgc3VidHJlZSBvZiBzdHlsZXMgY29ycmVzcG9uZGluZyB0byB0aGUgc2VsZWN0b3IuXG4gKiAgICAgQWNjZXB0cyBhIG5ldyBiYXNlU2VsZWN0b3IgdG8gdXNlIGZvciBnZW5lcmF0aW5nIHRob3NlIHN0eWxlcy5cbiAqIEByZXR1cm5zIHtzdHJpbmdbXSB8IHN0cmluZyB8IG51bGx9IFRoZSBnZW5lcmF0ZWQgQ1NTIGZvciB0aGlzIHNlbGVjdG9yLCBvclxuICogICAgIG51bGwgaWYgd2UgZG9uJ3QgaGFuZGxlIHRoaXMgc2VsZWN0b3IuXG4gKi9cblxudmFyIGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzXG4vKiA6IFNlbGVjdG9ySGFuZGxlcltdICovXG49IFsvLyBIYW5kbGUgcHNldWRvLXNlbGVjdG9ycywgbGlrZSA6aG92ZXIgYW5kIDpudGgtY2hpbGQoM24pXG5mdW5jdGlvbiBwc2V1ZG9TZWxlY3RvcnMoc2VsZWN0b3IsIGJhc2VTZWxlY3RvciwgZ2VuZXJhdGVTdWJ0cmVlU3R5bGVzKSB7XG4gIGlmIChzZWxlY3RvclswXSAhPT0gXCI6XCIpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiBnZW5lcmF0ZVN1YnRyZWVTdHlsZXMoYmFzZVNlbGVjdG9yICsgc2VsZWN0b3IpO1xufSwgLy8gSGFuZGxlIG1lZGlhIHF1ZXJpZXMgKG9yIGZvbnQtZmFjZXMpXG5mdW5jdGlvbiBtZWRpYVF1ZXJpZXMoc2VsZWN0b3IsIGJhc2VTZWxlY3RvciwgZ2VuZXJhdGVTdWJ0cmVlU3R5bGVzKSB7XG4gIGlmIChzZWxlY3RvclswXSAhPT0gXCJAXCIpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfSAvLyBHZW5lcmF0ZSB0aGUgc3R5bGVzIG5vcm1hbGx5LCBhbmQgdGhlbiB3cmFwIHRoZW0gaW4gdGhlIG1lZGlhIHF1ZXJ5LlxuXG5cbiAgdmFyIGdlbmVyYXRlZCA9IGdlbmVyYXRlU3VidHJlZVN0eWxlcyhiYXNlU2VsZWN0b3IpO1xuICByZXR1cm4gW1wiXCIuY29uY2F0KHNlbGVjdG9yLCBcIntcIikuY29uY2F0KGdlbmVyYXRlZC5qb2luKCcnKSwgXCJ9XCIpXTtcbn1dO1xuLyoqXG4gKiBHZW5lcmF0ZSBDU1MgZm9yIGEgc2VsZWN0b3IgYW5kIHNvbWUgc3R5bGVzLlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gaGFuZGxlcyB0aGUgbWVkaWEgcXVlcmllcyBhbmQgcHNldWRvIHNlbGVjdG9ycyB0aGF0IGNhbiBiZSB1c2VkXG4gKiBpbiBhcGhyb2RpdGUgc3R5bGVzLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzZWxlY3RvcjogQSBiYXNlIENTUyBzZWxlY3RvciBmb3IgdGhlIHN0eWxlcyB0byBiZSBnZW5lcmF0ZWRcbiAqICAgICB3aXRoLlxuICogQHBhcmFtIHtPYmplY3R9IHN0eWxlVHlwZXM6IEEgbGlzdCBvZiBwcm9wZXJ0aWVzIG9mIHRoZSByZXR1cm4gdHlwZSBvZlxuICogICAgIFN0eWxlU2hlZXQuY3JlYXRlLCBlLmcuIFtzdHlsZXMucmVkLCBzdHlsZXMuYmx1ZV0uXG4gKiBAcGFyYW0ge0FycmF5LjxTZWxlY3RvckhhbmRsZXI+fSBzZWxlY3RvckhhbmRsZXJzOiBBIGxpc3Qgb2Ygc2VsZWN0b3JcbiAqICAgICBoYW5kbGVycyB0byB1c2UgZm9yIGhhbmRsaW5nIHNwZWNpYWwgc2VsZWN0b3JzLiBTZWVcbiAqICAgICBgZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnNgLlxuICogQHBhcmFtIHN0cmluZ0hhbmRsZXJzOiBTZWUgYGdlbmVyYXRlQ1NTUnVsZXNldGBcbiAqIEBwYXJhbSB1c2VJbXBvcnRhbnQ6IFNlZSBgZ2VuZXJhdGVDU1NSdWxlc2V0YFxuICpcbiAqIFRvIGFjdHVhbGx5IGdlbmVyYXRlIHRoZSBDU1Mgc3BlY2lhbC1jb25zdHJ1Y3QtbGVzcyBzdHlsZXMgYXJlIHBhc3NlZCB0b1xuICogYGdlbmVyYXRlQ1NTUnVsZXNldGAuXG4gKlxuICogRm9yIGluc3RhbmNlLCBhIGNhbGwgdG9cbiAqXG4gKiAgICAgZ2VuZXJhdGVDU1MoXCIuZm9vXCIsIFt7XG4gKiAgICAgICBjb2xvcjogXCJyZWRcIixcbiAqICAgICAgIFwiQG1lZGlhIHNjcmVlblwiOiB7XG4gKiAgICAgICAgIGhlaWdodDogMjAsXG4gKiAgICAgICAgIFwiOmhvdmVyXCI6IHtcbiAqICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiYmxhY2tcIlxuICogICAgICAgICB9XG4gKiAgICAgICB9LFxuICogICAgICAgXCI6YWN0aXZlXCI6IHtcbiAqICAgICAgICAgZm9udFdlaWdodDogXCJib2xkXCJcbiAqICAgICAgIH1cbiAqICAgICB9XSwgZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnMpO1xuICpcbiAqIHdpdGggdGhlIGRlZmF1bHQgYHNlbGVjdG9ySGFuZGxlcnNgIHdpbGwgbWFrZSA1IGNhbGxzIHRvXG4gKiBgZ2VuZXJhdGVDU1NSdWxlc2V0YDpcbiAqXG4gKiAgICAgZ2VuZXJhdGVDU1NSdWxlc2V0KFwiLmZvb1wiLCB7IGNvbG9yOiBcInJlZFwiIH0sIC4uLilcbiAqICAgICBnZW5lcmF0ZUNTU1J1bGVzZXQoXCIuZm9vOmFjdGl2ZVwiLCB7IGZvbnRXZWlnaHQ6IFwiYm9sZFwiIH0sIC4uLilcbiAqICAgICAvLyBUaGVzZSAyIHdpbGwgYmUgd3JhcHBlZCBpbiBAbWVkaWEgc2NyZWVuIHt9XG4gKiAgICAgZ2VuZXJhdGVDU1NSdWxlc2V0KFwiLmZvb1wiLCB7IGhlaWdodDogMjAgfSwgLi4uKVxuICogICAgIGdlbmVyYXRlQ1NTUnVsZXNldChcIi5mb286aG92ZXJcIiwgeyBiYWNrZ3JvdW5kQ29sb3I6IFwiYmxhY2tcIiB9LCAuLi4pXG4gKi9cblxudmFyIGdlbmVyYXRlQ1NTID0gZnVuY3Rpb24gZ2VuZXJhdGVDU1Moc2VsZWN0b3Jcbi8qIDogc3RyaW5nICovXG4sIHN0eWxlVHlwZXNcbi8qIDogU2hlZXREZWZpbml0aW9uW10gKi9cbiwgc2VsZWN0b3JIYW5kbGVyc1xuLyogOiBTZWxlY3RvckhhbmRsZXJbXSAqL1xuLCBzdHJpbmdIYW5kbGVyc1xuLyogOiBTdHJpbmdIYW5kbGVycyAqL1xuLCB1c2VJbXBvcnRhbnRcbi8qIDogYm9vbGVhbiAqL1xuKVxuLyogOiBzdHJpbmdbXSAqL1xue1xuICB2YXIgbWVyZ2VkID0gbmV3IE9yZGVyZWRFbGVtZW50cygpO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVUeXBlcy5sZW5ndGg7IGkrKykge1xuICAgIG1lcmdlZC5hZGRTdHlsZVR5cGUoc3R5bGVUeXBlc1tpXSk7XG4gIH1cblxuICB2YXIgcGxhaW5EZWNsYXJhdGlvbnMgPSBuZXcgT3JkZXJlZEVsZW1lbnRzKCk7XG4gIHZhciBnZW5lcmF0ZWRTdHlsZXMgPSBbXTsgLy8gVE9ETyhlbWlseSk6IGJlbmNobWFyayB0aGlzIHRvIHNlZSBpZiBhIHBsYWluIGZvciBsb29wIHdvdWxkIGJlIGZhc3Rlci5cblxuICBtZXJnZWQuZm9yRWFjaChmdW5jdGlvbiAodmFsLCBrZXkpIHtcbiAgICAvLyBGb3IgZWFjaCBrZXksIHNlZSBpZiBvbmUgb2YgdGhlIHNlbGVjdG9yIGhhbmRsZXJzIHdpbGwgaGFuZGxlIHRoZXNlXG4gICAgLy8gc3R5bGVzLlxuICAgIHZhciBmb3VuZEhhbmRsZXIgPSBzZWxlY3RvckhhbmRsZXJzLnNvbWUoZnVuY3Rpb24gKGhhbmRsZXIpIHtcbiAgICAgIHZhciByZXN1bHQgPSBoYW5kbGVyKGtleSwgc2VsZWN0b3IsIGZ1bmN0aW9uIChuZXdTZWxlY3Rvcikge1xuICAgICAgICByZXR1cm4gZ2VuZXJhdGVDU1MobmV3U2VsZWN0b3IsIFt2YWxdLCBzZWxlY3RvckhhbmRsZXJzLCBzdHJpbmdIYW5kbGVycywgdXNlSW1wb3J0YW50KTtcbiAgICAgIH0pO1xuXG4gICAgICBpZiAocmVzdWx0ICE9IG51bGwpIHtcbiAgICAgICAgLy8gSWYgdGhlIGhhbmRsZXIgcmV0dXJuZWQgc29tZXRoaW5nLCBhZGQgaXQgdG8gdGhlIGdlbmVyYXRlZFxuICAgICAgICAvLyBDU1MgYW5kIHN0b3AgbG9va2luZyBmb3IgYW5vdGhlciBoYW5kbGVyLlxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShyZXN1bHQpKSB7XG4gICAgICAgICAgZ2VuZXJhdGVkU3R5bGVzLnB1c2guYXBwbHkoZ2VuZXJhdGVkU3R5bGVzLCBfdG9Db25zdW1hYmxlQXJyYXkocmVzdWx0KSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgICAgICAgY29uc29sZS53YXJuKCdXQVJOSU5HOiBTZWxlY3RvciBoYW5kbGVycyBzaG91bGQgcmV0dXJuIGFuIGFycmF5IG9mIHJ1bGVzLicgKyAnUmV0dXJuaW5nIGEgc3RyaW5nIGNvbnRhaW5pbmcgbXVsdGlwbGUgcnVsZXMgaXMgZGVwcmVjYXRlZC4nLCBoYW5kbGVyKTtcbiAgICAgICAgICBnZW5lcmF0ZWRTdHlsZXMucHVzaChcIkBtZWRpYSBhbGwge1wiLmNvbmNhdChyZXN1bHQsIFwifVwiKSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9KTsgLy8gSWYgbm9uZSBvZiB0aGUgaGFuZGxlcnMgaGFuZGxlZCBpdCwgYWRkIGl0IHRvIHRoZSBsaXN0IG9mIHBsYWluXG4gICAgLy8gc3R5bGUgZGVjbGFyYXRpb25zLlxuXG4gICAgaWYgKCFmb3VuZEhhbmRsZXIpIHtcbiAgICAgIHBsYWluRGVjbGFyYXRpb25zLnNldChrZXksIHZhbCwgdHJ1ZSk7XG4gICAgfVxuICB9KTtcbiAgdmFyIGdlbmVyYXRlZFJ1bGVzZXQgPSBnZW5lcmF0ZUNTU1J1bGVzZXQoc2VsZWN0b3IsIHBsYWluRGVjbGFyYXRpb25zLCBzdHJpbmdIYW5kbGVycywgdXNlSW1wb3J0YW50LCBzZWxlY3RvckhhbmRsZXJzKTtcblxuICBpZiAoZ2VuZXJhdGVkUnVsZXNldCkge1xuICAgIGdlbmVyYXRlZFN0eWxlcy51bnNoaWZ0KGdlbmVyYXRlZFJ1bGVzZXQpO1xuICB9XG5cbiAgcmV0dXJuIGdlbmVyYXRlZFN0eWxlcztcbn07XG4vKipcbiAqIEhlbHBlciBtZXRob2Qgb2YgZ2VuZXJhdGVDU1NSdWxlc2V0IHRvIGZhY2lsaXRhdGUgY3VzdG9tIGhhbmRsaW5nIG9mIGNlcnRhaW5cbiAqIENTUyBwcm9wZXJ0aWVzLiBVc2VkIGZvciBlLmcuIGZvbnQgZmFtaWxpZXMuXG4gKlxuICogU2VlIGdlbmVyYXRlQ1NTUnVsZXNldCBmb3IgdXNhZ2UgYW5kIGRvY3VtZW50YXRpb24gb2YgcGFyYW1hdGVyIHR5cGVzLlxuICovXG5cbnZhciBydW5TdHJpbmdIYW5kbGVycyA9IGZ1bmN0aW9uIHJ1blN0cmluZ0hhbmRsZXJzKGRlY2xhcmF0aW9uc1xuLyogOiBPcmRlcmVkRWxlbWVudHMgKi9cbiwgc3RyaW5nSGFuZGxlcnNcbi8qIDogU3RyaW5nSGFuZGxlcnMgKi9cbiwgc2VsZWN0b3JIYW5kbGVyc1xuLyogOiBTZWxlY3RvckhhbmRsZXJbXSAqL1xuKVxuLyogOiB2b2lkICovXG57XG4gIGlmICghc3RyaW5nSGFuZGxlcnMpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgc3RyaW5nSGFuZGxlcktleXMgPSBPYmplY3Qua2V5cyhzdHJpbmdIYW5kbGVycyk7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHJpbmdIYW5kbGVyS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBrZXkgPSBzdHJpbmdIYW5kbGVyS2V5c1tpXTtcblxuICAgIGlmIChkZWNsYXJhdGlvbnMuaGFzKGtleSkpIHtcbiAgICAgIC8vIEEgZGVjbGFyYXRpb24gZXhpc3RzIGZvciB0aGlzIHBhcnRpY3VsYXIgc3RyaW5nIGhhbmRsZXIsIHNvIHdlXG4gICAgICAvLyBuZWVkIHRvIGxldCB0aGUgc3RyaW5nIGhhbmRsZXIgaW50ZXJwcmV0IHRoZSBkZWNsYXJhdGlvbiBmaXJzdFxuICAgICAgLy8gYmVmb3JlIHByb2NlZWRpbmcuXG4gICAgICAvL1xuICAgICAgLy8gVE9ETyhlbWlseSk6IFBhc3MgaW4gYSBjYWxsYmFjayB3aGljaCBnZW5lcmF0ZXMgQ1NTLCBzaW1pbGFyIHRvXG4gICAgICAvLyBob3cgb3VyIHNlbGVjdG9yIGhhbmRsZXJzIHdvcmssIGluc3RlYWQgb2YgcGFzc2luZyBpblxuICAgICAgLy8gYHNlbGVjdG9ySGFuZGxlcnNgIGFuZCBoYXZlIHRoZW0gbWFrZSBjYWxscyB0byBgZ2VuZXJhdGVDU1NgXG4gICAgICAvLyB0aGVtc2VsdmVzLiBSaWdodCBub3csIHRoaXMgaXMgaW1wcmFjdGljYWwgYmVjYXVzZSBvdXIgc3RyaW5nXG4gICAgICAvLyBoYW5kbGVycyBhcmUgdmVyeSBzcGVjaWFsaXplZCBhbmQgZG8gY29tcGxleCB0aGluZ3MuXG4gICAgICBkZWNsYXJhdGlvbnMuc2V0KGtleSwgc3RyaW5nSGFuZGxlcnNba2V5XShkZWNsYXJhdGlvbnMuZ2V0KGtleSksIHNlbGVjdG9ySGFuZGxlcnMpLCAvLyBQcmVzZXJ2ZSBvcmRlciBoZXJlLCBzaW5jZSB3ZSBhcmUgcmVhbGx5IHJlcGxhY2luZyBhblxuICAgICAgLy8gdW5wcm9jZXNzZWQgc3R5bGUgd2l0aCBhIHByb2Nlc3NlZCBzdHlsZSwgbm90IG92ZXJyaWRpbmcgYW5cbiAgICAgIC8vIGVhcmxpZXIgc3R5bGVcbiAgICAgIGZhbHNlKTtcbiAgICB9XG4gIH1cbn07XG5cbnZhciB0cmFuc2Zvcm1SdWxlID0gZnVuY3Rpb24gdHJhbnNmb3JtUnVsZShrZXlcbi8qIDogc3RyaW5nICovXG4sIHZhbHVlXG4vKiA6IHN0cmluZyAqL1xuLCB0cmFuc2Zvcm1WYWx1ZVxuLyogOiBmdW5jdGlvbiAqL1xuKSB7XG4gIHJldHVybiAoXG4gICAgLyogOiBzdHJpbmcgKi9cbiAgICBcIlwiLmNvbmNhdChrZWJhYmlmeVN0eWxlTmFtZShrZXkpLCBcIjpcIikuY29uY2F0KHRyYW5zZm9ybVZhbHVlKGtleSwgdmFsdWUpLCBcIjtcIilcbiAgKTtcbn07XG5cbnZhciBhcnJheVRvT2JqZWN0S2V5c1JlZHVjZXIgPSBmdW5jdGlvbiBhcnJheVRvT2JqZWN0S2V5c1JlZHVjZXIoYWNjLCB2YWwpIHtcbiAgYWNjW3ZhbF0gPSB0cnVlO1xuICByZXR1cm4gYWNjO1xufTtcbi8qKlxuICogR2VuZXJhdGUgYSBDU1MgcnVsZXNldCB3aXRoIHRoZSBzZWxlY3RvciBhbmQgY29udGFpbmluZyB0aGUgZGVjbGFyYXRpb25zLlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gYXNzdW1lcyB0aGF0IHRoZSBnaXZlbiBkZWNsYXJhdGlvbnMgZG9uJ3QgY29udGFpbiBhbnkgc3BlY2lhbFxuICogY2hpbGRyZW4gKHN1Y2ggYXMgbWVkaWEgcXVlcmllcywgcHNldWRvLXNlbGVjdG9ycywgb3IgZGVzY2VuZGFudCBzdHlsZXMpLlxuICpcbiAqIE5vdGUgdGhhdCB0aGlzIG1ldGhvZCBkb2VzIG5vdCBkZWFsIHdpdGggbmVzdGluZyB1c2VkIGZvciBlLmcuXG4gKiBwc3VlZG8tc2VsZWN0b3JzIG9yIG1lZGlhIHF1ZXJpZXMuIFRoYXQgcmVzcG9uc2liaWxpdHkgaXMgbGVmdCB0byAgdGhlXG4gKiBgZ2VuZXJhdGVDU1NgIGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzZWxlY3RvcjogdGhlIHNlbGVjdG9yIGFzc29jaWF0ZWQgd2l0aCB0aGUgcnVsZXNldFxuICogQHBhcmFtIHtPYmplY3R9IGRlY2xhcmF0aW9uczogYSBtYXAgZnJvbSBjYW1lbENhc2VkIENTUyBwcm9wZXJ0eSBuYW1lIHRvIENTU1xuICogICAgIHByb3BlcnR5IHZhbHVlLlxuICogQHBhcmFtIHtPYmplY3QuPHN0cmluZywgZnVuY3Rpb24+fSBzdHJpbmdIYW5kbGVyczogYSBtYXAgZnJvbSBjYW1lbENhc2VkIENTU1xuICogICAgIHByb3BlcnR5IG5hbWUgdG8gYSBmdW5jdGlvbiB3aGljaCB3aWxsIG1hcCB0aGUgZ2l2ZW4gdmFsdWUgdG8gdGhlIHZhbHVlXG4gKiAgICAgdGhhdCBpcyBvdXRwdXQuXG4gKiBAcGFyYW0ge2Jvb2x9IHVzZUltcG9ydGFudDogQSBib29sZWFuIHNheWluZyB3aGV0aGVyIHRvIGFwcGVuZCBcIiFpbXBvcnRhbnRcIlxuICogICAgIHRvIGVhY2ggb2YgdGhlIENTUyBkZWNsYXJhdGlvbnMuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBBIHN0cmluZyBvZiByYXcgQ1NTLlxuICpcbiAqIEV4YW1wbGVzOlxuICpcbiAqICAgIGdlbmVyYXRlQ1NTUnVsZXNldChcIi5ibGFoXCIsIHsgY29sb3I6IFwicmVkXCIgfSlcbiAqICAgIC0+IFwiLmJsYWh7Y29sb3I6IHJlZCAhaW1wb3J0YW50O31cIlxuICogICAgZ2VuZXJhdGVDU1NSdWxlc2V0KFwiLmJsYWhcIiwgeyBjb2xvcjogXCJyZWRcIiB9LCB7fSwgZmFsc2UpXG4gKiAgICAtPiBcIi5ibGFoe2NvbG9yOiByZWR9XCJcbiAqICAgIGdlbmVyYXRlQ1NTUnVsZXNldChcIi5ibGFoXCIsIHsgY29sb3I6IFwicmVkXCIgfSwge2NvbG9yOiBjID0+IGMudG9VcHBlckNhc2V9KVxuICogICAgLT4gXCIuYmxhaHtjb2xvcjogUkVEfVwiXG4gKiAgICBnZW5lcmF0ZUNTU1J1bGVzZXQoXCIuYmxhaDpob3ZlclwiLCB7IGNvbG9yOiBcInJlZFwiIH0pXG4gKiAgICAtPiBcIi5ibGFoOmhvdmVye2NvbG9yOiByZWR9XCJcbiAqL1xuXG5cbnZhciBnZW5lcmF0ZUNTU1J1bGVzZXQgPSBmdW5jdGlvbiBnZW5lcmF0ZUNTU1J1bGVzZXQoc2VsZWN0b3Jcbi8qIDogc3RyaW5nICovXG4sIGRlY2xhcmF0aW9uc1xuLyogOiBPcmRlcmVkRWxlbWVudHMgKi9cbiwgc3RyaW5nSGFuZGxlcnNcbi8qIDogU3RyaW5nSGFuZGxlcnMgKi9cbiwgdXNlSW1wb3J0YW50XG4vKiA6IGJvb2xlYW4gKi9cbiwgc2VsZWN0b3JIYW5kbGVyc1xuLyogOiBTZWxlY3RvckhhbmRsZXJbXSAqL1xuKVxuLyogOiBzdHJpbmcgKi9cbntcbiAgLy8gTXV0YXRlcyBkZWNsYXJhdGlvbnNcbiAgcnVuU3RyaW5nSGFuZGxlcnMoZGVjbGFyYXRpb25zLCBzdHJpbmdIYW5kbGVycywgc2VsZWN0b3JIYW5kbGVycyk7XG4gIHZhciBvcmlnaW5hbEVsZW1lbnRzID0gT2JqZWN0LmtleXMoZGVjbGFyYXRpb25zLmVsZW1lbnRzKS5yZWR1Y2UoYXJyYXlUb09iamVjdEtleXNSZWR1Y2VyLCBPYmplY3QuY3JlYXRlKG51bGwpKTsgLy8gTk9URShlbWlseSk6IFRoaXMgbXV0YXRlcyBoYW5kbGVkRGVjbGFyYXRpb25zLmVsZW1lbnRzLlxuXG4gIHZhciBwcmVmaXhlZEVsZW1lbnRzID0gcHJlZml4QWxsKGRlY2xhcmF0aW9ucy5lbGVtZW50cyk7XG4gIHZhciBlbGVtZW50TmFtZXMgPSBPYmplY3Qua2V5cyhwcmVmaXhlZEVsZW1lbnRzKTtcblxuICBpZiAoZWxlbWVudE5hbWVzLmxlbmd0aCAhPT0gZGVjbGFyYXRpb25zLmtleU9yZGVyLmxlbmd0aCkge1xuICAgIC8vIFRoZXJlIGFyZSBzb21lIHByZWZpeGVkIHZhbHVlcywgc28gd2UgbmVlZCB0byBmaWd1cmUgb3V0IGhvdyB0byBzb3J0XG4gICAgLy8gdGhlbS5cbiAgICAvL1xuICAgIC8vIExvb3AgdGhyb3VnaCBwcmVmaXhlZEVsZW1lbnRzLCBsb29raW5nIGZvciBhbnl0aGluZyB0aGF0IGlzIG5vdCBpblxuICAgIC8vIHNvcnRPcmRlciwgd2hpY2ggbWVhbnMgaXQgd2FzIGFkZGVkIGJ5IHByZWZpeEFsbC4gVGhpcyBtZWFucyB0aGF0IHdlXG4gICAgLy8gbmVlZCB0byBmaWd1cmUgb3V0IHdoZXJlIGl0IHNob3VsZCBhcHBlYXIgaW4gdGhlIHNvcnRPcmRlci5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGVsZW1lbnROYW1lcy5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKCFvcmlnaW5hbEVsZW1lbnRzW2VsZW1lbnROYW1lc1tpXV0pIHtcbiAgICAgICAgLy8gVGhpcyBlbGVtZW50IGlzIG5vdCBpbiB0aGUgc29ydE9yZGVyLCB3aGljaCBtZWFucyBpdCBpcyBhIHByZWZpeGVkXG4gICAgICAgIC8vIHZhbHVlIHRoYXQgd2FzIGFkZGVkIGJ5IHByZWZpeEFsbC4gTGV0J3MgdHJ5IHRvIGZpZ3VyZSBvdXQgd2hlcmUgaXRcbiAgICAgICAgLy8gZ29lcy5cbiAgICAgICAgdmFyIG9yaWdpbmFsU3R5bGUgPSB2b2lkIDA7XG5cbiAgICAgICAgaWYgKGVsZW1lbnROYW1lc1tpXVswXSA9PT0gJ1cnKSB7XG4gICAgICAgICAgLy8gVGhpcyBpcyBhIFdlYmtpdC1wcmVmaXhlZCBzdHlsZSwgbGlrZSBcIldlYmtpdFRyYW5zaXRpb25cIi4gTGV0J3NcbiAgICAgICAgICAvLyBmaW5kIGl0cyBvcmlnaW5hbCBzdHlsZSdzIHNvcnQgb3JkZXIuXG4gICAgICAgICAgb3JpZ2luYWxTdHlsZSA9IGVsZW1lbnROYW1lc1tpXVs2XS50b0xvd2VyQ2FzZSgpICsgZWxlbWVudE5hbWVzW2ldLnNsaWNlKDcpO1xuICAgICAgICB9IGVsc2UgaWYgKGVsZW1lbnROYW1lc1tpXVsxXSA9PT0gJ28nKSB7XG4gICAgICAgICAgLy8gVGhpcyBpcyBhIE1vei1wcmVmaXhlZCBzdHlsZSwgbGlrZSBcIk1velRyYW5zaXRpb25cIi4gV2UgY2hlY2tcbiAgICAgICAgICAvLyB0aGUgc2Vjb25kIGNoYXJhY3RlciB0byBhdm9pZCBjb2xsaWRpbmcgd2l0aCBNcy1wcmVmaXhlZFxuICAgICAgICAgIC8vIHN0eWxlcy4gTGV0J3MgZmluZCBpdHMgb3JpZ2luYWwgc3R5bGUncyBzb3J0IG9yZGVyLlxuICAgICAgICAgIG9yaWdpbmFsU3R5bGUgPSBlbGVtZW50TmFtZXNbaV1bM10udG9Mb3dlckNhc2UoKSArIGVsZW1lbnROYW1lc1tpXS5zbGljZSg0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBpZiAoZWxlbWVudE5hbWVzW2ldWzFdID09PSAncycpIHtcbiAgICAgICAgICAvLyBUaGlzIGlzIGEgTXMtcHJlZml4ZWQgc3R5bGUsIGxpa2UgXCJNc1RyYW5zaXRpb25cIi5cbiAgICAgICAgICBvcmlnaW5hbFN0eWxlID0gZWxlbWVudE5hbWVzW2ldWzJdLnRvTG93ZXJDYXNlKCkgKyBlbGVtZW50TmFtZXNbaV0uc2xpY2UoMyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAob3JpZ2luYWxTdHlsZSAmJiBvcmlnaW5hbEVsZW1lbnRzW29yaWdpbmFsU3R5bGVdKSB7XG4gICAgICAgICAgdmFyIG9yaWdpbmFsSW5kZXggPSBkZWNsYXJhdGlvbnMua2V5T3JkZXIuaW5kZXhPZihvcmlnaW5hbFN0eWxlKTtcbiAgICAgICAgICBkZWNsYXJhdGlvbnMua2V5T3JkZXIuc3BsaWNlKG9yaWdpbmFsSW5kZXgsIDAsIGVsZW1lbnROYW1lc1tpXSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gV2UgZG9uJ3Qga25vdyB3aGF0IHRoZSBvcmlnaW5hbCBzdHlsZSB3YXMsIHNvIHNvcnQgaXQgdG9cbiAgICAgICAgICAvLyB0b3AuIFRoaXMgY2FuIGhhcHBlbiBmb3Igc3R5bGVzIHRoYXQgYXJlIGFkZGVkIHRoYXQgZG9uJ3RcbiAgICAgICAgICAvLyBoYXZlIHRoZSBzYW1lIGJhc2UgbmFtZSBhcyB0aGUgb3JpZ2luYWwgc3R5bGUuXG4gICAgICAgICAgZGVjbGFyYXRpb25zLmtleU9yZGVyLnVuc2hpZnQoZWxlbWVudE5hbWVzW2ldKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHZhciB0cmFuc2Zvcm1WYWx1ZSA9IHVzZUltcG9ydGFudCA9PT0gZmFsc2UgPyBzdHJpbmdpZnlWYWx1ZSA6IHN0cmluZ2lmeUFuZEltcG9ydGFudGlmeVZhbHVlO1xuICB2YXIgcnVsZXMgPSBbXTtcblxuICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgZGVjbGFyYXRpb25zLmtleU9yZGVyLmxlbmd0aDsgX2krKykge1xuICAgIHZhciBrZXkgPSBkZWNsYXJhdGlvbnMua2V5T3JkZXJbX2ldO1xuICAgIHZhciB2YWx1ZSA9IHByZWZpeGVkRWxlbWVudHNba2V5XTtcblxuICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgLy8gaW5saW5lLXN0eWxlLXByZWZpeGVyIHJldHVybnMgYW4gYXJyYXkgd2hlbiB0aGVyZSBzaG91bGQgYmVcbiAgICAgIC8vIG11bHRpcGxlIHJ1bGVzIGZvciB0aGUgc2FtZSBrZXkuIEhlcmUgd2UgZmxhdHRlbiB0byBtdWx0aXBsZVxuICAgICAgLy8gcGFpcnMgd2l0aCB0aGUgc2FtZSBrZXkuXG4gICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHZhbHVlLmxlbmd0aDsgaisrKSB7XG4gICAgICAgIHJ1bGVzLnB1c2godHJhbnNmb3JtUnVsZShrZXksIHZhbHVlW2pdLCB0cmFuc2Zvcm1WYWx1ZSkpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBydWxlcy5wdXNoKHRyYW5zZm9ybVJ1bGUoa2V5LCB2YWx1ZSwgdHJhbnNmb3JtVmFsdWUpKTtcbiAgICB9XG4gIH1cblxuICBpZiAocnVsZXMubGVuZ3RoKSB7XG4gICAgcmV0dXJuIFwiXCIuY29uY2F0KHNlbGVjdG9yLCBcIntcIikuY29uY2F0KHJ1bGVzLmpvaW4oXCJcIiksIFwifVwiKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gXCJcIjtcbiAgfVxufTtcblxuLyogOjpcbmltcG9ydCB0eXBlIHsgU2hlZXREZWZpbml0aW9uLCBTaGVldERlZmluaXRpb25zIH0gZnJvbSAnLi9pbmRleC5qcyc7XG5pbXBvcnQgdHlwZSB7IE1heWJlU2hlZXREZWZpbml0aW9uIH0gZnJvbSAnLi9leHBvcnRzLmpzJztcbmltcG9ydCB0eXBlIHsgU2VsZWN0b3JIYW5kbGVyIH0gZnJvbSAnLi9nZW5lcmF0ZS5qcyc7XG4qL1xuLy8gVGhlIGN1cnJlbnQgPHN0eWxlPiB0YWcgd2UgYXJlIGluc2VydGluZyBpbnRvLCBvciBudWxsIGlmIHdlIGhhdmVuJ3Rcbi8vIGluc2VydGVkIGFueXRoaW5nIHlldC4gV2UgY291bGQgZmluZCB0aGlzIGVhY2ggdGltZSB1c2luZ1xuLy8gYGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJzdHlsZVtkYXRhLWFwaHJvZGl0ZVwiXSlgLCBidXQgaG9sZGluZyBvbnRvIGl0IGlzXG4vLyBmYXN0ZXIuXG5cbnZhciBzdHlsZVRhZ1xuLyogOiA/SFRNTFN0eWxlRWxlbWVudCAqL1xuPSBudWxsOyAvLyBJbmplY3QgYSBzZXQgb2YgcnVsZXMgaW50byBhIDxzdHlsZT4gdGFnIGluIHRoZSBoZWFkIG9mIHRoZSBkb2N1bWVudC4gVGhpc1xuLy8gd2lsbCBhdXRvbWF0aWNhbGx5IGNyZWF0ZSBhIHN0eWxlIHRhZyBhbmQgdGhlbiBjb250aW51ZSB0byB1c2UgaXQgZm9yXG4vLyBtdWx0aXBsZSBpbmplY3Rpb25zLiBJdCB3aWxsIGFsc28gdXNlIGEgc3R5bGUgdGFnIHdpdGggdGhlIGBkYXRhLWFwaHJvZGl0ZWBcbi8vIHRhZyBvbiBpdCBpZiB0aGF0IGV4aXN0cyBpbiB0aGUgRE9NLiBUaGlzIGNvdWxkIGJlIHVzZWQgZm9yIGUuZy4gcmV1c2luZyB0aGVcbi8vIHNhbWUgc3R5bGUgdGFnIHRoYXQgc2VydmVyLXNpZGUgcmVuZGVyaW5nIGluc2VydHMuXG5cbnZhciBpbmplY3RTdHlsZVRhZyA9IGZ1bmN0aW9uIGluamVjdFN0eWxlVGFnKGNzc1J1bGVzXG4vKiA6IHN0cmluZ1tdICovXG4pIHtcbiAgaWYgKHN0eWxlVGFnID09IG51bGwpIHtcbiAgICAvLyBUcnkgdG8gZmluZCBhIHN0eWxlIHRhZyB3aXRoIHRoZSBgZGF0YS1hcGhyb2RpdGVgIGF0dHJpYnV0ZSBmaXJzdC5cbiAgICBzdHlsZVRhZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJzdHlsZVtkYXRhLWFwaHJvZGl0ZV1cIilcbiAgICAvKiA6IGFueSAqL1xuICAgIDsgLy8gSWYgdGhhdCBkb2Vzbid0IHdvcmssIGdlbmVyYXRlIGEgbmV3IHN0eWxlIHRhZy5cblxuICAgIGlmIChzdHlsZVRhZyA9PSBudWxsKSB7XG4gICAgICAvLyBUYWtlbiBmcm9tXG4gICAgICAvLyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzUyNDY5Ni9ob3ctdG8tY3JlYXRlLWEtc3R5bGUtdGFnLXdpdGgtamF2YXNjcmlwdFxuICAgICAgdmFyIGhlYWQgPSBkb2N1bWVudC5oZWFkIHx8IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdoZWFkJylbMF07XG4gICAgICBzdHlsZVRhZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gICAgICBzdHlsZVRhZy50eXBlID0gJ3RleHQvY3NzJztcbiAgICAgIHN0eWxlVGFnLnNldEF0dHJpYnV0ZShcImRhdGEtYXBocm9kaXRlXCIsIFwiXCIpO1xuICAgICAgaGVhZC5hcHBlbmRDaGlsZChzdHlsZVRhZyk7XG4gICAgfVxuICB9IC8vICRGbG93Rml4TWVcblxuXG4gIHZhciBzaGVldCA9IHN0eWxlVGFnLnN0eWxlU2hlZXQgfHwgc3R5bGVUYWcuc2hlZXRcbiAgLyogOiBhbnkgKi9cbiAgO1xuXG4gIGlmIChzaGVldC5pbnNlcnRSdWxlKSB7XG4gICAgdmFyIG51bVJ1bGVzID0gc2hlZXQuY3NzUnVsZXMubGVuZ3RoO1xuICAgIGNzc1J1bGVzLmZvckVhY2goZnVuY3Rpb24gKHJ1bGUpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHNoZWV0Lmluc2VydFJ1bGUocnVsZSwgbnVtUnVsZXMpO1xuICAgICAgICBudW1SdWxlcyArPSAxO1xuICAgICAgfSBjYXRjaCAoZSkgey8vIFRoZSBzZWxlY3RvciBmb3IgdGhpcyBydWxlIHdhc24ndCBjb21wYXRpYmxlIHdpdGggdGhlIGJyb3dzZXJcbiAgICAgIH1cbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZVRhZy5pbm5lclRleHQgPSAoc3R5bGVUYWcuaW5uZXJUZXh0IHx8ICcnKSArIGNzc1J1bGVzLmpvaW4oJycpO1xuICB9XG59OyAvLyBDdXN0b20gaGFuZGxlcnMgZm9yIHN0cmluZ2lmeWluZyBDU1MgdmFsdWVzIHRoYXQgaGF2ZSBzaWRlIGVmZmVjdHNcbi8vIChzdWNoIGFzIGZvbnRGYW1pbHksIHdoaWNoIGNhbiBjYXVzZSBAZm9udC1mYWNlIHJ1bGVzIHRvIGJlIGluamVjdGVkKVxuXG5cbnZhciBzdHJpbmdIYW5kbGVycyA9IHtcbiAgLy8gV2l0aCBmb250RmFtaWx5IHdlIGxvb2sgZm9yIG9iamVjdHMgdGhhdCBhcmUgcGFzc2VkIGluIGFuZCBpbnRlcnByZXRcbiAgLy8gdGhlbSBhcyBAZm9udC1mYWNlIHJ1bGVzIHRoYXQgd2UgbmVlZCB0byBpbmplY3QuIFRoZSB2YWx1ZSBvZiBmb250RmFtaWx5XG4gIC8vIGNhbiBlaXRoZXIgYmUgYSBzdHJpbmcgKGFzIG5vcm1hbCksIGFuIG9iamVjdCAoYSBzaW5nbGUgZm9udCBmYWNlKSwgb3JcbiAgLy8gYW4gYXJyYXkgb2Ygb2JqZWN0cyBhbmQgc3RyaW5ncy5cbiAgZm9udEZhbWlseTogZnVuY3Rpb24gZm9udEZhbWlseSh2YWwpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWwpKSB7XG4gICAgICB2YXIgbmFtZU1hcCA9IHt9O1xuICAgICAgdmFsLmZvckVhY2goZnVuY3Rpb24gKHYpIHtcbiAgICAgICAgbmFtZU1hcFtmb250RmFtaWx5KHYpXSA9IHRydWU7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBPYmplY3Qua2V5cyhuYW1lTWFwKS5qb2luKFwiLFwiKTtcbiAgICB9IGVsc2UgaWYgKF90eXBlb2YodmFsKSA9PT0gXCJvYmplY3RcIikge1xuICAgICAgaW5qZWN0U3R5bGVPbmNlKHZhbC5zcmMsIFwiQGZvbnQtZmFjZVwiLCBbdmFsXSwgZmFsc2UpO1xuICAgICAgcmV0dXJuIFwiXFxcIlwiLmNvbmNhdCh2YWwuZm9udEZhbWlseSwgXCJcXFwiXCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdmFsO1xuICAgIH1cbiAgfSxcbiAgLy8gV2l0aCBhbmltYXRpb25OYW1lIHdlIGxvb2sgZm9yIGFuIG9iamVjdCB0aGF0IGNvbnRhaW5zIGtleWZyYW1lcyBhbmRcbiAgLy8gaW5qZWN0IHRoZW0gYXMgYW4gYEBrZXlmcmFtZXNgIGJsb2NrLCByZXR1cm5pbmcgYSB1bmlxdWVseSBnZW5lcmF0ZWRcbiAgLy8gbmFtZS4gVGhlIGtleWZyYW1lcyBvYmplY3Qgc2hvdWxkIGxvb2sgbGlrZVxuICAvLyAgYW5pbWF0aW9uTmFtZToge1xuICAvLyAgICBmcm9tOiB7XG4gIC8vICAgICAgbGVmdDogMCxcbiAgLy8gICAgICB0b3A6IDAsXG4gIC8vICAgIH0sXG4gIC8vICAgICc1MCUnOiB7XG4gIC8vICAgICAgbGVmdDogMTUsXG4gIC8vICAgICAgdG9wOiA1LFxuICAvLyAgICB9LFxuICAvLyAgICB0bzoge1xuICAvLyAgICAgIGxlZnQ6IDIwLFxuICAvLyAgICAgIHRvcDogMjAsXG4gIC8vICAgIH1cbiAgLy8gIH1cbiAgLy8gVE9ETyhlbWlseSk6IGBzdHJpbmdIYW5kbGVyc2AgZG9lc24ndCBsZXQgdXMgcmVuYW1lIHRoZSBrZXksIHNvIEkgaGF2ZVxuICAvLyB0byB1c2UgYGFuaW1hdGlvbk5hbWVgIGhlcmUuIEltcHJvdmUgdGhhdCBzbyB3ZSBjYW4gY2FsbCB0aGlzXG4gIC8vIGBhbmltYXRpb25gIGluc3RlYWQgb2YgYGFuaW1hdGlvbk5hbWVgLlxuICBhbmltYXRpb25OYW1lOiBmdW5jdGlvbiBhbmltYXRpb25OYW1lKHZhbCwgc2VsZWN0b3JIYW5kbGVycykge1xuICAgIGlmIChBcnJheS5pc0FycmF5KHZhbCkpIHtcbiAgICAgIHJldHVybiB2YWwubWFwKGZ1bmN0aW9uICh2KSB7XG4gICAgICAgIHJldHVybiBhbmltYXRpb25OYW1lKHYsIHNlbGVjdG9ySGFuZGxlcnMpO1xuICAgICAgfSkuam9pbihcIixcIik7XG4gICAgfSBlbHNlIGlmIChfdHlwZW9mKHZhbCkgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgIC8vIEdlbmVyYXRlIGEgdW5pcXVlIG5hbWUgYmFzZWQgb24gdGhlIGhhc2ggb2YgdGhlIG9iamVjdC4gV2UgY2FuJ3RcbiAgICAgIC8vIGp1c3QgdXNlIHRoZSBoYXNoIGJlY2F1c2UgdGhlIG5hbWUgY2FuJ3Qgc3RhcnQgd2l0aCBhIG51bWJlci5cbiAgICAgIC8vIFRPRE8oZW1pbHkpOiB0aGlzIHByb2JhYmx5IG1ha2VzIGRlYnVnZ2luZyBoYXJkLCBhbGxvdyBhIGN1c3RvbVxuICAgICAgLy8gbmFtZT9cbiAgICAgIHZhciBuYW1lID0gXCJrZXlmcmFtZV9cIi5jb25jYXQoaGFzaE9iamVjdCh2YWwpKTsgLy8gU2luY2Uga2V5ZnJhbWVzIG5lZWQgMyBsYXllcnMgb2YgbmVzdGluZywgd2UgdXNlIGBnZW5lcmF0ZUNTU2AgdG9cbiAgICAgIC8vIGJ1aWxkIHRoZSBpbm5lciBsYXllcnMgYW5kIHdyYXAgaXQgaW4gYEBrZXlmcmFtZXNgIG91cnNlbHZlcy5cblxuICAgICAgdmFyIGZpbmFsVmFsID0gXCJAa2V5ZnJhbWVzIFwiLmNvbmNhdChuYW1lLCBcIntcIik7IC8vIFRPRE8gc2VlIGlmIHdlIGNhbiBmaW5kIGEgd2F5IHdoZXJlIGNoZWNraW5nIGZvciBPcmRlcmVkRWxlbWVudHNcbiAgICAgIC8vIGhlcmUgaXMgbm90IG5lY2Vzc2FyeS4gQWx0ZXJuYXRpdmVseSwgcGVyaGFwcyB3ZSBzaG91bGQgaGF2ZSBhXG4gICAgICAvLyB1dGlsaXR5IG1ldGhvZCB0aGF0IGNhbiBpdGVyYXRlIG92ZXIgZWl0aGVyIGEgcGxhaW4gb2JqZWN0LCBhblxuICAgICAgLy8gaW5zdGFuY2Ugb2YgT3JkZXJlZEVsZW1lbnRzLCBvciBhIE1hcCwgYW5kIHRoZW4gdXNlIHRoYXQgaGVyZSBhbmRcbiAgICAgIC8vIGVsc2V3aGVyZS5cblxuICAgICAgaWYgKHZhbCBpbnN0YW5jZW9mIE9yZGVyZWRFbGVtZW50cykge1xuICAgICAgICB2YWwuZm9yRWFjaChmdW5jdGlvbiAodmFsVmFsLCB2YWxLZXkpIHtcbiAgICAgICAgICBmaW5hbFZhbCArPSBnZW5lcmF0ZUNTUyh2YWxLZXksIFt2YWxWYWxdLCBzZWxlY3RvckhhbmRsZXJzLCBzdHJpbmdIYW5kbGVycywgZmFsc2UpLmpvaW4oJycpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIE9iamVjdC5rZXlzKHZhbCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgICAgZmluYWxWYWwgKz0gZ2VuZXJhdGVDU1Moa2V5LCBbdmFsW2tleV1dLCBzZWxlY3RvckhhbmRsZXJzLCBzdHJpbmdIYW5kbGVycywgZmFsc2UpLmpvaW4oJycpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgZmluYWxWYWwgKz0gJ30nO1xuICAgICAgaW5qZWN0R2VuZXJhdGVkQ1NTT25jZShuYW1lLCBbZmluYWxWYWxdKTtcbiAgICAgIHJldHVybiBuYW1lO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdmFsO1xuICAgIH1cbiAgfVxufTsgLy8gVGhpcyBpcyBhIG1hcCBmcm9tIEFwaHJvZGl0ZSdzIGdlbmVyYXRlZCBjbGFzcyBuYW1lcyB0byBgdHJ1ZWAgKGFjdGluZyBhcyBhXG4vLyBzZXQgb2YgY2xhc3MgbmFtZXMpXG5cbnZhciBhbHJlYWR5SW5qZWN0ZWQgPSB7fTsgLy8gVGhpcyBpcyB0aGUgYnVmZmVyIG9mIHN0eWxlcyB3aGljaCBoYXZlIG5vdCB5ZXQgYmVlbiBmbHVzaGVkLlxuXG52YXIgaW5qZWN0aW9uQnVmZmVyXG4vKiA6IHN0cmluZ1tdICovXG49IFtdOyAvLyBBIGZsYWcgdG8gdGVsbCBpZiB3ZSBhcmUgYWxyZWFkeSBidWZmZXJpbmcgc3R5bGVzLiBUaGlzIGNvdWxkIGhhcHBlbiBlaXRoZXJcbi8vIGJlY2F1c2Ugd2Ugc2NoZWR1bGVkIGEgZmx1c2ggY2FsbCBhbHJlYWR5LCBzbyBuZXdseSBhZGRlZCBzdHlsZXMgd2lsbFxuLy8gYWxyZWFkeSBiZSBmbHVzaGVkLCBvciBiZWNhdXNlIHdlIGFyZSBzdGF0aWNhbGx5IGJ1ZmZlcmluZyBvbiB0aGUgc2VydmVyLlxuXG52YXIgaXNCdWZmZXJpbmcgPSBmYWxzZTtcblxudmFyIGluamVjdEdlbmVyYXRlZENTU09uY2UgPSBmdW5jdGlvbiBpbmplY3RHZW5lcmF0ZWRDU1NPbmNlKGtleSwgZ2VuZXJhdGVkQ1NTKSB7XG4gIHZhciBfaW5qZWN0aW9uQnVmZmVyO1xuXG4gIGlmIChhbHJlYWR5SW5qZWN0ZWRba2V5XSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmICghaXNCdWZmZXJpbmcpIHtcbiAgICAvLyBXZSBzaG91bGQgbmV2ZXIgYmUgYXV0b21hdGljYWxseSBidWZmZXJpbmcgb24gdGhlIHNlcnZlciAob3IgYW55XG4gICAgLy8gcGxhY2Ugd2l0aG91dCBhIGRvY3VtZW50KSwgc28gZ3VhcmQgYWdhaW5zdCB0aGF0LlxuICAgIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBhdXRvbWF0aWNhbGx5IGJ1ZmZlciB3aXRob3V0IGEgZG9jdW1lbnRcIik7XG4gICAgfSAvLyBJZiB3ZSdyZSBub3QgYWxyZWFkeSBidWZmZXJpbmcsIHNjaGVkdWxlIGEgY2FsbCB0byBmbHVzaCB0aGVcbiAgICAvLyBjdXJyZW50IHN0eWxlcy5cblxuXG4gICAgaXNCdWZmZXJpbmcgPSB0cnVlO1xuICAgIGFzYXAoZmx1c2hUb1N0eWxlVGFnKTtcbiAgfVxuXG4gIChfaW5qZWN0aW9uQnVmZmVyID0gaW5qZWN0aW9uQnVmZmVyKS5wdXNoLmFwcGx5KF9pbmplY3Rpb25CdWZmZXIsIF90b0NvbnN1bWFibGVBcnJheShnZW5lcmF0ZWRDU1MpKTtcblxuICBhbHJlYWR5SW5qZWN0ZWRba2V5XSA9IHRydWU7XG59O1xuXG52YXIgaW5qZWN0U3R5bGVPbmNlID0gZnVuY3Rpb24gaW5qZWN0U3R5bGVPbmNlKGtleVxuLyogOiBzdHJpbmcgKi9cbiwgc2VsZWN0b3Jcbi8qIDogc3RyaW5nICovXG4sIGRlZmluaXRpb25zXG4vKiA6IFNoZWV0RGVmaW5pdGlvbltdICovXG4sIHVzZUltcG9ydGFudFxuLyogOiBib29sZWFuICovXG4pIHtcbiAgdmFyIHNlbGVjdG9ySGFuZGxlcnNcbiAgLyogOiBTZWxlY3RvckhhbmRsZXJbXSAqL1xuICA9IGFyZ3VtZW50cy5sZW5ndGggPiA0ICYmIGFyZ3VtZW50c1s0XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzRdIDogW107XG5cbiAgaWYgKGFscmVhZHlJbmplY3RlZFtrZXldKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIGdlbmVyYXRlZCA9IGdlbmVyYXRlQ1NTKHNlbGVjdG9yLCBkZWZpbml0aW9ucywgc2VsZWN0b3JIYW5kbGVycywgc3RyaW5nSGFuZGxlcnMsIHVzZUltcG9ydGFudCk7XG4gIGluamVjdEdlbmVyYXRlZENTU09uY2Uoa2V5LCBnZW5lcmF0ZWQpO1xufTtcbnZhciByZXNldCA9IGZ1bmN0aW9uIHJlc2V0KCkge1xuICBpbmplY3Rpb25CdWZmZXIgPSBbXTtcbiAgYWxyZWFkeUluamVjdGVkID0ge307XG4gIGlzQnVmZmVyaW5nID0gZmFsc2U7XG4gIHN0eWxlVGFnID0gbnVsbDtcbn07XG52YXIgcmVzZXRJbmplY3RlZFN0eWxlID0gZnVuY3Rpb24gcmVzZXRJbmplY3RlZFN0eWxlKGtleVxuLyogOiBzdHJpbmcgKi9cbikge1xuICBkZWxldGUgYWxyZWFkeUluamVjdGVkW2tleV07XG59O1xudmFyIGdldEJ1ZmZlcmVkU3R5bGVzID0gZnVuY3Rpb24gZ2V0QnVmZmVyZWRTdHlsZXMoKSB7XG4gIHJldHVybiBpbmplY3Rpb25CdWZmZXI7XG59O1xudmFyIHN0YXJ0QnVmZmVyaW5nID0gZnVuY3Rpb24gc3RhcnRCdWZmZXJpbmcoKSB7XG4gIGlmIChpc0J1ZmZlcmluZykge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBidWZmZXIgd2hpbGUgYWxyZWFkeSBidWZmZXJpbmdcIik7XG4gIH1cblxuICBpc0J1ZmZlcmluZyA9IHRydWU7XG59O1xuXG52YXIgZmx1c2hUb0FycmF5ID0gZnVuY3Rpb24gZmx1c2hUb0FycmF5KCkge1xuICBpc0J1ZmZlcmluZyA9IGZhbHNlO1xuICB2YXIgcmV0ID0gaW5qZWN0aW9uQnVmZmVyO1xuICBpbmplY3Rpb25CdWZmZXIgPSBbXTtcbiAgcmV0dXJuIHJldDtcbn07XG5cbnZhciBmbHVzaFRvU3RyaW5nID0gZnVuY3Rpb24gZmx1c2hUb1N0cmluZygpIHtcbiAgcmV0dXJuIGZsdXNoVG9BcnJheSgpLmpvaW4oJycpO1xufTtcbnZhciBmbHVzaFRvU3R5bGVUYWcgPSBmdW5jdGlvbiBmbHVzaFRvU3R5bGVUYWcoKSB7XG4gIHZhciBjc3NSdWxlcyA9IGZsdXNoVG9BcnJheSgpO1xuXG4gIGlmIChjc3NSdWxlcy5sZW5ndGggPiAwKSB7XG4gICAgaW5qZWN0U3R5bGVUYWcoY3NzUnVsZXMpO1xuICB9XG59O1xudmFyIGdldFJlbmRlcmVkQ2xhc3NOYW1lcyA9IGZ1bmN0aW9uIGdldFJlbmRlcmVkQ2xhc3NOYW1lcygpXG4vKiA6IHN0cmluZ1tdICovXG57XG4gIHJldHVybiBPYmplY3Qua2V5cyhhbHJlYWR5SW5qZWN0ZWQpO1xufTtcbnZhciBhZGRSZW5kZXJlZENsYXNzTmFtZXMgPSBmdW5jdGlvbiBhZGRSZW5kZXJlZENsYXNzTmFtZXMoY2xhc3NOYW1lc1xuLyogOiBzdHJpbmdbXSAqL1xuKSB7XG4gIGNsYXNzTmFtZXMuZm9yRWFjaChmdW5jdGlvbiAoY2xhc3NOYW1lKSB7XG4gICAgYWxyZWFkeUluamVjdGVkW2NsYXNzTmFtZV0gPSB0cnVlO1xuICB9KTtcbn07XG5cbnZhciBpc1ZhbGlkU3R5bGVEZWZpbml0aW9uID0gZnVuY3Rpb24gaXNWYWxpZFN0eWxlRGVmaW5pdGlvbihkZWZcbi8qIDogT2JqZWN0ICovXG4pIHtcbiAgcmV0dXJuIFwiX2RlZmluaXRpb25cIiBpbiBkZWYgJiYgXCJfbmFtZVwiIGluIGRlZiAmJiBcIl9sZW5cIiBpbiBkZWY7XG59O1xuXG52YXIgcHJvY2Vzc1N0eWxlRGVmaW5pdGlvbnMgPSBmdW5jdGlvbiBwcm9jZXNzU3R5bGVEZWZpbml0aW9ucyhzdHlsZURlZmluaXRpb25zXG4vKiA6IGFueVtdICovXG4sIGNsYXNzTmFtZUJpdHNcbi8qIDogc3RyaW5nW10gKi9cbiwgZGVmaW5pdGlvbkJpdHNcbi8qIDogT2JqZWN0W10gKi9cbiwgbGVuZ3RoXG4vKiA6IG51bWJlciAqL1xuKVxuLyogOiBudW1iZXIgKi9cbntcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZURlZmluaXRpb25zLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgLy8gRmlsdGVyIG91dCBmYWxzeSB2YWx1ZXMgZnJvbSB0aGUgaW5wdXQsIHRvIGFsbG93IGZvclxuICAgIC8vIGBjc3MoYSwgdGVzdCAmJiBjKWBcbiAgICBpZiAoc3R5bGVEZWZpbml0aW9uc1tpXSkge1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoc3R5bGVEZWZpbml0aW9uc1tpXSkpIHtcbiAgICAgICAgLy8gV2UndmUgZW5jb3VudGVyZWQgYW4gYXJyYXksIHNvIGxldCdzIHJlY3Vyc2VcbiAgICAgICAgbGVuZ3RoICs9IHByb2Nlc3NTdHlsZURlZmluaXRpb25zKHN0eWxlRGVmaW5pdGlvbnNbaV0sIGNsYXNzTmFtZUJpdHMsIGRlZmluaXRpb25CaXRzLCBsZW5ndGgpO1xuICAgICAgfSBlbHNlIGlmIChpc1ZhbGlkU3R5bGVEZWZpbml0aW9uKHN0eWxlRGVmaW5pdGlvbnNbaV0pKSB7XG4gICAgICAgIGNsYXNzTmFtZUJpdHMucHVzaChzdHlsZURlZmluaXRpb25zW2ldLl9uYW1lKTtcbiAgICAgICAgZGVmaW5pdGlvbkJpdHMucHVzaChzdHlsZURlZmluaXRpb25zW2ldLl9kZWZpbml0aW9uKTtcbiAgICAgICAgbGVuZ3RoICs9IHN0eWxlRGVmaW5pdGlvbnNbaV0uX2xlbjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgU3R5bGUgRGVmaW5pdGlvbjogU3R5bGVzIHNob3VsZCBiZSBkZWZpbmVkIHVzaW5nIHRoZSBTdHlsZVNoZWV0LmNyZWF0ZSBtZXRob2QuXCIpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBsZW5ndGg7XG59O1xuLyoqXG4gKiBJbmplY3Qgc3R5bGVzIGFzc29jaWF0ZWQgd2l0aCB0aGUgcGFzc2VkIHN0eWxlIGRlZmluaXRpb24gb2JqZWN0cywgYW5kIHJldHVyblxuICogYW4gYXNzb2NpYXRlZCBDU1MgY2xhc3MgbmFtZS5cbiAqXG4gKiBAcGFyYW0ge2Jvb2xlYW59IHVzZUltcG9ydGFudCBJZiB0cnVlLCB3aWxsIGFwcGVuZCAhaW1wb3J0YW50IHRvIGdlbmVyYXRlZFxuICogICAgIENTUyBvdXRwdXQuIGUuZy4ge2NvbG9yOiByZWR9IC0+IFwiY29sb3I6IHJlZCAhaW1wb3J0YW50XCIuXG4gKiBAcGFyYW0geyhPYmplY3R8T2JqZWN0W10pW119IHN0eWxlRGVmaW5pdGlvbnMgc3R5bGUgZGVmaW5pdGlvbiBvYmplY3RzLCBvclxuICogICAgIGFyYml0cmFyaWx5IG5lc3RlZCBhcnJheXMgb2YgdGhlbSwgYXMgcmV0dXJuZWQgYXMgcHJvcGVydGllcyBvZiB0aGVcbiAqICAgICByZXR1cm4gdmFsdWUgb2YgU3R5bGVTaGVldC5jcmVhdGUoKS5cbiAqL1xuXG5cbnZhciBpbmplY3RBbmRHZXRDbGFzc05hbWUgPSBmdW5jdGlvbiBpbmplY3RBbmRHZXRDbGFzc05hbWUodXNlSW1wb3J0YW50XG4vKiA6IGJvb2xlYW4gKi9cbiwgc3R5bGVEZWZpbml0aW9uc1xuLyogOiBNYXliZVNoZWV0RGVmaW5pdGlvbltdICovXG4sIHNlbGVjdG9ySGFuZGxlcnNcbi8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbilcbi8qIDogc3RyaW5nICovXG57XG4gIHZhciBjbGFzc05hbWVCaXRzID0gW107XG4gIHZhciBkZWZpbml0aW9uQml0cyA9IFtdOyAvLyBNdXRhdGVzIGNsYXNzTmFtZUJpdHMgYW5kIGRlZmluaXRpb25CaXRzIGFuZCByZXR1cm5zIGEgbGVuZ3RoIHdoaWNoIHdlXG4gIC8vIHdpbGwgYXBwZW5kIHRvIHRoZSBoYXNoIHRvIGRlY3JlYXNlIHRoZSBjaGFuY2Ugb2YgaGFzaCBjb2xsaXNpb25zLlxuXG4gIHZhciBsZW5ndGggPSBwcm9jZXNzU3R5bGVEZWZpbml0aW9ucyhzdHlsZURlZmluaXRpb25zLCBjbGFzc05hbWVCaXRzLCBkZWZpbml0aW9uQml0cywgMCk7IC8vIEJyZWFrIGlmIHRoZXJlIGFyZW4ndCBhbnkgdmFsaWQgc3R5bGVzLlxuXG4gIGlmIChjbGFzc05hbWVCaXRzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBcIlwiO1xuICB9XG5cbiAgdmFyIGNsYXNzTmFtZTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAgIGNsYXNzTmFtZSA9IGNsYXNzTmFtZUJpdHMubGVuZ3RoID09PSAxID8gXCJfXCIuY29uY2F0KGNsYXNzTmFtZUJpdHNbMF0pIDogXCJfXCIuY29uY2F0KGhhc2hTdHJpbmcoY2xhc3NOYW1lQml0cy5qb2luKCkpKS5jb25jYXQoKGxlbmd0aCAlIDM2KS50b1N0cmluZygzNikpO1xuICB9IGVsc2Uge1xuICAgIGNsYXNzTmFtZSA9IGNsYXNzTmFtZUJpdHMuam9pbihcIi1vX08tXCIpO1xuICB9XG5cbiAgaW5qZWN0U3R5bGVPbmNlKGNsYXNzTmFtZSwgXCIuXCIuY29uY2F0KGNsYXNzTmFtZSksIGRlZmluaXRpb25CaXRzLCB1c2VJbXBvcnRhbnQsIHNlbGVjdG9ySGFuZGxlcnMpO1xuICByZXR1cm4gY2xhc3NOYW1lO1xufTtcblxuLyogOjpcbmltcG9ydCB0eXBlIHsgU2VsZWN0b3JIYW5kbGVyIH0gZnJvbSAnLi9nZW5lcmF0ZS5qcyc7XG5leHBvcnQgdHlwZSBTaGVldERlZmluaXRpb24gPSB7IFtpZDpzdHJpbmddOiBhbnkgfTtcbmV4cG9ydCB0eXBlIFNoZWV0RGVmaW5pdGlvbnMgPSBTaGVldERlZmluaXRpb24gfCBTaGVldERlZmluaXRpb25bXTtcbnR5cGUgUmVuZGVyRnVuY3Rpb24gPSAoKSA9PiBzdHJpbmc7XG50eXBlIEV4dGVuc2lvbiA9IHtcbiAgICBzZWxlY3RvckhhbmRsZXI6IFNlbGVjdG9ySGFuZGxlclxufTtcbmV4cG9ydCB0eXBlIE1heWJlU2hlZXREZWZpbml0aW9uID0gU2hlZXREZWZpbml0aW9uIHwgZmFsc2UgfCBudWxsIHwgdm9pZFxuKi9cblxudmFyIHVubWluaWZpZWRIYXNoRm4gPSBmdW5jdGlvbiB1bm1pbmlmaWVkSGFzaEZuKHN0clxuLyogOiBzdHJpbmcgKi9cbiwga2V5XG4vKiA6IHN0cmluZyAqL1xuKSB7XG4gIHJldHVybiBcIlwiLmNvbmNhdChrZXksIFwiX1wiKS5jb25jYXQoaGFzaFN0cmluZyhzdHIpKTtcbn07IC8vIFN0eWxlU2hlZXQuY3JlYXRlIGlzIGluIGEgaG90IHBhdGggc28gd2Ugd2FudCB0byBrZWVwIGFzIG11Y2ggbG9naWMgb3V0IG9mIGl0XG4vLyBhcyBwb3NzaWJsZS4gU28sIHdlIGZpZ3VyZSBvdXQgd2hpY2ggaGFzaCBmdW5jdGlvbiB0byB1c2Ugb25jZSwgYW5kIG9ubHlcbi8vIHN3aXRjaCBpdCBvdXQgdmlhIG1pbmlmeSgpIGFzIG5lY2Vzc2FyeS5cbi8vXG4vLyBUaGlzIGlzIGluIGFuIGV4cG9ydGVkIGZ1bmN0aW9uIHRvIG1ha2UgaXQgZWFzaWVyIHRvIHRlc3QuXG5cblxudmFyIGluaXRpYWxIYXNoRm4gPSBmdW5jdGlvbiBpbml0aWFsSGFzaEZuKCkge1xuICByZXR1cm4gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyA/IGhhc2hTdHJpbmcgOiB1bm1pbmlmaWVkSGFzaEZuO1xufTtcbnZhciBoYXNoRm4gPSBpbml0aWFsSGFzaEZuKCk7XG52YXIgU3R5bGVTaGVldCA9IHtcbiAgY3JlYXRlOiBmdW5jdGlvbiBjcmVhdGUoc2hlZXREZWZpbml0aW9uXG4gIC8qIDogU2hlZXREZWZpbml0aW9uICovXG4gIClcbiAgLyogOiBPYmplY3QgKi9cbiAge1xuICAgIHZhciBtYXBwZWRTaGVldERlZmluaXRpb24gPSB7fTtcbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHNoZWV0RGVmaW5pdGlvbik7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuICAgICAgdmFyIHZhbCA9IHNoZWV0RGVmaW5pdGlvbltrZXldO1xuICAgICAgdmFyIHN0cmluZ1ZhbCA9IEpTT04uc3RyaW5naWZ5KHZhbCk7XG4gICAgICBtYXBwZWRTaGVldERlZmluaXRpb25ba2V5XSA9IHtcbiAgICAgICAgX2xlbjogc3RyaW5nVmFsLmxlbmd0aCxcbiAgICAgICAgX25hbWU6IGhhc2hGbihzdHJpbmdWYWwsIGtleSksXG4gICAgICAgIF9kZWZpbml0aW9uOiB2YWxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIG1hcHBlZFNoZWV0RGVmaW5pdGlvbjtcbiAgfSxcbiAgcmVoeWRyYXRlOiBmdW5jdGlvbiByZWh5ZHJhdGUoKSB7XG4gICAgdmFyIHJlbmRlcmVkQ2xhc3NOYW1lc1xuICAgIC8qIDogc3RyaW5nW10gKi9cbiAgICA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogW107XG4gICAgYWRkUmVuZGVyZWRDbGFzc05hbWVzKHJlbmRlcmVkQ2xhc3NOYW1lcyk7XG4gIH1cbn07XG4vKipcbiAqIFV0aWxpdGllcyBmb3IgdXNpbmcgQXBocm9kaXRlIHNlcnZlci1zaWRlLlxuICpcbiAqIFRoaXMgY2FuIGJlIG1pbmlmaWVkIG91dCBpbiBjbGllbnQtb25seSBidW5kbGVzIGJ5IHJlcGxhY2luZyBgdHlwZW9mIHdpbmRvd2BcbiAqIHdpdGggYFwib2JqZWN0XCJgLCBlLmcuIHZpYSBXZWJwYWNrJ3MgRGVmaW5lUGx1Z2luOlxuICpcbiAqICAgbmV3IHdlYnBhY2suRGVmaW5lUGx1Z2luKHtcbiAqICAgICBcInR5cGVvZiB3aW5kb3dcIjogSlNPTi5zdHJpbmdpZnkoXCJvYmplY3RcIilcbiAqICAgfSlcbiAqL1xuXG52YXIgU3R5bGVTaGVldFNlcnZlciA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gbnVsbCA6IHtcbiAgcmVuZGVyU3RhdGljOiBmdW5jdGlvbiByZW5kZXJTdGF0aWMocmVuZGVyRnVuY1xuICAvKiA6IFJlbmRlckZ1bmN0aW9uICovXG4gICkge1xuICAgIHJlc2V0KCk7XG4gICAgc3RhcnRCdWZmZXJpbmcoKTtcbiAgICB2YXIgaHRtbCA9IHJlbmRlckZ1bmMoKTtcbiAgICB2YXIgY3NzQ29udGVudCA9IGZsdXNoVG9TdHJpbmcoKTtcbiAgICByZXR1cm4ge1xuICAgICAgaHRtbDogaHRtbCxcbiAgICAgIGNzczoge1xuICAgICAgICBjb250ZW50OiBjc3NDb250ZW50LFxuICAgICAgICByZW5kZXJlZENsYXNzTmFtZXM6IGdldFJlbmRlcmVkQ2xhc3NOYW1lcygpXG4gICAgICB9XG4gICAgfTtcbiAgfVxufTtcbi8qKlxuICogVXRpbGl0aWVzIGZvciB1c2luZyBBcGhyb2RpdGUgaW4gdGVzdHMuXG4gKlxuICogTm90IG1lYW50IHRvIGJlIHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAqL1xuXG52YXIgU3R5bGVTaGVldFRlc3RVdGlscyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgPyBudWxsIDoge1xuICAvKipcbiAgKiBQcmV2ZW50IHN0eWxlcyBmcm9tIGJlaW5nIGluamVjdGVkIGludG8gdGhlIERPTS5cbiAgKlxuICAqIFRoaXMgaXMgdXNlZnVsIGluIHNpdHVhdGlvbnMgd2hlcmUgeW91J2QgbGlrZSB0byB0ZXN0IHJlbmRlcmluZyBVSVxuICAqIGNvbXBvbmVudHMgd2hpY2ggdXNlIEFwaHJvZGl0ZSB3aXRob3V0IGFueSBvZiB0aGUgc2lkZS1lZmZlY3RzIG9mXG4gICogQXBocm9kaXRlIGhhcHBlbmluZy4gUGFydGljdWxhcmx5IHVzZWZ1bCBmb3IgdGVzdGluZyB0aGUgb3V0cHV0IG9mXG4gICogY29tcG9uZW50cyB3aGVuIHlvdSBoYXZlIG5vIERPTSwgZS5nLiB0ZXN0aW5nIGluIE5vZGUgd2l0aG91dCBhIGZha2UgRE9NLlxuICAqXG4gICogU2hvdWxkIGJlIHBhaXJlZCB3aXRoIGEgc3Vic2VxdWVudCBjYWxsIHRvXG4gICogY2xlYXJCdWZmZXJBbmRSZXN1bWVTdHlsZUluamVjdGlvbi5cbiAgKi9cbiAgc3VwcHJlc3NTdHlsZUluamVjdGlvbjogZnVuY3Rpb24gc3VwcHJlc3NTdHlsZUluamVjdGlvbigpIHtcbiAgICByZXNldCgpO1xuICAgIHN0YXJ0QnVmZmVyaW5nKCk7XG4gIH0sXG5cbiAgLyoqXG4gICogT3Bwb3NpdGUgbWV0aG9kIG9mIHByZXZlbnRTdHlsZUluamVjdC5cbiAgKi9cbiAgY2xlYXJCdWZmZXJBbmRSZXN1bWVTdHlsZUluamVjdGlvbjogZnVuY3Rpb24gY2xlYXJCdWZmZXJBbmRSZXN1bWVTdHlsZUluamVjdGlvbigpIHtcbiAgICByZXNldCgpO1xuICB9LFxuXG4gIC8qKlxuICAqIFJldHVybnMgYSBzdHJpbmcgb2YgYnVmZmVyZWQgc3R5bGVzIHdoaWNoIGhhdmUgbm90IGJlZW4gZmx1c2hlZFxuICAqXG4gICogQHJldHVybnMge3N0cmluZ30gIEJ1ZmZlciBvZiBzdHlsZXMgd2hpY2ggaGF2ZSBub3QgeWV0IGJlZW4gZmx1c2hlZC5cbiAgKi9cbiAgZ2V0QnVmZmVyZWRTdHlsZXM6IGZ1bmN0aW9uIGdldEJ1ZmZlcmVkU3R5bGVzJDEoKSB7XG4gICAgcmV0dXJuIGdldEJ1ZmZlcmVkU3R5bGVzKCk7XG4gIH1cbn07XG4vKipcbiAqIEdlbmVyYXRlIHRoZSBBcGhyb2RpdGUgQVBJIGV4cG9ydHMsIHdpdGggZ2l2ZW4gYHNlbGVjdG9ySGFuZGxlcnNgIGFuZFxuICogYHVzZUltcG9ydGFudGAgc3RhdGUuXG4gKi9cblxuZnVuY3Rpb24gbWFrZUV4cG9ydHModXNlSW1wb3J0YW50XG4vKiA6IGJvb2xlYW4gKi9cbikge1xuICB2YXIgc2VsZWN0b3JIYW5kbGVyc1xuICAvKiA6IFNlbGVjdG9ySGFuZGxlcltdICovXG4gID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBkZWZhdWx0U2VsZWN0b3JIYW5kbGVycztcbiAgcmV0dXJuIHtcbiAgICBTdHlsZVNoZWV0OiBfb2JqZWN0U3ByZWFkKHt9LCBTdHlsZVNoZWV0LCB7XG4gICAgICAvKipcbiAgICAgICAqIFJldHVybnMgYSB2ZXJzaW9uIG9mIHRoZSBleHBvcnRzIG9mIEFwaHJvZGl0ZSAoaS5lLiBhbiBvYmplY3RcbiAgICAgICAqIHdpdGggYGNzc2AgYW5kIGBTdHlsZVNoZWV0YCBwcm9wZXJ0aWVzKSB3aGljaCBoYXZlIHNvbWVcbiAgICAgICAqIGV4dGVuc2lvbnMgaW5jbHVkZWQuXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtBcnJheS48T2JqZWN0Pn0gZXh0ZW5zaW9uczogQW4gYXJyYXkgb2YgZXh0ZW5zaW9ucyB0b1xuICAgICAgICogICAgIGFkZCB0byB0aGlzIGluc3RhbmNlIG9mIEFwaHJvZGl0ZS4gRWFjaCBvYmplY3Qgc2hvdWxkIGhhdmUgYVxuICAgICAgICogICAgIHNpbmdsZSBwcm9wZXJ0eSBvbiBpdCwgZGVmaW5pbmcgd2hpY2gga2luZCBvZiBleHRlbnNpb24gdG9cbiAgICAgICAqICAgICBhZGQuXG4gICAgICAgKiBAcGFyYW0ge1NlbGVjdG9ySGFuZGxlcn0gW2V4dGVuc2lvbnNbXS5zZWxlY3RvckhhbmRsZXJdOiBBXG4gICAgICAgKiAgICAgc2VsZWN0b3IgaGFuZGxlciBleHRlbnNpb24uIFNlZSBgZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnNgIGluXG4gICAgICAgKiAgICAgZ2VuZXJhdGUuanMuXG4gICAgICAgKlxuICAgICAgICogQHJldHVybnMge09iamVjdH0gQW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIGV4cG9ydHMgb2YgdGhlIG5ld1xuICAgICAgICogICAgIGluc3RhbmNlIG9mIEFwaHJvZGl0ZS5cbiAgICAgICAqL1xuICAgICAgZXh0ZW5kOiBmdW5jdGlvbiBleHRlbmQoZXh0ZW5zaW9uc1xuICAgICAgLyogOiBFeHRlbnNpb25bXSAqL1xuICAgICAgKSB7XG4gICAgICAgIHZhciBleHRlbnNpb25TZWxlY3RvckhhbmRsZXJzID0gZXh0ZW5zaW9ucyAvLyBQdWxsIG91dCBleHRlbnNpb25zIHdpdGggYSBzZWxlY3RvckhhbmRsZXIgcHJvcGVydHlcbiAgICAgICAgLm1hcChmdW5jdGlvbiAoZXh0ZW5zaW9uKSB7XG4gICAgICAgICAgcmV0dXJuIGV4dGVuc2lvbi5zZWxlY3RvckhhbmRsZXI7XG4gICAgICAgIH0pIC8vIFJlbW92ZSBudWxscyAoaS5lLiBleHRlbnNpb25zIHdpdGhvdXQgYSBzZWxlY3RvckhhbmRsZXIgcHJvcGVydHkpLlxuICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChoYW5kbGVyKSB7XG4gICAgICAgICAgcmV0dXJuIGhhbmRsZXI7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gbWFrZUV4cG9ydHModXNlSW1wb3J0YW50LCBzZWxlY3RvckhhbmRsZXJzLmNvbmNhdChleHRlbnNpb25TZWxlY3RvckhhbmRsZXJzKSk7XG4gICAgICB9XG4gICAgfSksXG4gICAgU3R5bGVTaGVldFNlcnZlcjogU3R5bGVTaGVldFNlcnZlcixcbiAgICBTdHlsZVNoZWV0VGVzdFV0aWxzOiBTdHlsZVNoZWV0VGVzdFV0aWxzLFxuICAgIG1pbmlmeTogZnVuY3Rpb24gbWluaWZ5KHNob3VsZE1pbmlmeVxuICAgIC8qIDogYm9vbGVhbiAqL1xuICAgICkge1xuICAgICAgaGFzaEZuID0gc2hvdWxkTWluaWZ5ID8gaGFzaFN0cmluZyA6IHVubWluaWZpZWRIYXNoRm47XG4gICAgfSxcbiAgICBjc3M6IGZ1bmN0aW9uIGNzcygpXG4gICAgLyogOiBNYXliZVNoZWV0RGVmaW5pdGlvbltdICovXG4gICAge1xuICAgICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIHN0eWxlRGVmaW5pdGlvbnMgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICAgIHN0eWxlRGVmaW5pdGlvbnNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBpbmplY3RBbmRHZXRDbGFzc05hbWUodXNlSW1wb3J0YW50LCBzdHlsZURlZmluaXRpb25zLCBzZWxlY3RvckhhbmRsZXJzKTtcbiAgICB9LFxuICAgIGZsdXNoVG9TdHlsZVRhZzogZmx1c2hUb1N0eWxlVGFnLFxuICAgIGluamVjdEFuZEdldENsYXNzTmFtZTogaW5qZWN0QW5kR2V0Q2xhc3NOYW1lLFxuICAgIGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzOiBkZWZhdWx0U2VsZWN0b3JIYW5kbGVycyxcbiAgICByZXNldDogcmVzZXQsXG4gICAgcmVzZXRJbmplY3RlZFN0eWxlOiByZXNldEluamVjdGVkU3R5bGVcbiAgfTtcbn1cblxuZXhwb3J0IHsgbWFrZUV4cG9ydHMgYXMgYSB9O1xuIiwiaW1wb3J0IHsgYSBhcyBtYWtlRXhwb3J0cyB9IGZyb20gJy4vY2h1bmstZmViY2U0NmIuanMnO1xuaW1wb3J0ICdzdHJpbmctaGFzaCc7XG5pbXBvcnQgJ2FzYXAnO1xuXG52YXIgdXNlSW1wb3J0YW50ID0gdHJ1ZTsgLy8gQWRkICFpbXBvcnRhbnQgdG8gYWxsIHN0eWxlIGRlZmluaXRpb25zXG5cbnZhciBBcGhyb2RpdGUgPSBtYWtlRXhwb3J0cyh1c2VJbXBvcnRhbnQpO1xudmFyIFN0eWxlU2hlZXQgPSBBcGhyb2RpdGUuU3R5bGVTaGVldCxcbiAgICBTdHlsZVNoZWV0U2VydmVyID0gQXBocm9kaXRlLlN0eWxlU2hlZXRTZXJ2ZXIsXG4gICAgU3R5bGVTaGVldFRlc3RVdGlscyA9IEFwaHJvZGl0ZS5TdHlsZVNoZWV0VGVzdFV0aWxzLFxuICAgIGNzcyA9IEFwaHJvZGl0ZS5jc3MsXG4gICAgbWluaWZ5ID0gQXBocm9kaXRlLm1pbmlmeSxcbiAgICBmbHVzaFRvU3R5bGVUYWcgPSBBcGhyb2RpdGUuZmx1c2hUb1N0eWxlVGFnLFxuICAgIGluamVjdEFuZEdldENsYXNzTmFtZSA9IEFwaHJvZGl0ZS5pbmplY3RBbmRHZXRDbGFzc05hbWUsXG4gICAgZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnMgPSBBcGhyb2RpdGUuZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnMsXG4gICAgcmVzZXQgPSBBcGhyb2RpdGUucmVzZXQsXG4gICAgcmVzZXRJbmplY3RlZFN0eWxlID0gQXBocm9kaXRlLnJlc2V0SW5qZWN0ZWRTdHlsZTtcblxuZXhwb3J0IHsgU3R5bGVTaGVldCwgU3R5bGVTaGVldFNlcnZlciwgU3R5bGVTaGVldFRlc3RVdGlscywgY3NzLCBtaW5pZnksIGZsdXNoVG9TdHlsZVRhZywgaW5qZWN0QW5kR2V0Q2xhc3NOYW1lLCBkZWZhdWx0U2VsZWN0b3JIYW5kbGVycywgcmVzZXQsIHJlc2V0SW5qZWN0ZWRTdHlsZSB9O1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8gfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuXHJcbmNvbnN0IE5vdGlmaWNhdGlvbkl0ZW0gPSAoeyB0eXBlLCBodG1sLCB2YWx1ZSwgbWFya0FzUmVhZCwgaWQgfSkgPT4ge1xyXG4gIGNvbnN0IGxpUHJvcHMgPSB1c2VNZW1vKCgpID0+IHtcclxuICAgIGNvbnN0IHByb3BzID0geyAnZGF0YS1ub3RpZmljYXRpb24tdHlwZSc6IHR5cGUgfTtcclxuICAgIGlmIChodG1sKSBwcm9wcy5kYW5nZXJvdXNseVNldElubmVySFRNTCA9IGh0bWw7XHJcbiAgICByZXR1cm4gcHJvcHM7XHJcbiAgfSwgW3R5cGUsIGh0bWxdKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxsaSB7Li4ubGlQcm9wc30gb25DbGljaz17KCkgPT4gbWFya0FzUmVhZChpZCl9PlxyXG4gICAgICB7dmFsdWV9XHJcbiAgICA8L2xpPlxyXG4gICk7XHJcbn07XHJcblxyXG5Ob3RpZmljYXRpb25JdGVtLnByb3BUeXBlcyA9IHtcclxuICBpZDogUHJvcFR5cGVzLm51bWJlcixcclxuICBodG1sOiBQcm9wVHlwZXMuc2hhcGUoe1xyXG4gICAgX19odG1sOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gIH0pLFxyXG4gIHR5cGU6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgdmFsdWU6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgbWFya0FzUmVhZDogUHJvcFR5cGVzLmZ1bmMsXHJcbn07XHJcblxyXG5Ob3RpZmljYXRpb25JdGVtLmRlZmF1bHRQcm9wcyA9IHtcclxuICB0eXBlOiAnZGVmYXVsdCcsXHJcbiAgbWFya0FzUmVhZDogKCkgPT4ge30sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBOb3RpZmljYXRpb25JdGVtO1xyXG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgJy4vTm90aWZpY2F0aW9ucy5jc3MnO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXHJcbmltcG9ydCB7U3R5bGVTaGVldCxjc3N9IGZyb20gJ2FwaHJvZGl0ZSdcclxuaW1wb3J0IE5vdGlmaWNhdGlvbkl0ZW0gZnJvbSAnLi4vTm90aWZpY2F0aW9ucy9Ob3RpZmljYXRpb25JdGVtJztcclxuaW1wb3J0IHsgZ2V0TGF0ZXN0Tm90aWZpY2F0aW9uIH0gZnJvbSAnLi4vdXRpbHMvdXRpbHMnO1xyXG5pbXBvcnQgV2l0aExvZ2dpbmcgZnJvbSAnLi4vSE9DL1dpdGhMb2dnaW5nJztcclxuXHJcbmNsYXNzIE5vdGlmaWNhdGlvbnMgZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcbiAgICBzdXBlcihwcm9wcyk7XHJcbiAgICB0aGlzLm1hcmtBc1JlYWQgPSB0aGlzLm1hcmtBc1JlYWQuYmluZCh0aGlzKTtcclxuICB9XHJcblxyXG4gIHNob3VsZENvbXBvbmVudFVwZGF0ZShuZXh0UHJvcHMpIHtcclxuICAgIC8vIE9ubHkgdXBkYXRlIGlmIHRoZSBsZW5ndGggb2YgdGhlIG5ldyBsaXN0Tm90aWZpY2F0aW9ucyBpcyBsb25nZXIgdGhhbiB0aGUgY3VycmVudCBvbmVcclxuICAgIHJldHVybiBuZXh0UHJvcHMubGlzdE5vdGlmaWNhdGlvbnMubGVuZ3RoID4gdGhpcy5wcm9wcy5saXN0Tm90aWZpY2F0aW9ucy5sZW5ndGg7XHJcbiAgfVxyXG5cclxuICBtYXJrQXNSZWFkKGlkKSB7XHJcbiAgICBjb25zb2xlLmxvZyhgTm90aWZpY2F0aW9uICR7aWR9IGhhcyBiZWVuIG1hcmtlZCBhcyByZWFkYCk7XHJcbiAgfVxyXG5cclxuICByZW5kZXIoKSB7XHJcbiAgICBjb25zdCB7IGRpc3BsYXlEcmF3ZXIsIGxpc3ROb3RpZmljYXRpb25zIH0gPSB0aGlzLnByb3BzO1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgPGRpdiBjbGFzc05hbWU9J2NvbnRhaW5lcic+XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2BtZW51SXRlbSR7ZGlzcGxheURyYXdlciA/ICcgZGlzcGxheS1tZW51SXRlbScgOiAnJ31gfT5cclxuICAgICAgICAgIFlvdXIgbm90aWZpY2F0aW9uc1xyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgTm90aWZpY2F0aW9ucyR7ZGlzcGxheURyYXdlciA/ICcgZGlzcGxheS1kcmF3ZXInIDogJyd9YH0+XHJcbiAgICAgICAgICA8YnV0dG9uXHJcbiAgICAgICAgICAgIHN0eWxlPXt7XHJcbiAgICAgICAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXHJcbiAgICAgICAgICAgICAgcmlnaHQ6ICcxNnB4JyxcclxuICAgICAgICAgICAgICB0b3A6ICcuOHJlbScsXHJcbiAgICAgICAgICAgICAgZm9udFNpemU6ICcxNnB4JyxcclxuICAgICAgICAgICAgICBib3JkZXI6ICdub25lJyxcclxuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAnbm9uZScsXHJcbiAgICAgICAgICAgICAgY3Vyc29yOiAncG9pbnRlcicsXHJcbiAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgIGFyaWEtbGFiZWw9XCJDbG9zZVwiXHJcbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcclxuICAgICAgICAgICAgICBjb25zb2xlLmxvZygnQ2xvc2UgYnV0dG9uIGhhcyBiZWVuIGNsaWNrZWRcXG4nKTtcclxuICAgICAgICAgICAgfX1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgeFxyXG4gICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgICA8cD5IZXJlIGlzIHRoZSBsaXN0IG9mIG5vdGlmaWNhdGlvbnM8L3A+XHJcbiAgICAgICAgICA8dWw+XHJcbiAgICAgICAgICAgIHtsaXN0Tm90aWZpY2F0aW9ucy5tYXAoKG5vdGlmaWNhdGlvbikgPT4gKFxyXG4gICAgICAgICAgICAgIDxOb3RpZmljYXRpb25JdGVtXHJcbiAgICAgICAgICAgICAgICBrZXk9e25vdGlmaWNhdGlvbi5pZH1cclxuICAgICAgICAgICAgICAgIGlkPXtub3RpZmljYXRpb24uaWR9XHJcbiAgICAgICAgICAgICAgICB0eXBlPXtub3RpZmljYXRpb24udHlwZX1cclxuICAgICAgICAgICAgICAgIHZhbHVlPXtub3RpZmljYXRpb24udmFsdWV9XHJcbiAgICAgICAgICAgICAgICBodG1sPXtub3RpZmljYXRpb24uaHRtbH1cclxuICAgICAgICAgICAgICAgIG1hcmtBc1JlYWQ9e3RoaXMubWFya0FzUmVhZH1cclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICApKX1cclxuICAgICAgICAgIDwvdWw+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbk5vdGlmaWNhdGlvbnMuZGVmYXVsdFByb3BzID0ge1xyXG4gIGRpc3BsYXlEcmF3ZXI6IGZhbHNlLFxyXG4gIGxpc3ROb3RpZmljYXRpb25zOiBbXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFdpdGhMb2dnaW5nKE5vdGlmaWNhdGlvbnMsICdOb3RpZmljYXRpb25zJyk7XHJcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XHJcblxyXG5jb25zdCBXaXRoTG9nZ2luZyA9IChXcmFwcGVkQ29tcG9uZW50LCBjb21wb25lbnROYW1lID0gJ0NvbXBvbmVudCcpID0+IHtcclxuICBjbGFzcyBXaXRoTG9nZ2luZ0NvbXBvbmVudCBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcclxuICAgICAgY29uc29sZS5sb2coYENvbXBvbmVudCAke2NvbXBvbmVudE5hbWV9IGlzIG1vdW50ZWRgKTtcclxuICAgIH1cclxuXHJcbiAgICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcclxuICAgICAgY29uc29sZS5sb2coYENvbXBvbmVudCAke2NvbXBvbmVudE5hbWV9IGlzIGdvaW5nIHRvIHVubW91bnRgKTtcclxuICAgIH1cclxuXHJcbiAgICByZW5kZXIoKSB7XHJcbiAgICAgIHJldHVybiA8V3JhcHBlZENvbXBvbmVudCB7Li4udGhpcy5wcm9wc30gLz47XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBTZXQgdGhlIGRpc3BsYXlOYW1lIGZvciBkZWJ1Z2dpbmcgd2hlbiB0aGUgY29tcG9uZW50IGlzIGNyZWF0ZWRcclxuICBXaXRoTG9nZ2luZ0NvbXBvbmVudC5kaXNwbGF5TmFtZSA9IGBXaXRoTG9nZ2luZygke2NvbXBvbmVudE5hbWV9KWA7XHJcblxyXG4gIC8vIE1vdmUgZ2V0Q29tcG9uZW50TmFtZSBvdXRzaWRlIG9mIHRoZSBjb21wb25lbnQncyBtZXRob2RzXHJcbiAgY29uc3QgZ2V0Q29tcG9uZW50TmFtZSA9ICgpID0+IGNvbXBvbmVudE5hbWU7XHJcblxyXG4gIC8vIEF0dGFjaCBnZXRDb21wb25lbnROYW1lIGFzIGEgc3RhdGljIG1ldGhvZFxyXG4gIFdpdGhMb2dnaW5nQ29tcG9uZW50LmdldENvbXBvbmVudE5hbWUgPSBnZXRDb21wb25lbnROYW1lO1xyXG5cclxuICByZXR1cm4gV2l0aExvZ2dpbmdDb21wb25lbnQ7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBXaXRoTG9nZ2luZztcclxuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL0NvdXJzZUxpc3QuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9Db3Vyc2VMaXN0LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XHJcblxyXG5mdW5jdGlvbiBDb3Vyc2VMaXN0Um93KHsgaXNIZWFkZXIsIHRleHRGaXJzdENlbGwsIHRleHRTZWNvbmRDZWxsIH0pIHtcclxuICBjb25zdCByb3dTdHlsZSA9IHtcclxuICAgIGJhY2tncm91bmRDb2xvcjogaXNIZWFkZXIgPyAnI2RlYjViNTQ1JyA6ICcjZjVmNWY1YWInLFxyXG4gIH07XHJcbiAgcmV0dXJuIChcclxuICAgIDx0cj5cclxuICAgICAge2lzSGVhZGVyID8gKFxyXG4gICAgICAgIHRleHRTZWNvbmRDZWxsID09PSBudWxsID8gKFxyXG4gICAgICAgICAgPHRoIGNvbFNwYW49XCIyXCI+e3RleHRGaXJzdENlbGx9PC90aD5cclxuICAgICAgICApIDogKFxyXG4gICAgICAgICAgPD5cclxuICAgICAgICAgICAgPHRoPnt0ZXh0Rmlyc3RDZWxsfTwvdGg+XHJcbiAgICAgICAgICAgIDx0aD57dGV4dFNlY29uZENlbGx9PC90aD5cclxuICAgICAgICAgIDwvPlxyXG4gICAgICAgIClcclxuICAgICAgKSA6IChcclxuICAgICAgICA8PlxyXG4gICAgICAgICAgPHRkPnt0ZXh0Rmlyc3RDZWxsfTwvdGQ+XHJcbiAgICAgICAgICA8dGQ+e3RleHRTZWNvbmRDZWxsfTwvdGQ+XHJcbiAgICAgICAgPC8+XHJcbiAgICAgICl9XHJcbiAgICA8L3RyPlxyXG4gICk7XHJcbn1cclxuXHJcbkNvdXJzZUxpc3RSb3cucHJvcFR5cGVzID0ge1xyXG4gIGlzSGVhZGVyOiBQcm9wVHlwZXMuYm9vbCxcclxuICB0ZXh0Rmlyc3RDZWxsOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXHJcbiAgdGV4dFNlY29uZENlbGw6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5udW1iZXJdKSxcclxufTtcclxuXHJcbkNvdXJzZUxpc3RSb3cuZGVmYXVsdFByb3BzID0ge1xyXG4gIGlzSGVhZGVyOiBmYWxzZSxcclxuICB0ZXh0U2Vjb25kQ2VsbDogbnVsbCxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IENvdXJzZUxpc3RSb3c7XHJcbiIsIi8vIENvdXJzZVNoYXBlLmpzXHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XHJcblxyXG5jb25zdCBDb3Vyc2VTaGFwZSA9IFByb3BUeXBlcy5zaGFwZSh7XHJcbiAgaWQ6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcclxuICBuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXHJcbiAgY3JlZGl0OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMubnVtYmVyXSkuaXNSZXF1aXJlZCxcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDb3Vyc2VTaGFwZTtcclxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0ICcuL0NvdXJzZUxpc3QuY3NzJztcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuaW1wb3J0IENvdXJzZUxpc3RSb3cgZnJvbSAnLi4vQ291cnNlTGlzdC9Db3Vyc2VMaXN0Um93JztcclxuaW1wb3J0IENvdXJzZVNoYXBlIGZyb20gJy4uL0NvdXJzZUxpc3QvQ291cnNlU2hhcGUnO1xyXG5cclxuZnVuY3Rpb24gQ291cnNlTGlzdCh7IGxpc3RDb3Vyc2VzIH0pIHtcclxuICByZXR1cm4gKFxyXG4gICAgPHRhYmxlIGlkPVwiQ291cnNlTGlzdFwiPlxyXG4gICAgICA8dGhlYWQ+XHJcbiAgICAgICAgPENvdXJzZUxpc3RSb3cgaXNIZWFkZXI9e3RydWV9IHRleHRGaXJzdENlbGw9XCJBdmFpbGFibGUgY291cnNlc1wiIC8+XHJcbiAgICAgICAgPENvdXJzZUxpc3RSb3cgaXNIZWFkZXI9e3RydWV9IHRleHRGaXJzdENlbGw9XCJDb3Vyc2UgbmFtZVwiIHRleHRTZWNvbmRDZWxsPVwiQ3JlZGl0XCIgLz5cclxuICAgICAgPC90aGVhZD5cclxuICAgICAgPHRib2R5PlxyXG4gICAgICAgIHtsaXN0Q291cnNlcy5sZW5ndGggPT09IDAgPyAoXHJcbiAgICAgICAgICA8Q291cnNlTGlzdFJvdyBpc0hlYWRlcj17ZmFsc2V9IHRleHRGaXJzdENlbGw9XCJObyBjb3Vyc2UgYXZhaWxhYmxlIHlldFwiIC8+XHJcbiAgICAgICAgKSA6IChcclxuICAgICAgICAgIGxpc3RDb3Vyc2VzLm1hcChjb3Vyc2UgPT4gKFxyXG4gICAgICAgICAgICA8Q291cnNlTGlzdFJvd1xyXG4gICAgICAgICAgICAgIGtleT17Y291cnNlLmlkfVxyXG4gICAgICAgICAgICAgIGlzSGVhZGVyPXtmYWxzZX1cclxuICAgICAgICAgICAgICB0ZXh0Rmlyc3RDZWxsPXtjb3Vyc2UubmFtZX1cclxuICAgICAgICAgICAgICB0ZXh0U2Vjb25kQ2VsbD17Y291cnNlLmNyZWRpdH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICkpXHJcbiAgICAgICAgKX1cclxuICAgICAgPC90Ym9keT5cclxuICAgIDwvdGFibGU+XHJcbiAgKTtcclxufVxyXG5cclxuQ291cnNlTGlzdC5wcm9wVHlwZXMgPSB7XHJcbiAgbGlzdENvdXJzZXM6IFByb3BUeXBlcy5hcnJheU9mKENvdXJzZVNoYXBlKSxcclxufTtcclxuXHJcbkNvdXJzZUxpc3QuZGVmYXVsdFByb3BzID0ge1xyXG4gIGxpc3RDb3Vyc2VzOiBbXSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IENvdXJzZUxpc3Q7XHJcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XHJcblxyXG5cclxuY29uc3QgQm9keVNlY3Rpb24gPSAoe3RpdGxlLCBjaGlsZHJlbn0pID0+IChcclxuICA8ZGl2IGNsYXNzTmFtZT0nYm9keVNlY3Rpb24nPlxyXG4gICAgPGgyPnt0aXRsZX08L2gyPlxyXG4gICAge2NoaWxkcmVufVxyXG4gIDwvZGl2PlxyXG4pO1xyXG5cclxuQm9keVNlY3Rpb24ucHJvcFR5cGVzID0ge1xyXG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXHJcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxyXG59XHJcblxyXG5Cb2R5U2VjdGlvbi5kZWZhdWx0UHJvcHMgPSB7XHJcbiAgY2hpbGRyZW46IG51bGwsXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEJvZHlTZWN0aW9uOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9Cb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20uY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9Cb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20uY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuaW1wb3J0IEJvZHlTZWN0aW9uIGZyb20gJy4vQm9keVNlY3Rpb24nO1xyXG5pbXBvcnQgJy4vQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tLmNzcyc7XHJcblxyXG5cclxuY29uc3QgQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tID0gKHt0aXRsZSwgY2hpbGRyZW59KSA9PiB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lPSdib2R5U2VjdGlvbldpdGhNYXJnaW4nPlxyXG4gICAgICA8Qm9keVNlY3Rpb24gdGl0bGU9e3RpdGxlfT57Y2hpbGRyZW59PC9Cb2R5U2VjdGlvbj5cclxuICAgIDwvZGl2PlxyXG4gIClcclxufVxyXG5cclxuQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tLnByb3BzVHlwZXMgPXtcclxuICB0aXRsZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxyXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZS5pc1JlcXVpcmVkXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0ICBCb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b207IiwiLy8gQXBwLmpzXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgRm9vdGVyIGZyb20gXCIuLi9Gb290ZXIvRm9vdGVyXCI7XG5pbXBvcnQgSGVhZGVyIGZyb20gXCIuLi9IZWFkZXIvSGVhZGVyXCI7XG5pbXBvcnQgTG9naW4gZnJvbSBcIi4uL0xvZ2luL0xvZ2luXCI7XG5pbXBvcnQgTm90aWZpY2F0aW9ucyBmcm9tIFwiLi4vTm90aWZpY2F0aW9ucy9Ob3RpZmljYXRpb25zXCI7XG5pbXBvcnQgQ291cnNlTGlzdCBmcm9tIFwiLi4vQ291cnNlTGlzdC9Db3Vyc2VMaXN0XCI7XG5pbXBvcnQgeyBnZXRMYXRlc3ROb3RpZmljYXRpb24gfSBmcm9tIFwiLi4vdXRpbHMvdXRpbHNcIjtcbmltcG9ydCB7IFByb3BUeXBlcyB9IGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tIGZyb20gXCIuLi9Cb2R5U2VjdGlvbi9Cb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b21cIjtcbmltcG9ydCBCb2R5U2VjdGlvbiBmcm9tIFwiLi4vQm9keVNlY3Rpb24vQm9keVNlY3Rpb25cIjtcbmltcG9ydCB7IFN0eWxlU2hlZXQsIGNzcyB9IGZyb20gJ2FwaHJvZGl0ZSc7XG5cbmNsYXNzIEFwcCBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuXG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGlzTG9nZ2VkSW46IHRoaXMucHJvcHMuaXNMb2dnZWRJbixcbiAgICAgIGxvZ091dDogdGhpcy5wcm9wcy5sb2dPdXQsXG4gICAgICBsaXN0Q291cnNlczogW1xuICAgICAgICB7IGlkOiAxLCBuYW1lOiAnRVM2JywgY3JlZGl0OiA2MCB9LFxuICAgICAgICB7IGlkOiAyLCBuYW1lOiAnV2VicGFjaycsIGNyZWRpdDogMjAgfSxcbiAgICAgICAgeyBpZDogMywgbmFtZTogJ1JlYWN0JywgY3JlZGl0OiA0MCB9XG4gICAgICBdLFxuICAgICAgbGlzdE5vdGlmaWNhdGlvbnM6IFtcbiAgICAgICAgeyBpZDogMSwgdHlwZTogXCJkZWZhdWx0XCIsIHZhbHVlOiBcIk5ldyBjb3Vyc2UgYXZhaWxhYmxlXCIgfSxcbiAgICAgICAgeyBpZDogMiwgdHlwZTogXCJ1cmdlbnRcIiwgdmFsdWU6IFwiTmV3IHJlc3VtZSBhdmFpbGFibGVcIiB9LFxuICAgICAgICB7IGlkOiAzLCB0eXBlOiBcInVyZ2VudFwiLCBodG1sOiB7IF9faHRtbDogZ2V0TGF0ZXN0Tm90aWZpY2F0aW9uKCkgfSB9LFxuICAgICAgXVxuICAgIH07XG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5oYW5kbGVLZXlEb3duKTtcbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLmhhbmRsZUtleURvd24pO1xuICB9XG5cbiAgaGFuZGxlS2V5RG93biA9IChldmVudCkgPT4ge1xuICAgIGNvbnN0IHsgbG9nT3V0IH0gPSB0aGlzLnN0YXRlO1xuICAgIGlmIChldmVudC5rZXkgPT09ICdoJyAmJiAoZXZlbnQuY3RybEtleSB8fCBldmVudC5tZXRhS2V5KSkge1xuICAgICAgYWxlcnQoJ0xvZ2dpbmcgeW91IG91dCcpO1xuICAgICAgbG9nT3V0KCk7XG4gICAgfVxuICB9XG5cbiAgaGFuZGxlTG9naW4gPSAoKSA9PiB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBpc0xvZ2dlZEluOiB0cnVlLFxuICAgIH0pO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgaXNMb2dnZWRJbiwgbGlzdENvdXJzZXMsIGxpc3ROb3RpZmljYXRpb25zIH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDw+XG4gICAgICAgIDxOb3RpZmljYXRpb25zIGxpc3ROb3RpZmljYXRpb25zPXtsaXN0Tm90aWZpY2F0aW9uc30gLz5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJBcHBcIj5cbiAgICAgICAgICA8SGVhZGVyIC8+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NzcyhzdHlsZXMuYm9keSl9PlxuICAgICAgICAgICAge2lzTG9nZ2VkSW4gP1xuICAgICAgICAgICAgICA8Qm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tIHRpdGxlPXsnQ291cnNlIGxpc3QnfT5cbiAgICAgICAgICAgICAgICA8Q291cnNlTGlzdCBsaXN0Q291cnNlcz17bGlzdENvdXJzZXN9IC8+XG4gICAgICAgICAgICAgIDwvQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tPiA6XG4gICAgICAgICAgICAgIDxCb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20gdGl0bGU9eydMb2cgaW4gdG8gY29udGludWUnfT5cbiAgICAgICAgICAgICAgICA8TG9naW4gb25Mb2dpbj17dGhpcy5oYW5kbGVMb2dpbn0gLz5cbiAgICAgICAgICAgICAgPC9Cb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20+fVxuICAgICAgICAgICAgPEJvZHlTZWN0aW9uIHRpdGxlPXsnTmV3cyBmcm9tIHRoZSBTY2hvb2wnfT5cbiAgICAgICAgICAgICAgPHA+TG9yZW0gaXBzdW0gZG9sb3IsIHNpdCBhbWV0IGNvbnNlY3RldHVyIGFkaXBpc2ljaW5nIGVsaXQuIENvbnNlcXV1bnR1ciwgYWRpcGlzY2k/PC9wPlxuICAgICAgICAgICAgPC9Cb2R5U2VjdGlvbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5mb290ZXIpfT5cbiAgICAgICAgICAgIDxGb290ZXIgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8Lz5cbiAgICApO1xuICB9XG59XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgYm9keToge1xuICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICBmbGV4RGlyZWN0aW9uOiAnY29sdW1uJyxcbiAgICBhbGlnbkl0ZW1zOiAnZmxleC1zdGFydCcsXG4gICAgYm9yZGVyVG9wOiAnM3B4IHNvbGlkICNlMTQ4NGMnLFxuICB9LFxuICBmb290ZXI6IHtcbiAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICBib3R0b206IDAsXG4gICAgYm9yZGVyVG9wOiAnM3B4IHNvbGlkICNlMTQ4NGMnLFxuICAgIHdpZHRoOiAnMTAwJScsXG4gICAgdGV4dEFsaWduOiAnY2VudGVyJyxcbiAgICBmb250U3R5bGU6ICdpdGFsaWMnLFxuICB9LFxufSk7XG5cbkFwcC5kZWZhdWx0UHJvcHMgPSB7XG4gIGlzTG9nZ2VkSW46IGZhbHNlLFxuICBsb2dPdXQ6ICgpID0+IHt9XG59XG5cbkFwcC5wcm9wVHlwZXMgPSB7XG4gIGlzTG9nZ2VkSW46IFByb3BUeXBlcy5ib29sLFxuICBsb2dPdXQ6IFByb3BUeXBlcy5mdW5jXG59XG5cbmV4cG9ydCBkZWZhdWx0IEFwcDtcbiIsImNvbnN0IHJlcG9ydFdlYlZpdGFscyA9IG9uUGVyZkVudHJ5ID0+IHtcclxuICBpZiAob25QZXJmRW50cnkgJiYgb25QZXJmRW50cnkgaW5zdGFuY2VvZiBGdW5jdGlvbikge1xyXG4gICAgaW1wb3J0KCd3ZWItdml0YWxzJykudGhlbigoeyBnZXRDTFMsIGdldEZJRCwgZ2V0RkNQLCBnZXRMQ1AsIGdldFRURkIgfSkgPT4ge1xyXG4gICAgICBnZXRDTFMob25QZXJmRW50cnkpO1xyXG4gICAgICBnZXRGSUQob25QZXJmRW50cnkpO1xyXG4gICAgICBnZXRGQ1Aob25QZXJmRW50cnkpO1xyXG4gICAgICBnZXRMQ1Aob25QZXJmRW50cnkpO1xyXG4gICAgICBnZXRUVEZCKG9uUGVyZkVudHJ5KTtcclxuICAgIH0pO1xyXG4gIH1cclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHJlcG9ydFdlYlZpdGFsczsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgUmVhY3REb20gZnJvbSAncmVhY3QtZG9tJztcclxuaW1wb3J0ICcuL2luZGV4LmNzcyc7XHJcbmltcG9ydCBBcHAgZnJvbSAnLi9BcHAvQXBwJztcclxuaW1wb3J0ICByZXBvcnRXZWJWaXRhbHMgZnJvbSAnLi9yZXBvcnRXZWJWaXRhbHMnO1xyXG5cclxuUmVhY3REb20ucmVuZGVyKFxyXG4gIDxSZWFjdC5TdHJpY3RNb2RlPlxyXG4gICAgPEFwcCAvPlxyXG4gIDwvUmVhY3QuU3RyaWN0TW9kZT4sXHJcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb3QnKVxyXG4pO1xyXG5cclxucmVwb3J0V2ViVml0YWxzKCk7XHJcbiJdLCJuYW1lcyI6WyJpblByb2dyZXNzIiwiZGF0YVdlYnBhY2tQcmVmaXgiLCJyYXdBc2FwIiwiZnJlZVRhc2tzIiwicGVuZGluZ0Vycm9ycyIsInJlcXVlc3RFcnJvclRocm93IiwibWFrZVJlcXVlc3RDYWxsRnJvbVRpbWVyIiwibGVuZ3RoIiwic2hpZnQiLCJhc2FwIiwidGFzayIsInJhd1Rhc2siLCJwb3AiLCJSYXdUYXNrIiwidGhpcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJwcm90b3R5cGUiLCJjYWxsIiwiZXJyb3IiLCJvbmVycm9yIiwicHVzaCIsInF1ZXVlIiwicmVxdWVzdEZsdXNoIiwiaW5kZXgiLCJmbHVzaCIsImN1cnJlbnRJbmRleCIsInNjYW4iLCJuZXdMZW5ndGgiLCJ0b2dnbGUiLCJvYnNlcnZlciIsIm5vZGUiLCJzY29wZSIsImciLCJzZWxmIiwiQnJvd3Nlck11dGF0aW9uT2JzZXJ2ZXIiLCJNdXRhdGlvbk9ic2VydmVyIiwiV2ViS2l0TXV0YXRpb25PYnNlcnZlciIsImNhbGxiYWNrIiwidGltZW91dEhhbmRsZSIsInNldFRpbWVvdXQiLCJoYW5kbGVUaW1lciIsImludGVydmFsSGFuZGxlIiwic2V0SW50ZXJ2YWwiLCJjbGVhclRpbWVvdXQiLCJjbGVhckludGVydmFsIiwiZG9jdW1lbnQiLCJjcmVhdGVUZXh0Tm9kZSIsIm9ic2VydmUiLCJjaGFyYWN0ZXJEYXRhIiwiZGF0YSIsInN0ciIsImhhc2giLCJpIiwiY2hhckNvZGVBdCIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwiaWQiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJqb2luIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsInNvdXJjZU1hcHBpbmciLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJPYmplY3QiLCJoYXNPd25Qcm9wZXJ0eSIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsImFzc2lnbiIsInRlc3QxIiwiU3RyaW5nIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsInRlc3QyIiwiZnJvbUNoYXJDb2RlIiwibiIsInRlc3QzIiwic3BsaXQiLCJmb3JFYWNoIiwibGV0dGVyIiwia2V5cyIsImVyciIsInNob3VsZFVzZU5hdGl2ZSIsInRhcmdldCIsInNvdXJjZSIsImZyb20iLCJzeW1ib2xzIiwidG8iLCJ2YWwiLCJUeXBlRXJyb3IiLCJ0b09iamVjdCIsInMiLCJhcmd1bWVudHMiLCJrZXkiLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsImVtcHR5RnVuY3Rpb24iLCJlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0IiwicmVzZXRXYXJuaW5nQ2FjaGUiLCJzaGltIiwicHJvcHMiLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJsb2NhdGlvbiIsInByb3BGdWxsTmFtZSIsInNlY3JldCIsIkVycm9yIiwibmFtZSIsImdldFNoaW0iLCJpc1JlcXVpcmVkIiwiUmVhY3RQcm9wVHlwZXMiLCJhcnJheSIsImJpZ2ludCIsImJvb2wiLCJmdW5jIiwibnVtYmVyIiwib2JqZWN0Iiwic3RyaW5nIiwic3ltYm9sIiwiYW55IiwiYXJyYXlPZiIsImVsZW1lbnQiLCJlbGVtZW50VHlwZSIsImluc3RhbmNlT2YiLCJvYmplY3RPZiIsIm9uZU9mIiwib25lT2ZUeXBlIiwic2hhcGUiLCJleGFjdCIsImNoZWNrUHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiYWEiLCJyIiwidSIsImEiLCJiIiwiYyIsImJhIiwiZCIsImUiLCJmIiwiaCIsImwiLCJBcnJheSIsInNsaWNlIiwiYXBwbHkiLCJtIiwib25FcnJvciIsImRhIiwiZWEiLCJmYSIsImhhIiwiaWEiLCJqYSIsImxhIiwibWEiLCJuYSIsIm9hIiwidHlwZSIsImN1cnJlbnRUYXJnZXQiLCJrYSIsInBhIiwicWEiLCJyYSIsImluZGV4T2YiLCJzYSIsImV4dHJhY3RFdmVudHMiLCJldmVudFR5cGVzIiwidGEiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsInVhIiwicmVnaXN0cmF0aW9uTmFtZSIsInZhIiwid2EiLCJkZXBlbmRlbmNpZXMiLCJ4YSIsInlhIiwid2luZG93IiwiY3JlYXRlRWxlbWVudCIsInphIiwiQWEiLCJCYSIsIkNhIiwic3RhdGVOb2RlIiwiRGEiLCJFYSIsIkZhIiwiR2EiLCJIYSIsIklhIiwiSmEiLCJLYSIsIkxhIiwiTWEiLCJOYSIsIk9hIiwiUGEiLCJRYSIsInYiLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwic2FuaXRpemVVUkwiLCJDIiwidG9Mb3dlckNhc2UiLCJVYSIsIlZhIiwidG9VcHBlckNhc2UiLCJyZXBsYWNlIiwieGxpbmtIcmVmIiwiV2EiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsIlhhIiwiU2EiLCJpc05hTiIsIlRhIiwidGVzdCIsIlJhIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwic2V0QXR0cmlidXRlTlMiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwiY3VycmVudCIsIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnIiwic3VzcGVuc2UiLCJZYSIsIkUiLCJTeW1ib2wiLCJmb3IiLCJaYSIsIiRhIiwiYWIiLCJiYiIsImNiIiwiZGIiLCJlYiIsImZiIiwiZ2IiLCJoYiIsImliIiwiamIiLCJrYiIsImxiIiwibWIiLCJpdGVyYXRvciIsIm5iIiwicGIiLCJkaXNwbGF5TmFtZSIsIiQkdHlwZW9mIiwicmVuZGVyIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJxYiIsInRhZyIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwicmV0dXJuIiwicmIiLCJzYiIsIm5vZGVOYW1lIiwieGIiLCJfdmFsdWVUcmFja2VyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiY29uc3RydWN0b3IiLCJnZXQiLCJzZXQiLCJkZWZpbmVQcm9wZXJ0eSIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwidGIiLCJ5YiIsImNoZWNrZWQiLCJ2YWx1ZSIsInpiIiwiZGVmYXVsdENoZWNrZWQiLCJkZWZhdWx0VmFsdWUiLCJfd3JhcHBlclN0YXRlIiwiaW5pdGlhbENoZWNrZWQiLCJBYiIsImluaXRpYWxWYWx1ZSIsImNvbnRyb2xsZWQiLCJCYiIsIkNiIiwiRGIiLCJFYiIsIm93bmVyRG9jdW1lbnQiLCJhY3RpdmVFbGVtZW50IiwiR2IiLCJjaGlsZHJlbiIsIkNoaWxkcmVuIiwiRmIiLCJIYiIsIm9wdGlvbnMiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsImRpc2FibGVkIiwiSWIiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIkpiIiwiaXNBcnJheSIsIktiIiwiTGIiLCJ0ZXh0Q29udGVudCIsIk5iIiwiT2IiLCJQYiIsIlFiIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwidmFsdWVPZiIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsImFwcGVuZENoaWxkIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsIlJiIiwibGFzdENoaWxkIiwibm9kZVR5cGUiLCJub2RlVmFsdWUiLCJTYiIsIlRiIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiVWIiLCJWYiIsIldiIiwic3R5bGUiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiWGIiLCJZYiIsIlpiIiwiJGIiLCJhYyIsImJjIiwiV2Vha01hcCIsIk1hcCIsImNjIiwiZGMiLCJhbHRlcm5hdGUiLCJlZmZlY3RUYWciLCJlYyIsIm1lbW9pemVkU3RhdGUiLCJkZWh5ZHJhdGVkIiwiZmMiLCJoYyIsImNoaWxkIiwic2libGluZyIsImdjIiwiaWMiLCJqYyIsImtjIiwibGMiLCJfZGlzcGF0Y2hMaXN0ZW5lcnMiLCJfZGlzcGF0Y2hJbnN0YW5jZXMiLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsImlzUGVyc2lzdGVudCIsInJlbGVhc2UiLCJtYyIsIm5jIiwic3JjRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50IiwicGFyZW50Tm9kZSIsIm9jIiwicGMiLCJxYyIsInRvcExldmVsVHlwZSIsIm5hdGl2ZUV2ZW50IiwidGFyZ2V0SW5zdCIsImFuY2VzdG9ycyIsInJjIiwiZXZlbnRTeXN0ZW1GbGFncyIsInNjIiwiY29udGFpbmVySW5mbyIsInRjIiwidWMiLCJoYXMiLCJ2YyIsIkYiLCJ3YyIsInhjIiwieWMiLCJ6YyIsIkFjIiwiQmMiLCJDYyIsIkRjIiwiRWMiLCJGYyIsIkdjIiwiSGMiLCJJYyIsIktjIiwiYmxvY2tlZE9uIiwiY29udGFpbmVyIiwiTGMiLCJkZWxldGUiLCJwb2ludGVySWQiLCJNYyIsIk5jIiwiUGMiLCJ1bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkiLCJwcmlvcml0eSIsImh5ZHJhdGUiLCJRYyIsIlJjIiwiU2MiLCJUYyIsIlVjIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwiVmMiLCJXYyIsIlljIiwiWmMiLCIkYyIsImFkIiwiYnViYmxlZCIsImNhcHR1cmVkIiwiZXZlbnRQcmlvcml0eSIsImJkIiwiY2QiLCJkZCIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwiZWQiLCJmZCIsImdkIiwiYmluZCIsImhkIiwiYWRkRXZlbnRMaXN0ZW5lciIsIk9jIiwiamQiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsImtkIiwibGQiLCJ0cmltIiwibWQiLCJzZXRQcm9wZXJ0eSIsImNoYXJBdCIsInN1YnN0cmluZyIsIm5kIiwibWVudWl0ZW0iLCJhcmVhIiwiYmFzZSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibGluayIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwib2QiLCJwZCIsImlzIiwicWQiLCJyZCIsInNkIiwidGQiLCJib2R5IiwidWQiLCJ2ZCIsIm9mZnNldCIsIm5leHRTaWJsaW5nIiwid2QiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwieGQiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnRXaW5kb3ciLCJocmVmIiwieWQiLCJjb250ZW50RWRpdGFibGUiLCJ6ZCIsIkFkIiwiQmQiLCJDZCIsIkRkIiwiRWQiLCJGZCIsImF1dG9Gb2N1cyIsIkdkIiwiX19odG1sIiwiSGQiLCJJZCIsIkpkIiwiS2QiLCJwcmV2aW91c1NpYmxpbmciLCJMZCIsIk1hdGgiLCJyYW5kb20iLCJNZCIsIk5kIiwiT2QiLCJQZCIsIlFkIiwiUmQiLCJTZCIsIlRkIiwiZGlzcGF0Y2hDb25maWciLCJVZCIsIl90YXJnZXRJbnN0IiwiVmQiLCJXZCIsIlhkIiwiWWQiLCJaZCIsIiRkIiwiYWUiLCJiZSIsImNlIiwiRyIsIkludGVyZmFjZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsImVlIiwiZXZlbnRQb29sIiwiZmUiLCJkZXN0cnVjdG9yIiwiZGUiLCJnZXRQb29sZWQiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJEYXRlIiwibm93IiwiaXNUcnVzdGVkIiwiZXh0ZW5kIiwiZ2UiLCJoZSIsImllIiwiamUiLCJrZSIsImRvY3VtZW50TW9kZSIsImxlIiwibWUiLCJuZSIsIm9lIiwiYmVmb3JlSW5wdXQiLCJjb21wb3NpdGlvbkVuZCIsImNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvblVwZGF0ZSIsInBlIiwicWUiLCJrZXlDb2RlIiwicmUiLCJkZXRhaWwiLCJzZSIsInZlIiwibG9jYWxlIiwid2hpY2giLCJ0ZSIsImN0cmxLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiY2hhciIsInVlIiwid2UiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGV4dCIsInRpbWUiLCJ1cmwiLCJ3ZWVrIiwieGUiLCJ5ZSIsImNoYW5nZSIsInplIiwiQWUiLCJCZSIsIkNlIiwiRGUiLCJFZSIsIkZlIiwiR2UiLCJkZXRhY2hFdmVudCIsIkhlIiwiSWUiLCJhdHRhY2hFdmVudCIsIkplIiwiS2UiLCJMZSIsIk1lIiwiX2lzSW5wdXRFdmVudFN1cHBvcnRlZCIsIk5lIiwidmlldyIsIk9lIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsIlBlIiwiZ2V0TW9kaWZpZXJTdGF0ZSIsIlFlIiwiUmUiLCJTZSIsIlRlIiwiVWUiLCJWZSIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwic2hpZnRLZXkiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiV2UiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJYZSIsIm1vdXNlRW50ZXIiLCJtb3VzZUxlYXZlIiwicG9pbnRlckVudGVyIiwicG9pbnRlckxlYXZlIiwiWWUiLCJkZWZhdWx0VmlldyIsInBhcmVudFdpbmRvdyIsInAiLCIkZSIsImFmIiwiYmYiLCJjZiIsImRmIiwic2VsZWN0IiwiZWYiLCJmZiIsImdmIiwiaGYiLCJqZiIsInN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJlbmQiLCJzZWxlY3Rpb25FbmQiLCJhbmNob3JOb2RlIiwiZ2V0U2VsZWN0aW9uIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJrZiIsIm9uU2VsZWN0IiwibGYiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwibWYiLCJjbGlwYm9hcmREYXRhIiwibmYiLCJvZiIsImNoYXJDb2RlIiwicGYiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwicWYiLCJyZiIsInJlcGVhdCIsInNmIiwiZGF0YVRyYW5zZmVyIiwidGYiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwidWYiLCJ2ZiIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwid2YiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwieWYiLCJ6ZiIsIkgiLCJJIiwiQWYiLCJKIiwiSyIsIkJmIiwiQ2YiLCJjb250ZXh0VHlwZXMiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJMIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJEZiIsIkVmIiwiRmYiLCJnZXRDaGlsZENvbnRleHQiLCJHZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiSGYiLCJJZiIsIkpmIiwiS2YiLCJ1bnN0YWJsZV9jYW5jZWxDYWxsYmFjayIsIkxmIiwidW5zdGFibGVfcmVxdWVzdFBhaW50IiwiTWYiLCJ1bnN0YWJsZV9ub3ciLCJOZiIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwiT2YiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsIlBmIiwiUWYiLCJSZiIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwiU2YiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJUZiIsIlVmIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJWZiIsIldmIiwiWGYiLCJZZiIsIlpmIiwiJGYiLCJhZyIsImJnIiwiY2ciLCJkZyIsImVnIiwiZmciLCJnZyIsImhnIiwiaWciLCJkZWZhdWx0UHJvcHMiLCJqZyIsImtnIiwibGciLCJtZyIsIm5nIiwib2ciLCJfY29udGV4dCIsIl9jdXJyZW50VmFsdWUiLCJwZyIsImNoaWxkRXhwaXJhdGlvblRpbWUiLCJxZyIsImZpcnN0Q29udGV4dCIsImV4cGlyYXRpb25UaW1lIiwicmciLCJzZyIsImNvbnRleHQiLCJvYnNlcnZlZEJpdHMiLCJuZXh0IiwicmVzcG9uZGVycyIsInRnIiwidWciLCJ1cGRhdGVRdWV1ZSIsImJhc2VTdGF0ZSIsImJhc2VRdWV1ZSIsInNoYXJlZCIsInBlbmRpbmciLCJlZmZlY3RzIiwidmciLCJ3ZyIsInN1c3BlbnNlQ29uZmlnIiwicGF5bG9hZCIsInhnIiwieWciLCJ6ZyIsIngiLCJ6IiwiY2EiLCJBZyIsIkQiLCJ0IiwiQmciLCJDZyIsIkRnIiwiRWciLCJDb21wb25lbnQiLCJyZWZzIiwiRmciLCJKZyIsImlzTW91bnRlZCIsIl9yZWFjdEludGVybmFsRmliZXIiLCJlbnF1ZXVlU2V0U3RhdGUiLCJHZyIsIkhnIiwiSWciLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiS2ciLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsIkxnIiwiY29udGV4dFR5cGUiLCJzdGF0ZSIsInVwZGF0ZXIiLCJNZyIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIk5nIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJPZyIsIlBnIiwicmVmIiwiX293bmVyIiwiX3N0cmluZ1JlZiIsIlFnIiwiUmciLCJsYXN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImZpcnN0RWZmZWN0IiwiU2ciLCJUZyIsIm1vZGUiLCJVZyIsImltcGxlbWVudGF0aW9uIiwiVmciLCJXZyIsInkiLCJBIiwicSIsImRvbmUiLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJjaCIsImRoIiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsImVoIiwiZmgiLCJnaCIsIk0iLCJoaCIsIm1lbW9pemVkUHJvcHMiLCJyZXZlYWxPcmRlciIsImloIiwicmVzcG9uZGVyIiwiamgiLCJraCIsImxoIiwiTiIsIk8iLCJQIiwibWgiLCJRIiwibmgiLCJvaCIsInBoIiwicWgiLCJyaCIsInNoIiwidGgiLCJ1aCIsInZoIiwid2giLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiYWN0aW9uIiwiZWFnZXJSZWR1Y2VyIiwiZWFnZXJTdGF0ZSIsImxhc3RSZW5kZXJlZFN0YXRlIiwiZGlzcGF0Y2giLCJ4aCIsInloIiwiemgiLCJBaCIsImNyZWF0ZSIsImRlc3Ryb3kiLCJkZXBzIiwiQmgiLCJDaCIsIkRoIiwiRWgiLCJGaCIsIkdoIiwiSGgiLCJJaCIsIkpoIiwiS2giLCJMaCIsIk1oIiwiTmgiLCJyZWFkQ29udGV4dCIsInVzZUNhbGxiYWNrIiwidXNlQ29udGV4dCIsInVzZUVmZmVjdCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZVN0YXRlIiwidXNlRGVidWdWYWx1ZSIsInVzZVJlc3BvbmRlciIsInVzZURlZmVycmVkVmFsdWUiLCJ1c2VUcmFuc2l0aW9uIiwiT2giLCJQaCIsIlFoIiwiUmgiLCJTaCIsIlRoIiwicGVuZGluZ1Byb3BzIiwiVWgiLCJWaCIsIldoIiwiWGgiLCJZaCIsIlJlYWN0Q3VycmVudE93bmVyIiwiUiIsIlpoIiwiJGgiLCJhaSIsImJpIiwiY29tcGFyZSIsImNpIiwiZGkiLCJlaSIsImZpIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwiZ2kiLCJnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IiLCJoaSIsInBlbmRpbmdDb250ZXh0IiwibmkiLCJvaSIsInBpIiwicWkiLCJpaSIsInJldHJ5VGltZSIsImppIiwiZmFsbGJhY2siLCJ1bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjayIsImtpIiwibGkiLCJpc0JhY2t3YXJkcyIsInJlbmRlcmluZyIsInJlbmRlcmluZ1N0YXJ0VGltZSIsImxhc3QiLCJ0YWlsIiwidGFpbEV4cGlyYXRpb24iLCJ0YWlsTW9kZSIsIm1pIiwicmkiLCJzaSIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJvbkNsaWNrIiwib25jbGljayIsInNpemUiLCJjcmVhdGVFbGVtZW50TlMiLCJTIiwidGkiLCJ1aSIsInZpIiwid2kiLCJUIiwieGkiLCJVIiwieWkiLCJ6aSIsIkFpIiwic3RhY2siLCJCaSIsIldlYWtTZXQiLCJTZXQiLCJDaSIsImNvbnNvbGUiLCJGaSIsIkVpIiwiR2kiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIkhpIiwiSWkiLCJKaSIsImZvY3VzIiwiS2kiLCJMaSIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiRGkiLCJNaSIsIk5pIiwiT2kiLCJQaSIsIlFpIiwiUmkiLCJpbnN0YW5jZSIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJTaSIsIlRpIiwiZGlzcGxheSIsIlVpIiwiVmkiLCJhZGQiLCJ0aGVuIiwiV2kiLCJYaSIsIllpIiwiWmkiLCIkaSIsImNvbXBvbmVudERpZENhdGNoIiwiYWoiLCJjb21wb25lbnRTdGFjayIsIlJqIiwiYmoiLCJjZWlsIiwiY2oiLCJkaiIsIlYiLCJlaiIsImZqIiwiZ2oiLCJoaiIsImlqIiwiamoiLCJXIiwiWCIsImtqIiwibGoiLCJtaiIsIm5qIiwib2oiLCJwaiIsIlkiLCJxaiIsInJqIiwic2oiLCJ0aiIsInVqIiwidmoiLCJ3aiIsInRpbWVvdXRNcyIsInhqIiwieWoiLCJaIiwiemoiLCJsYXN0RXhwaXJlZFRpbWUiLCJBaiIsImZpcnN0UGVuZGluZ1RpbWUiLCJsYXN0UGluZ2VkVGltZSIsIm5leHRLbm93blBlbmRpbmdMZXZlbCIsImNhbGxiYWNrRXhwaXJhdGlvblRpbWUiLCJjYWxsYmFja1ByaW9yaXR5IiwiY2FsbGJhY2tOb2RlIiwiQmoiLCJ0aW1lb3V0IiwiQ2oiLCJEaiIsIkVqIiwiRmoiLCJHaiIsIkhqIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRFeHBpcmF0aW9uVGltZSIsImxhc3RTdXNwZW5kZWRUaW1lIiwiSWoiLCJKaiIsImJ1c3lNaW5EdXJhdGlvbk1zIiwiYnVzeURlbGF5TXMiLCJLaiIsIk1qIiwiTmoiLCJwaW5nQ2FjaGUiLCJPaiIsInciLCJ1YiIsIlBqIiwiWGMiLCJRaiIsIlNqIiwiZmlyc3RTdXNwZW5kZWRUaW1lIiwicmFuZ2VDb3VudCIsIndiIiwiYWN0aXZlRWxlbWVudERldGFjaGVkIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsIlRqIiwiQiIsIm1pbiIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsImxlZnQiLCJzY3JvbGxMZWZ0IiwidG9wIiwic2Nyb2xsVG9wIiwidmIiLCJVaiIsIlZqIiwiV2oiLCJoaWRkZW4iLCJfY3RvciIsImRlZmF1bHQiLCJvYiIsIlhqIiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwiWmoiLCJpc1JlYWN0Q29tcG9uZW50IiwicGVuZGluZ0NoaWxkcmVuIiwiYWsiLCJiayIsImNrIiwiZGsiLCJlayIsImZrIiwiSmMiLCJfaW50ZXJuYWxSb290IiwiZ2siLCJpayIsImhhc0F0dHJpYnV0ZSIsImhrIiwia2siLCJqayIsInVubW91bnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9ybSIsIkxqIiwibGsiLCJFdmVudHMiLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0Iiwib25Db21taXRGaWJlclJvb3QiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsIllqIiwib3ZlcnJpZGVIb29rU3RhdGUiLCJvdmVycmlkZVByb3BzIiwic2V0U3VzcGVuc2VIYW5kbGVyIiwic2NoZWR1bGVVcGRhdGUiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoIiwic2NoZWR1bGVSZWZyZXNoIiwic2NoZWR1bGVSb290Iiwic2V0UmVmcmVzaEhhbmRsZXIiLCJnZXRDdXJyZW50RmliZXIiLCJidW5kbGVUeXBlIiwidmVyc2lvbiIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJjcmVhdGVQb3J0YWwiLCJmaW5kRE9NTm9kZSIsImZsdXNoU3luYyIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiY2hlY2tEQ0UiLCJzZXRTdGF0ZSIsImZvcmNlVXBkYXRlIiwiX19zZWxmIiwiX19zb3VyY2UiLCJyZXN1bHQiLCJrZXlQcmVmaXgiLCJjb3VudCIsImVzY2FwZSIsIklzU29tZVJlbmRlcmVyQWN0aW5nIiwidG9BcnJheSIsIm9ubHkiLCJGcmFnbWVudCIsIlByb2ZpbGVyIiwiUHVyZUNvbXBvbmVudCIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsImNsb25lRWxlbWVudCIsImNyZWF0ZUNvbnRleHQiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIlByb3ZpZGVyIiwiQ29uc3VtZXIiLCJjcmVhdGVGYWN0b3J5IiwiY3JlYXRlUmVmIiwiZm9yd2FyZFJlZiIsImlzVmFsaWRFbGVtZW50IiwibGF6eSIsIm1lbW8iLCJNZXNzYWdlQ2hhbm5lbCIsInVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlIiwicGVyZm9ybWFuY2UiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImZsb29yIiwicG9ydDIiLCJwb3J0MSIsIm9ubWVzc2FnZSIsInBvc3RNZXNzYWdlIiwic29ydEluZGV4Iiwic3RhcnRUaW1lIiwicHJpb3JpdHlMZXZlbCIsInVuc3RhYmxlX1Byb2ZpbGluZyIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGUiLCJ1bnN0YWJsZV9uZXh0IiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJkZWxheSIsInVuc3RhYmxlX3dyYXBDYWxsYmFjayIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsImluc2VydCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJnZXRUYXJnZXQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZGVmaW5pdGlvbiIsIm8iLCJjaHVua0lkIiwiUHJvbWlzZSIsImFsbCIsInJlZHVjZSIsInByb21pc2VzIiwiZ2xvYmFsVGhpcyIsIkZ1bmN0aW9uIiwicHJvcCIsInNjcmlwdCIsIm5lZWRBdHRhY2giLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJnZXRBdHRyaWJ1dGUiLCJjaGFyc2V0Iiwic3JjIiwib25TY3JpcHRDb21wbGV0ZSIsInByZXYiLCJldmVudCIsIm9ubG9hZCIsImRvbmVGbnMiLCJmbiIsInRvU3RyaW5nVGFnIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImN1cnJlbnRTY3JpcHQiLCJpbnN0YWxsZWRDaHVua3MiLCJqIiwiaW5zdGFsbGVkQ2h1bmtEYXRhIiwicHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJlcnJvclR5cGUiLCJyZWFsU3JjIiwibWVzc2FnZSIsInJlcXVlc3QiLCJ3ZWJwYWNrSnNvbnBDYWxsYmFjayIsInBhcmVudENodW5rTG9hZGluZ0Z1bmN0aW9uIiwiY2h1bmtJZHMiLCJtb3JlTW9kdWxlcyIsInJ1bnRpbWUiLCJzb21lIiwiY2h1bmtMb2FkaW5nR2xvYmFsIiwibG9jYWxzIiwiUmVhY3QiLCJjbGFzc05hbWUiLCJnZXRGdWxsWWVhciIsImhvbGJlcnRvbkxvZ28iLCJhbHQiLCJodG1sRm9yIiwiX3R5cGVvZiIsIl9kZWZpbmVQcm9wZXJ0eSIsIndyaXRhYmxlIiwiX29iamVjdFNwcmVhZCIsIm93bktleXMiLCJmaWx0ZXIiLCJzeW0iLCJfdG9Db25zdW1hYmxlQXJyYXkiLCJhcnIiLCJhcnIyIiwiX2FycmF5V2l0aG91dEhvbGVzIiwiaXRlciIsIl9pdGVyYWJsZVRvQXJyYXkiLCJfbm9uSXRlcmFibGVTcHJlYWQiLCJVUFBFUkNBU0VfUkUiLCJVUFBFUkNBU0VfUkVfVE9fS0VCQUIiLCJtYXRjaCIsImlzVW5pdGxlc3NOdW1iZXIiLCJwcmVmaXhlcyIsInByZWZpeCIsInByZWZpeEtleSIsInN0cmluZ2lmeVZhbHVlIiwic3RyaW5naWZ5QW5kSW1wb3J0YW50aWZ5VmFsdWUiLCJpbXBvcnRhbnRpZnkiLCJoYXNoU3RyaW5nIiwiTUFQX0VYSVNUUyIsIk9yZGVyZWRFbGVtZW50cyIsImVsZW1lbnRzIiwia2V5T3JkZXIiLCJfcHJvdG8iLCJzaG91bGRSZW9yZGVyIiwibmVzdGVkIiwiX25lc3RlZCIsImFkZFN0eWxlVHlwZSIsInN0eWxlVHlwZSIsIl90aGlzIiwidW53cmFwRXhwb3J0cyIsImNyZWF0ZUNvbW1vbmpzTW9kdWxlIiwiY2FwaXRhbGl6ZVN0cmluZ18xIiwicHJlZml4UHJvcGVydHlfMSIsInByZWZpeFByb3BlcnRpZXMiLCJwcm9wZXJ0eSIsIm5ld1N0eWxlIiwicmVxdWlyZWRQcmVmaXhlcyIsImNhcGl0YWxpemVkUHJvcGVydHkiLCJfY2FwaXRhbGl6ZVN0cmluZzIiLCJzdHlsZVByb3BlcnR5IiwicHJlZml4VmFsdWVfMSIsInBsdWdpbnMiLCJtZXRhRGF0YSIsImxlbiIsInByb2Nlc3NlZFZhbHVlIiwiYWRkTmV3VmFsdWVzT25seV8xIiwiYWRkSWZOZXciLCJ2YWx1ZXMiLCJpc09iamVjdF8xIiwiY3JlYXRlUHJlZml4ZXIiLCJfcmVmIiwicHJlZml4TWFwIiwiX2lzT2JqZWN0MiIsImNvbWJpbmVkVmFsdWUiLCJfcHJlZml4VmFsdWUyIiwiX2FkZE5ld1ZhbHVlc09ubHkyIiwiX3Byb2Nlc3NlZFZhbHVlIiwiX3ByZWZpeFByb3BlcnR5MiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJiYWNrZ3JvdW5kQ2xpcCIsImlzUHJlZml4ZWRWYWx1ZV8xIiwicmVnZXgiLCJjYWxjXzEiLCJfaXNQcmVmaXhlZFZhbHVlMiIsImNhbGMiLCJjcm9zc0ZhZGVfMSIsImNyb3NzRmFkZSIsImN1cnNvcl8xIiwiZ3JhYiIsImdyYWJiaW5nIiwiY3Vyc29yIiwiZmlsdGVyXzEiLCJmbGV4Ym94SUVfMSIsImFsdGVybmF0aXZlUHJvcHMiLCJhbHRlcm5hdGl2ZVZhbHVlcyIsImZsZXhTaG9ydGhhbmRNYXBwaW5ncyIsIm1zRmxleCIsImZsZXhWYWx1ZXMiLCJhbGlnbkNvbnRlbnQiLCJhbGlnblNlbGYiLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJmbGV4QmFzaXMiLCJhdXRvIiwiaW5oZXJpdCIsImluaXRpYWwiLCJub25lIiwidW5zZXQiLCJmbGV4Ym94SUUiLCJmbGV4Ym94T2xkIiwiV2Via2l0Qm94T3JpZW50IiwiV2Via2l0Qm94RGlyZWN0aW9uIiwid3JhcCIsImZsZXhXcmFwIiwiZ3JhZGllbnRfMSIsImdyYWQiLCJncmFkaWVudCIsImdyaWRfMSIsIl9zbGljZWRUb0FycmF5IiwiX2FyciIsIl9uIiwiX2QiLCJfZSIsIl9zIiwic2xpY2VJdGVyYXRvciIsImlzU2ltcGxlUG9zaXRpb25WYWx1ZSIsImRpc3BsYXlWYWx1ZXMiLCJwcm9wZXJ0eUNvbnZlcnRlcnMiLCJwcm9wZXJ0eUNvbnZlcnRlciIsImFsaWdubWVudFZhbHVlcyIsImdyaWQiLCJtc0dyaWRSb3dBbGlnbiIsIm1zR3JpZENvbHVtbiIsIl92YWx1ZSRzcGxpdCRtYXAiLCJwb3NpdGlvbiIsIl92YWx1ZSRzcGxpdCRtYXAyIiwibXNHcmlkQ29sdW1uU3BhbiIsIm1zR3JpZFJvdyIsIl92YWx1ZSRzcGxpdCRtYXAzIiwiX3ZhbHVlJHNwbGl0JG1hcDQiLCJtc0dyaWRSb3dTcGFuIiwiZ3JpZFRlbXBsYXRlQ29sdW1ucyIsIm1zR3JpZENvbHVtbnMiLCJncmlkVGVtcGxhdGVSb3dzIiwibXNHcmlkUm93cyIsImp1c3RpZnlTZWxmIiwibXNHcmlkQ29sdW1uQWxpZ24iLCJpbWFnZVNldF8xIiwiaW1hZ2VTZXQiLCJsb2dpY2FsIiwiYWx0ZXJuYXRpdmVQcm9wTGlzdCIsIm1hcmdpbkJsb2NrU3RhcnQiLCJtYXJnaW5CbG9ja0VuZCIsIm1hcmdpbklubGluZVN0YXJ0IiwibWFyZ2luSW5saW5lRW5kIiwicGFkZGluZ0Jsb2NrU3RhcnQiLCJwYWRkaW5nQmxvY2tFbmQiLCJwYWRkaW5nSW5saW5lU3RhcnQiLCJwYWRkaW5nSW5saW5lRW5kIiwiYm9yZGVyQmxvY2tTdGFydCIsImJvcmRlckJsb2NrU3RhcnRDb2xvciIsImJvcmRlckJsb2NrU3RhcnRTdHlsZSIsImJvcmRlckJsb2NrU3RhcnRXaWR0aCIsImJvcmRlckJsb2NrRW5kIiwiYm9yZGVyQmxvY2tFbmRDb2xvciIsImJvcmRlckJsb2NrRW5kU3R5bGUiLCJib3JkZXJCbG9ja0VuZFdpZHRoIiwiYm9yZGVySW5saW5lU3RhcnQiLCJib3JkZXJJbmxpbmVTdGFydENvbG9yIiwiYm9yZGVySW5saW5lU3RhcnRTdHlsZSIsImJvcmRlcklubGluZVN0YXJ0V2lkdGgiLCJib3JkZXJJbmxpbmVFbmQiLCJib3JkZXJJbmxpbmVFbmRDb2xvciIsImJvcmRlcklubGluZUVuZFN0eWxlIiwiYm9yZGVySW5saW5lRW5kV2lkdGgiLCJzaXppbmdfMSIsInByb3BlcnRpZXMiLCJtYXhIZWlnaHQiLCJtYXhXaWR0aCIsImNvbHVtbldpZHRoIiwibWluV2lkdGgiLCJtaW5IZWlnaHQiLCJzaXppbmciLCJ1cHBlcmNhc2VQYXR0ZXJuIiwibXNQYXR0ZXJuIiwiY2FjaGUiLCJ0b0h5cGhlbkxvd2VyIiwiX2h5cGhlbmF0ZVN0eWxlTmFtZSIsImZyZWV6ZSIsImhOYW1lIiwiaHlwaGVuYXRlUHJvcGVydHlfMSIsIl9oeXBoZW5hdGVTdHlsZU5hbWUyIiwidHJhbnNpdGlvbl8xIiwicHJvcGVydHlQcmVmaXhNYXAiLCJvdXRwdXRWYWx1ZSIsIm11bHRpcGxlVmFsdWVzIiwic2luZ2xlVmFsdWUiLCJkYXNoQ2FzZVByb3BlcnR5IiwiX2h5cGhlbmF0ZVByb3BlcnR5MiIsInBMZW4iLCJ1bnNoaWZ0IiwicHJlZml4TWFwcGluZyIsInByZWZpeFZhbHVlIiwid2Via2l0T3V0cHV0IiwibW96T3V0cHV0IiwidHJhbnNpdGlvblByb3BlcnR5IiwiV2Via2l0VHJhbnNpdGlvbiIsIldlYmtpdFRyYW5zaXRpb25Qcm9wZXJ0eSIsIk1velRyYW5zaXRpb24iLCJNb3pUcmFuc2l0aW9uUHJvcGVydHkiLCJXZWJraXQiLCJNb3oiLCJtcyIsIndtIiwid21zIiwid21tcyIsInByZWZpeEFsbCIsImRlZmF1bHRTZWxlY3RvckhhbmRsZXJzIiwic2VsZWN0b3IiLCJiYXNlU2VsZWN0b3IiLCJnZW5lcmF0ZVN1YnRyZWVTdHlsZXMiLCJnZW5lcmF0ZWQiLCJnZW5lcmF0ZUNTUyIsInN0eWxlVHlwZXMiLCJzZWxlY3RvckhhbmRsZXJzIiwic3RyaW5nSGFuZGxlcnMiLCJ1c2VJbXBvcnRhbnQiLCJtZXJnZWQiLCJwbGFpbkRlY2xhcmF0aW9ucyIsImdlbmVyYXRlZFN0eWxlcyIsImhhbmRsZXIiLCJuZXdTZWxlY3RvciIsIndhcm4iLCJnZW5lcmF0ZWRSdWxlc2V0IiwiZ2VuZXJhdGVDU1NSdWxlc2V0IiwidHJhbnNmb3JtUnVsZSIsInRyYW5zZm9ybVZhbHVlIiwiYXJyYXlUb09iamVjdEtleXNSZWR1Y2VyIiwiYWNjIiwiZGVjbGFyYXRpb25zIiwic3RyaW5nSGFuZGxlcktleXMiLCJydW5TdHJpbmdIYW5kbGVycyIsIm9yaWdpbmFsRWxlbWVudHMiLCJwcmVmaXhlZEVsZW1lbnRzIiwiZWxlbWVudE5hbWVzIiwib3JpZ2luYWxTdHlsZSIsIm9yaWdpbmFsSW5kZXgiLCJydWxlcyIsInN0eWxlVGFnIiwiZm9udEZhbWlseSIsIm5hbWVNYXAiLCJpbmplY3RTdHlsZU9uY2UiLCJmaW5hbFZhbCIsInZhbFZhbCIsInZhbEtleSIsImluamVjdEdlbmVyYXRlZENTU09uY2UiLCJhbHJlYWR5SW5qZWN0ZWQiLCJpbmplY3Rpb25CdWZmZXIiLCJpc0J1ZmZlcmluZyIsImdlbmVyYXRlZENTUyIsIl9pbmplY3Rpb25CdWZmZXIiLCJmbHVzaFRvU3R5bGVUYWciLCJkZWZpbml0aW9ucyIsInJlc2V0SW5qZWN0ZWRTdHlsZSIsImZsdXNoVG9BcnJheSIsInJldCIsImNzc1J1bGVzIiwic2hlZXQiLCJpbnNlcnRSdWxlIiwibnVtUnVsZXMiLCJydWxlIiwiaW5uZXJUZXh0IiwiaW5qZWN0U3R5bGVUYWciLCJwcm9jZXNzU3R5bGVEZWZpbml0aW9ucyIsInN0eWxlRGVmaW5pdGlvbnMiLCJjbGFzc05hbWVCaXRzIiwiZGVmaW5pdGlvbkJpdHMiLCJkZWYiLCJfbmFtZSIsIl9kZWZpbml0aW9uIiwiX2xlbiIsImluamVjdEFuZEdldENsYXNzTmFtZSIsInVubWluaWZpZWRIYXNoRm4iLCJoYXNoRm4iLCJTdHlsZVNoZWV0Iiwic2hlZXREZWZpbml0aW9uIiwibWFwcGVkU2hlZXREZWZpbml0aW9uIiwic3RyaW5nVmFsIiwicmVoeWRyYXRlIiwiU3R5bGVTaGVldFNlcnZlciIsInJlbmRlclN0YXRpYyIsInJlbmRlckZ1bmMiLCJzdGFydEJ1ZmZlcmluZyIsImh0bWwiLCJyZW5kZXJlZENsYXNzTmFtZXMiLCJBcGhyb2RpdGUiLCJtYWtlRXhwb3J0cyIsImV4dGVuc2lvbnMiLCJleHRlbnNpb25TZWxlY3RvckhhbmRsZXJzIiwiZXh0ZW5zaW9uIiwic2VsZWN0b3JIYW5kbGVyIiwiU3R5bGVTaGVldFRlc3RVdGlscyIsIm1pbmlmeSIsInNob3VsZE1pbmlmeSIsIl9rZXkiLCJyZXNldCIsIk5vdGlmaWNhdGlvbkl0ZW0iLCJtYXJrQXNSZWFkIiwibGlQcm9wcyIsIl9leHRlbmRzIiwicHJvcFR5cGVzIiwiTm90aWZpY2F0aW9ucyIsIl9Db21wb25lbnQiLCJfY2xhc3NDYWxsQ2hlY2siLCJfY2FsbFN1cGVyIiwiX2Fzc2VydFRoaXNJbml0aWFsaXplZCIsIl9pbmhlcml0cyIsIm5leHRQcm9wcyIsImxpc3ROb3RpZmljYXRpb25zIiwibG9nIiwiX3RoaXMyIiwiX3RoaXMkcHJvcHMiLCJkaXNwbGF5RHJhd2VyIiwicmlnaHQiLCJmb250U2l6ZSIsImJvcmRlciIsImJhY2tncm91bmQiLCJub3RpZmljYXRpb24iLCJXcmFwcGVkQ29tcG9uZW50IiwiV2l0aExvZ2dpbmdDb21wb25lbnQiLCJnZXRDb21wb25lbnROYW1lIiwiQ291cnNlTGlzdFJvdyIsImlzSGVhZGVyIiwidGV4dEZpcnN0Q2VsbCIsInRleHRTZWNvbmRDZWxsIiwiY29sU3BhbiIsImNyZWRpdCIsIkNvdXJzZUxpc3QiLCJsaXN0Q291cnNlcyIsImNvdXJzZSIsIkNvdXJzZVNoYXBlIiwiQm9keVNlY3Rpb24iLCJ0aXRsZSIsIkJvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbSIsInByb3BzVHlwZXMiLCJBcHAiLCJsb2dPdXQiLCJhbGVydCIsImlzTG9nZ2VkSW4iLCJoYW5kbGVLZXlEb3duIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIl90aGlzJHN0YXRlIiwiSGVhZGVyIiwic3R5bGVzIiwiTG9naW4iLCJvbkxvZ2luIiwiaGFuZGxlTG9naW4iLCJmb290ZXIiLCJGb290ZXIiLCJmbGV4RGlyZWN0aW9uIiwiYm9yZGVyVG9wIiwiYm90dG9tIiwidGV4dEFsaWduIiwiZm9udFN0eWxlIiwib25QZXJmRW50cnkiLCJSZWFjdERvbSIsImdldEVsZW1lbnRCeUlkIiwiZ2V0Q0xTIiwiZ2V0RklEIiwiZ2V0RkNQIiwiZ2V0TENQIiwiZ2V0VFRGQiJdLCJzb3VyY2VSb290IjoiIn0=