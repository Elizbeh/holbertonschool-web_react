/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e,t,n={488:(e,t,n)=>{"use strict";var r=n(507),o=[],i=[],l=r.makeRequestCallFromTimer((function(){if(i.length)throw i.shift()}));function a(e){var t;(t=o.length?o.pop():new u).task=e,r(t)}function u(){this.task=null}e.exports=a,u.prototype.call=function(){try{this.task.call()}catch(e){a.onerror?a.onerror(e):(i.push(e),l())}finally{this.task=null,o[o.length]=this}}},507:(e,t,n)=>{"use strict";function r(e){i.length||o(),i[i.length]=e}e.exports=r;var o,i=[],l=0;function a(){for(;l<i.length;){var e=l;if(l+=1,i[e].call(),l>1024){for(var t=0,n=i.length-l;t<n;t++)i[t]=i[t+l];i.length-=l,l=0}}i.length=0,l=0}var u,c,s,f=void 0!==n.g?n.g:self,d=f.MutationObserver||f.WebKitMutationObserver;function p(e){return function(){var t=setTimeout(r,0),n=setInterval(r,50);function r(){clearTimeout(t),clearInterval(n),e()}}}"function"==typeof d?(u=1,c=new d(a),s=document.createTextNode(""),c.observe(s,{characterData:!0}),o=function(){u=-u,s.data=u}):o=p(a),r.requestFlush=o,r.makeRequestCallFromTimer=p},84:e=>{"use strict";e.exports=function(e){for(var t=5381,n=e.length;n;)t=33*t^e.charCodeAt(--n);return t>>>0}},440:(e,t,n)=>{"use strict";n.d(t,{c:()=>a});var r=n(648),o=n.n(r),i=n(312),l=n.n(i)()(o());l.push([e.id,".bodySectionWithMargin {\n  border-bottom: 40px;\n}","",{version:3,sources:["webpack://./src/BodySection/BodySectionWithMarginBottom.css"],names:[],mappings:"AAAA;EACE,mBAAmB;AACrB",sourcesContent:[".bodySectionWithMargin {\r\n  border-bottom: 40px;\r\n}"],sourceRoot:""}]);const a=l},344:(e,t,n)=>{"use strict";n.d(t,{c:()=>a});var r=n(648),o=n.n(r),i=n(312),l=n.n(i)()(o());l.push([e.id,"body {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  overflow: hidden;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;EACE;;cAEY;EACZ,mCAAmC;EACnC,kCAAkC;EAClC,gBAAgB;AAClB;;AAEA;EACE;aACW;AACb",sourcesContent:["body {\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  overflow: hidden;\r\n}\r\n\r\ncode {\r\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\r\n    monospace;\r\n}"],sourceRoot:""}]);const a=l},312:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var l={};if(r)for(var a=0;a<this.length;a++){var u=this[a][0];null!=u&&(l[u]=!0)}for(var c=0;c<e.length;c++){var s=[].concat(e[c]);r&&l[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),t.push(s))}},t}},648:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},456:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,o){for(var i,l,a=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),u=1;u<arguments.length;u++){for(var c in i=Object(arguments[u]))n.call(i,c)&&(a[c]=i[c]);if(t){l=t(i);for(var s=0;s<l.length;s++)r.call(i,l[s])&&(a[l[s]]=i[l[s]])}}return a}},776:(e,t,n)=>{"use strict";var r=n(143);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,l){if(l!==r){var a=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw a.name="Invariant Violation",a}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},268:(e,t,n)=>{e.exports=n(776)()},143:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},516:(e,t,n)=>{"use strict";var r=n(504),o=n(456),i=n(712);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(l(227));function a(e,t,n,r,o,i,l,a,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var u=!1,c=null,s=!1,f=null,d={onError:function(e){u=!0,c=e}};function p(e,t,n,r,o,i,l,s,f){u=!1,c=null,a.apply(d,arguments)}var m=null,h=null,y=null;function g(e,t,n){var r=e.type||"unknown-event";e.currentTarget=y(n),function(e,t,n,r,o,i,a,d,m){if(p.apply(this,arguments),u){if(!u)throw Error(l(198));var h=c;u=!1,c=null,s||(s=!0,f=h)}}(r,t,void 0,e),e.currentTarget=null}var v=null,b={};function w(){if(v)for(var e in b){var t=b[e],n=v.indexOf(e);if(!(-1<n))throw Error(l(96,e));if(!x[n]){if(!t.extractEvents)throw Error(l(97,e));for(var r in x[n]=t,n=t.eventTypes){var o=void 0,i=n[r],a=t,u=r;if(E.hasOwnProperty(u))throw Error(l(99,u));E[u]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&k(c[o],a,u);o=!0}else i.registrationName?(k(i.registrationName,a,u),o=!0):o=!1;if(!o)throw Error(l(98,r,e))}}}}function k(e,t,n){if(S[e])throw Error(l(100,e));S[e]=t,T[e]=t.eventTypes[n].dependencies}var x=[],E={},S={},T={};function C(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!b.hasOwnProperty(t)||b[t]!==r){if(b[t])throw Error(l(102,t));b[t]=r,n=!0}}n&&w()}var _=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),P=null,O=null,N=null;function M(e){if(e=h(e)){if("function"!=typeof P)throw Error(l(280));var t=e.stateNode;t&&(t=m(t),P(e.stateNode,e.type,t))}}function z(e){O?N?N.push(e):N=[e]:O=e}function j(){if(O){var e=O,t=N;if(N=O=null,M(e),t)for(e=0;e<t.length;e++)M(t[e])}}function I(e,t){return e(t)}function R(e,t,n,r,o){return e(t,n,r,o)}function A(){}var F=I,D=!1,L=!1;function B(){null===O&&null===N||(A(),j())}function W(e,t,n){if(L)return e(t,n);L=!0;try{return F(e,t,n)}finally{L=!1,B()}}var U=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,H=Object.prototype.hasOwnProperty,V={},Q={};function $(e,t,n,r,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i}var q={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){q[e]=new $(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];q[t]=new $(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){q[e]=new $(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){q[e]=new $(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){q[e]=new $(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){q[e]=new $(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){q[e]=new $(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){q[e]=new $(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){q[e]=new $(e,5,!1,e.toLowerCase(),null,!1)}));var K=/[\-:]([a-z])/g;function G(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(K,G);q[t]=new $(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(K,G);q[t]=new $(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(K,G);q[t]=new $(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){q[e]=new $(e,1,!1,e.toLowerCase(),null,!1)})),q.xlinkHref=new $("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){q[e]=new $(e,1,!1,e.toLowerCase(),null,!0)}));var Y=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function X(e,t,n,r){var o=q.hasOwnProperty(t)?q[t]:null;(null!==o?0===o.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!H.call(Q,e)||!H.call(V,e)&&(U.test(e)?Q[e]=!0:(V[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}Y.hasOwnProperty("ReactCurrentDispatcher")||(Y.ReactCurrentDispatcher={current:null}),Y.hasOwnProperty("ReactCurrentBatchConfig")||(Y.ReactCurrentBatchConfig={suspense:null});var Z=/^(.*)[\\\/]/,J="function"==typeof Symbol&&Symbol.for,ee=J?Symbol.for("react.element"):60103,te=J?Symbol.for("react.portal"):60106,ne=J?Symbol.for("react.fragment"):60107,re=J?Symbol.for("react.strict_mode"):60108,oe=J?Symbol.for("react.profiler"):60114,ie=J?Symbol.for("react.provider"):60109,le=J?Symbol.for("react.context"):60110,ae=J?Symbol.for("react.concurrent_mode"):60111,ue=J?Symbol.for("react.forward_ref"):60112,ce=J?Symbol.for("react.suspense"):60113,se=J?Symbol.for("react.suspense_list"):60120,fe=J?Symbol.for("react.memo"):60115,de=J?Symbol.for("react.lazy"):60116,pe=J?Symbol.for("react.block"):60121,me="function"==typeof Symbol&&Symbol.iterator;function he(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=me&&e[me]||e["@@iterator"])?e:null}function ye(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case oe:return"Profiler";case re:return"StrictMode";case ce:return"Suspense";case se:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case le:return"Context.Consumer";case ie:return"Context.Provider";case ue:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case fe:return ye(e.type);case pe:return ye(e.render);case de:if(e=1===e._status?e._result:null)return ye(e)}return null}function ge(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=ye(e.type);n=null,r&&(n=ye(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(Z,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}function ve(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function we(e){e._valueTracker||(e._valueTracker=function(e){var t=be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function ke(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function xe(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=ve(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Se(e,t){null!=(t=t.checked)&&X(e,"checked",t,!1)}function Te(e,t){Se(e,t);var n=ve(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?_e(e,t.type,n):t.hasOwnProperty("defaultValue")&&_e(e,t.type,ve(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Ce(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function _e(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Pe(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Oe(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ve(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Ne(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Me(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(l(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(l(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:ve(n)}}function ze(e,t){var n=ve(t.value),r=ve(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function je(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function Ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Re(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Ae,Fe,De=(Fe=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((Ae=Ae||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Ae.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return Fe(e,t)}))}:Fe);function Le(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function Be(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var We={animationend:Be("Animation","AnimationEnd"),animationiteration:Be("Animation","AnimationIteration"),animationstart:Be("Animation","AnimationStart"),transitionend:Be("Transition","TransitionEnd")},Ue={},He={};function Ve(e){if(Ue[e])return Ue[e];if(!We[e])return e;var t,n=We[e];for(t in n)if(n.hasOwnProperty(t)&&t in He)return Ue[e]=n[t];return e}_&&(He=document.createElement("div").style,"AnimationEvent"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),"TransitionEvent"in window||delete We.transitionend.transition);var Qe=Ve("animationend"),$e=Ve("animationiteration"),qe=Ve("animationstart"),Ke=Ve("transitionend"),Ge="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ye=new("function"==typeof WeakMap?WeakMap:Map);function Xe(e){var t=Ye.get(e);return void 0===t&&(t=new Map,Ye.set(e,t)),t}function Ze(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Je(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function et(e){if(Ze(e)!==e)throw Error(l(188))}function tt(e){if(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ze(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return et(o),e;if(i===r)return et(o),t;i=i.sibling}throw Error(l(188))}if(n.return!==r.return)n=o,r=i;else{for(var a=!1,u=o.child;u;){if(u===n){a=!0,n=o,r=i;break}if(u===r){a=!0,r=o,n=i;break}u=u.sibling}if(!a){for(u=i.child;u;){if(u===n){a=!0,n=i,r=o;break}if(u===r){a=!0,r=i,n=o;break}u=u.sibling}if(!a)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e),!e)return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function nt(e,t){if(null==t)throw Error(l(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function rt(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var ot=null;function it(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)g(e,t[r],n[r]);else t&&g(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function lt(e){if(null!==e&&(ot=nt(ot,e)),e=ot,ot=null,e){if(rt(e,it),ot)throw Error(l(95));if(s)throw e=f,s=!1,f=null,e}}function at(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ut(e){if(!_)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var ct=[];function st(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>ct.length&&ct.push(e)}function ft(e,t,n,r){if(ct.length){var o=ct.pop();return o.topLevelType=e,o.eventSystemFlags=r,o.nativeEvent=t,o.targetInst=n,o}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function dt(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=Mn(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=at(e.nativeEvent);r=e.topLevelType;var i=e.nativeEvent,l=e.eventSystemFlags;0===n&&(l|=64);for(var a=null,u=0;u<x.length;u++){var c=x[u];c&&(c=c.extractEvents(r,t,i,o,l))&&(a=nt(a,c))}lt(a)}}function pt(e,t,n){if(!n.has(e)){switch(e){case"scroll":qt(t,"scroll",!0);break;case"focus":case"blur":qt(t,"focus",!0),qt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ut(e)&&qt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Ge.indexOf(e)&&$t(e,t)}n.set(e,null)}}var mt,ht,yt,gt=!1,vt=[],bt=null,wt=null,kt=null,xt=new Map,Et=new Map,St=[],Tt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Ct="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function _t(e,t,n,r,o){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:o,container:r}}function Pt(e,t){switch(e){case"focus":case"blur":bt=null;break;case"dragenter":case"dragleave":wt=null;break;case"mouseover":case"mouseout":kt=null;break;case"pointerover":case"pointerout":xt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Et.delete(t.pointerId)}}function Ot(e,t,n,r,o,i){return null===e||e.nativeEvent!==i?(e=_t(t,n,r,o,i),null!==t&&null!==(t=zn(t))&&ht(t),e):(e.eventSystemFlags|=r,e)}function Nt(e){var t=Mn(e.target);if(null!==t){var n=Ze(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Je(n)))return e.blockedOn=t,void i.unstable_runWithPriority(e.priority,(function(){yt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Mt(e){if(null!==e.blockedOn)return!1;var t=Xt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=zn(t);return null!==n&&ht(n),e.blockedOn=t,!1}return!0}function zt(e,t,n){Mt(e)&&n.delete(t)}function jt(){for(gt=!1;0<vt.length;){var e=vt[0];if(null!==e.blockedOn){null!==(e=zn(e.blockedOn))&&mt(e);break}var t=Xt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:vt.shift()}null!==bt&&Mt(bt)&&(bt=null),null!==wt&&Mt(wt)&&(wt=null),null!==kt&&Mt(kt)&&(kt=null),xt.forEach(zt),Et.forEach(zt)}function It(e,t){e.blockedOn===t&&(e.blockedOn=null,gt||(gt=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,jt)))}function Rt(e){function t(t){return It(t,e)}if(0<vt.length){It(vt[0],e);for(var n=1;n<vt.length;n++){var r=vt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==bt&&It(bt,e),null!==wt&&It(wt,e),null!==kt&&It(kt,e),xt.forEach(t),Et.forEach(t),n=0;n<St.length;n++)(r=St[n]).blockedOn===e&&(r.blockedOn=null);for(;0<St.length&&null===(n=St[0]).blockedOn;)Nt(n),null===n.blockedOn&&St.shift()}var At={},Ft=new Map,Dt=new Map,Lt=["abort","abort",Qe,"animationEnd",$e,"animationIteration",qe,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ke,"transitionEnd","waiting","waiting"];function Bt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1],i="on"+(o[0].toUpperCase()+o.slice(1));i={phasedRegistrationNames:{bubbled:i,captured:i+"Capture"},dependencies:[r],eventPriority:t},Dt.set(r,t),Ft.set(r,i),At[o]=i}}Bt("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Bt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Bt(Lt,2);for(var Wt="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Ut=0;Ut<Wt.length;Ut++)Dt.set(Wt[Ut],0);var Ht=i.unstable_UserBlockingPriority,Vt=i.unstable_runWithPriority,Qt=!0;function $t(e,t){qt(t,e,!1)}function qt(e,t,n){var r=Dt.get(t);switch(void 0===r?2:r){case 0:r=Kt.bind(null,t,1,e);break;case 1:r=Gt.bind(null,t,1,e);break;default:r=Yt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Kt(e,t,n,r){D||A();var o=Yt,i=D;D=!0;try{R(o,e,t,n,r)}finally{(D=i)||B()}}function Gt(e,t,n,r){Vt(Ht,Yt.bind(null,e,t,n,r))}function Yt(e,t,n,r){if(Qt)if(0<vt.length&&-1<Tt.indexOf(e))e=_t(null,e,t,n,r),vt.push(e);else{var o=Xt(e,t,n,r);if(null===o)Pt(e,r);else if(-1<Tt.indexOf(e))e=_t(o,e,t,n,r),vt.push(e);else if(!function(e,t,n,r,o){switch(t){case"focus":return bt=Ot(bt,e,t,n,r,o),!0;case"dragenter":return wt=Ot(wt,e,t,n,r,o),!0;case"mouseover":return kt=Ot(kt,e,t,n,r,o),!0;case"pointerover":var i=o.pointerId;return xt.set(i,Ot(xt.get(i)||null,e,t,n,r,o)),!0;case"gotpointercapture":return i=o.pointerId,Et.set(i,Ot(Et.get(i)||null,e,t,n,r,o)),!0}return!1}(o,e,t,n,r)){Pt(e,r),e=ft(e,r,null,t);try{W(dt,e)}finally{st(e)}}}}function Xt(e,t,n,r){if(null!==(n=Mn(n=at(r)))){var o=Ze(n);if(null===o)n=null;else{var i=o.tag;if(13===i){if(null!==(n=Je(o)))return n;n=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;n=null}else o!==n&&(n=null)}}e=ft(e,r,n,t);try{W(dt,e)}finally{st(e)}return null}var Zt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Jt=["Webkit","ms","Moz","O"];function en(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Zt.hasOwnProperty(e)&&Zt[e]?(""+t).trim():t+"px"}function tn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=en(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Zt).forEach((function(e){Jt.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Zt[t]=Zt[e]}))}));var nn=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function rn(e,t){if(t){if(nn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(l(62,""))}}function on(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ln="http://www.w3.org/1999/xhtml";function an(e,t){var n=Xe(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=T[t];for(var r=0;r<t.length;r++)pt(t[r],e,n)}function un(){}function cn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function sn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function fn(e,t){var n,r=sn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=sn(r)}}function dn(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?dn(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function pn(){for(var e=window,t=cn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=cn((e=t.contentWindow).document)}return t}function mn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var hn="$",yn="/$",gn="$?",vn="$!",bn=null,wn=null;function kn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function xn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var En="function"==typeof setTimeout?setTimeout:void 0,Sn="function"==typeof clearTimeout?clearTimeout:void 0;function Tn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Cn(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if(n===hn||n===vn||n===gn){if(0===t)return e;t--}else n===yn&&t++}e=e.previousSibling}return null}var _n=Math.random().toString(36).slice(2),Pn="__reactInternalInstance$"+_n,On="__reactEventHandlers$"+_n,Nn="__reactContainere$"+_n;function Mn(e){var t=e[Pn];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Nn]||n[Pn]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Cn(e);null!==e;){if(n=e[Pn])return n;e=Cn(e)}return t}n=(e=n).parentNode}return null}function zn(e){return!(e=e[Pn]||e[Nn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function jn(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function In(e){return e[On]||null}function Rn(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function An(e,t){var n=e.stateNode;if(!n)return null;var r=m(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,typeof n));return n}function Fn(e,t,n){(t=An(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=nt(n._dispatchListeners,t),n._dispatchInstances=nt(n._dispatchInstances,e))}function Dn(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Rn(t);for(t=n.length;0<t--;)Fn(n[t],"captured",e);for(t=0;t<n.length;t++)Fn(n[t],"bubbled",e)}}function Ln(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=An(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=nt(n._dispatchListeners,t),n._dispatchInstances=nt(n._dispatchInstances,e))}function Bn(e){e&&e.dispatchConfig.registrationName&&Ln(e._targetInst,null,e)}function Wn(e){rt(e,Dn)}var Un=null,Hn=null,Vn=null;function Qn(){if(Vn)return Vn;var e,t,n=Hn,r=n.length,o="value"in Un?Un.value:Un.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var l=r-e;for(t=1;t<=l&&n[r-t]===o[i-t];t++);return Vn=o.slice(e,1<t?1-t:void 0)}function $n(){return!0}function qn(){return!1}function Kn(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?$n:qn,this.isPropagationStopped=qn,this}function Gn(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function Yn(e){if(!(e instanceof this))throw Error(l(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Xn(e){e.eventPool=[],e.getPooled=Gn,e.release=Yn}o(Kn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=$n)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=$n)},persist:function(){this.isPersistent=$n},isPersistent:qn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=qn,this._dispatchInstances=this._dispatchListeners=null}}),Kn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Kn.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,Xn(n),n},Xn(Kn);var Zn=Kn.extend({data:null}),Jn=Kn.extend({data:null}),er=[9,13,27,32],tr=_&&"CompositionEvent"in window,nr=null;_&&"documentMode"in document&&(nr=document.documentMode);var rr=_&&"TextEvent"in window&&!nr,or=_&&(!tr||nr&&8<nr&&11>=nr),ir=String.fromCharCode(32),lr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},ar=!1;function ur(e,t){switch(e){case"keyup":return-1!==er.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function cr(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var sr=!1,fr={eventTypes:lr,extractEvents:function(e,t,n,r){var o;if(tr)e:{switch(e){case"compositionstart":var i=lr.compositionStart;break e;case"compositionend":i=lr.compositionEnd;break e;case"compositionupdate":i=lr.compositionUpdate;break e}i=void 0}else sr?ur(e,n)&&(i=lr.compositionEnd):"keydown"===e&&229===n.keyCode&&(i=lr.compositionStart);return i?(or&&"ko"!==n.locale&&(sr||i!==lr.compositionStart?i===lr.compositionEnd&&sr&&(o=Qn()):(Hn="value"in(Un=r)?Un.value:Un.textContent,sr=!0)),i=Zn.getPooled(i,t,n,r),(o||null!==(o=cr(n)))&&(i.data=o),Wn(i),o=i):o=null,(e=rr?function(e,t){switch(e){case"compositionend":return cr(t);case"keypress":return 32!==t.which?null:(ar=!0,ir);case"textInput":return(e=t.data)===ir&&ar?null:e;default:return null}}(e,n):function(e,t){if(sr)return"compositionend"===e||!tr&&ur(e,t)?(e=Qn(),Vn=Hn=Un=null,sr=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return or&&"ko"!==t.locale?null:t.data}}(e,n))?((t=Jn.getPooled(lr.beforeInput,t,n,r)).data=e,Wn(t)):t=null,null===o?t:null===t?o:[o,t]}},dr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!dr[e.type]:"textarea"===t}var mr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function hr(e,t,n){return(e=Kn.getPooled(mr.change,e,t,n)).type="change",z(n),Wn(e),e}var yr=null,gr=null;function vr(e){lt(e)}function br(e){if(ke(jn(e)))return e}function wr(e,t){if("change"===e)return t}var kr=!1;function xr(){yr&&(yr.detachEvent("onpropertychange",Er),gr=yr=null)}function Er(e){if("value"===e.propertyName&&br(gr))if(e=hr(gr,e,at(e)),D)lt(e);else{D=!0;try{I(vr,e)}finally{D=!1,B()}}}function Sr(e,t,n){"focus"===e?(xr(),gr=n,(yr=t).attachEvent("onpropertychange",Er)):"blur"===e&&xr()}function Tr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return br(gr)}function Cr(e,t){if("click"===e)return br(t)}function _r(e,t){if("input"===e||"change"===e)return br(t)}_&&(kr=ut("input")&&(!document.documentMode||9<document.documentMode));var Pr={eventTypes:mr,_isInputEventSupported:kr,extractEvents:function(e,t,n,r){var o=t?jn(t):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var l=wr;else if(pr(o))if(kr)l=_r;else{l=Tr;var a=Sr}else(i=o.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(l=Cr);if(l&&(l=l(e,t)))return hr(l,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&_e(o,"number",o.value)}},Or=Kn.extend({view:null,detail:null}),Nr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Mr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Nr[e])&&!!t[e]}function zr(){return Mr}var jr=0,Ir=0,Rr=!1,Ar=!1,Fr=Or.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:zr,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=jr;return jr=e.screenX,Rr?"mousemove"===e.type?e.screenX-t:0:(Rr=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Ir;return Ir=e.screenY,Ar?"mousemove"===e.type?e.screenY-t:0:(Ar=!0,0)}}),Dr=Fr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Lr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Br={eventTypes:Lr,extractEvents:function(e,t,n,r,o){var i="mouseover"===e||"pointerover"===e,l="mouseout"===e||"pointerout"===e;if(i&&0==(32&o)&&(n.relatedTarget||n.fromElement)||!l&&!i)return null;if(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,l?(l=t,null!==(t=(t=n.relatedTarget||n.toElement)?Mn(t):null)&&(t!==Ze(t)||5!==t.tag&&6!==t.tag)&&(t=null)):l=null,l===t)return null;if("mouseout"===e||"mouseover"===e)var a=Fr,u=Lr.mouseLeave,c=Lr.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(a=Dr,u=Lr.pointerLeave,c=Lr.pointerEnter,s="pointer");if(e=null==l?i:jn(l),i=null==t?i:jn(t),(u=a.getPooled(u,l,n,r)).type=s+"leave",u.target=e,u.relatedTarget=i,(n=a.getPooled(c,t,n,r)).type=s+"enter",n.target=i,n.relatedTarget=e,s=t,(r=l)&&s)e:{for(c=s,l=0,e=a=r;e;e=Rn(e))l++;for(e=0,t=c;t;t=Rn(t))e++;for(;0<l-e;)a=Rn(a),l--;for(;0<e-l;)c=Rn(c),e--;for(;l--;){if(a===c||a===c.alternate)break e;a=Rn(a),c=Rn(c)}a=null}else a=null;for(c=a,a=[];r&&r!==c&&(null===(l=r.alternate)||l!==c);)a.push(r),r=Rn(r);for(r=[];s&&s!==c&&(null===(l=s.alternate)||l!==c);)r.push(s),s=Rn(s);for(s=0;s<a.length;s++)Ln(a[s],"bubbled",u);for(s=r.length;0<s--;)Ln(r[s],"captured",n);return 0==(64&o)?[u]:[u,n]}},Wr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Ur=Object.prototype.hasOwnProperty;function Hr(e,t){if(Wr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Ur.call(t,n[r])||!Wr(e[n[r]],t[n[r]]))return!1;return!0}var Vr=_&&"documentMode"in document&&11>=document.documentMode,Qr={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},$r=null,qr=null,Kr=null,Gr=!1;function Yr(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Gr||null==$r||$r!==cn(n)?null:(n="selectionStart"in(n=$r)&&mn(n)?{start:n.selectionStart,end:n.selectionEnd}:{anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Kr&&Hr(Kr,n)?null:(Kr=n,(e=Kn.getPooled(Qr.select,qr,e,t)).type="select",e.target=$r,Wn(e),e))}var Xr={eventTypes:Qr,extractEvents:function(e,t,n,r,o,i){if(!(i=!(o=i||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{o=Xe(o),i=T.onSelect;for(var l=0;l<i.length;l++)if(!o.has(i[l])){o=!1;break e}o=!0}i=!o}if(i)return null;switch(o=t?jn(t):window,e){case"focus":(pr(o)||"true"===o.contentEditable)&&($r=o,qr=t,Kr=null);break;case"blur":Kr=qr=$r=null;break;case"mousedown":Gr=!0;break;case"contextmenu":case"mouseup":case"dragend":return Gr=!1,Yr(n,r);case"selectionchange":if(Vr)break;case"keydown":case"keyup":return Yr(n,r)}return null}},Zr=Kn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Jr=Kn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),eo=Or.extend({relatedTarget:null});function to(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var no={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},ro={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},oo=Or.extend({key:function(e){if(e.key){var t=no[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=to(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?ro[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:zr,charCode:function(e){return"keypress"===e.type?to(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?to(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),io=Fr.extend({dataTransfer:null}),lo=Or.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:zr}),ao=Kn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),uo=Fr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),co={eventTypes:At,extractEvents:function(e,t,n,r){var o=Ft.get(e);if(!o)return null;switch(e){case"keypress":if(0===to(n))return null;case"keydown":case"keyup":e=oo;break;case"blur":case"focus":e=eo;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Fr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=io;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=lo;break;case Qe:case $e:case qe:e=Zr;break;case Ke:e=ao;break;case"scroll":e=Or;break;case"wheel":e=uo;break;case"copy":case"cut":case"paste":e=Jr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Dr;break;default:e=Kn}return Wn(t=e.getPooled(o,t,n,r)),t}};if(v)throw Error(l(101));v=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),w(),m=In,h=zn,y=jn,C({SimpleEventPlugin:co,EnterLeaveEventPlugin:Br,ChangeEventPlugin:Pr,SelectEventPlugin:Xr,BeforeInputEventPlugin:fr});var so=[],fo=-1;function po(e){0>fo||(e.current=so[fo],so[fo]=null,fo--)}function mo(e,t){fo++,so[fo]=e.current,e.current=t}var ho={},yo={current:ho},go={current:!1},vo=ho;function bo(e,t){var n=e.type.contextTypes;if(!n)return ho;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function wo(e){return null!=e.childContextTypes}function ko(){po(go),po(yo)}function xo(e,t,n){if(yo.current!==ho)throw Error(l(168));mo(yo,t),mo(go,n)}function Eo(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw Error(l(108,ye(t)||"Unknown",i));return o({},n,{},r)}function So(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ho,vo=yo.current,mo(yo,e),mo(go,go.current),!0}function To(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(e=Eo(e,t,vo),r.__reactInternalMemoizedMergedChildContext=e,po(go),po(yo),mo(yo,e)):po(go),mo(go,n)}var Co=i.unstable_runWithPriority,_o=i.unstable_scheduleCallback,Po=i.unstable_cancelCallback,Oo=i.unstable_requestPaint,No=i.unstable_now,Mo=i.unstable_getCurrentPriorityLevel,zo=i.unstable_ImmediatePriority,jo=i.unstable_UserBlockingPriority,Io=i.unstable_NormalPriority,Ro=i.unstable_LowPriority,Ao=i.unstable_IdlePriority,Fo={},Do=i.unstable_shouldYield,Lo=void 0!==Oo?Oo:function(){},Bo=null,Wo=null,Uo=!1,Ho=No(),Vo=1e4>Ho?No:function(){return No()-Ho};function Qo(){switch(Mo()){case zo:return 99;case jo:return 98;case Io:return 97;case Ro:return 96;case Ao:return 95;default:throw Error(l(332))}}function $o(e){switch(e){case 99:return zo;case 98:return jo;case 97:return Io;case 96:return Ro;case 95:return Ao;default:throw Error(l(332))}}function qo(e,t){return e=$o(e),Co(e,t)}function Ko(e,t,n){return e=$o(e),_o(e,t,n)}function Go(e){return null===Bo?(Bo=[e],Wo=_o(zo,Xo)):Bo.push(e),Fo}function Yo(){if(null!==Wo){var e=Wo;Wo=null,Po(e)}Xo()}function Xo(){if(!Uo&&null!==Bo){Uo=!0;var e=0;try{var t=Bo;qo(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Bo=null}catch(t){throw null!==Bo&&(Bo=Bo.slice(e+1)),_o(zo,Yo),t}finally{Uo=!1}}}function Zo(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function Jo(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var ei={current:null},ti=null,ni=null,ri=null;function oi(){ri=ni=ti=null}function ii(e){var t=ei.current;po(ei),e.type._context._currentValue=t}function li(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function ai(e,t){ti=e,ri=ni=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Il=!0),e.firstContext=null)}function ui(e,t){if(ri!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(ri=e,t=1073741823),t={context:e,observedBits:t,next:null},null===ni){if(null===ti)throw Error(l(308));ni=t,ti.dependencies={expirationTime:0,firstContext:t,responders:null}}else ni=ni.next=t;return e._currentValue}var ci=!1;function si(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function fi(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function di(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function pi(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function mi(e,t){var n=e.alternate;null!==n&&fi(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function hi(e,t,n,r){var i=e.updateQueue;ci=!1;var l=i.baseQueue,a=i.shared.pending;if(null!==a){if(null!==l){var u=l.next;l.next=a.next,a.next=u}l=a,i.shared.pending=null,null!==(u=e.alternate)&&null!==(u=u.updateQueue)&&(u.baseQueue=a)}if(null!==l){u=l.next;var c=i.baseState,s=0,f=null,d=null,p=null;if(null!==u)for(var m=u;;){if((a=m.expirationTime)<r){var h={expirationTime:m.expirationTime,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null};null===p?(d=p=h,f=c):p=p.next=h,a>s&&(s=a)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null}),wu(a,m.suspenseConfig);e:{var y=e,g=m;switch(a=t,h=n,g.tag){case 1:if("function"==typeof(y=g.payload)){c=y.call(h,c,a);break e}c=y;break e;case 3:y.effectTag=-4097&y.effectTag|64;case 0:if(null==(a="function"==typeof(y=g.payload)?y.call(h,c,a):y))break e;c=o({},c,a);break e;case 2:ci=!0}}null!==m.callback&&(e.effectTag|=32,null===(a=i.effects)?i.effects=[m]:a.push(m))}if(null===(m=m.next)||m===u){if(null===(a=i.shared.pending))break;m=l.next=a.next,a.next=u,i.baseQueue=l=a,i.shared.pending=null}}null===p?f=c:p.next=d,i.baseState=f,i.baseQueue=p,ku(s),e.expirationTime=s,e.memoizedState=c}}function yi(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=o,o=n,"function"!=typeof r)throw Error(l(191,r));r.call(o)}}}var gi=Y.ReactCurrentBatchConfig,vi=(new r.Component).refs;function bi(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var wi={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Ze(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=au(),o=gi.suspense;(o=di(r=uu(r,e,o),o)).payload=t,null!=n&&(o.callback=n),pi(e,o),cu(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=au(),o=gi.suspense;(o=di(r=uu(r,e,o),o)).tag=1,o.payload=t,null!=n&&(o.callback=n),pi(e,o),cu(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=au(),r=gi.suspense;(r=di(n=uu(n,e,r),r)).tag=2,null!=t&&(r.callback=t),pi(e,r),cu(e,n)}};function ki(e,t,n,r,o,i,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,l):!(t.prototype&&t.prototype.isPureReactComponent&&Hr(n,r)&&Hr(o,i))}function xi(e,t,n){var r=!1,o=ho,i=t.contextType;return"object"==typeof i&&null!==i?i=ui(i):(o=wo(t)?vo:yo.current,i=(r=null!=(r=t.contextTypes))?bo(e,o):ho),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=wi,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function Ei(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&wi.enqueueReplaceState(t,t.state,null)}function Si(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=vi,si(e);var i=t.contextType;"object"==typeof i&&null!==i?o.context=ui(i):(i=wo(t)?vo:yo.current,o.context=bo(e,i)),hi(e,n,o,r),o.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(bi(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&wi.enqueueReplaceState(o,o.state,null),hi(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var Ti=Array.isArray;function Ci(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var r=n.stateNode}if(!r)throw Error(l(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=r.refs;t===vi&&(t=r.refs={}),null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function _i(e,t){if("textarea"!==e.type)throw Error(l(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Pi(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Wu(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function a(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Vu(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=Ci(e,t,n),r.return=e,r):((r=Uu(n.type,n.key,n.props,null,e.mode,r)).ref=Ci(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Qu(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=Hu(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Vu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=Uu(t.type,t.key,t.props,null,e.mode,n)).ref=Ci(e,null,t),n.return=e,n;case te:return(t=Qu(t,e.mode,n)).return=e,t}if(Ti(t)||he(t))return(t=Hu(t,e.mode,n,null)).return=e,t;_i(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===o?n.type===ne?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case te:return n.key===o?s(e,t,n,r):null}if(Ti(n)||he(n))return null!==o?null:f(e,t,n,r,null);_i(e,n)}return null}function m(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case te:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(Ti(r)||he(r))return f(t,e=e.get(n)||null,r,o,null);_i(t,r)}return null}function h(o,l,a,u){for(var c=null,s=null,f=l,h=l=0,y=null;null!==f&&h<a.length;h++){f.index>h?(y=f,f=null):y=f.sibling;var g=p(o,f,a[h],u);if(null===g){null===f&&(f=y);break}e&&f&&null===g.alternate&&t(o,f),l=i(g,l,h),null===s?c=g:s.sibling=g,s=g,f=y}if(h===a.length)return n(o,f),c;if(null===f){for(;h<a.length;h++)null!==(f=d(o,a[h],u))&&(l=i(f,l,h),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);h<a.length;h++)null!==(y=m(f,o,h,a[h],u))&&(e&&null!==y.alternate&&f.delete(null===y.key?h:y.key),l=i(y,l,h),null===s?c=y:s.sibling=y,s=y);return e&&f.forEach((function(e){return t(o,e)})),c}function y(o,a,u,c){var s=he(u);if("function"!=typeof s)throw Error(l(150));if(null==(u=s.call(u)))throw Error(l(151));for(var f=s=null,h=a,y=a=0,g=null,v=u.next();null!==h&&!v.done;y++,v=u.next()){h.index>y?(g=h,h=null):g=h.sibling;var b=p(o,h,v.value,c);if(null===b){null===h&&(h=g);break}e&&h&&null===b.alternate&&t(o,h),a=i(b,a,y),null===f?s=b:f.sibling=b,f=b,h=g}if(v.done)return n(o,h),s;if(null===h){for(;!v.done;y++,v=u.next())null!==(v=d(o,v.value,c))&&(a=i(v,a,y),null===f?s=v:f.sibling=v,f=v);return s}for(h=r(o,h);!v.done;y++,v=u.next())null!==(v=m(h,o,y,v.value,c))&&(e&&null!==v.alternate&&h.delete(null===v.key?y:v.key),a=i(v,a,y),null===f?s=v:f.sibling=v,f=v);return e&&h.forEach((function(e){return t(o,e)})),s}return function(e,r,i,u){var c="object"==typeof i&&null!==i&&i.type===ne&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case ee:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){if(7===c.tag){if(i.type===ne){n(e,c.sibling),(r=o(c,i.props.children)).return=e,e=r;break e}}else if(c.elementType===i.type){n(e,c.sibling),(r=o(c,i.props)).ref=Ci(e,c,i),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}i.type===ne?((r=Hu(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=Uu(i.type,i.key,i.props,null,e.mode,u)).ref=Ci(e,r,i),u.return=e,e=u)}return a(e);case te:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Qu(i,e.mode,u)).return=e,e=r}return a(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Vu(i,e.mode,u)).return=e,e=r),a(e);if(Ti(i))return h(e,r,i,u);if(he(i))return y(e,r,i,u);if(s&&_i(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:throw e=e.type,Error(l(152,e.displayName||e.name||"Component"))}return n(e,r)}}var Oi=Pi(!0),Ni=Pi(!1),Mi={},zi={current:Mi},ji={current:Mi},Ii={current:Mi};function Ri(e){if(e===Mi)throw Error(l(174));return e}function Ai(e,t){switch(mo(Ii,t),mo(ji,e),mo(zi,Mi),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Re(null,"");break;default:t=Re(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}po(zi),mo(zi,t)}function Fi(){po(zi),po(ji),po(Ii)}function Di(e){Ri(Ii.current);var t=Ri(zi.current),n=Re(t,e.type);t!==n&&(mo(ji,e),mo(zi,n))}function Li(e){ji.current===e&&(po(zi),po(ji))}var Bi={current:0};function Wi(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||n.data===gn||n.data===vn))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Ui(e,t){return{responder:e,props:t}}var Hi=Y.ReactCurrentDispatcher,Vi=Y.ReactCurrentBatchConfig,Qi=0,$i=null,qi=null,Ki=null,Gi=!1;function Yi(){throw Error(l(321))}function Xi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Wr(e[n],t[n]))return!1;return!0}function Zi(e,t,n,r,o,i){if(Qi=i,$i=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Hi.current=null===e||null===e.memoizedState?kl:xl,e=n(r,o),t.expirationTime===Qi){i=0;do{if(t.expirationTime=0,!(25>i))throw Error(l(301));i+=1,Ki=qi=null,t.updateQueue=null,Hi.current=El,e=n(r,o)}while(t.expirationTime===Qi)}if(Hi.current=wl,t=null!==qi&&null!==qi.next,Qi=0,Ki=qi=$i=null,Gi=!1,t)throw Error(l(300));return e}function Ji(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ki?$i.memoizedState=Ki=e:Ki=Ki.next=e,Ki}function el(){if(null===qi){var e=$i.alternate;e=null!==e?e.memoizedState:null}else e=qi.next;var t=null===Ki?$i.memoizedState:Ki.next;if(null!==t)Ki=t,qi=e;else{if(null===e)throw Error(l(310));e={memoizedState:(qi=e).memoizedState,baseState:qi.baseState,baseQueue:qi.baseQueue,queue:qi.queue,next:null},null===Ki?$i.memoizedState=Ki=e:Ki=Ki.next=e}return Ki}function tl(e,t){return"function"==typeof t?t(e):t}function nl(e){var t=el(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=qi,o=r.baseQueue,i=n.pending;if(null!==i){if(null!==o){var a=o.next;o.next=i.next,i.next=a}r.baseQueue=o=i,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var u=a=i=null,c=o;do{var s=c.expirationTime;if(s<Qi){var f={expirationTime:c.expirationTime,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(a=u=f,i=r):u=u.next=f,s>$i.expirationTime&&($i.expirationTime=s,ku(s))}else null!==u&&(u=u.next={expirationTime:1073741823,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),wu(s,c.suspenseConfig),r=c.eagerReducer===e?c.eagerState:e(r,c.action);c=c.next}while(null!==c&&c!==o);null===u?i=r:u.next=a,Wr(r,t.memoizedState)||(Il=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function rl(e){var t=el(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,i=t.memoizedState;if(null!==o){n.pending=null;var a=o=o.next;do{i=e(i,a.action),a=a.next}while(a!==o);Wr(i,t.memoizedState)||(Il=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function ol(e){var t=Ji();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:tl,lastRenderedState:e}).dispatch=bl.bind(null,$i,e),[t.memoizedState,e]}function il(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=$i.updateQueue)?(t={lastEffect:null},$i.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function ll(){return el().memoizedState}function al(e,t,n,r){var o=Ji();$i.effectTag|=e,o.memoizedState=il(1|t,n,void 0,void 0===r?null:r)}function ul(e,t,n,r){var o=el();r=void 0===r?null:r;var i=void 0;if(null!==qi){var l=qi.memoizedState;if(i=l.destroy,null!==r&&Xi(r,l.deps))return void il(t,n,i,r)}$i.effectTag|=e,o.memoizedState=il(1|t,n,i,r)}function cl(e,t){return al(516,4,e,t)}function sl(e,t){return ul(516,4,e,t)}function fl(e,t){return ul(4,2,e,t)}function dl(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function pl(e,t,n){return n=null!=n?n.concat([e]):null,ul(4,2,dl.bind(null,t,e),n)}function ml(){}function hl(e,t){return Ji().memoizedState=[e,void 0===t?null:t],e}function yl(e,t){var n=el();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Xi(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function gl(e,t){var n=el();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Xi(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function vl(e,t,n){var r=Qo();qo(98>r?98:r,(function(){e(!0)})),qo(97<r?97:r,(function(){var r=Vi.suspense;Vi.suspense=void 0===t?null:t;try{e(!1),n()}finally{Vi.suspense=r}}))}function bl(e,t,n){var r=au(),o=gi.suspense;o={expirationTime:r=uu(r,e,o),suspenseConfig:o,action:n,eagerReducer:null,eagerState:null,next:null};var i=t.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),t.pending=o,i=e.alternate,e===$i||null!==i&&i===$i)Gi=!0,o.expirationTime=Qi,$i.expirationTime=Qi;else{if(0===e.expirationTime&&(null===i||0===i.expirationTime)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,a=i(l,n);if(o.eagerReducer=i,o.eagerState=a,Wr(a,l))return}catch(e){}cu(e,r)}}var wl={readContext:ui,useCallback:Yi,useContext:Yi,useEffect:Yi,useImperativeHandle:Yi,useLayoutEffect:Yi,useMemo:Yi,useReducer:Yi,useRef:Yi,useState:Yi,useDebugValue:Yi,useResponder:Yi,useDeferredValue:Yi,useTransition:Yi},kl={readContext:ui,useCallback:hl,useContext:ui,useEffect:cl,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,al(4,2,dl.bind(null,t,e),n)},useLayoutEffect:function(e,t){return al(4,2,e,t)},useMemo:function(e,t){var n=Ji();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Ji();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=bl.bind(null,$i,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Ji().memoizedState=e},useState:ol,useDebugValue:ml,useResponder:Ui,useDeferredValue:function(e,t){var n=ol(e),r=n[0],o=n[1];return cl((function(){var n=Vi.suspense;Vi.suspense=void 0===t?null:t;try{o(e)}finally{Vi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=ol(!1),n=t[0];return t=t[1],[hl(vl.bind(null,t,e),[t,e]),n]}},xl={readContext:ui,useCallback:yl,useContext:ui,useEffect:sl,useImperativeHandle:pl,useLayoutEffect:fl,useMemo:gl,useReducer:nl,useRef:ll,useState:function(){return nl(tl)},useDebugValue:ml,useResponder:Ui,useDeferredValue:function(e,t){var n=nl(tl),r=n[0],o=n[1];return sl((function(){var n=Vi.suspense;Vi.suspense=void 0===t?null:t;try{o(e)}finally{Vi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=nl(tl),n=t[0];return t=t[1],[yl(vl.bind(null,t,e),[t,e]),n]}},El={readContext:ui,useCallback:yl,useContext:ui,useEffect:sl,useImperativeHandle:pl,useLayoutEffect:fl,useMemo:gl,useReducer:rl,useRef:ll,useState:function(){return rl(tl)},useDebugValue:ml,useResponder:Ui,useDeferredValue:function(e,t){var n=rl(tl),r=n[0],o=n[1];return sl((function(){var n=Vi.suspense;Vi.suspense=void 0===t?null:t;try{o(e)}finally{Vi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=rl(tl),n=t[0];return t=t[1],[yl(vl.bind(null,t,e),[t,e]),n]}},Sl=null,Tl=null,Cl=!1;function _l(e,t){var n=Lu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Pl(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function Ol(e){if(Cl){var t=Tl;if(t){var n=t;if(!Pl(e,t)){if(!(t=Tn(n.nextSibling))||!Pl(e,t))return e.effectTag=-1025&e.effectTag|2,Cl=!1,void(Sl=e);_l(Sl,n)}Sl=e,Tl=Tn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,Cl=!1,Sl=e}}function Nl(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Sl=e}function Ml(e){if(e!==Sl)return!1;if(!Cl)return Nl(e),Cl=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!xn(t,e.memoizedProps))for(t=Tl;t;)_l(e,t),t=Tn(t.nextSibling);if(Nl(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if(n===yn){if(0===t){Tl=Tn(e.nextSibling);break e}t--}else n!==hn&&n!==vn&&n!==gn||t++}e=e.nextSibling}Tl=null}}else Tl=Sl?Tn(e.stateNode.nextSibling):null;return!0}function zl(){Tl=Sl=null,Cl=!1}var jl=Y.ReactCurrentOwner,Il=!1;function Rl(e,t,n,r){t.child=null===e?Ni(t,null,n,r):Oi(t,e.child,n,r)}function Al(e,t,n,r,o){n=n.render;var i=t.ref;return ai(t,o),r=Zi(e,t,n,r,i,o),null===e||Il?(t.effectTag|=1,Rl(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Jl(e,t,o))}function Fl(e,t,n,r,o,i){if(null===e){var l=n.type;return"function"!=typeof l||Bu(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Uu(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,Dl(e,t,l,r,o,i))}return l=e.child,o<i&&(o=l.memoizedProps,(n=null!==(n=n.compare)?n:Hr)(o,r)&&e.ref===t.ref)?Jl(e,t,i):(t.effectTag|=1,(e=Wu(l,r)).ref=t.ref,e.return=t,t.child=e)}function Dl(e,t,n,r,o,i){return null!==e&&Hr(e.memoizedProps,r)&&e.ref===t.ref&&(Il=!1,o<i)?(t.expirationTime=e.expirationTime,Jl(e,t,i)):Bl(e,t,n,r,i)}function Ll(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Bl(e,t,n,r,o){var i=wo(n)?vo:yo.current;return i=bo(t,i),ai(t,o),n=Zi(e,t,n,r,i,o),null===e||Il?(t.effectTag|=1,Rl(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Jl(e,t,o))}function Wl(e,t,n,r,o){if(wo(n)){var i=!0;So(t)}else i=!1;if(ai(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),xi(t,n,r),Si(t,n,r,o),r=!0;else if(null===e){var l=t.stateNode,a=t.memoizedProps;l.props=a;var u=l.context,c=n.contextType;c="object"==typeof c&&null!==c?ui(c):bo(t,c=wo(n)?vo:yo.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof l.getSnapshotBeforeUpdate;f||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(a!==r||u!==c)&&Ei(t,l,r,c),ci=!1;var d=t.memoizedState;l.state=d,hi(t,r,l,o),u=t.memoizedState,a!==r||d!==u||go.current||ci?("function"==typeof s&&(bi(t,n,s,r),u=t.memoizedState),(a=ci||ki(t,n,a,r,d,u,c))?(f||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.effectTag|=4)):("function"==typeof l.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),l.props=r,l.state=u,l.context=c,r=a):("function"==typeof l.componentDidMount&&(t.effectTag|=4),r=!1)}else l=t.stateNode,fi(e,t),a=t.memoizedProps,l.props=t.type===t.elementType?a:Jo(t.type,a),u=l.context,c="object"==typeof(c=n.contextType)&&null!==c?ui(c):bo(t,c=wo(n)?vo:yo.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(a!==r||u!==c)&&Ei(t,l,r,c),ci=!1,u=t.memoizedState,l.state=u,hi(t,r,l,o),d=t.memoizedState,a!==r||u!==d||go.current||ci?("function"==typeof s&&(bi(t,n,s,r),d=t.memoizedState),(s=ci||ki(t,n,a,r,u,d,c))?(f||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,d,c),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof l.componentDidUpdate&&(t.effectTag|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof l.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),l.props=r,l.state=d,l.context=c,r=s):("function"!=typeof l.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Ul(e,t,n,r,i,o)}function Ul(e,t,n,r,o,i){Ll(e,t);var l=0!=(64&t.effectTag);if(!r&&!l)return o&&To(t,n,!1),Jl(e,t,i);r=t.stateNode,jl.current=t;var a=l&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&l?(t.child=Oi(t,e.child,null,i),t.child=Oi(t,null,a,i)):Rl(e,t,a,i),t.memoizedState=r.state,o&&To(t,n,!0),t.child}function Hl(e){var t=e.stateNode;t.pendingContext?xo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&xo(0,t.context,!1),Ai(e,t.containerInfo)}var Vl,Ql,$l,ql,Kl={dehydrated:null,retryTime:0};function Gl(e,t,n){var r,o=t.mode,i=t.pendingProps,l=Bi.current,a=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&l)&&(null===e||null!==e.memoizedState)),r?(a=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(l|=1),mo(Bi,1&l),null===e){if(void 0!==i.fallback&&Ol(t),a){if(a=i.fallback,(i=Hu(null,o,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Hu(a,o,n,null)).return=t,i.sibling=n,t.memoizedState=Kl,t.child=i,n}return o=i.children,t.memoizedState=null,t.child=Ni(t,null,o,n)}if(null!==e.memoizedState){if(o=(e=e.child).sibling,a){if(i=i.fallback,(n=Wu(e,e.pendingProps)).return=t,0==(2&t.mode)&&(a=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=a;null!==a;)a.return=n,a=a.sibling;return(o=Wu(o,i)).return=t,n.sibling=o,n.childExpirationTime=0,t.memoizedState=Kl,t.child=n,o}return n=Oi(t,e.child,i.children,n),t.memoizedState=null,t.child=n}if(e=e.child,a){if(a=i.fallback,(i=Hu(null,o,0,null)).return=t,i.child=e,null!==e&&(e.return=i),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Hu(a,o,n,null)).return=t,i.sibling=n,n.effectTag|=2,i.childExpirationTime=0,t.memoizedState=Kl,t.child=i,n}return t.memoizedState=null,t.child=Oi(t,e,i.children,n)}function Yl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),li(e.return,t)}function Xl(e,t,n,r,o,i){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:o,lastEffect:i}:(l.isBackwards=t,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=n,l.tailExpiration=0,l.tailMode=o,l.lastEffect=i)}function Zl(e,t,n){var r=t.pendingProps,o=r.revealOrder,i=r.tail;if(Rl(e,t,r.children,n),0!=(2&(r=Bi.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Yl(e,n);else if(19===e.tag)Yl(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(mo(Bi,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Wi(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),Xl(t,!1,o,n,i,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Wi(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}Xl(t,!0,n,null,i,t.lastEffect);break;case"together":Xl(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Jl(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&ku(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=Wu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Wu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function ea(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ta(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:case 17:return wo(t.type)&&ko(),null;case 3:return Fi(),po(go),po(yo),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!Ml(t)||(t.effectTag|=4),Ql(t),null;case 5:Li(t),n=Ri(Ii.current);var i=t.type;if(null!==e&&null!=t.stateNode)$l(e,t,i,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(l(166));return null}if(e=Ri(zi.current),Ml(t)){r=t.stateNode,i=t.type;var a=t.memoizedProps;switch(r[Pn]=t,r[On]=a,i){case"iframe":case"object":case"embed":$t("load",r);break;case"video":case"audio":for(e=0;e<Ge.length;e++)$t(Ge[e],r);break;case"source":$t("error",r);break;case"img":case"image":case"link":$t("error",r),$t("load",r);break;case"form":$t("reset",r),$t("submit",r);break;case"details":$t("toggle",r);break;case"input":Ee(r,a),$t("invalid",r),an(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!a.multiple},$t("invalid",r),an(n,"onChange");break;case"textarea":Me(r,a),$t("invalid",r),an(n,"onChange")}for(var u in rn(i,a),e=null,a)if(a.hasOwnProperty(u)){var c=a[u];"children"===u?"string"==typeof c?r.textContent!==c&&(e=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(e=["children",""+c]):S.hasOwnProperty(u)&&null!=c&&an(n,u)}switch(i){case"input":we(r),Ce(r,a,!0);break;case"textarea":we(r),je(r);break;case"select":case"option":break;default:"function"==typeof a.onClick&&(r.onclick=un)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(u=9===n.nodeType?n:n.ownerDocument,e===ln&&(e=Ie(i)),e===ln?"script"===i?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(i,{is:r.is}):(e=u.createElement(i),"select"===i&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,i),e[Pn]=t,e[On]=r,Vl(e,t,!1,!1),t.stateNode=e,u=on(i,r),i){case"iframe":case"object":case"embed":$t("load",e),c=r;break;case"video":case"audio":for(c=0;c<Ge.length;c++)$t(Ge[c],e);c=r;break;case"source":$t("error",e),c=r;break;case"img":case"image":case"link":$t("error",e),$t("load",e),c=r;break;case"form":$t("reset",e),$t("submit",e),c=r;break;case"details":$t("toggle",e),c=r;break;case"input":Ee(e,r),c=xe(e,r),$t("invalid",e),an(n,"onChange");break;case"option":c=Pe(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},c=o({},r,{value:void 0}),$t("invalid",e),an(n,"onChange");break;case"textarea":Me(e,r),c=Ne(e,r),$t("invalid",e),an(n,"onChange");break;default:c=r}rn(i,c);var s=c;for(a in s)if(s.hasOwnProperty(a)){var f=s[a];"style"===a?tn(e,f):"dangerouslySetInnerHTML"===a?null!=(f=f?f.__html:void 0)&&De(e,f):"children"===a?"string"==typeof f?("textarea"!==i||""!==f)&&Le(e,f):"number"==typeof f&&Le(e,""+f):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(S.hasOwnProperty(a)?null!=f&&an(n,a):null!=f&&X(e,a,f,u))}switch(i){case"input":we(e),Ce(e,r,!1);break;case"textarea":we(e),je(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ve(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Oe(e,!!r.multiple,n,!1):null!=r.defaultValue&&Oe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof c.onClick&&(e.onclick=un)}kn(i,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)ql(e,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(l(166));n=Ri(Ii.current),Ri(zi.current),Ml(t)?(n=t.stateNode,r=t.memoizedProps,n[Pn]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Pn]=t,t.stateNode=n)}return null;case 13:return po(Bi),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&Ml(t):(r=null!==(i=e.memoizedState),n||null===i||null!==(i=e.child.sibling)&&(null!==(a=t.firstEffect)?(t.firstEffect=i,i.nextEffect=a):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Bi.current)?Wa===Ma&&(Wa=Ia):(Wa!==Ma&&Wa!==Ia||(Wa=Ra),0!==$a&&null!==Da&&(Ku(Da,Ba),Gu(Da,$a)))),(n||r)&&(t.effectTag|=4),null);case 4:return Fi(),Ql(t),null;case 10:return ii(t),null;case 19:if(po(Bi),null===(r=t.memoizedState))return null;if(i=0!=(64&t.effectTag),null===(a=r.rendering)){if(i)ea(r,!1);else if(Wa!==Ma||null!==e&&0!=(64&e.effectTag))for(a=t.child;null!==a;){if(null!==(e=Wi(a))){for(t.effectTag|=64,ea(r,!1),null!==(i=e.updateQueue)&&(t.updateQueue=i,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)a=n,(i=r).effectTag&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(e=i.alternate)?(i.childExpirationTime=0,i.expirationTime=a,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null):(i.childExpirationTime=e.childExpirationTime,i.expirationTime=e.expirationTime,i.child=e.child,i.memoizedProps=e.memoizedProps,i.memoizedState=e.memoizedState,i.updateQueue=e.updateQueue,a=e.dependencies,i.dependencies=null===a?null:{expirationTime:a.expirationTime,firstContext:a.firstContext,responders:a.responders}),r=r.sibling;return mo(Bi,1&Bi.current|2),t.child}a=a.sibling}}else{if(!i)if(null!==(e=Wi(a))){if(t.effectTag|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),ea(r,!0),null===r.tail&&"hidden"===r.tailMode&&!a.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Vo()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,i=!0,ea(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(a.sibling=t.child,t.child=a):(null!==(n=r.last)?n.sibling=a:t.child=a,r.last=a)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Vo()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Vo(),n.sibling=null,t=Bi.current,mo(Bi,i?1&t|2:1&t),n):null}throw Error(l(156,t.tag))}function na(e){switch(e.tag){case 1:wo(e.type)&&ko();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Fi(),po(go),po(yo),0!=(64&(t=e.effectTag)))throw Error(l(285));return e.effectTag=-4097&t|64,e;case 5:return Li(e),null;case 13:return po(Bi),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return po(Bi),null;case 4:return Fi(),null;case 10:return ii(e),null;default:return null}}function ra(e,t){return{value:e,source:t,stack:ge(t)}}Vl=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ql=function(){},$l=function(e,t,n,r,i){var l=e.memoizedProps;if(l!==r){var a,u,c=t.stateNode;switch(Ri(zi.current),e=null,n){case"input":l=xe(c,l),r=xe(c,r),e=[];break;case"option":l=Pe(c,l),r=Pe(c,r),e=[];break;case"select":l=o({},l,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":l=Ne(c,l),r=Ne(c,r),e=[];break;default:"function"!=typeof l.onClick&&"function"==typeof r.onClick&&(c.onclick=un)}for(a in rn(n,r),n=null,l)if(!r.hasOwnProperty(a)&&l.hasOwnProperty(a)&&null!=l[a])if("style"===a)for(u in c=l[a])c.hasOwnProperty(u)&&(n||(n={}),n[u]="");else"dangerouslySetInnerHTML"!==a&&"children"!==a&&"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(S.hasOwnProperty(a)?e||(e=[]):(e=e||[]).push(a,null));for(a in r){var s=r[a];if(c=null!=l?l[a]:void 0,r.hasOwnProperty(a)&&s!==c&&(null!=s||null!=c))if("style"===a)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(n||(n={}),n[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(n||(n={}),n[u]=s[u])}else n||(e||(e=[]),e.push(a,n)),n=s;else"dangerouslySetInnerHTML"===a?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(a,s)):"children"===a?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(a,""+s):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&(S.hasOwnProperty(a)?(null!=s&&an(i,a),e||c===s||(e=[])):(e=e||[]).push(a,s))}n&&(e=e||[]).push("style",n),i=e,(t.updateQueue=i)&&(t.effectTag|=4)}},ql=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var oa="function"==typeof WeakSet?WeakSet:Set;function ia(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ge(n)),null!==n&&ye(n.type),t=t.value,null!==e&&1===e.tag&&ye(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function la(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){ju(e,t)}else t.current=null}function aa(e,t){switch(t.tag){case 0:case 11:case 15:case 22:case 3:case 5:case 6:case 4:case 17:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Jo(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return}throw Error(l(163))}function ua(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function ca(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function sa(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void ca(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:Jo(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&yi(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:case 1:e=n.child.stateNode}yi(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&kn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:case 19:case 17:case 20:case 21:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Rt(n)))))}throw Error(l(163))}function fa(e,t,n){switch("function"==typeof Fu&&Fu(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;qo(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var o=t;try{n()}catch(e){ju(o,e)}}e=e.next}while(e!==r)}))}break;case 1:la(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){ju(e,t)}}(t,n);break;case 5:la(t);break;case 4:ga(e,t,n)}}function da(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&da(t)}function pa(e){return 5===e.tag||3===e.tag||4===e.tag}function ma(e){e:{for(var t=e.return;null!==t;){if(pa(t)){var n=t;break e}t=t.return}throw Error(l(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(l(161))}16&n.effectTag&&(Le(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||pa(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?ha(e,n,t):ya(e,n,t)}function ha(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=un));else if(4!==r&&null!==(e=e.child))for(ha(e,t,n),e=e.sibling;null!==e;)ha(e,t,n),e=e.sibling}function ya(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(ya(e,t,n),e=e.sibling;null!==e;)ya(e,t,n),e=e.sibling}function ga(e,t,n){for(var r,o,i=t,a=!1;;){if(!a){a=i.return;e:for(;;){if(null===a)throw Error(l(160));switch(r=a.stateNode,a.tag){case 5:o=!1;break e;case 3:case 4:r=r.containerInfo,o=!0;break e}a=a.return}a=!0}if(5===i.tag||6===i.tag){e:for(var u=e,c=i,s=n,f=c;;)if(fa(u,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===c)break e;for(;null===f.sibling;){if(null===f.return||f.return===c)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}o?(u=r,c=i.stateNode,8===u.nodeType?u.parentNode.removeChild(c):u.removeChild(c)):r.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,o=!0,i.child.return=i,i=i.child;continue}}else if(fa(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(a=!1)}i.sibling.return=i.return,i=i.sibling}}function va(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void ua(3,t);case 1:case 12:case 17:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[On]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Se(n,r),on(e,o),t=on(e,r),o=0;o<i.length;o+=2){var a=i[o],u=i[o+1];"style"===a?tn(n,u):"dangerouslySetInnerHTML"===a?De(n,u):"children"===a?Le(n,u):X(n,a,u,t)}switch(e){case"input":Te(n,r);break;case"textarea":ze(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Oe(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Oe(n,!!r.multiple,r.defaultValue,!0):Oe(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(l(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,Rt(t.containerInfo)));case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Ka=Vo()),null!==n)e:for(e=n;;){if(5===e.tag)i=e.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,i.style.display=en("display",o));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void ba(t);case 19:return void ba(t)}throw Error(l(163))}function ba(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new oa),t.forEach((function(t){var r=Ru.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var wa="function"==typeof WeakMap?WeakMap:Map;function ka(e,t,n){(n=di(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Xa||(Xa=!0,Za=r),ia(e,t)},n}function xa(e,t,n){(n=di(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return ia(e,t),r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Ja?Ja=new Set([this]):Ja.add(this),ia(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var Ea,Sa=Math.ceil,Ta=Y.ReactCurrentDispatcher,Ca=Y.ReactCurrentOwner,_a=0,Pa=8,Oa=16,Na=32,Ma=0,za=1,ja=2,Ia=3,Ra=4,Aa=5,Fa=_a,Da=null,La=null,Ba=0,Wa=Ma,Ua=null,Ha=1073741823,Va=1073741823,Qa=null,$a=0,qa=!1,Ka=0,Ga=500,Ya=null,Xa=!1,Za=null,Ja=null,eu=!1,tu=null,nu=90,ru=null,ou=0,iu=null,lu=0;function au(){return(Fa&(Oa|Na))!==_a?1073741821-(Vo()/10|0):0!==lu?lu:lu=1073741821-(Vo()/10|0)}function uu(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=Qo();if(0==(4&t))return 99===r?1073741823:1073741822;if((Fa&Oa)!==_a)return Ba;if(null!==n)e=Zo(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Zo(e,150,100);break;case 97:case 96:e=Zo(e,5e3,250);break;case 95:e=2;break;default:throw Error(l(326))}return null!==Da&&e===Ba&&--e,e}function cu(e,t){if(50<ou)throw ou=0,iu=null,Error(l(185));if(null!==(e=su(e,t))){var n=Qo();1073741823===t?(Fa&Pa)!==_a&&(Fa&(Oa|Na))===_a?mu(e):(du(e),Fa===_a&&Yo()):du(e),(4&Fa)===_a||98!==n&&99!==n||(null===ru?ru=new Map([[e,t]]):(void 0===(n=ru.get(e))||n>t)&&ru.set(e,t))}}function su(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(Da===o&&(ku(t),Wa===Ra&&Ku(o,Ba)),Gu(o,t)),o}function fu(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!qu(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function du(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Go(mu.bind(null,e));else{var t=fu(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=au();if(r=1073741823===t?99:1===t||2===t?95:0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var o=e.callbackPriority;if(e.callbackExpirationTime===t&&o>=r)return;n!==Fo&&Po(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Go(mu.bind(null,e)):Ko(r,pu.bind(null,e),{timeout:10*(1073741821-t)-Vo()}),e.callbackNode=t}}}function pu(e,t){if(lu=0,t)return Yu(e,t=au()),du(e),null;var n=fu(e);if(0!==n){if(t=e.callbackNode,(Fa&(Oa|Na))!==_a)throw Error(l(327));if(Nu(),e===Da&&n===Ba||gu(e,n),null!==La){var r=Fa;Fa|=Oa;for(var o=bu();;)try{Eu();break}catch(t){vu(e,t)}if(oi(),Fa=r,Ta.current=o,Wa===za)throw t=Ua,gu(e,n),Ku(e,n),du(e),t;if(null===La)switch(o=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Wa,Da=null,r){case Ma:case za:throw Error(l(345));case ja:Yu(e,2<n?2:n);break;case Ia:if(Ku(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=Cu(o)),1073741823===Ha&&10<(o=Ka+Ga-Vo())){if(qa){var i=e.lastPingedTime;if(0===i||i>=n){e.lastPingedTime=n,gu(e,n);break}}if(0!==(i=fu(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=En(_u.bind(null,e),o);break}_u(e);break;case Ra:if(Ku(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=Cu(o)),qa&&(0===(o=e.lastPingedTime)||o>=n)){e.lastPingedTime=n,gu(e,n);break}if(0!==(o=fu(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Va?r=10*(1073741821-Va)-Vo():1073741823===Ha?r=0:(r=10*(1073741821-Ha)-5e3,0>(r=(o=Vo())-r)&&(r=0),(n=10*(1073741821-n)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Sa(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=En(_u.bind(null,e),r);break}_u(e);break;case Aa:if(1073741823!==Ha&&null!==Qa){i=Ha;var a=Qa;if(0>=(r=0|a.busyMinDurationMs)?r=0:(o=0|a.busyDelayMs,r=(i=Vo()-(10*(1073741821-i)-(0|a.timeoutMs||5e3)))<=o?0:o+r-i),10<r){Ku(e,n),e.timeoutHandle=En(_u.bind(null,e),r);break}}_u(e);break;default:throw Error(l(329))}if(du(e),e.callbackNode===t)return pu.bind(null,e)}}return null}function mu(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,(Fa&(Oa|Na))!==_a)throw Error(l(327));if(Nu(),e===Da&&t===Ba||gu(e,t),null!==La){var n=Fa;Fa|=Oa;for(var r=bu();;)try{xu();break}catch(t){vu(e,t)}if(oi(),Fa=n,Ta.current=r,Wa===za)throw n=Ua,gu(e,t),Ku(e,t),du(e),n;if(null!==La)throw Error(l(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Da=null,_u(e),du(e)}return null}function hu(e,t){var n=Fa;Fa|=1;try{return e(t)}finally{(Fa=n)===_a&&Yo()}}function yu(e,t){var n=Fa;Fa&=-2,Fa|=Pa;try{return e(t)}finally{(Fa=n)===_a&&Yo()}}function gu(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Sn(n)),null!==La)for(n=La.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&ko();break;case 3:Fi(),po(go),po(yo);break;case 5:Li(r);break;case 4:Fi();break;case 13:case 19:po(Bi);break;case 10:ii(r)}n=n.return}Da=e,La=Wu(e.current,null),Ba=t,Wa=Ma,Ua=null,Va=Ha=1073741823,Qa=null,$a=0,qa=!1}function vu(e,t){for(;;){try{if(oi(),Hi.current=wl,Gi)for(var n=$i.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if(Qi=0,Ki=qi=$i=null,Gi=!1,null===La||null===La.return)return Wa=za,Ua=t,La=null;e:{var o=e,i=La.return,l=La,a=t;if(t=Ba,l.effectTag|=2048,l.firstEffect=l.lastEffect=null,null!==a&&"object"==typeof a&&"function"==typeof a.then){var u=a;if(0==(2&l.mode)){var c=l.alternate;c?(l.updateQueue=c.updateQueue,l.memoizedState=c.memoizedState,l.expirationTime=c.expirationTime):(l.updateQueue=null,l.memoizedState=null)}var s=0!=(1&Bi.current),f=i;do{var d;if(d=13===f.tag){var p=f.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var m=f.memoizedProps;d=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!s)}}if(d){var h=f.updateQueue;if(null===h){var y=new Set;y.add(u),f.updateQueue=y}else h.add(u);if(0==(2&f.mode)){if(f.effectTag|=64,l.effectTag&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var g=di(1073741823,null);g.tag=2,pi(l,g)}l.expirationTime=1073741823;break e}a=void 0,l=t;var v=o.pingCache;if(null===v?(v=o.pingCache=new wa,a=new Set,v.set(u,a)):void 0===(a=v.get(u))&&(a=new Set,v.set(u,a)),!a.has(l)){a.add(l);var b=Iu.bind(null,o,u,l);u.then(b,b)}f.effectTag|=4096,f.expirationTime=t;break e}f=f.return}while(null!==f);a=Error((ye(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ge(l))}Wa!==Aa&&(Wa=ja),a=ra(a,l),f=i;do{switch(f.tag){case 3:u=a,f.effectTag|=4096,f.expirationTime=t,mi(f,ka(f,u,t));break e;case 1:u=a;var w=f.type,k=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof w.getDerivedStateFromError||null!==k&&"function"==typeof k.componentDidCatch&&(null===Ja||!Ja.has(k)))){f.effectTag|=4096,f.expirationTime=t,mi(f,xa(f,u,t));break e}}f=f.return}while(null!==f)}La=Tu(La)}catch(e){t=e;continue}break}}function bu(){var e=Ta.current;return Ta.current=wl,null===e?wl:e}function wu(e,t){e<Ha&&2<e&&(Ha=e),null!==t&&e<Va&&2<e&&(Va=e,Qa=t)}function ku(e){e>$a&&($a=e)}function xu(){for(;null!==La;)La=Su(La)}function Eu(){for(;null!==La&&!Do();)La=Su(La)}function Su(e){var t=Ea(e.alternate,e,Ba);return e.memoizedProps=e.pendingProps,null===t&&(t=Tu(e)),Ca.current=null,t}function Tu(e){La=e;do{var t=La.alternate;if(e=La.return,0==(2048&La.effectTag)){if(t=ta(t,La,Ba),1===Ba||1!==La.childExpirationTime){for(var n=0,r=La.child;null!==r;){var o=r.expirationTime,i=r.childExpirationTime;o>n&&(n=o),i>n&&(n=i),r=r.sibling}La.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=La.firstEffect),null!==La.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=La.firstEffect),e.lastEffect=La.lastEffect),1<La.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=La:e.firstEffect=La,e.lastEffect=La))}else{if(null!==(t=na(La)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=La.sibling))return t;La=e}while(null!==La);return Wa===Ma&&(Wa=Aa),null}function Cu(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function _u(e){var t=Qo();return qo(99,Pu.bind(null,e,t)),null}function Pu(e,t){do{Nu()}while(null!==tu);if((Fa&(Oa|Na))!==_a)throw Error(l(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(l(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var o=Cu(n);if(e.firstPendingTime=o,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Da&&(La=Da=null,Ba=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){var i=Fa;Fa|=Na,Ca.current=null,bn=Qt;var a=pn();if(mn(a)){if("selectionStart"in a)var u={start:a.selectionStart,end:a.selectionEnd};else e:{var c=(u=(u=a.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(c&&0!==c.rangeCount){u=c.anchorNode;var s=c.anchorOffset,f=c.focusNode;c=c.focusOffset;try{u.nodeType,f.nodeType}catch(e){u=null;break e}var d=0,p=-1,m=-1,h=0,y=0,g=a,v=null;t:for(;;){for(var b;g!==u||0!==s&&3!==g.nodeType||(p=d+s),g!==f||0!==c&&3!==g.nodeType||(m=d+c),3===g.nodeType&&(d+=g.nodeValue.length),null!==(b=g.firstChild);)v=g,g=b;for(;;){if(g===a)break t;if(v===u&&++h===s&&(p=d),v===f&&++y===c&&(m=d),null!==(b=g.nextSibling))break;v=(g=v).parentNode}g=b}u=-1===p||-1===m?null:{start:p,end:m}}else u=null}u=u||{start:0,end:0}}else u=null;wn={activeElementDetached:null,focusedElem:a,selectionRange:u},Qt=!1,Ya=o;do{try{Ou()}catch(e){if(null===Ya)throw Error(l(330));ju(Ya,e),Ya=Ya.nextEffect}}while(null!==Ya);Ya=o;do{try{for(a=e,u=t;null!==Ya;){var w=Ya.effectTag;if(16&w&&Le(Ya.stateNode,""),128&w){var k=Ya.alternate;if(null!==k){var x=k.ref;null!==x&&("function"==typeof x?x(null):x.current=null)}}switch(1038&w){case 2:ma(Ya),Ya.effectTag&=-3;break;case 6:ma(Ya),Ya.effectTag&=-3,va(Ya.alternate,Ya);break;case 1024:Ya.effectTag&=-1025;break;case 1028:Ya.effectTag&=-1025,va(Ya.alternate,Ya);break;case 4:va(Ya.alternate,Ya);break;case 8:ga(a,s=Ya,u),da(s)}Ya=Ya.nextEffect}}catch(e){if(null===Ya)throw Error(l(330));ju(Ya,e),Ya=Ya.nextEffect}}while(null!==Ya);if(x=wn,k=pn(),w=x.focusedElem,u=x.selectionRange,k!==w&&w&&w.ownerDocument&&dn(w.ownerDocument.documentElement,w)){null!==u&&mn(w)&&(k=u.start,void 0===(x=u.end)&&(x=k),"selectionStart"in w?(w.selectionStart=k,w.selectionEnd=Math.min(x,w.value.length)):(x=(k=w.ownerDocument||document)&&k.defaultView||window).getSelection&&(x=x.getSelection(),s=w.textContent.length,a=Math.min(u.start,s),u=void 0===u.end?a:Math.min(u.end,s),!x.extend&&a>u&&(s=u,u=a,a=s),s=fn(w,a),f=fn(w,u),s&&f&&(1!==x.rangeCount||x.anchorNode!==s.node||x.anchorOffset!==s.offset||x.focusNode!==f.node||x.focusOffset!==f.offset)&&((k=k.createRange()).setStart(s.node,s.offset),x.removeAllRanges(),a>u?(x.addRange(k),x.extend(f.node,f.offset)):(k.setEnd(f.node,f.offset),x.addRange(k))))),k=[];for(x=w;x=x.parentNode;)1===x.nodeType&&k.push({element:x,left:x.scrollLeft,top:x.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<k.length;w++)(x=k[w]).element.scrollLeft=x.left,x.element.scrollTop=x.top}Qt=!!bn,wn=bn=null,e.current=n,Ya=o;do{try{for(w=e;null!==Ya;){var E=Ya.effectTag;if(36&E&&sa(w,Ya.alternate,Ya),128&E){k=void 0;var S=Ya.ref;if(null!==S){var T=Ya.stateNode;Ya.tag,k=T,"function"==typeof S?S(k):S.current=k}}Ya=Ya.nextEffect}}catch(e){if(null===Ya)throw Error(l(330));ju(Ya,e),Ya=Ya.nextEffect}}while(null!==Ya);Ya=null,Lo(),Fa=i}else e.current=n;if(eu)eu=!1,tu=e,nu=t;else for(Ya=o;null!==Ya;)t=Ya.nextEffect,Ya.nextEffect=null,Ya=t;if(0===(t=e.firstPendingTime)&&(Ja=null),1073741823===t?e===iu?ou++:(ou=0,iu=e):ou=0,"function"==typeof Au&&Au(n.stateNode,r),du(e),Xa)throw Xa=!1,e=Za,Za=null,e;return(Fa&Pa)!==_a||Yo(),null}function Ou(){for(;null!==Ya;){var e=Ya.effectTag;0!=(256&e)&&aa(Ya.alternate,Ya),0==(512&e)||eu||(eu=!0,Ko(97,(function(){return Nu(),null}))),Ya=Ya.nextEffect}}function Nu(){if(90!==nu){var e=97<nu?97:nu;return nu=90,qo(e,Mu)}}function Mu(){if(null===tu)return!1;var e=tu;if(tu=null,(Fa&(Oa|Na))!==_a)throw Error(l(331));var t=Fa;for(Fa|=Na,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:ua(5,n),ca(5,n)}}catch(t){if(null===e)throw Error(l(330));ju(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return Fa=t,Yo(),!0}function zu(e,t,n){pi(e,t=ka(e,t=ra(n,t),1073741823)),null!==(e=su(e,1073741823))&&du(e)}function ju(e,t){if(3===e.tag)zu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){zu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Ja||!Ja.has(r))){pi(n,e=xa(n,e=ra(t,e),1073741823)),null!==(n=su(n,1073741823))&&du(n);break}}n=n.return}}function Iu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),Da===e&&Ba===n?Wa===Ra||Wa===Ia&&1073741823===Ha&&Vo()-Ka<Ga?gu(e,Ba):qa=!0:qu(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,du(e)))}function Ru(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(t=uu(t=au(),e,null)),null!==(e=su(e,t))&&du(e)}Ea=function(e,t,n){var r=t.expirationTime;if(null!==e){var o=t.pendingProps;if(e.memoizedProps!==o||go.current)Il=!0;else{if(r<n){switch(Il=!1,t.tag){case 3:Hl(t),zl();break;case 5:if(Di(t),4&t.mode&&1!==n&&o.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:wo(t.type)&&So(t);break;case 4:Ai(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,o=t.type._context,mo(ei,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Gl(e,t,n):(mo(Bi,1&Bi.current),null!==(t=Jl(e,t,n))?t.sibling:null);mo(Bi,1&Bi.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return Zl(e,t,n);t.effectTag|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null),mo(Bi,Bi.current),!r)return null}return Jl(e,t,n)}Il=!1}}else Il=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,o=bo(t,yo.current),ai(t,n),o=Zi(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,wo(r)){var i=!0;So(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,si(t);var a=r.getDerivedStateFromProps;"function"==typeof a&&bi(t,r,a,e),o.updater=wi,t.stateNode=o,o._reactInternalFiber=t,Si(t,r,e,n),t=Ul(null,t,r,!0,i,n)}else t.tag=0,Rl(null,t,o,n),t=t.child;return t;case 16:e:{if(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(o),1!==o._status)throw o._result;switch(o=o._result,t.type=o,i=t.tag=function(e){if("function"==typeof e)return Bu(e)?1:0;if(null!=e){if((e=e.$$typeof)===ue)return 11;if(e===fe)return 14}return 2}(o),e=Jo(o,e),i){case 0:t=Bl(null,t,o,e,n);break e;case 1:t=Wl(null,t,o,e,n);break e;case 11:t=Al(null,t,o,e,n);break e;case 14:t=Fl(null,t,o,Jo(o.type,e),r,n);break e}throw Error(l(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,Bl(e,t,r,o=t.elementType===r?o:Jo(r,o),n);case 1:return r=t.type,o=t.pendingProps,Wl(e,t,r,o=t.elementType===r?o:Jo(r,o),n);case 3:if(Hl(t),r=t.updateQueue,null===e||null===r)throw Error(l(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,fi(e,t),hi(t,r,null,n),(r=t.memoizedState.element)===o)zl(),t=Jl(e,t,n);else{if((o=t.stateNode.hydrate)&&(Tl=Tn(t.stateNode.containerInfo.firstChild),Sl=t,o=Cl=!0),o)for(n=Ni(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Rl(e,t,r,n),zl();t=t.child}return t;case 5:return Di(t),null===e&&Ol(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,a=o.children,xn(r,o)?a=null:null!==i&&xn(r,i)&&(t.effectTag|=16),Ll(e,t),4&t.mode&&1!==n&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Rl(e,t,a,n),t=t.child),t;case 6:return null===e&&Ol(t),null;case 13:return Gl(e,t,n);case 4:return Ai(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Oi(t,null,r,n):Rl(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Al(e,t,r,o=t.elementType===r?o:Jo(r,o),n);case 7:return Rl(e,t,t.pendingProps,n),t.child;case 8:case 12:return Rl(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,a=t.memoizedProps,i=o.value;var u=t.type._context;if(mo(ei,u._currentValue),u._currentValue=i,null!==a)if(u=a.value,0==(i=Wr(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(a.children===o.children&&!go.current){t=Jl(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){a=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===u.tag&&((s=di(n,null)).tag=2,pi(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n),li(u.return,n),c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else a=10===u.tag&&u.type===t.type?null:u.child;if(null!==a)a.return=u;else for(a=u;null!==a;){if(a===t){a=null;break}if(null!==(u=a.sibling)){u.return=a.return,a=u;break}a=a.return}u=a}Rl(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,ai(t,n),r=r(o=ui(o,i.unstable_observedBits)),t.effectTag|=1,Rl(e,t,r,n),t.child;case 14:return i=Jo(o=t.type,t.pendingProps),Fl(e,t,o,i=Jo(o.type,i),r,n);case 15:return Dl(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Jo(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,wo(r)?(e=!0,So(t)):e=!1,ai(t,n),xi(t,r,o),Si(t,r,o,n),Ul(null,t,r,!0,e,n);case 19:return Zl(e,t,n)}throw Error(l(156,t.tag))};var Au=null,Fu=null;function Du(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Lu(e,t,n,r){return new Du(e,t,n,r)}function Bu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Wu(e,t){var n=e.alternate;return null===n?((n=Lu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Uu(e,t,n,r,o,i){var a=2;if(r=e,"function"==typeof e)Bu(e)&&(a=1);else if("string"==typeof e)a=5;else e:switch(e){case ne:return Hu(n.children,o,i,t);case ae:a=8,o|=7;break;case re:a=8,o|=1;break;case oe:return(e=Lu(12,n,t,8|o)).elementType=oe,e.type=oe,e.expirationTime=i,e;case ce:return(e=Lu(13,n,t,o)).type=ce,e.elementType=ce,e.expirationTime=i,e;case se:return(e=Lu(19,n,t,o)).elementType=se,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case ie:a=10;break e;case le:a=9;break e;case ue:a=11;break e;case fe:a=14;break e;case de:a=16,r=null;break e;case pe:a=22;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=Lu(a,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function Hu(e,t,n,r){return(e=Lu(7,e,r,t)).expirationTime=n,e}function Vu(e,t,n){return(e=Lu(6,e,null,t)).expirationTime=n,e}function Qu(e,t,n){return(t=Lu(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function $u(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function qu(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Ku(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Gu(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Yu(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Xu(e,t,n,r){var o=t.current,i=au(),a=gi.suspense;i=uu(i,o,a);e:if(n){t:{if(Ze(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(l(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(wo(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(l(171))}if(1===n.tag){var c=n.type;if(wo(c)){n=Eo(n,c,u);break e}}n=u}else n=ho;return null===t.context?t.context=n:t.pendingContext=n,(t=di(i,a)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),pi(o,t),cu(o,i),i}function Zu(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Ju(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function ec(e,t){Ju(e,t),(e=e.alternate)&&Ju(e,t)}function tc(e,t,n){var r=new $u(e,t,n=null!=n&&!0===n.hydrate),o=Lu(3,null,null,2===t?7:1===t?3:0);r.current=o,o.stateNode=r,si(o),e[Nn]=r.current,n&&0!==t&&function(e,t){var n=Xe(t);Tt.forEach((function(e){pt(e,t,n)})),Ct.forEach((function(e){pt(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function nc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function rc(e,t,n,r,o){var i=n._reactRootContainer;if(i){var l=i._internalRoot;if("function"==typeof o){var a=o;o=function(){var e=Zu(l);a.call(e)}}Xu(t,l,e,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new tc(e,0,t?{hydrate:!0}:void 0)}(n,r),l=i._internalRoot,"function"==typeof o){var u=o;o=function(){var e=Zu(l);u.call(e)}}yu((function(){Xu(t,l,e,o)}))}return Zu(l)}function oc(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nc(t))throw Error(l(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}tc.prototype.render=function(e){Xu(e,this._internalRoot,null,null)},tc.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Xu(null,e,null,(function(){t[Nn]=null}))},mt=function(e){if(13===e.tag){var t=Zo(au(),150,100);cu(e,t),ec(e,t)}},ht=function(e){13===e.tag&&(cu(e,3),ec(e,3))},yt=function(e){if(13===e.tag){var t=au();cu(e,t=uu(t,e,null)),ec(e,t)}},P=function(e,t,n){switch(t){case"input":if(Te(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=In(r);if(!o)throw Error(l(90));ke(r),Te(r,o)}}}break;case"textarea":ze(e,n);break;case"select":null!=(t=n.value)&&Oe(e,!!n.multiple,t,!1)}},I=hu,R=function(e,t,n,r,o){var i=Fa;Fa|=4;try{return qo(98,e.bind(null,t,n,r,o))}finally{(Fa=i)===_a&&Yo()}},A=function(){(Fa&(1|Oa|Na))===_a&&(function(){if(null!==ru){var e=ru;ru=null,e.forEach((function(e,t){Yu(t,e),du(t)})),Yo()}}(),Nu())},F=function(e,t){var n=Fa;Fa|=2;try{return e(t)}finally{(Fa=n)===_a&&Yo()}};var ic={Events:[zn,jn,In,C,E,Wn,function(e){rt(e,Bn)},z,j,Yt,lt,Nu,{current:!1}]};!function(e){var t=e.findFiberByHostInstance;!function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Au=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},Fu=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(o({},e,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Y.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=tt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))}({findFiberByHostInstance:Mn,bundleType:0,version:"16.14.0",rendererPackageName:"react-dom"}),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ic,t.createPortal=oc,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw Error(l(268,Object.keys(e)))}return null===(e=tt(t))?null:e.stateNode},t.flushSync=function(e,t){if((Fa&(Oa|Na))!==_a)throw Error(l(187));var n=Fa;Fa|=1;try{return qo(99,e.bind(null,t))}finally{Fa=n,Yo()}},t.hydrate=function(e,t,n){if(!nc(t))throw Error(l(200));return rc(null,e,t,!0,n)},t.render=function(e,t,n){if(!nc(t))throw Error(l(200));return rc(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!nc(e))throw Error(l(40));return!!e._reactRootContainer&&(yu((function(){rc(null,null,e,!1,(function(){e._reactRootContainer=null,e[Nn]=null}))})),!0)},t.unstable_batchedUpdates=hu,t.unstable_createPortal=function(e,t){return oc(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!nc(n))throw Error(l(200));if(null==e||void 0===e._reactInternalFiber)throw Error(l(38));return rc(e,t,n,!1,r)},t.version="16.14.0"},104:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(516)},28:(e,t,n)=>{"use strict";var r=n(456),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,l=o?Symbol.for("react.portal"):60106,a=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.forward_ref"):60112,p=o?Symbol.for("react.suspense"):60113,m=o?Symbol.for("react.memo"):60115,h=o?Symbol.for("react.lazy"):60116,y="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var v={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||v}function k(){}function x(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||v}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(g(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=w.prototype;var E=x.prototype=new k;E.constructor=x,r(E,w.prototype),E.isPureReactComponent=!0;var S={current:null},T=Object.prototype.hasOwnProperty,C={key:!0,ref:!0,__self:!0,__source:!0};function _(e,t,n){var r,o={},l=null,a=null;if(null!=t)for(r in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(l=""+t.key),t)T.call(t,r)&&!C.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:l,ref:a,props:o,_owner:S.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var O=/\/+/g,N=[];function M(e,t,n,r){if(N.length){var o=N.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function z(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>N.length&&N.push(e)}function j(e,t,n,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var a=!1;if(null===e)a=!0;else switch(o){case"string":case"number":a=!0;break;case"object":switch(e.$$typeof){case i:case l:a=!0}}if(a)return n(r,e,""===t?"."+R(e,0):t),1;if(a=0,t=""===t?".":t+":",Array.isArray(e))for(var u=0;u<e.length;u++){var c=t+R(o=e[u],u);a+=j(o,c,n,r)}else if("function"==typeof(c=null===e||"object"!=typeof e?null:"function"==typeof(c=y&&e[y]||e["@@iterator"])?c:null))for(e=c.call(e),u=0;!(o=e.next()).done;)a+=j(o=o.value,c=t+R(o,u++),n,r);else if("object"===o)throw n=""+e,Error(g(31,"[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n,""));return a}function I(e,t,n){return null==e?0:j(e,"",t,n)}function R(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function A(e,t){e.func.call(e.context,t,e.count++)}function F(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?D(e,r,n,(function(e){return e})):null!=e&&(P(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(O,"$&/")+"/")+n)),r.push(e))}function D(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(O,"$&/")+"/"),I(e,F,t=M(t,i,r,o)),z(t)}var L={current:null};function B(){var e=L.current;if(null===e)throw Error(g(321));return e}var W={ReactCurrentDispatcher:L,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:S,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return D(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;I(e,A,t=M(null,null,t,n)),z(t)},count:function(e){return I(e,(function(){return null}),null)},toArray:function(e){var t=[];return D(e,t,null,(function(e){return e})),t},only:function(e){if(!P(e))throw Error(g(143));return e}},t.Component=w,t.Fragment=a,t.Profiler=c,t.PureComponent=x,t.StrictMode=u,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W,t.cloneElement=function(e,t,n){if(null==e)throw Error(g(267,e));var o=r({},e.props),l=e.key,a=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(a=t.ref,u=S.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)T.call(t,s)&&!C.hasOwnProperty(s)&&(o[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];o.children=c}return{$$typeof:i,type:e.type,key:l,ref:a,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=_,t.createFactory=function(e){var t=_.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=P,t.lazy=function(e){return{$$typeof:h,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return B().useCallback(e,t)},t.useContext=function(e,t){return B().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return B().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return B().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return B().useLayoutEffect(e,t)},t.useMemo=function(e,t){return B().useMemo(e,t)},t.useReducer=function(e,t,n){return B().useReducer(e,t,n)},t.useRef=function(e){return B().useRef(e)},t.useState=function(e){return B().useState(e)},t.version="16.14.0"},504:(e,t,n)=>{"use strict";e.exports=n(28)},328:(e,t)=>{"use strict";var n,r,o,i,l;if("undefined"==typeof window||"function"!=typeof MessageChannel){var a=null,u=null,c=function(){if(null!==a)try{var e=t.unstable_now();a(!0,e),a=null}catch(e){throw setTimeout(c,0),e}},s=Date.now();t.unstable_now=function(){return Date.now()-s},n=function(e){null!==a?setTimeout(n,0,e):(a=e,setTimeout(c,0))},r=function(e,t){u=setTimeout(e,t)},o=function(){clearTimeout(u)},i=function(){return!1},l=t.unstable_forceFrameRate=function(){}}else{var f=window.performance,d=window.Date,p=window.setTimeout,m=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof f&&"function"==typeof f.now)t.unstable_now=function(){return f.now()};else{var y=d.now();t.unstable_now=function(){return d.now()-y}}var g=!1,v=null,b=-1,w=5,k=0;i=function(){return t.unstable_now()>=k},l=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):w=0<e?Math.floor(1e3/e):5};var x=new MessageChannel,E=x.port2;x.port1.onmessage=function(){if(null!==v){var e=t.unstable_now();k=e+w;try{v(!0,e)?E.postMessage(null):(g=!1,v=null)}catch(e){throw E.postMessage(null),e}}else g=!1},n=function(e){v=e,g||(g=!0,E.postMessage(null))},r=function(e,n){b=p((function(){e(t.unstable_now())}),n)},o=function(){m(b),b=-1}}function S(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<_(o,t)))break e;e[r]=t,e[n]=o,n=r}}function T(e){return void 0===(e=e[0])?null:e}function C(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var i=2*(r+1)-1,l=e[i],a=i+1,u=e[a];if(void 0!==l&&0>_(l,n))void 0!==u&&0>_(u,l)?(e[r]=u,e[a]=n,r=a):(e[r]=l,e[i]=n,r=i);else{if(!(void 0!==u&&0>_(u,n)))break e;e[r]=u,e[a]=n,r=a}}}return t}return null}function _(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var P=[],O=[],N=1,M=null,z=3,j=!1,I=!1,R=!1;function A(e){for(var t=T(O);null!==t;){if(null===t.callback)C(O);else{if(!(t.startTime<=e))break;C(O),t.sortIndex=t.expirationTime,S(P,t)}t=T(O)}}function F(e){if(R=!1,A(e),!I)if(null!==T(P))I=!0,n(D);else{var t=T(O);null!==t&&r(F,t.startTime-e)}}function D(e,n){I=!1,R&&(R=!1,o()),j=!0;var l=z;try{for(A(n),M=T(P);null!==M&&(!(M.expirationTime>n)||e&&!i());){var a=M.callback;if(null!==a){M.callback=null,z=M.priorityLevel;var u=a(M.expirationTime<=n);n=t.unstable_now(),"function"==typeof u?M.callback=u:M===T(P)&&C(P),A(n)}else C(P);M=T(P)}if(null!==M)var c=!0;else{var s=T(O);null!==s&&r(F,s.startTime-n),c=!1}return c}finally{M=null,z=l,j=!1}}function L(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var B=l;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){I||j||(I=!0,n(D))},t.unstable_getCurrentPriorityLevel=function(){return z},t.unstable_getFirstCallbackNode=function(){return T(P)},t.unstable_next=function(e){switch(z){case 1:case 2:case 3:var t=3;break;default:t=z}var n=z;z=t;try{return e()}finally{z=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=B,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=z;z=e;try{return t()}finally{z=n}},t.unstable_scheduleCallback=function(e,i,l){var a=t.unstable_now();if("object"==typeof l&&null!==l){var u=l.delay;u="number"==typeof u&&0<u?a+u:a,l="number"==typeof l.timeout?l.timeout:L(e)}else l=L(e),u=a;return e={id:N++,callback:i,priorityLevel:e,startTime:u,expirationTime:l=u+l,sortIndex:-1},u>a?(e.sortIndex=u,S(O,e),null===T(P)&&e===T(O)&&(R?o():R=!0,r(F,u-a))):(e.sortIndex=l,S(P,e),I||j||(I=!0,n(D))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();A(e);var n=T(P);return n!==M&&null!==M&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<M.expirationTime||i()},t.unstable_wrapCallback=function(e){var t=z;return function(){var n=z;z=t;try{return e.apply(this,arguments)}finally{z=n}}}},712:(e,t,n)=>{"use strict";e.exports=n(328)},596:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var i={},l=[],a=0;a<e.length;a++){var u=e[a],c=r.base?u[0]+r.base:u[0],s=i[c]||0,f="".concat(c," ").concat(s);i[c]=s+1;var d=n(f),p={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==d)t[d].references++,t[d].updater(p);else{var m=o(p,r);r.byIndex=a,t.splice(a,0,{identifier:f,updater:m,references:1})}l.push(f)}return l}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var l=0;l<i.length;l++){var a=n(i[l]);t[a].references--}for(var u=r(e,o),c=0;c<i.length;c++){var s=n(i[c]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}i=u}}},176:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},808:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},120:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},520:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},936:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},r={};function o(e){var t=r[e];if(void 0!==t)return t.exports;var i=r[e]={id:e,exports:{}};return n[e](i,i.exports,o),i.exports}o.m=n,o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.f={},o.e=e=>Promise.all(Object.keys(o.f).reduce(((t,n)=>(o.f[n](e,t),t)),[])),o.u=e=>e+".bundle.js",o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="task_2:",o.l=(n,r,i,l)=>{if(e[n])e[n].push(r);else{var a,u;if(void 0!==i)for(var c=document.getElementsByTagName("script"),s=0;s<c.length;s++){var f=c[s];if(f.getAttribute("src")==n||f.getAttribute("data-webpack")==t+i){a=f;break}}a||(u=!0,(a=document.createElement("script")).charset="utf-8",a.timeout=120,o.nc&&a.setAttribute("nonce",o.nc),a.setAttribute("data-webpack",t+i),a.src=n),e[n]=[r];var d=(t,r)=>{a.onerror=a.onload=null,clearTimeout(p);var o=e[n];if(delete e[n],a.parentNode&&a.parentNode.removeChild(a),o&&o.forEach((e=>e(r))),t)return t(r)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:a}),12e4);a.onerror=d.bind(null,a.onerror),a.onload=d.bind(null,a.onload),u&&document.head.appendChild(a)}},o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;o.g.importScripts&&(e=o.g.location+"");var t=o.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");if(n.length)for(var r=n.length-1;r>-1&&!e;)e=n[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),o.p=e})(),(()=>{var e={590:0};o.f.j=(t,n)=>{var r=o.o(e,t)?e[t]:void 0;if(0!==r)if(r)n.push(r[2]);else{var i=new Promise(((n,o)=>r=e[t]=[n,o]));n.push(r[2]=i);var l=o.p+o.u(t),a=new Error;o.l(l,(n=>{if(o.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var i=n&&("load"===n.type?"missing":n.type),l=n&&n.target&&n.target.src;a.message="Loading chunk "+t+" failed.\n("+i+": "+l+")",a.name="ChunkLoadError",a.type=i,a.request=l,r[1](a)}}),"chunk-"+t,t)}};var t=(t,n)=>{var r,i,[l,a,u]=n,c=0;if(l.some((t=>0!==e[t]))){for(r in a)o.o(a,r)&&(o.m[r]=a[r]);u&&u(o)}for(t&&t(n);c<l.length;c++)i=l[c],o.o(e,i)&&e[i]&&e[i][0](),e[i]=0},n=self.webpackChunktask_2=self.webpackChunktask_2||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})(),o.nc=void 0,(()=>{"use strict";var e=o(504),t=o(104),n=o(596),r=o.n(n),i=o(520),l=o.n(i),a=o(176),u=o.n(a),c=o(120),s=o.n(c),f=o(808),d=o.n(f),p=o(936),m=o.n(p),h=o(344),y={};y.styleTagTransform=m(),y.setAttributes=s(),y.insert=u().bind(null,"head"),y.domAPI=l(),y.insertStyleElement=d(),r()(h.c,y),h.c&&h.c.locals&&h.c.locals;var g=o(84),v=o.n(g),b=o(488),w=o.n(b);function k(e){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k(e)}function x(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function E(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){x(e,t,n[t])}))}return e}function S(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var T=/([A-Z])/g,C=function(e){return"-".concat(e.toLowerCase())},_={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridColumn:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},P=["Webkit","ms","Moz","O"];Object.keys(_).forEach((function(e){P.forEach((function(t){_[function(e,t){return e+t.charAt(0).toUpperCase()+t.substring(1)}(t,e)]=_[e]}))}));var O=function(e,t){return"number"==typeof t?_[e]?""+t:t+"px":""+t},N=function(e,t){return z(O(e,t))},M=function(e,t){return v()(e).toString(36)},z=function(e){return"!"===e[e.length-10]&&" !important"===e.slice(-11)?e:"".concat(e," !important")},j="undefined"!=typeof Map,I=function(){function e(){this.elements={},this.keyOrder=[]}var t=e.prototype;return t.forEach=function(e){for(var t=0;t<this.keyOrder.length;t++)e(this.elements[this.keyOrder[t]],this.keyOrder[t])},t.set=function(t,n,r){if(this.elements.hasOwnProperty(t)){if(r){var o=this.keyOrder.indexOf(t);this.keyOrder.splice(o,1),this.keyOrder.push(t)}}else this.keyOrder.push(t);if(null!=n){if(j&&n instanceof Map||n instanceof e){var i=this.elements.hasOwnProperty(t)?this.elements[t]:new e;return n.forEach((function(e,t){i.set(t,e,r)})),void(this.elements[t]=i)}if(Array.isArray(n)||"object"!==k(n))this.elements[t]=n;else{for(var l=this.elements.hasOwnProperty(t)?this.elements[t]:new e,a=Object.keys(n),u=0;u<a.length;u+=1)l.set(a[u],n[a[u]],r);this.elements[t]=l}}else this.elements[t]=n},t.get=function(e){return this.elements[e]},t.has=function(e){return this.elements.hasOwnProperty(e)},t.addStyleType=function(t){var n=this;if(j&&t instanceof Map||t instanceof e)t.forEach((function(e,t){n.set(t,e,!0)}));else for(var r=Object.keys(t),o=0;o<r.length;o++)this.set(r[o],t[r[o]],!0)},e}();function R(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function A(e,t){return e(t={exports:{}},t.exports),t.exports}var F=A((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e.charAt(0).toUpperCase()+e.slice(1)}}));R(F);var D=A((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if(e.hasOwnProperty(t)){for(var o={},i=e[t],l=(0,r.default)(t),a=Object.keys(n),u=0;u<a.length;u++){var c=a[u];if(c===t)for(var s=0;s<i.length;s++)o[i[s]+l]=n[t];o[c]=n[c]}return o}return n};var n,r=(n=F)&&n.__esModule?n:{default:n}}));R(D);var L=A((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,r,o){for(var i=0,l=e.length;i<l;++i){var a=e[i](t,n,r,o);if(a)return a}}}));R(L);var B=A((function(e,t){function n(e,t){-1===e.indexOf(t)&&e.push(t)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(Array.isArray(t))for(var r=0,o=t.length;r<o;++r)n(e,t[r]);else n(e,t)}}));R(B);var W=A((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e instanceof Object&&!Array.isArray(e)}}));R(W);var U=R(A((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=e.prefixMap,l=e.plugins;return function e(a){for(var u in a){var c=a[u];if((0,i.default)(c))a[u]=e(c);else if(Array.isArray(c)){for(var s=[],f=0,d=c.length;f<d;++f){var p=(0,r.default)(l,u,c[f],a,t);(0,o.default)(s,p||c[f])}s.length>0&&(a[u]=s)}else{var m=(0,r.default)(l,u,c,a,t);m&&(a[u]=m),a=(0,n.default)(t,u,a)}}return a}};var n=l(D),r=l(L),o=l(B),i=l(W);function l(e){return e&&e.__esModule?e:{default:e}}}))),H=R(A((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&"text"===t)return["-webkit-text","text"]}}))),V=A((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return"string"==typeof e&&n.test(e)};var n=/-webkit-|-moz-|-ms-/;e.exports=t.default}));R(V);var Q=A((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("calc(")>-1)return o.map((function(e){return t.replace(/calc\(/g,e+"calc(")}))};var n,r=(n=V)&&n.__esModule?n:{default:n},o=["-webkit-","-moz-",""]})),$=R(Q),q=A((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("cross-fade(")>-1)return o.map((function(e){return t.replace(/cross-fade\(/g,e+"cross-fade(")}))};var n,r=(n=V)&&n.__esModule?n:{default:n},o=["-webkit-",""]})),K=R(q),G=A((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("cursor"===e&&r.hasOwnProperty(t))return n.map((function(e){return e+t}))};var n=["-webkit-","-moz-",""],r={"zoom-in":!0,"zoom-out":!0,grab:!0,grabbing:!0}})),Y=R(G),X=A((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("filter(")>-1)return o.map((function(e){return t.replace(/filter\(/g,e+"filter(")}))};var n,r=(n=V)&&n.__esModule?n:{default:n},o=["-webkit-",""]})),Z=R(X),J=R(A((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("display"===e&&n.hasOwnProperty(t))return n[t]};var n={flex:["-webkit-box","-moz-box","-ms-flexbox","-webkit-flex","flex"],"inline-flex":["-webkit-inline-box","-moz-inline-box","-ms-inline-flexbox","-webkit-inline-flex","inline-flex"]}}))),ee=A((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,l){if(Object.prototype.hasOwnProperty.call(r,e)&&(l[r[e]]=n[t]||t),"flex"===e){if(Object.prototype.hasOwnProperty.call(o,t))return void(l.msFlex=o[t]);if(i.test(t))return void(l.msFlex=t+" 1 0%");var a=t.split(/\s/);switch(a.length){case 1:return void(l.msFlex="1 1 "+t);case 2:return void(i.test(a[1])?l.msFlex=a[0]+" "+a[1]+" 0%":l.msFlex=a[0]+" 1 "+a[1]);default:l.msFlex=t}}};var n={"space-around":"distribute","space-between":"justify","flex-start":"start","flex-end":"end"},r={alignContent:"msFlexLinePack",alignSelf:"msFlexItemAlign",alignItems:"msFlexAlign",justifyContent:"msFlexPack",order:"msFlexOrder",flexGrow:"msFlexPositive",flexShrink:"msFlexNegative",flexBasis:"msFlexPreferredSize"},o={auto:"1 1 auto",inherit:"inherit",initial:"0 1 auto",none:"0 0 auto",unset:"unset"},i=/^\d+(\.\d+)?$/})),te=R(ee),ne=R(A((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,o){"flexDirection"===e&&"string"==typeof t&&(t.indexOf("column")>-1?o.WebkitBoxOrient="vertical":o.WebkitBoxOrient="horizontal",t.indexOf("reverse")>-1?o.WebkitBoxDirection="reverse":o.WebkitBoxDirection="normal"),r.hasOwnProperty(e)&&(o[r[e]]=n[t]||t)};var n={"space-around":"justify","space-between":"justify","flex-start":"start","flex-end":"end","wrap-reverse":"multiple",wrap:"multiple"},r={alignItems:"WebkitBoxAlign",justifyContent:"WebkitBoxPack",flexWrap:"WebkitBoxLines",flexGrow:"WebkitBoxFlex"}}))),re=A((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&i.test(t))return o.map((function(e){return t.replace(i,(function(t){return e+t}))}))};var n,r=(n=V)&&n.__esModule?n:{default:n},o=["-webkit-","-moz-",""],i=/linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/gi})),oe=R(re),ie=A((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});var n=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,o=!1,i=void 0;try{for(var l,a=e[Symbol.iterator]();!(r=(l=a.next()).done)&&(n.push(l.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{!r&&a.return&&a.return()}finally{if(o)throw i}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")};function r(e){return"number"==typeof e&&!isNaN(e)}t.default=function(e,t,n){if("display"===e&&t in i)return i[t];e in l&&(0,l[e])(t,n)};var o=["center","end","start","stretch"],i={"inline-grid":["-ms-inline-grid","inline-grid"],grid:["-ms-grid","grid"]},l={alignSelf:function(e,t){o.indexOf(e)>-1&&(t.msGridRowAlign=e)},gridColumn:function(e,t){if(r(e))t.msGridColumn=e;else{var o=e.split("/").map((function(e){return+e})),i=n(o,2),a=i[0],u=i[1];l.gridColumnStart(a,t),l.gridColumnEnd(u,t)}},gridColumnEnd:function(e,t){var n=t.msGridColumn;r(e)&&r(n)&&(t.msGridColumnSpan=e-n)},gridColumnStart:function(e,t){r(e)&&(t.msGridColumn=e)},gridRow:function(e,t){if(r(e))t.msGridRow=e;else{var o=e.split("/").map((function(e){return+e})),i=n(o,2),a=i[0],u=i[1];l.gridRowStart(a,t),l.gridRowEnd(u,t)}},gridRowEnd:function(e,t){var n=t.msGridRow;r(e)&&r(n)&&(t.msGridRowSpan=e-n)},gridRowStart:function(e,t){r(e)&&(t.msGridRow=e)},gridTemplateColumns:function(e,t){t.msGridColumns=e},gridTemplateRows:function(e,t){t.msGridRows=e},justifySelf:function(e,t){o.indexOf(e)>-1&&(t.msGridColumnAlign=e)}}})),le=R(ie),ae=A((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("image-set(")>-1)return o.map((function(e){return t.replace(/image-set\(/g,e+"image-set(")}))};var n,r=(n=V)&&n.__esModule?n:{default:n},o=["-webkit-",""]})),ue=R(ae),ce=R(A((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,r){if(Object.prototype.hasOwnProperty.call(n,e))for(var o=n[e],i=0,l=o.length;i<l;++i)r[o[i]]=t};var n={marginBlockStart:["WebkitMarginBefore"],marginBlockEnd:["WebkitMarginAfter"],marginInlineStart:["WebkitMarginStart","MozMarginStart"],marginInlineEnd:["WebkitMarginEnd","MozMarginEnd"],paddingBlockStart:["WebkitPaddingBefore"],paddingBlockEnd:["WebkitPaddingAfter"],paddingInlineStart:["WebkitPaddingStart","MozPaddingStart"],paddingInlineEnd:["WebkitPaddingEnd","MozPaddingEnd"],borderBlockStart:["WebkitBorderBefore"],borderBlockStartColor:["WebkitBorderBeforeColor"],borderBlockStartStyle:["WebkitBorderBeforeStyle"],borderBlockStartWidth:["WebkitBorderBeforeWidth"],borderBlockEnd:["WebkitBorderAfter"],borderBlockEndColor:["WebkitBorderAfterColor"],borderBlockEndStyle:["WebkitBorderAfterStyle"],borderBlockEndWidth:["WebkitBorderAfterWidth"],borderInlineStart:["WebkitBorderStart","MozBorderStart"],borderInlineStartColor:["WebkitBorderStartColor","MozBorderStartColor"],borderInlineStartStyle:["WebkitBorderStartStyle","MozBorderStartStyle"],borderInlineStartWidth:["WebkitBorderStartWidth","MozBorderStartWidth"],borderInlineEnd:["WebkitBorderEnd","MozBorderEnd"],borderInlineEndColor:["WebkitBorderEndColor","MozBorderEndColor"],borderInlineEndStyle:["WebkitBorderEndStyle","MozBorderEndStyle"],borderInlineEndWidth:["WebkitBorderEndWidth","MozBorderEndWidth"]}}))),se=R(A((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("position"===e&&"sticky"===t)return["-webkit-sticky","sticky"]}}))),fe=A((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(r.hasOwnProperty(e)&&o.hasOwnProperty(t))return n.map((function(e){return e+t}))};var n=["-webkit-","-moz-",""],r={maxHeight:!0,maxWidth:!0,width:!0,height:!0,columnWidth:!0,minWidth:!0,minHeight:!0},o={"min-content":!0,"max-content":!0,"fill-available":!0,"fit-content":!0,"contain-floats":!0}})),de=R(fe),pe=/[A-Z]/g,me=/^ms-/,he={};function ye(e){return"-"+e.toLowerCase()}var ge,ve=(ge=Object.freeze({default:function(e){if(he.hasOwnProperty(e))return he[e];var t=e.replace(pe,ye);return he[e]=me.test(t)?"-"+t:t}}))&&ge.default||ge,be=A((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e)};var n,r=(n=ve)&&n.__esModule?n:{default:n};e.exports=t.default}));R(be);var we=A((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,i,u){if("string"==typeof t&&l.hasOwnProperty(e)){var c=function(e,t){if((0,r.default)(e))return e;for(var o=e.split(/,(?![^()]*(?:\([^()]*\))?\))/g),i=0,l=o.length;i<l;++i){var u=o[i],c=[u];for(var s in t){var f=(0,n.default)(s);if(u.indexOf(f)>-1&&"order"!==f)for(var d=t[s],p=0,m=d.length;p<m;++p)c.unshift(u.replace(f,a[d[p]]+f))}o[i]=c.join(",")}return o.join(",")}(t,u),s=c.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter((function(e){return!/-moz-|-ms-/.test(e)})).join(",");if(e.indexOf("Webkit")>-1)return s;var f=c.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter((function(e){return!/-webkit-|-ms-/.test(e)})).join(",");return e.indexOf("Moz")>-1?f:(i["Webkit"+(0,o.default)(e)]=s,i["Moz"+(0,o.default)(e)]=f,c)}};var n=i(be),r=i(V),o=i(F);function i(e){return e&&e.__esModule?e:{default:e}}var l={transition:!0,transitionProperty:!0,WebkitTransition:!0,WebkitTransitionProperty:!0,MozTransition:!0,MozTransitionProperty:!0},a={Webkit:"-webkit-",Moz:"-moz-",ms:"-ms-"}})),ke=["Webkit"],xe=["Moz"],Ee=["ms"],Se=["Webkit","Moz"],Te=["Webkit","ms"],Ce=["Webkit","Moz","ms"],_e=U({plugins:[H,$,K,Y,Z,J,te,ne,oe,le,ue,ce,se,de,R(we)],prefixMap:{transform:Te,transformOrigin:Te,transformOriginX:Te,transformOriginY:Te,backfaceVisibility:ke,perspective:ke,perspectiveOrigin:ke,transformStyle:ke,transformOriginZ:ke,animation:ke,animationDelay:ke,animationDirection:ke,animationFillMode:ke,animationDuration:ke,animationIterationCount:ke,animationName:ke,animationPlayState:ke,animationTimingFunction:ke,appearance:Se,userSelect:Ce,fontKerning:ke,textEmphasisPosition:ke,textEmphasis:ke,textEmphasisStyle:ke,textEmphasisColor:ke,boxDecorationBreak:ke,clipPath:ke,maskImage:ke,maskMode:ke,maskRepeat:ke,maskPosition:ke,maskClip:ke,maskOrigin:ke,maskSize:ke,maskComposite:ke,mask:ke,maskBorderSource:ke,maskBorderMode:ke,maskBorderSlice:ke,maskBorderWidth:ke,maskBorderOutset:ke,maskBorderRepeat:ke,maskBorder:ke,maskType:ke,textDecorationStyle:Se,textDecorationSkip:Se,textDecorationLine:Se,textDecorationColor:Se,filter:ke,fontFeatureSettings:Se,breakAfter:Ce,breakBefore:Ce,breakInside:Ce,columnCount:Se,columnFill:Se,columnGap:Se,columnRule:Se,columnRuleColor:Se,columnRuleStyle:Se,columnRuleWidth:Se,columns:Se,columnSpan:Se,columnWidth:Se,writingMode:Te,flex:Te,flexBasis:ke,flexDirection:Te,flexGrow:ke,flexFlow:Te,flexShrink:ke,flexWrap:Te,alignContent:ke,alignItems:ke,alignSelf:ke,justifyContent:ke,order:ke,transitionDelay:ke,transitionDuration:ke,transitionProperty:ke,transitionTimingFunction:ke,backdropFilter:ke,scrollSnapType:Te,scrollSnapPointsX:Te,scrollSnapPointsY:Te,scrollSnapDestination:Te,scrollSnapCoordinate:Te,shapeImageThreshold:ke,shapeImageMargin:ke,shapeImageOutside:ke,hyphens:Ce,flowInto:Te,flowFrom:Te,regionFragment:Te,textOrientation:ke,boxSizing:xe,textAlignLast:xe,tabSize:xe,wrapFlow:Ee,wrapThrough:Ee,wrapMargin:Ee,touchAction:Ee,textSizeAdjust:Te,borderImage:ke,borderImageOutset:ke,borderImageRepeat:ke,borderImageSlice:ke,borderImageSource:ke,borderImageWidth:ke}}),Pe=[function(e,t,n){return":"!==e[0]?null:n(t+e)},function(e,t,n){if("@"!==e[0])return null;var r=n(t);return["".concat(e,"{").concat(r.join(""),"}")]}],Oe=function e(t,n,r,o,i){for(var l=new I,a=0;a<n.length;a++)l.addStyleType(n[a]);var u=new I,c=[];l.forEach((function(n,l){r.some((function(a){var u=a(l,t,(function(t){return e(t,[n],r,o,i)}));if(null!=u)return Array.isArray(u)?c.push.apply(c,S(u)):(console.warn("WARNING: Selector handlers should return an array of rules.Returning a string containing multiple rules is deprecated.",a),c.push("@media all {".concat(u,"}"))),!0}))||u.set(l,n,!0)}));var s=ze(t,u,o,i,r);return s&&c.unshift(s),c},Ne=function(e,t,n){return"".concat((r=e,o=r.replace(T,C),"m"===o[0]&&"s"===o[1]&&"-"===o[2]?"-".concat(o):o),":").concat(n(e,t),";");var r,o},Me=function(e,t){return e[t]=!0,e},ze=function(e,t,n,r,o){!function(e,t,n){if(t)for(var r=Object.keys(t),o=0;o<r.length;o++){var i=r[o];e.has(i)&&e.set(i,t[i](e.get(i),n),!1)}}(t,n,o);var i=Object.keys(t.elements).reduce(Me,Object.create(null)),l=_e(t.elements),a=Object.keys(l);if(a.length!==t.keyOrder.length)for(var u=0;u<a.length;u++)if(!i[a[u]]){var c;if((c="W"===a[u][0]?a[u][6].toLowerCase()+a[u].slice(7):"o"===a[u][1]?a[u][3].toLowerCase()+a[u].slice(4):a[u][2].toLowerCase()+a[u].slice(3))&&i[c]){var s=t.keyOrder.indexOf(c);t.keyOrder.splice(s,0,a[u])}else t.keyOrder.unshift(a[u])}for(var f=!1===r?O:N,d=[],p=0;p<t.keyOrder.length;p++){var m=t.keyOrder[p],h=l[m];if(Array.isArray(h))for(var y=0;y<h.length;y++)d.push(Ne(m,h[y],f));else d.push(Ne(m,h,f))}return d.length?"".concat(e,"{").concat(d.join(""),"}"):""},je=null,Ie={fontFamily:function e(t){if(Array.isArray(t)){var n={};return t.forEach((function(t){n[e(t)]=!0})),Object.keys(n).join(",")}return"object"===k(t)?(Le(t.src,"@font-face",[t],!1),'"'.concat(t.fontFamily,'"')):t},animationName:function e(t,n){if(Array.isArray(t))return t.map((function(t){return e(t,n)})).join(",");if("object"===k(t)){var r="keyframe_".concat((i=t,M(JSON.stringify(i)))),o="@keyframes ".concat(r,"{");return t instanceof I?t.forEach((function(e,t){o+=Oe(t,[e],n,Ie,!1).join("")})):Object.keys(t).forEach((function(e){o+=Oe(e,[t[e]],n,Ie,!1).join("")})),De(r,[o+="}"]),r}return t;var i}},Re={},Ae=[],Fe=!1,De=function(e,t){var n;if(!Re[e]){if(!Fe){if("undefined"==typeof document)throw new Error("Cannot automatically buffer without a document");Fe=!0,w()(He)}(n=Ae).push.apply(n,S(t)),Re[e]=!0}},Le=function(e,t,n,r){var o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[];if(!Re[e]){var i=Oe(t,n,o,Ie,r);De(e,i)}},Be=function(){Ae=[],Re={},Fe=!1,je=null},We=function(e){delete Re[e]},Ue=function(){Fe=!1;var e=Ae;return Ae=[],e},He=function(){var e=Ue();e.length>0&&function(e){if(null==je&&null==(je=document.querySelector("style[data-aphrodite]"))){var t=document.head||document.getElementsByTagName("head")[0];(je=document.createElement("style")).type="text/css",je.setAttribute("data-aphrodite",""),t.appendChild(je)}var n=je.styleSheet||je.sheet;if(n.insertRule){var r=n.cssRules.length;e.forEach((function(e){try{n.insertRule(e,r),r+=1}catch(e){}}))}else je.innerText=(je.innerText||"")+e.join("")}(e)},Ve=function e(t,n,r,o){for(var i=0;i<t.length;i+=1)if(t[i])if(Array.isArray(t[i]))o+=e(t[i],n,r,o);else{if(!("_definition"in(l=t[i])&&"_name"in l&&"_len"in l))throw new Error("Invalid Style Definition: Styles should be defined using the StyleSheet.create method.");n.push(t[i]._name),r.push(t[i]._definition),o+=t[i]._len}var l;return o},Qe=function(e,t,n){var r,o=[],i=[],l=Ve(t,o,i,0);return 0===o.length?"":(r=1===o.length?"_".concat(o[0]):"_".concat(M(o.join())).concat((l%36).toString(36)),Le(r,".".concat(r),i,e,n),r)},$e=function(e,t){return"".concat(t,"_").concat(M(e))},qe=M,Ke={create:function(e){for(var t={},n=Object.keys(e),r=0;r<n.length;r+=1){var o=n[r],i=e[o],l=JSON.stringify(i);t[o]={_len:l.length,_name:qe(l,o),_definition:i}}return t},rehydrate:function(){(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).forEach((function(e){Re[e]=!0}))}},Ge="undefined"!=typeof window?null:{renderStatic:function(e){return Be(),function(){if(Fe)throw new Error("Cannot buffer while already buffering");Fe=!0}(),{html:e(),css:{content:Ue().join(""),renderedClassNames:Object.keys(Re)}}}},Ye=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Pe;return{StyleSheet:E({},Ke,{extend:function(r){var o=r.map((function(e){return e.selectorHandler})).filter((function(e){return e}));return e(t,n.concat(o))}}),StyleSheetServer:Ge,StyleSheetTestUtils:null,minify:function(e){qe=e?M:$e},css:function(){for(var e=arguments.length,r=new Array(e),o=0;o<e;o++)r[o]=arguments[o];return Qe(t,r,n)},flushToStyleTag:He,injectAndGetClassName:Qe,defaultSelectorHandlers:Pe,reset:Be,resetInjectedStyle:We}}(!0),Xe=Ye.StyleSheet,Ze=(Ye.StyleSheetServer,Ye.StyleSheetTestUtils,Ye.css);Ye.minify,Ye.flushToStyleTag,Ye.injectAndGetClassName,Ye.defaultSelectorHandlers,Ye.reset,Ye.resetInjectedStyle;var Je=Xe.create({footer:{bottom:0,borderTop:"3px solid #e1484c",width:"100%"},paragraphe:{textAlign:"center",fontStyle:"italic"}});const et=function(){return e.createElement("div",{className:Ze(Je.footer)},e.createElement("p",{className:Ze(Je.paragraphe)},"Copyright ",(new Date).getFullYear()," - ","Holberton School main dashboard"))},tt=o.p+"ff501d827c9f4b6d3ac455c5ae5624b8.jpg";var nt=Xe.create({header:{display:"flex"},image:{width:"200px",height:"200px"},title:{color:"#e1484c",justifyContent:"center",margin:"auto auto auto 0"}});const rt=function(){return e.createElement("div",{className:Ze(nt.header)},e.createElement("img",{className:Ze(nt.image),src:tt,alt:"Holberton logo"}),e.createElement("h1",{className:Ze(nt.title)},"School dashboard"))};var ot=Xe.create({text:{margin:"3rem 0 0 2rem"},form:{display:"flex",flexDirection:"column",margin:"1rem 0 0 2rem"},labelAndInput:{margin:"0 1rem 0 0"},button:{width:"40px",padding:"10px 20px",color:"black",backgroundColor:"white",border:"3px solid  gold",borderRadius:"2px"}});const it=function(){return e.createElement("div",{className:"App"},e.createElement("div",{className:"App-body"},e.createElement("p",{className:Ze(ot.text)},"Login to access the full dashboard"),e.createElement("div",{className:Ze(ot.form)},e.createElement("label",{className:Ze(ot.labelAndInput),htmlFor:"email"},"Email:"),e.createElement("input",{className:Ze(ot.labelAndInput),type:"email",id:"email",name:"email"}),e.createElement("label",{className:Ze(ot.labelAndInput),htmlFor:"password"},"Password:"),e.createElement("input",{className:Ze(ot.labelAndInput),type:"password",id:"password",name:"password"}),e.createElement("button",{className:Ze(ot.button),type:"submit"},"OK"))))};var lt=o(268),at=o.n(lt);function ut(){return ut=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},ut.apply(this,arguments)}var ct=function(t){var n=t.type,r=t.html,o=t.value,i=t.markAsRead,l=t.id,a=Xe.create({default:{color:"blue"},urgent:{color:"red"},smallList:{"@media (max-width: 900px)":{padding:"10px 8px",borderBottom:"solid black 1px",listStyle:"none"}}}),u=(0,e.useMemo)((function(){var e={"data-notification-type":n};return r&&(e.dangerouslySetInnerHTML=r),e}),[n,r]),c=a[n]||a.default;return e.createElement("li",ut({},u,{className:Ze(c,a.smallList),onClick:function(){i(l)}}),o)};Xe.create({default:{color:"blue"},urgent:{color:"red"},smallList:{"@media (max-width: 900px)":{padding:"10px 8px",borderBottom:"solid black 1px",listStyle:"none"}}}),ct.propTypes={id:at().number,html:at().shape({__html:at().string}),type:at().string,value:at().string,markAsRead:at().func},ct.defaultProps={type:"default",markAsRead:function(){}};const st=ct,ft=at().shape({id:at().number.isRequired,type:at().string.isRequired,value:at().string,html:at().shape({__html:at().string})});function dt(e){return dt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},dt(e)}function pt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,mt(r.key),r)}}function mt(e){var t=function(e,t){if("object"!=dt(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=dt(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==dt(t)?t:String(t)}function ht(e,t,n){return t=gt(t),function(e,t){if(t&&("object"===dt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,yt()?Reflect.construct(t,n||[],gt(e).constructor):t.apply(e,n))}function yt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(yt=function(){return!!e})()}function gt(e){return gt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},gt(e)}function vt(e,t){return vt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},vt(e,t)}function bt(e){return bt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},bt(e)}function wt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,kt(r.key),r)}}function kt(e){var t=function(e,t){if("object"!=bt(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=bt(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==bt(t)?t:String(t)}function xt(e,t,n){return t=St(t),function(e,t){if(t&&("object"===bt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Tt(e)}(e,Et()?Reflect.construct(t,n||[],St(e).constructor):t.apply(e,n))}function Et(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Et=function(){return!!e})()}function St(e){return St=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},St(e)}function Tt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Ct(e,t){return Ct=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Ct(e,t)}var _t=function(t){function n(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),(t=xt(this,n,[e])).markAsRead=t.markAsRead.bind(Tt(t)),t}var r,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Ct(e,t)}(n,t),r=n,(o=[{key:"shouldComponentUpdate",value:function(e){return e.listNotifications.length>this.props.listNotifications.length}},{key:"markAsRead",value:function(e){console.log("Notification ".concat(e," has been marked as read"))}},{key:"render",value:function(){var t=this,n=this.props,r=n.displayDrawer,o=n.listNotifications;return e.createElement("div",{className:"container"},e.createElement("div",{className:Ze(Pt.menuItem)},"Your notifications"),r&&e.createElement("div",{className:Ze(Pt.notifications,Pt.small)},e.createElement("button",{style:{position:"absolute",right:"16px",top:".8rem",fontSize:"16px",border:"none",background:"none",cursor:"pointer"},"aria-label":"Close",onClick:function(){console.log("Close button has been clicked\n")}},"x"),e.createElement("p",null,"Here is the list of notifications"),e.createElement("ul",{className:Ze(Pt.ul)},o.map((function(n){return e.createElement(st,{key:n.id,id:n.id,type:n.type,value:n.value,html:n.html,markAsRead:t.markAsRead})})))))}}])&&wt(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),n}(e.Component),Pt=Xe.create({notifications:{border:"2px dotted #e1484c",padding:"1rem .5rem 0 .5rem",float:"right"},menuItem:{textAlign:"right"},small:{"@media (max-width: 900px)":{position:"fixed",bottom:0,top:0,left:0,right:0,fontSize:"20px",backgroundColor:"white",overflow:"hidden"},ul:{"@media (max-width: 900px)":{listStylePosition:"inside"}}}});_t.propTypes={displayDrawer:at().bool,listNotifications:at().arrayOf(ft)},_t.defaultProps={displayDrawer:!1,listNotifications:[]};const Ot=function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Component",r=function(r){function o(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o),ht(this,o,arguments)}var i,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&vt(e,t)}(o,r),i=o,(l=[{key:"componentDidMount",value:function(){console.log("Component ".concat(n," is mounted"))}},{key:"componentWillUnmount",value:function(){console.log("Component ".concat(n," is going to unmount"))}},{key:"render",value:function(){return e.createElement(t,this.props)}}])&&pt(i.prototype,l),Object.defineProperty(i,"prototype",{writable:!1}),o}(e.Component);return r.displayName="WithLogging(".concat(n,")"),r.getComponentName=function(){return n},r}(_t,"Notifications");var Nt=function(t){var n=t.isHeader,r=t.textFirstCell,o=t.textSecondCell,i=Xe.create({row:{backgroundColor:n?"#deb5b545":"#f5f5f5ab"},headerTh:{borderBottom:"2px solid #deb5b5"},th:{borderBottom:"1px solid #deb5b5"}});return e.createElement("tr",{className:Ze(i.row)},n?null===o?e.createElement("th",{className:Ze(i.headerTh),colSpan:"2"},r):e.createElement(e.Fragment,null,e.createElement("th",{className:Ze(i.headerTh)},r),e.createElement("th",{className:Ze(i.headerTh)},o)):e.createElement(e.Fragment,null,e.createElement("td",null,r),e.createElement("td",null,o)))};Nt.propTypes={isHeader:at().bool,textFirstCell:at().string.isRequired,textSecondCell:at().oneOfType([at().string,at().number])},Nt.defaultProps={isHeader:!1,textSecondCell:null};const Mt=Nt,zt=at().shape({id:at().number.isRequired,name:at().string.isRequired,credit:at().oneOfType([at().string,at().number]).isRequired});var jt=function(t){var n=t.listCourses;return e.createElement("table",{id:Ze(It.CouseList)},e.createElement("thead",null,e.createElement(Mt,{textFirstCell:"Available courses",isHeader:!0}),e.createElement(Mt,{textFirstCell:"Course name",textSecondCell:"Credit",isHeader:!0})),e.createElement("tbody",null,0==n.length&&e.createElement(Mt,{textFirstCell:"No course available yet"}),n.map((function(t){return e.createElement(Mt,{key:t.id,textFirstCell:t.name,textSecondCell:t.credit,isHeader:!1})}))))},It=Xe.create({CouseList:{width:"100%",border:"1px solid lightgrey",borderCollapse:"collapse",marginTop:"2rem;}"}});jt.propTypes={listCourses:at().arrayOf(zt)},jt.defaultProps={listCourses:[]};const Rt=jt;var At=function(t){var n=t.title,r=t.children;return e.createElement("div",{className:"bodySection"},e.createElement("h2",null,n),r)};At.propTypes={title:at().string.isRequired,children:at().node},At.defaultProps={children:null};const Ft=At;var Dt=o(440),Lt={};Lt.styleTagTransform=m(),Lt.setAttributes=s(),Lt.insert=u().bind(null,"head"),Lt.domAPI=l(),Lt.insertStyleElement=d(),r()(Dt.c,Lt),Dt.c&&Dt.c.locals&&Dt.c.locals;var Bt=function(t){var n=t.title,r=t.children;return e.createElement("div",{className:Ze(Wt.cmarginBottom)},e.createElement(Ft,{title:n},r))},Wt=Xe.create({marginBottom:"40px"});Bt.propsTypes={title:at().string.isRequired,children:at().node.isRequired};const Ut=Bt;function Ht(e){return Ht="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ht(e)}function Vt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Xt(r.key),r)}}function Qt(e,t,n){return t=qt(t),function(e,t){if(t&&("object"===Ht(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Kt(e)}(e,$t()?Reflect.construct(t,n||[],qt(e).constructor):t.apply(e,n))}function $t(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return($t=function(){return!!e})()}function qt(e){return qt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},qt(e)}function Kt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Gt(e,t){return Gt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Gt(e,t)}function Yt(e,t,n){return(t=Xt(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Xt(e){var t=function(e,t){if("object"!=Ht(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=Ht(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Ht(t)?t:String(t)}var Zt=function(t){function n(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),Yt(Kt(t=Qt(this,n,[e])),"handleKeyDown",(function(e){var n=t.state.logOut;"h"===e.key&&(e.ctrlKey||e.metaKey)&&(alert("Logging you out"),n())})),Yt(Kt(t),"handleLogin",(function(){t.setState({isLoggedIn:!0})})),t.state={isLoggedIn:t.props.isLoggedIn,logOut:t.props.logOut,listCourses:[{id:1,name:"ES6",credit:60},{id:2,name:"Webpack",credit:20},{id:3,name:"React",credit:40}],listNotifications:[{id:1,type:"default",value:"New course available"},{id:2,type:"urgent",value:"New resume available"},{id:3,type:"urgent",html:{__html:"<strong>Urgent requirement</strong> - complete by EOD"}}]},t}var r,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Gt(e,t)}(n,t),r=n,(o=[{key:"componentDidMount",value:function(){window.addEventListener("keydown",this.handleKeyDown)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("keydown",this.handleKeyDown)}},{key:"render",value:function(){var t=this.state,n=t.isLoggedIn,r=t.listCourses,o=t.listNotifications;return e.createElement(e.Fragment,null,e.createElement(Ot,{listNotifications:o}),e.createElement("div",{className:"App"},e.createElement(rt,null),e.createElement("div",{className:Ze(Jt.body)},n?e.createElement(Ut,{title:"Course list"},e.createElement(Rt,{listCourses:r})):e.createElement(Ut,{title:"Log in to continue"},e.createElement(it,{onLogin:this.handleLogin})),e.createElement(Ft,{title:"News from the School"},e.createElement("p",null,"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Consequuntur, adipisci? Lorem ipsum dolor, sit amet consectetur adipisicing elit. Consequuntur, adipisci? Lorem ipsum dolor, sit amet consectetur"))),e.createElement("div",{className:Ze(Jt.footer)},e.createElement(et,null))))}}])&&Vt(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),n}(e.Component),Jt=Xe.create({body:{display:"flex",flexDirection:"column",alignItems:"flex-start",borderTop:"3px solid #e1484c"}});Zt.defaultProps={isLoggedIn:!1,logOut:function(){}},Zt.propTypes={isLoggedIn:lt.PropTypes.bool,logOut:lt.PropTypes.func};const en=Zt;var tn;t.render(e.createElement(e.StrictMode,null,e.createElement(en,null)),document.getElementById("root")),tn&&tn instanceof Function&&o.e(728).then(o.bind(o,728)).then((function(e){var t=e.getCLS,n=e.getFID,r=e.getFCP,o=e.getLCP,i=e.getTTFB;t(tn),n(tn),r(tn),o(tn),i(tn)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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TTVVLEVBQU40VSxPQUFRQyxFQUFNN1UsRUFBTjZVLE9BQVFDLEVBQU05VSxFQUFOOFUsT0FBUUMsRUFBTy9VLEVBQVArVSxRQUMzREosRUFBT0gsSUFDUEksRUFBT0osSUFDUEssRUFBT0wsSUFDUE0sRUFBT04sSUFDUE8sRUFBUVAsR0FDViIsInNvdXJjZXMiOlsid2VicGFjazovL3Rhc2tfMi93ZWJwYWNrL3J1bnRpbWUvbG9hZCBzY3JpcHQiLCJ3ZWJwYWNrOi8vdGFza18yLy4uLy4uL25vZGVfbW9kdWxlcy9hc2FwL2Jyb3dzZXItYXNhcC5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi4vLi4vbm9kZV9tb2R1bGVzL2FzYXAvYnJvd3Nlci1yYXcuanMiLCJ3ZWJwYWNrOi8vdGFza18yLy4uLy4uL25vZGVfbW9kdWxlcy9zdHJpbmctaGFzaC9pbmRleC5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9zcmMvQm9keVNlY3Rpb24vQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tLmNzcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9zcmMvaW5kZXguY3NzIiwid2VicGFjazovL3Rhc2tfMi8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vdGFza18yLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vdGFza18yLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vdGFza18yLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwid2VicGFjazovL3Rhc2tfMi8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovL3Rhc2tfMi8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vdGFza18yLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL3Rhc2tfMi8uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vdGFza18yLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdGFza18yLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdGFza18yLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3Rhc2tfMi8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3Rhc2tfMi8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3Rhc2tfMi93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90YXNrXzIvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdGFza18yL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90YXNrXzIvd2VicGFjay9ydW50aW1lL2Vuc3VyZSBjaHVuayIsIndlYnBhY2s6Ly90YXNrXzIvd2VicGFjay9ydW50aW1lL2dldCBqYXZhc2NyaXB0IGNodW5rIGZpbGVuYW1lIiwid2VicGFjazovL3Rhc2tfMi93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL3Rhc2tfMi93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3Rhc2tfMi93ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovL3Rhc2tfMi93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly90YXNrXzIvd2VicGFjay9ydW50aW1lL2pzb25wIGNodW5rIGxvYWRpbmciLCJ3ZWJwYWNrOi8vdGFza18yL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly90YXNrXzIvLi9zcmMvaW5kZXguY3NzP2NmZTQiLCJ3ZWJwYWNrOi8vdGFza18yLy4vc3JjL3V0aWxzL3V0aWxzLmpzIiwid2VicGFjazovL3Rhc2tfMi8uLi8uLi9ub2RlX21vZHVsZXMvYXBocm9kaXRlL2VzL2NodW5rLWZlYmNlNDZiLmpzIiwid2VicGFjazovL3Rhc2tfMi8uLi8uLi9ub2RlX21vZHVsZXMvYXBocm9kaXRlL2VzL2luZGV4LmpzIiwid2VicGFjazovL3Rhc2tfMi8uL3NyYy9Gb290ZXIvRm9vdGVyLmpzIiwid2VicGFjazovL3Rhc2tfMi8uL3NyYy9hc3NldHMvaG9sYmVydG9uLWxvZ28uanBnIiwid2VicGFjazovL3Rhc2tfMi8uL3NyYy9IZWFkZXIvSGVhZGVyLmpzIiwid2VicGFjazovL3Rhc2tfMi8uL3NyYy9Mb2dpbi9Mb2dpbi5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9zcmMvTm90aWZpY2F0aW9ucy9Ob3RpZmljYXRpb25JdGVtLmpzIiwid2VicGFjazovL3Rhc2tfMi8uL3NyYy9Ob3RpZmljYXRpb25zL05vdGlmaWNhdGlvbkl0ZW1TaGFwZS5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9zcmMvTm90aWZpY2F0aW9ucy9Ob3RpZmljYXRpb25zLmpzIiwid2VicGFjazovL3Rhc2tfMi8uL3NyYy9IT0MvV2l0aExvZ2dpbmcuanMiLCJ3ZWJwYWNrOi8vdGFza18yLy4vc3JjL0NvdXJzZUxpc3QvQ291cnNlTGlzdFJvdy5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9zcmMvQ291cnNlTGlzdC9Db3Vyc2VTaGFwZS5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9zcmMvQ291cnNlTGlzdC9Db3Vyc2VMaXN0LmpzIiwid2VicGFjazovL3Rhc2tfMi8uL3NyYy9Cb2R5U2VjdGlvbi9Cb2R5U2VjdGlvbi5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9zcmMvQm9keVNlY3Rpb24vQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tLmNzcz8xYTZhIiwid2VicGFjazovL3Rhc2tfMi8uL3NyYy9Cb2R5U2VjdGlvbi9Cb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20uanMiLCJ3ZWJwYWNrOi8vdGFza18yLy4vc3JjL0FwcC9BcHAuanMiLCJ3ZWJwYWNrOi8vdGFza18yLy4vc3JjL3JlcG9ydFdlYlZpdGFscy5qcyIsIndlYnBhY2s6Ly90YXNrXzIvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGluUHJvZ3Jlc3MgPSB7fTtcbnZhciBkYXRhV2VicGFja1ByZWZpeCA9IFwidGFza18yOlwiO1xuLy8gbG9hZFNjcmlwdCBmdW5jdGlvbiB0byBsb2FkIGEgc2NyaXB0IHZpYSBzY3JpcHQgdGFnXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmwgPSAodXJsLCBkb25lLCBrZXksIGNodW5rSWQpID0+IHtcblx0aWYoaW5Qcm9ncmVzc1t1cmxdKSB7IGluUHJvZ3Jlc3NbdXJsXS5wdXNoKGRvbmUpOyByZXR1cm47IH1cblx0dmFyIHNjcmlwdCwgbmVlZEF0dGFjaDtcblx0aWYoa2V5ICE9PSB1bmRlZmluZWQpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCBzY3JpcHRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgcyA9IHNjcmlwdHNbaV07XG5cdFx0XHRpZihzLmdldEF0dHJpYnV0ZShcInNyY1wiKSA9PSB1cmwgfHwgcy5nZXRBdHRyaWJ1dGUoXCJkYXRhLXdlYnBhY2tcIikgPT0gZGF0YVdlYnBhY2tQcmVmaXggKyBrZXkpIHsgc2NyaXB0ID0gczsgYnJlYWs7IH1cblx0XHR9XG5cdH1cblx0aWYoIXNjcmlwdCkge1xuXHRcdG5lZWRBdHRhY2ggPSB0cnVlO1xuXHRcdHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuXG5cdFx0c2NyaXB0LmNoYXJzZXQgPSAndXRmLTgnO1xuXHRcdHNjcmlwdC50aW1lb3V0ID0gMTIwO1xuXHRcdGlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLm5jKSB7XG5cdFx0XHRzY3JpcHQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgX193ZWJwYWNrX3JlcXVpcmVfXy5uYyk7XG5cdFx0fVxuXHRcdHNjcmlwdC5zZXRBdHRyaWJ1dGUoXCJkYXRhLXdlYnBhY2tcIiwgZGF0YVdlYnBhY2tQcmVmaXggKyBrZXkpO1xuXG5cdFx0c2NyaXB0LnNyYyA9IHVybDtcblx0fVxuXHRpblByb2dyZXNzW3VybF0gPSBbZG9uZV07XG5cdHZhciBvblNjcmlwdENvbXBsZXRlID0gKHByZXYsIGV2ZW50KSA9PiB7XG5cdFx0Ly8gYXZvaWQgbWVtIGxlYWtzIGluIElFLlxuXHRcdHNjcmlwdC5vbmVycm9yID0gc2NyaXB0Lm9ubG9hZCA9IG51bGw7XG5cdFx0Y2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuXHRcdHZhciBkb25lRm5zID0gaW5Qcm9ncmVzc1t1cmxdO1xuXHRcdGRlbGV0ZSBpblByb2dyZXNzW3VybF07XG5cdFx0c2NyaXB0LnBhcmVudE5vZGUgJiYgc2NyaXB0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc2NyaXB0KTtcblx0XHRkb25lRm5zICYmIGRvbmVGbnMuZm9yRWFjaCgoZm4pID0+IChmbihldmVudCkpKTtcblx0XHRpZihwcmV2KSByZXR1cm4gcHJldihldmVudCk7XG5cdH1cblx0dmFyIHRpbWVvdXQgPSBzZXRUaW1lb3V0KG9uU2NyaXB0Q29tcGxldGUuYmluZChudWxsLCB1bmRlZmluZWQsIHsgdHlwZTogJ3RpbWVvdXQnLCB0YXJnZXQ6IHNjcmlwdCB9KSwgMTIwMDAwKTtcblx0c2NyaXB0Lm9uZXJyb3IgPSBvblNjcmlwdENvbXBsZXRlLmJpbmQobnVsbCwgc2NyaXB0Lm9uZXJyb3IpO1xuXHRzY3JpcHQub25sb2FkID0gb25TY3JpcHRDb21wbGV0ZS5iaW5kKG51bGwsIHNjcmlwdC5vbmxvYWQpO1xuXHRuZWVkQXR0YWNoICYmIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIHJhd0FzYXAgcHJvdmlkZXMgZXZlcnl0aGluZyB3ZSBuZWVkIGV4Y2VwdCBleGNlcHRpb24gbWFuYWdlbWVudC5cbnZhciByYXdBc2FwID0gcmVxdWlyZShcIi4vcmF3XCIpO1xuLy8gUmF3VGFza3MgYXJlIHJlY3ljbGVkIHRvIHJlZHVjZSBHQyBjaHVybi5cbnZhciBmcmVlVGFza3MgPSBbXTtcbi8vIFdlIHF1ZXVlIGVycm9ycyB0byBlbnN1cmUgdGhleSBhcmUgdGhyb3duIGluIHJpZ2h0IG9yZGVyIChGSUZPKS5cbi8vIEFycmF5LWFzLXF1ZXVlIGlzIGdvb2QgZW5vdWdoIGhlcmUsIHNpbmNlIHdlIGFyZSBqdXN0IGRlYWxpbmcgd2l0aCBleGNlcHRpb25zLlxudmFyIHBlbmRpbmdFcnJvcnMgPSBbXTtcbnZhciByZXF1ZXN0RXJyb3JUaHJvdyA9IHJhd0FzYXAubWFrZVJlcXVlc3RDYWxsRnJvbVRpbWVyKHRocm93Rmlyc3RFcnJvcik7XG5cbmZ1bmN0aW9uIHRocm93Rmlyc3RFcnJvcigpIHtcbiAgICBpZiAocGVuZGluZ0Vycm9ycy5sZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgcGVuZGluZ0Vycm9ycy5zaGlmdCgpO1xuICAgIH1cbn1cblxuLyoqXG4gKiBDYWxscyBhIHRhc2sgYXMgc29vbiBhcyBwb3NzaWJsZSBhZnRlciByZXR1cm5pbmcsIGluIGl0cyBvd24gZXZlbnQsIHdpdGggcHJpb3JpdHlcbiAqIG92ZXIgb3RoZXIgZXZlbnRzIGxpa2UgYW5pbWF0aW9uLCByZWZsb3csIGFuZCByZXBhaW50LiBBbiBlcnJvciB0aHJvd24gZnJvbSBhblxuICogZXZlbnQgd2lsbCBub3QgaW50ZXJydXB0LCBub3IgZXZlbiBzdWJzdGFudGlhbGx5IHNsb3cgZG93biB0aGUgcHJvY2Vzc2luZyBvZlxuICogb3RoZXIgZXZlbnRzLCBidXQgd2lsbCBiZSByYXRoZXIgcG9zdHBvbmVkIHRvIGEgbG93ZXIgcHJpb3JpdHkgZXZlbnQuXG4gKiBAcGFyYW0ge3tjYWxsfX0gdGFzayBBIGNhbGxhYmxlIG9iamVjdCwgdHlwaWNhbGx5IGEgZnVuY3Rpb24gdGhhdCB0YWtlcyBub1xuICogYXJndW1lbnRzLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGFzYXA7XG5mdW5jdGlvbiBhc2FwKHRhc2spIHtcbiAgICB2YXIgcmF3VGFzaztcbiAgICBpZiAoZnJlZVRhc2tzLmxlbmd0aCkge1xuICAgICAgICByYXdUYXNrID0gZnJlZVRhc2tzLnBvcCgpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJhd1Rhc2sgPSBuZXcgUmF3VGFzaygpO1xuICAgIH1cbiAgICByYXdUYXNrLnRhc2sgPSB0YXNrO1xuICAgIHJhd0FzYXAocmF3VGFzayk7XG59XG5cbi8vIFdlIHdyYXAgdGFza3Mgd2l0aCByZWN5Y2xhYmxlIHRhc2sgb2JqZWN0cy4gIEEgdGFzayBvYmplY3QgaW1wbGVtZW50c1xuLy8gYGNhbGxgLCBqdXN0IGxpa2UgYSBmdW5jdGlvbi5cbmZ1bmN0aW9uIFJhd1Rhc2soKSB7XG4gICAgdGhpcy50YXNrID0gbnVsbDtcbn1cblxuLy8gVGhlIHNvbGUgcHVycG9zZSBvZiB3cmFwcGluZyB0aGUgdGFzayBpcyB0byBjYXRjaCB0aGUgZXhjZXB0aW9uIGFuZCByZWN5Y2xlXG4vLyB0aGUgdGFzayBvYmplY3QgYWZ0ZXIgaXRzIHNpbmdsZSB1c2UuXG5SYXdUYXNrLnByb3RvdHlwZS5jYWxsID0gZnVuY3Rpb24gKCkge1xuICAgIHRyeSB7XG4gICAgICAgIHRoaXMudGFzay5jYWxsKCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgaWYgKGFzYXAub25lcnJvcikge1xuICAgICAgICAgICAgLy8gVGhpcyBob29rIGV4aXN0cyBwdXJlbHkgZm9yIHRlc3RpbmcgcHVycG9zZXMuXG4gICAgICAgICAgICAvLyBJdHMgbmFtZSB3aWxsIGJlIHBlcmlvZGljYWxseSByYW5kb21pemVkIHRvIGJyZWFrIGFueSBjb2RlIHRoYXRcbiAgICAgICAgICAgIC8vIGRlcGVuZHMgb24gaXRzIGV4aXN0ZW5jZS5cbiAgICAgICAgICAgIGFzYXAub25lcnJvcihlcnJvcik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBJbiBhIHdlYiBicm93c2VyLCBleGNlcHRpb25zIGFyZSBub3QgZmF0YWwuIEhvd2V2ZXIsIHRvIGF2b2lkXG4gICAgICAgICAgICAvLyBzbG93aW5nIGRvd24gdGhlIHF1ZXVlIG9mIHBlbmRpbmcgdGFza3MsIHdlIHJldGhyb3cgdGhlIGVycm9yIGluIGFcbiAgICAgICAgICAgIC8vIGxvd2VyIHByaW9yaXR5IHR1cm4uXG4gICAgICAgICAgICBwZW5kaW5nRXJyb3JzLnB1c2goZXJyb3IpO1xuICAgICAgICAgICAgcmVxdWVzdEVycm9yVGhyb3coKTtcbiAgICAgICAgfVxuICAgIH0gZmluYWxseSB7XG4gICAgICAgIHRoaXMudGFzayA9IG51bGw7XG4gICAgICAgIGZyZWVUYXNrc1tmcmVlVGFza3MubGVuZ3RoXSA9IHRoaXM7XG4gICAgfVxufTtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vLyBVc2UgdGhlIGZhc3Rlc3QgbWVhbnMgcG9zc2libGUgdG8gZXhlY3V0ZSBhIHRhc2sgaW4gaXRzIG93biB0dXJuLCB3aXRoXG4vLyBwcmlvcml0eSBvdmVyIG90aGVyIGV2ZW50cyBpbmNsdWRpbmcgSU8sIGFuaW1hdGlvbiwgcmVmbG93LCBhbmQgcmVkcmF3XG4vLyBldmVudHMgaW4gYnJvd3NlcnMuXG4vL1xuLy8gQW4gZXhjZXB0aW9uIHRocm93biBieSBhIHRhc2sgd2lsbCBwZXJtYW5lbnRseSBpbnRlcnJ1cHQgdGhlIHByb2Nlc3Npbmcgb2Zcbi8vIHN1YnNlcXVlbnQgdGFza3MuIFRoZSBoaWdoZXIgbGV2ZWwgYGFzYXBgIGZ1bmN0aW9uIGVuc3VyZXMgdGhhdCBpZiBhblxuLy8gZXhjZXB0aW9uIGlzIHRocm93biBieSBhIHRhc2ssIHRoYXQgdGhlIHRhc2sgcXVldWUgd2lsbCBjb250aW51ZSBmbHVzaGluZyBhc1xuLy8gc29vbiBhcyBwb3NzaWJsZSwgYnV0IGlmIHlvdSB1c2UgYHJhd0FzYXBgIGRpcmVjdGx5LCB5b3UgYXJlIHJlc3BvbnNpYmxlIHRvXG4vLyBlaXRoZXIgZW5zdXJlIHRoYXQgbm8gZXhjZXB0aW9ucyBhcmUgdGhyb3duIGZyb20geW91ciB0YXNrLCBvciB0byBtYW51YWxseVxuLy8gY2FsbCBgcmF3QXNhcC5yZXF1ZXN0Rmx1c2hgIGlmIGFuIGV4Y2VwdGlvbiBpcyB0aHJvd24uXG5tb2R1bGUuZXhwb3J0cyA9IHJhd0FzYXA7XG5mdW5jdGlvbiByYXdBc2FwKHRhc2spIHtcbiAgICBpZiAoIXF1ZXVlLmxlbmd0aCkge1xuICAgICAgICByZXF1ZXN0Rmx1c2goKTtcbiAgICAgICAgZmx1c2hpbmcgPSB0cnVlO1xuICAgIH1cbiAgICAvLyBFcXVpdmFsZW50IHRvIHB1c2gsIGJ1dCBhdm9pZHMgYSBmdW5jdGlvbiBjYWxsLlxuICAgIHF1ZXVlW3F1ZXVlLmxlbmd0aF0gPSB0YXNrO1xufVxuXG52YXIgcXVldWUgPSBbXTtcbi8vIE9uY2UgYSBmbHVzaCBoYXMgYmVlbiByZXF1ZXN0ZWQsIG5vIGZ1cnRoZXIgY2FsbHMgdG8gYHJlcXVlc3RGbHVzaGAgYXJlXG4vLyBuZWNlc3NhcnkgdW50aWwgdGhlIG5leHQgYGZsdXNoYCBjb21wbGV0ZXMuXG52YXIgZmx1c2hpbmcgPSBmYWxzZTtcbi8vIGByZXF1ZXN0Rmx1c2hgIGlzIGFuIGltcGxlbWVudGF0aW9uLXNwZWNpZmljIG1ldGhvZCB0aGF0IGF0dGVtcHRzIHRvIGtpY2tcbi8vIG9mZiBhIGBmbHVzaGAgZXZlbnQgYXMgcXVpY2tseSBhcyBwb3NzaWJsZS4gYGZsdXNoYCB3aWxsIGF0dGVtcHQgdG8gZXhoYXVzdFxuLy8gdGhlIGV2ZW50IHF1ZXVlIGJlZm9yZSB5aWVsZGluZyB0byB0aGUgYnJvd3NlcidzIG93biBldmVudCBsb29wLlxudmFyIHJlcXVlc3RGbHVzaDtcbi8vIFRoZSBwb3NpdGlvbiBvZiB0aGUgbmV4dCB0YXNrIHRvIGV4ZWN1dGUgaW4gdGhlIHRhc2sgcXVldWUuIFRoaXMgaXNcbi8vIHByZXNlcnZlZCBiZXR3ZWVuIGNhbGxzIHRvIGBmbHVzaGAgc28gdGhhdCBpdCBjYW4gYmUgcmVzdW1lZCBpZlxuLy8gYSB0YXNrIHRocm93cyBhbiBleGNlcHRpb24uXG52YXIgaW5kZXggPSAwO1xuLy8gSWYgYSB0YXNrIHNjaGVkdWxlcyBhZGRpdGlvbmFsIHRhc2tzIHJlY3Vyc2l2ZWx5LCB0aGUgdGFzayBxdWV1ZSBjYW4gZ3Jvd1xuLy8gdW5ib3VuZGVkLiBUbyBwcmV2ZW50IG1lbW9yeSBleGhhdXN0aW9uLCB0aGUgdGFzayBxdWV1ZSB3aWxsIHBlcmlvZGljYWxseVxuLy8gdHJ1bmNhdGUgYWxyZWFkeS1jb21wbGV0ZWQgdGFza3MuXG52YXIgY2FwYWNpdHkgPSAxMDI0O1xuXG4vLyBUaGUgZmx1c2ggZnVuY3Rpb24gcHJvY2Vzc2VzIGFsbCB0YXNrcyB0aGF0IGhhdmUgYmVlbiBzY2hlZHVsZWQgd2l0aFxuLy8gYHJhd0FzYXBgIHVubGVzcyBhbmQgdW50aWwgb25lIG9mIHRob3NlIHRhc2tzIHRocm93cyBhbiBleGNlcHRpb24uXG4vLyBJZiBhIHRhc2sgdGhyb3dzIGFuIGV4Y2VwdGlvbiwgYGZsdXNoYCBlbnN1cmVzIHRoYXQgaXRzIHN0YXRlIHdpbGwgcmVtYWluXG4vLyBjb25zaXN0ZW50IGFuZCB3aWxsIHJlc3VtZSB3aGVyZSBpdCBsZWZ0IG9mZiB3aGVuIGNhbGxlZCBhZ2Fpbi5cbi8vIEhvd2V2ZXIsIGBmbHVzaGAgZG9lcyBub3QgbWFrZSBhbnkgYXJyYW5nZW1lbnRzIHRvIGJlIGNhbGxlZCBhZ2FpbiBpZiBhblxuLy8gZXhjZXB0aW9uIGlzIHRocm93bi5cbmZ1bmN0aW9uIGZsdXNoKCkge1xuICAgIHdoaWxlIChpbmRleCA8IHF1ZXVlLmxlbmd0aCkge1xuICAgICAgICB2YXIgY3VycmVudEluZGV4ID0gaW5kZXg7XG4gICAgICAgIC8vIEFkdmFuY2UgdGhlIGluZGV4IGJlZm9yZSBjYWxsaW5nIHRoZSB0YXNrLiBUaGlzIGVuc3VyZXMgdGhhdCB3ZSB3aWxsXG4gICAgICAgIC8vIGJlZ2luIGZsdXNoaW5nIG9uIHRoZSBuZXh0IHRhc2sgdGhlIHRhc2sgdGhyb3dzIGFuIGVycm9yLlxuICAgICAgICBpbmRleCA9IGluZGV4ICsgMTtcbiAgICAgICAgcXVldWVbY3VycmVudEluZGV4XS5jYWxsKCk7XG4gICAgICAgIC8vIFByZXZlbnQgbGVha2luZyBtZW1vcnkgZm9yIGxvbmcgY2hhaW5zIG9mIHJlY3Vyc2l2ZSBjYWxscyB0byBgYXNhcGAuXG4gICAgICAgIC8vIElmIHdlIGNhbGwgYGFzYXBgIHdpdGhpbiB0YXNrcyBzY2hlZHVsZWQgYnkgYGFzYXBgLCB0aGUgcXVldWUgd2lsbFxuICAgICAgICAvLyBncm93LCBidXQgdG8gYXZvaWQgYW4gTyhuKSB3YWxrIGZvciBldmVyeSB0YXNrIHdlIGV4ZWN1dGUsIHdlIGRvbid0XG4gICAgICAgIC8vIHNoaWZ0IHRhc2tzIG9mZiB0aGUgcXVldWUgYWZ0ZXIgdGhleSBoYXZlIGJlZW4gZXhlY3V0ZWQuXG4gICAgICAgIC8vIEluc3RlYWQsIHdlIHBlcmlvZGljYWxseSBzaGlmdCAxMDI0IHRhc2tzIG9mZiB0aGUgcXVldWUuXG4gICAgICAgIGlmIChpbmRleCA+IGNhcGFjaXR5KSB7XG4gICAgICAgICAgICAvLyBNYW51YWxseSBzaGlmdCBhbGwgdmFsdWVzIHN0YXJ0aW5nIGF0IHRoZSBpbmRleCBiYWNrIHRvIHRoZVxuICAgICAgICAgICAgLy8gYmVnaW5uaW5nIG9mIHRoZSBxdWV1ZS5cbiAgICAgICAgICAgIGZvciAodmFyIHNjYW4gPSAwLCBuZXdMZW5ndGggPSBxdWV1ZS5sZW5ndGggLSBpbmRleDsgc2NhbiA8IG5ld0xlbmd0aDsgc2NhbisrKSB7XG4gICAgICAgICAgICAgICAgcXVldWVbc2Nhbl0gPSBxdWV1ZVtzY2FuICsgaW5kZXhdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcXVldWUubGVuZ3RoIC09IGluZGV4O1xuICAgICAgICAgICAgaW5kZXggPSAwO1xuICAgICAgICB9XG4gICAgfVxuICAgIHF1ZXVlLmxlbmd0aCA9IDA7XG4gICAgaW5kZXggPSAwO1xuICAgIGZsdXNoaW5nID0gZmFsc2U7XG59XG5cbi8vIGByZXF1ZXN0Rmx1c2hgIGlzIGltcGxlbWVudGVkIHVzaW5nIGEgc3RyYXRlZ3kgYmFzZWQgb24gZGF0YSBjb2xsZWN0ZWQgZnJvbVxuLy8gZXZlcnkgYXZhaWxhYmxlIFNhdWNlTGFicyBTZWxlbml1bSB3ZWIgZHJpdmVyIHdvcmtlciBhdCB0aW1lIG9mIHdyaXRpbmcuXG4vLyBodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9zcHJlYWRzaGVldHMvZC8xbUctNVVZR3VwNXF4R2RFTVdraFA2QldDejA1M05VYjJFMVFvVVRVMTZ1QS9lZGl0I2dpZD03ODM3MjQ1OTNcblxuLy8gU2FmYXJpIDYgYW5kIDYuMSBmb3IgZGVza3RvcCwgaVBhZCwgYW5kIGlQaG9uZSBhcmUgdGhlIG9ubHkgYnJvd3NlcnMgdGhhdFxuLy8gaGF2ZSBXZWJLaXRNdXRhdGlvbk9ic2VydmVyIGJ1dCBub3QgdW4tcHJlZml4ZWQgTXV0YXRpb25PYnNlcnZlci5cbi8vIE11c3QgdXNlIGBnbG9iYWxgIG9yIGBzZWxmYCBpbnN0ZWFkIG9mIGB3aW5kb3dgIHRvIHdvcmsgaW4gYm90aCBmcmFtZXMgYW5kIHdlYlxuLy8gd29ya2Vycy4gYGdsb2JhbGAgaXMgYSBwcm92aXNpb24gb2YgQnJvd3NlcmlmeSwgTXIsIE1ycywgb3IgTW9wLlxuXG4vKiBnbG9iYWxzIHNlbGYgKi9cbnZhciBzY29wZSA9IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiBzZWxmO1xudmFyIEJyb3dzZXJNdXRhdGlvbk9ic2VydmVyID0gc2NvcGUuTXV0YXRpb25PYnNlcnZlciB8fCBzY29wZS5XZWJLaXRNdXRhdGlvbk9ic2VydmVyO1xuXG4vLyBNdXRhdGlvbk9ic2VydmVycyBhcmUgZGVzaXJhYmxlIGJlY2F1c2UgdGhleSBoYXZlIGhpZ2ggcHJpb3JpdHkgYW5kIHdvcmtcbi8vIHJlbGlhYmx5IGV2ZXJ5d2hlcmUgdGhleSBhcmUgaW1wbGVtZW50ZWQuXG4vLyBUaGV5IGFyZSBpbXBsZW1lbnRlZCBpbiBhbGwgbW9kZXJuIGJyb3dzZXJzLlxuLy9cbi8vIC0gQW5kcm9pZCA0LTQuM1xuLy8gLSBDaHJvbWUgMjYtMzRcbi8vIC0gRmlyZWZveCAxNC0yOVxuLy8gLSBJbnRlcm5ldCBFeHBsb3JlciAxMVxuLy8gLSBpUGFkIFNhZmFyaSA2LTcuMVxuLy8gLSBpUGhvbmUgU2FmYXJpIDctNy4xXG4vLyAtIFNhZmFyaSA2LTdcbmlmICh0eXBlb2YgQnJvd3Nlck11dGF0aW9uT2JzZXJ2ZXIgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHJlcXVlc3RGbHVzaCA9IG1ha2VSZXF1ZXN0Q2FsbEZyb21NdXRhdGlvbk9ic2VydmVyKGZsdXNoKTtcblxuLy8gTWVzc2FnZUNoYW5uZWxzIGFyZSBkZXNpcmFibGUgYmVjYXVzZSB0aGV5IGdpdmUgZGlyZWN0IGFjY2VzcyB0byB0aGUgSFRNTFxuLy8gdGFzayBxdWV1ZSwgYXJlIGltcGxlbWVudGVkIGluIEludGVybmV0IEV4cGxvcmVyIDEwLCBTYWZhcmkgNS4wLTEsIGFuZCBPcGVyYVxuLy8gMTEtMTIsIGFuZCBpbiB3ZWIgd29ya2VycyBpbiBtYW55IGVuZ2luZXMuXG4vLyBBbHRob3VnaCBtZXNzYWdlIGNoYW5uZWxzIHlpZWxkIHRvIGFueSBxdWV1ZWQgcmVuZGVyaW5nIGFuZCBJTyB0YXNrcywgdGhleVxuLy8gd291bGQgYmUgYmV0dGVyIHRoYW4gaW1wb3NpbmcgdGhlIDRtcyBkZWxheSBvZiB0aW1lcnMuXG4vLyBIb3dldmVyLCB0aGV5IGRvIG5vdCB3b3JrIHJlbGlhYmx5IGluIEludGVybmV0IEV4cGxvcmVyIG9yIFNhZmFyaS5cblxuLy8gSW50ZXJuZXQgRXhwbG9yZXIgMTAgaXMgdGhlIG9ubHkgYnJvd3NlciB0aGF0IGhhcyBzZXRJbW1lZGlhdGUgYnV0IGRvZXNcbi8vIG5vdCBoYXZlIE11dGF0aW9uT2JzZXJ2ZXJzLlxuLy8gQWx0aG91Z2ggc2V0SW1tZWRpYXRlIHlpZWxkcyB0byB0aGUgYnJvd3NlcidzIHJlbmRlcmVyLCBpdCB3b3VsZCBiZVxuLy8gcHJlZmVycmFibGUgdG8gZmFsbGluZyBiYWNrIHRvIHNldFRpbWVvdXQgc2luY2UgaXQgZG9lcyBub3QgaGF2ZVxuLy8gdGhlIG1pbmltdW0gNG1zIHBlbmFsdHkuXG4vLyBVbmZvcnR1bmF0ZWx5IHRoZXJlIGFwcGVhcnMgdG8gYmUgYSBidWcgaW4gSW50ZXJuZXQgRXhwbG9yZXIgMTAgTW9iaWxlIChhbmRcbi8vIERlc2t0b3AgdG8gYSBsZXNzZXIgZXh0ZW50KSB0aGF0IHJlbmRlcnMgYm90aCBzZXRJbW1lZGlhdGUgYW5kXG4vLyBNZXNzYWdlQ2hhbm5lbCB1c2VsZXNzIGZvciB0aGUgcHVycG9zZXMgb2YgQVNBUC5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9rcmlza293YWwvcS9pc3N1ZXMvMzk2XG5cbi8vIFRpbWVycyBhcmUgaW1wbGVtZW50ZWQgdW5pdmVyc2FsbHkuXG4vLyBXZSBmYWxsIGJhY2sgdG8gdGltZXJzIGluIHdvcmtlcnMgaW4gbW9zdCBlbmdpbmVzLCBhbmQgaW4gZm9yZWdyb3VuZFxuLy8gY29udGV4dHMgaW4gdGhlIGZvbGxvd2luZyBicm93c2Vycy5cbi8vIEhvd2V2ZXIsIG5vdGUgdGhhdCBldmVuIHRoaXMgc2ltcGxlIGNhc2UgcmVxdWlyZXMgbnVhbmNlcyB0byBvcGVyYXRlIGluIGFcbi8vIGJyb2FkIHNwZWN0cnVtIG9mIGJyb3dzZXJzLlxuLy9cbi8vIC0gRmlyZWZveCAzLTEzXG4vLyAtIEludGVybmV0IEV4cGxvcmVyIDYtOVxuLy8gLSBpUGFkIFNhZmFyaSA0LjNcbi8vIC0gTHlueCAyLjguN1xufSBlbHNlIHtcbiAgICByZXF1ZXN0Rmx1c2ggPSBtYWtlUmVxdWVzdENhbGxGcm9tVGltZXIoZmx1c2gpO1xufVxuXG4vLyBgcmVxdWVzdEZsdXNoYCByZXF1ZXN0cyB0aGF0IHRoZSBoaWdoIHByaW9yaXR5IGV2ZW50IHF1ZXVlIGJlIGZsdXNoZWQgYXNcbi8vIHNvb24gYXMgcG9zc2libGUuXG4vLyBUaGlzIGlzIHVzZWZ1bCB0byBwcmV2ZW50IGFuIGVycm9yIHRocm93biBpbiBhIHRhc2sgZnJvbSBzdGFsbGluZyB0aGUgZXZlbnRcbi8vIHF1ZXVlIGlmIHRoZSBleGNlcHRpb24gaGFuZGxlZCBieSBOb2RlLmpz4oCZc1xuLy8gYHByb2Nlc3Mub24oXCJ1bmNhdWdodEV4Y2VwdGlvblwiKWAgb3IgYnkgYSBkb21haW4uXG5yYXdBc2FwLnJlcXVlc3RGbHVzaCA9IHJlcXVlc3RGbHVzaDtcblxuLy8gVG8gcmVxdWVzdCBhIGhpZ2ggcHJpb3JpdHkgZXZlbnQsIHdlIGluZHVjZSBhIG11dGF0aW9uIG9ic2VydmVyIGJ5IHRvZ2dsaW5nXG4vLyB0aGUgdGV4dCBvZiBhIHRleHQgbm9kZSBiZXR3ZWVuIFwiMVwiIGFuZCBcIi0xXCIuXG5mdW5jdGlvbiBtYWtlUmVxdWVzdENhbGxGcm9tTXV0YXRpb25PYnNlcnZlcihjYWxsYmFjaykge1xuICAgIHZhciB0b2dnbGUgPSAxO1xuICAgIHZhciBvYnNlcnZlciA9IG5ldyBCcm93c2VyTXV0YXRpb25PYnNlcnZlcihjYWxsYmFjayk7XG4gICAgdmFyIG5vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIlwiKTtcbiAgICBvYnNlcnZlci5vYnNlcnZlKG5vZGUsIHtjaGFyYWN0ZXJEYXRhOiB0cnVlfSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHJlcXVlc3RDYWxsKCkge1xuICAgICAgICB0b2dnbGUgPSAtdG9nZ2xlO1xuICAgICAgICBub2RlLmRhdGEgPSB0b2dnbGU7XG4gICAgfTtcbn1cblxuLy8gVGhlIG1lc3NhZ2UgY2hhbm5lbCB0ZWNobmlxdWUgd2FzIGRpc2NvdmVyZWQgYnkgTWFsdGUgVWJsIGFuZCB3YXMgdGhlXG4vLyBvcmlnaW5hbCBmb3VuZGF0aW9uIGZvciB0aGlzIGxpYnJhcnkuXG4vLyBodHRwOi8vd3d3Lm5vbmJsb2NraW5nLmlvLzIwMTEvMDYvd2luZG93bmV4dHRpY2suaHRtbFxuXG4vLyBTYWZhcmkgNi4wLjUgKGF0IGxlYXN0KSBpbnRlcm1pdHRlbnRseSBmYWlscyB0byBjcmVhdGUgbWVzc2FnZSBwb3J0cyBvbiBhXG4vLyBwYWdlJ3MgZmlyc3QgbG9hZC4gVGhhbmtmdWxseSwgdGhpcyB2ZXJzaW9uIG9mIFNhZmFyaSBzdXBwb3J0c1xuLy8gTXV0YXRpb25PYnNlcnZlcnMsIHNvIHdlIGRvbid0IG5lZWQgdG8gZmFsbCBiYWNrIGluIHRoYXQgY2FzZS5cblxuLy8gZnVuY3Rpb24gbWFrZVJlcXVlc3RDYWxsRnJvbU1lc3NhZ2VDaGFubmVsKGNhbGxiYWNrKSB7XG4vLyAgICAgdmFyIGNoYW5uZWwgPSBuZXcgTWVzc2FnZUNoYW5uZWwoKTtcbi8vICAgICBjaGFubmVsLnBvcnQxLm9ubWVzc2FnZSA9IGNhbGxiYWNrO1xuLy8gICAgIHJldHVybiBmdW5jdGlvbiByZXF1ZXN0Q2FsbCgpIHtcbi8vICAgICAgICAgY2hhbm5lbC5wb3J0Mi5wb3N0TWVzc2FnZSgwKTtcbi8vICAgICB9O1xuLy8gfVxuXG4vLyBGb3IgcmVhc29ucyBleHBsYWluZWQgYWJvdmUsIHdlIGFyZSBhbHNvIHVuYWJsZSB0byB1c2UgYHNldEltbWVkaWF0ZWBcbi8vIHVuZGVyIGFueSBjaXJjdW1zdGFuY2VzLlxuLy8gRXZlbiBpZiB3ZSB3ZXJlLCB0aGVyZSBpcyBhbm90aGVyIGJ1ZyBpbiBJbnRlcm5ldCBFeHBsb3JlciAxMC5cbi8vIEl0IGlzIG5vdCBzdWZmaWNpZW50IHRvIGFzc2lnbiBgc2V0SW1tZWRpYXRlYCB0byBgcmVxdWVzdEZsdXNoYCBiZWNhdXNlXG4vLyBgc2V0SW1tZWRpYXRlYCBtdXN0IGJlIGNhbGxlZCAqYnkgbmFtZSogYW5kIHRoZXJlZm9yZSBtdXN0IGJlIHdyYXBwZWQgaW4gYVxuLy8gY2xvc3VyZS5cbi8vIE5ldmVyIGZvcmdldC5cblxuLy8gZnVuY3Rpb24gbWFrZVJlcXVlc3RDYWxsRnJvbVNldEltbWVkaWF0ZShjYWxsYmFjaykge1xuLy8gICAgIHJldHVybiBmdW5jdGlvbiByZXF1ZXN0Q2FsbCgpIHtcbi8vICAgICAgICAgc2V0SW1tZWRpYXRlKGNhbGxiYWNrKTtcbi8vICAgICB9O1xuLy8gfVxuXG4vLyBTYWZhcmkgNi4wIGhhcyBhIHByb2JsZW0gd2hlcmUgdGltZXJzIHdpbGwgZ2V0IGxvc3Qgd2hpbGUgdGhlIHVzZXIgaXNcbi8vIHNjcm9sbGluZy4gVGhpcyBwcm9ibGVtIGRvZXMgbm90IGltcGFjdCBBU0FQIGJlY2F1c2UgU2FmYXJpIDYuMCBzdXBwb3J0c1xuLy8gbXV0YXRpb24gb2JzZXJ2ZXJzLCBzbyB0aGF0IGltcGxlbWVudGF0aW9uIGlzIHVzZWQgaW5zdGVhZC5cbi8vIEhvd2V2ZXIsIGlmIHdlIGV2ZXIgZWxlY3QgdG8gdXNlIHRpbWVycyBpbiBTYWZhcmksIHRoZSBwcmV2YWxlbnQgd29yay1hcm91bmRcbi8vIGlzIHRvIGFkZCBhIHNjcm9sbCBldmVudCBsaXN0ZW5lciB0aGF0IGNhbGxzIGZvciBhIGZsdXNoLlxuXG4vLyBgc2V0VGltZW91dGAgZG9lcyBub3QgY2FsbCB0aGUgcGFzc2VkIGNhbGxiYWNrIGlmIHRoZSBkZWxheSBpcyBsZXNzIHRoYW5cbi8vIGFwcHJveGltYXRlbHkgNyBpbiB3ZWIgd29ya2VycyBpbiBGaXJlZm94IDggdGhyb3VnaCAxOCwgYW5kIHNvbWV0aW1lcyBub3Rcbi8vIGV2ZW4gdGhlbi5cblxuZnVuY3Rpb24gbWFrZVJlcXVlc3RDYWxsRnJvbVRpbWVyKGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHJlcXVlc3RDYWxsKCkge1xuICAgICAgICAvLyBXZSBkaXNwYXRjaCBhIHRpbWVvdXQgd2l0aCBhIHNwZWNpZmllZCBkZWxheSBvZiAwIGZvciBlbmdpbmVzIHRoYXRcbiAgICAgICAgLy8gY2FuIHJlbGlhYmx5IGFjY29tbW9kYXRlIHRoYXQgcmVxdWVzdC4gVGhpcyB3aWxsIHVzdWFsbHkgYmUgc25hcHBlZFxuICAgICAgICAvLyB0byBhIDQgbWlsaXNlY29uZCBkZWxheSwgYnV0IG9uY2Ugd2UncmUgZmx1c2hpbmcsIHRoZXJlJ3Mgbm8gZGVsYXlcbiAgICAgICAgLy8gYmV0d2VlbiBldmVudHMuXG4gICAgICAgIHZhciB0aW1lb3V0SGFuZGxlID0gc2V0VGltZW91dChoYW5kbGVUaW1lciwgMCk7XG4gICAgICAgIC8vIEhvd2V2ZXIsIHNpbmNlIHRoaXMgdGltZXIgZ2V0cyBmcmVxdWVudGx5IGRyb3BwZWQgaW4gRmlyZWZveFxuICAgICAgICAvLyB3b3JrZXJzLCB3ZSBlbmxpc3QgYW4gaW50ZXJ2YWwgaGFuZGxlIHRoYXQgd2lsbCB0cnkgdG8gZmlyZVxuICAgICAgICAvLyBhbiBldmVudCAyMCB0aW1lcyBwZXIgc2Vjb25kIHVudGlsIGl0IHN1Y2NlZWRzLlxuICAgICAgICB2YXIgaW50ZXJ2YWxIYW5kbGUgPSBzZXRJbnRlcnZhbChoYW5kbGVUaW1lciwgNTApO1xuXG4gICAgICAgIGZ1bmN0aW9uIGhhbmRsZVRpbWVyKCkge1xuICAgICAgICAgICAgLy8gV2hpY2hldmVyIHRpbWVyIHN1Y2NlZWRzIHdpbGwgY2FuY2VsIGJvdGggdGltZXJzIGFuZFxuICAgICAgICAgICAgLy8gZXhlY3V0ZSB0aGUgY2FsbGJhY2suXG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dEhhbmRsZSk7XG4gICAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsSGFuZGxlKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIH1cbiAgICB9O1xufVxuXG4vLyBUaGlzIGlzIGZvciBgYXNhcC5qc2Agb25seS5cbi8vIEl0cyBuYW1lIHdpbGwgYmUgcGVyaW9kaWNhbGx5IHJhbmRvbWl6ZWQgdG8gYnJlYWsgYW55IGNvZGUgdGhhdCBkZXBlbmRzIG9uXG4vLyBpdHMgZXhpc3RlbmNlLlxucmF3QXNhcC5tYWtlUmVxdWVzdENhbGxGcm9tVGltZXIgPSBtYWtlUmVxdWVzdENhbGxGcm9tVGltZXI7XG5cbi8vIEFTQVAgd2FzIG9yaWdpbmFsbHkgYSBuZXh0VGljayBzaGltIGluY2x1ZGVkIGluIFEuIFRoaXMgd2FzIGZhY3RvcmVkIG91dFxuLy8gaW50byB0aGlzIEFTQVAgcGFja2FnZS4gSXQgd2FzIGxhdGVyIGFkYXB0ZWQgdG8gUlNWUCB3aGljaCBtYWRlIGZ1cnRoZXJcbi8vIGFtZW5kbWVudHMuIFRoZXNlIGRlY2lzaW9ucywgcGFydGljdWxhcmx5IHRvIG1hcmdpbmFsaXplIE1lc3NhZ2VDaGFubmVsIGFuZFxuLy8gdG8gY2FwdHVyZSB0aGUgTXV0YXRpb25PYnNlcnZlciBpbXBsZW1lbnRhdGlvbiBpbiBhIGNsb3N1cmUsIHdlcmUgaW50ZWdyYXRlZFxuLy8gYmFjayBpbnRvIEFTQVAgcHJvcGVyLlxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3RpbGRlaW8vcnN2cC5qcy9ibG9iL2NkZGY3MjMyNTQ2YTljZjg1ODUyNGI3NWNkZTZmOWVkZjcyNjIwYTcvbGliL3JzdnAvYXNhcC5qc1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIGhhc2goc3RyKSB7XG4gIHZhciBoYXNoID0gNTM4MSxcbiAgICAgIGkgICAgPSBzdHIubGVuZ3RoO1xuXG4gIHdoaWxlKGkpIHtcbiAgICBoYXNoID0gKGhhc2ggKiAzMykgXiBzdHIuY2hhckNvZGVBdCgtLWkpO1xuICB9XG5cbiAgLyogSmF2YVNjcmlwdCBkb2VzIGJpdHdpc2Ugb3BlcmF0aW9ucyAobGlrZSBYT1IsIGFib3ZlKSBvbiAzMi1iaXQgc2lnbmVkXG4gICAqIGludGVnZXJzLiBTaW5jZSB3ZSB3YW50IHRoZSByZXN1bHRzIHRvIGJlIGFsd2F5cyBwb3NpdGl2ZSwgY29udmVydCB0aGVcbiAgICogc2lnbmVkIGludCB0byBhbiB1bnNpZ25lZCBieSBkb2luZyBhbiB1bnNpZ25lZCBiaXRzaGlmdC4gKi9cbiAgcmV0dXJuIGhhc2ggPj4+IDA7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaGFzaDtcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAuYm9keVNlY3Rpb25XaXRoTWFyZ2luIHtcclxuICBib3JkZXItYm90dG9tOiA0MHB4O1xyXG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvQm9keVNlY3Rpb24vQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLG1CQUFtQjtBQUNyQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuYm9keVNlY3Rpb25XaXRoTWFyZ2luIHtcXHJcXG4gIGJvcmRlci1ib3R0b206IDQwcHg7XFxyXFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgYm9keSB7XHJcbiAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgJ1NlZ29lIFVJJywgJ1JvYm90bycsICdPeHlnZW4nLFxyXG4gICAgJ1VidW50dScsICdDYW50YXJlbGwnLCAnRmlyYSBTYW5zJywgJ0Ryb2lkIFNhbnMnLCAnSGVsdmV0aWNhIE5ldWUnLFxyXG4gICAgc2Fucy1zZXJpZjtcclxuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcclxuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbmNvZGUge1xyXG4gIGZvbnQtZmFtaWx5OiBzb3VyY2UtY29kZS1wcm8sIE1lbmxvLCBNb25hY28sIENvbnNvbGFzLCAnQ291cmllciBOZXcnLFxyXG4gICAgbW9ub3NwYWNlO1xyXG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvaW5kZXguY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0U7O2NBRVk7RUFDWixtQ0FBbUM7RUFDbkMsa0NBQWtDO0VBQ2xDLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFO2FBQ1c7QUFDYlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJib2R5IHtcXHJcXG4gIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdTZWdvZSBVSScsICdSb2JvdG8nLCAnT3h5Z2VuJyxcXHJcXG4gICAgJ1VidW50dScsICdDYW50YXJlbGwnLCAnRmlyYSBTYW5zJywgJ0Ryb2lkIFNhbnMnLCAnSGVsdmV0aWNhIE5ldWUnLFxcclxcbiAgICBzYW5zLXNlcmlmO1xcclxcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XFxyXFxuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xcclxcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXHJcXG59XFxyXFxuXFxyXFxuY29kZSB7XFxyXFxuICBmb250LWZhbWlseTogc291cmNlLWNvZGUtcHJvLCBNZW5sbywgTW9uYWNvLCBDb25zb2xhcywgJ0NvdXJpZXIgTmV3JyxcXHJcXG4gICAgbW9ub3NwYWNlO1xcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0KCkge31cbmVtcHR5RnVuY3Rpb25XaXRoUmVzZXQucmVzZXRXYXJuaW5nQ2FjaGUgPSBlbXB0eUZ1bmN0aW9uO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYmlnaW50OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGVsZW1lbnRUeXBlOiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW0sXG5cbiAgICBjaGVja1Byb3BUeXBlczogZW1wdHlGdW5jdGlvbldpdGhSZXNldCxcbiAgICByZXNldFdhcm5pbmdDYWNoZTogZW1wdHlGdW5jdGlvblxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKFJlYWN0SXMuaXNFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTQuMFxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLypcbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcbiovXG4ndXNlIHN0cmljdCc7dmFyIGFhPXJlcXVpcmUoXCJyZWFjdFwiKSxuPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLHI9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiB1KGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifWlmKCFhYSl0aHJvdyBFcnJvcih1KDIyNykpO1xuZnVuY3Rpb24gYmEoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG0pe3RoaXMub25FcnJvcihtKX19dmFyIGRhPSExLGVhPW51bGwsZmE9ITEsaGE9bnVsbCxpYT17b25FcnJvcjpmdW5jdGlvbihhKXtkYT0hMDtlYT1hfX07ZnVuY3Rpb24gamEoYSxiLGMsZCxlLGYsZyxoLGspe2RhPSExO2VhPW51bGw7YmEuYXBwbHkoaWEsYXJndW1lbnRzKX1mdW5jdGlvbiBrYShhLGIsYyxkLGUsZixnLGgsayl7amEuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGRhKXtpZihkYSl7dmFyIGw9ZWE7ZGE9ITE7ZWE9bnVsbH1lbHNlIHRocm93IEVycm9yKHUoMTk4KSk7ZmF8fChmYT0hMCxoYT1sKX19dmFyIGxhPW51bGwsbWE9bnVsbCxuYT1udWxsO1xuZnVuY3Rpb24gb2EoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PW5hKGMpO2thKGQsYix2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9dmFyIHBhPW51bGwscWE9e307XG5mdW5jdGlvbiByYSgpe2lmKHBhKWZvcih2YXIgYSBpbiBxYSl7dmFyIGI9cWFbYV0sYz1wYS5pbmRleE9mKGEpO2lmKCEoLTE8YykpdGhyb3cgRXJyb3IodSg5NixhKSk7aWYoIXNhW2NdKXtpZighYi5leHRyYWN0RXZlbnRzKXRocm93IEVycm9yKHUoOTcsYSkpO3NhW2NdPWI7Yz1iLmV2ZW50VHlwZXM7Zm9yKHZhciBkIGluIGMpe3ZhciBlPXZvaWQgMDt2YXIgZj1jW2RdLGc9YixoPWQ7aWYodGEuaGFzT3duUHJvcGVydHkoaCkpdGhyb3cgRXJyb3IodSg5OSxoKSk7dGFbaF09Zjt2YXIgaz1mLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzO2lmKGspe2ZvcihlIGluIGspay5oYXNPd25Qcm9wZXJ0eShlKSYmdWEoa1tlXSxnLGgpO2U9ITB9ZWxzZSBmLnJlZ2lzdHJhdGlvbk5hbWU/KHVhKGYucmVnaXN0cmF0aW9uTmFtZSxnLGgpLGU9ITApOmU9ITE7aWYoIWUpdGhyb3cgRXJyb3IodSg5OCxkLGEpKTt9fX19XG5mdW5jdGlvbiB1YShhLGIsYyl7aWYodmFbYV0pdGhyb3cgRXJyb3IodSgxMDAsYSkpO3ZhW2FdPWI7d2FbYV09Yi5ldmVudFR5cGVzW2NdLmRlcGVuZGVuY2llc312YXIgc2E9W10sdGE9e30sdmE9e30sd2E9e307ZnVuY3Rpb24geGEoYSl7dmFyIGI9ITEsYztmb3IoYyBpbiBhKWlmKGEuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPWFbY107aWYoIXFhLmhhc093blByb3BlcnR5KGMpfHxxYVtjXSE9PWQpe2lmKHFhW2NdKXRocm93IEVycm9yKHUoMTAyLGMpKTtxYVtjXT1kO2I9ITB9fWImJnJhKCl9dmFyIHlhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KSx6YT1udWxsLEFhPW51bGwsQmE9bnVsbDtcbmZ1bmN0aW9uIENhKGEpe2lmKGE9bWEoYSkpe2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiB6YSl0aHJvdyBFcnJvcih1KDI4MCkpO3ZhciBiPWEuc3RhdGVOb2RlO2ImJihiPWxhKGIpLHphKGEuc3RhdGVOb2RlLGEudHlwZSxiKSl9fWZ1bmN0aW9uIERhKGEpe0FhP0JhP0JhLnB1c2goYSk6QmE9W2FdOkFhPWF9ZnVuY3Rpb24gRWEoKXtpZihBYSl7dmFyIGE9QWEsYj1CYTtCYT1BYT1udWxsO0NhKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylDYShiW2FdKX19ZnVuY3Rpb24gRmEoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBHYShhLGIsYyxkLGUpe3JldHVybiBhKGIsYyxkLGUpfWZ1bmN0aW9uIEhhKCl7fXZhciBJYT1GYSxKYT0hMSxLYT0hMTtmdW5jdGlvbiBMYSgpe2lmKG51bGwhPT1BYXx8bnVsbCE9PUJhKUhhKCksRWEoKX1cbmZ1bmN0aW9uIE1hKGEsYixjKXtpZihLYSlyZXR1cm4gYShiLGMpO0thPSEwO3RyeXtyZXR1cm4gSWEoYSxiLGMpfWZpbmFsbHl7S2E9ITEsTGEoKX19dmFyIE5hPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxPYT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LFBhPXt9LFFhPXt9O1xuZnVuY3Rpb24gUmEoYSl7aWYoT2EuY2FsbChRYSxhKSlyZXR1cm4hMDtpZihPYS5jYWxsKFBhLGEpKXJldHVybiExO2lmKE5hLnRlc3QoYSkpcmV0dXJuIFFhW2FdPSEwO1BhW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIFNhKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gVGEoYSxiLGMsZCl7aWYobnVsbD09PWJ8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYnx8U2EoYSxiLGMsZCkpcmV0dXJuITA7aWYoZClyZXR1cm4hMTtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1mdW5jdGlvbiB2KGEsYixjLGQsZSxmKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1iO3RoaXMuc2FuaXRpemVVUkw9Zn12YXIgQz17fTtcblwiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDAsITEsYSxudWxsLCExKX0pO1tbXCJhY2NlcHRDaGFyc2V0XCIsXCJhY2NlcHQtY2hhcnNldFwiXSxbXCJjbGFzc05hbWVcIixcImNsYXNzXCJdLFtcImh0bWxGb3JcIixcImZvclwiXSxbXCJodHRwRXF1aXZcIixcImh0dHAtZXF1aXZcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXTtDW2JdPW5ldyB2KGIsMSwhMSxhWzFdLG51bGwsITEpfSk7W1wiY29udGVudEVkaXRhYmxlXCIsXCJkcmFnZ2FibGVcIixcInNwZWxsQ2hlY2tcIixcInZhbHVlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDIsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDIsITEsYSxudWxsLCExKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGRpc2FibGVQaWN0dXJlSW5QaWN0dXJlIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5bXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDMsITAsYSxudWxsLCExKX0pO1tcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDQsITEsYSxudWxsLCExKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsNiwhMSxhLG51bGwsITEpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTt2YXIgVWE9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiBWYShhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShVYSxcblZhKTtDW2JdPW5ldyB2KGIsMSwhMSxhLG51bGwsITEpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoVWEsVmEpO0NbYl09bmV3IHYoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITEpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoVWEsVmEpO0NbYl09bmV3IHYoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIiwhMSl9KTtbXCJ0YWJJbmRleFwiLFwiY3Jvc3NPcmlnaW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTtcbkMueGxpbmtIcmVmPW5ldyB2KFwieGxpbmtIcmVmXCIsMSwhMSxcInhsaW5rOmhyZWZcIixcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMCk7W1wic3JjXCIsXCJocmVmXCIsXCJhY3Rpb25cIixcImZvcm1BY3Rpb25cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMCl9KTt2YXIgV2E9YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ7V2EuaGFzT3duUHJvcGVydHkoXCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyXCIpfHwoV2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcj17Y3VycmVudDpudWxsfSk7V2EuaGFzT3duUHJvcGVydHkoXCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZ1wiKXx8KFdhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnPXtzdXNwZW5zZTpudWxsfSk7XG5mdW5jdGlvbiBYYShhLGIsYyxkKXt2YXIgZT1DLmhhc093blByb3BlcnR5KGIpP0NbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChUYShiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/UmEoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbnZhciBZYT0vXiguKilbXFxcXFxcL10vLEU9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixaYT1FP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLCRhPUU/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixhYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxiYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxjYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxkYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxlYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGZiPUU/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxnYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixoYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxpYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpOlxuNjAxMjAsamI9RT9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSxrYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LGxiPUU/U3ltYm9sLmZvcihcInJlYWN0LmJsb2NrXCIpOjYwMTIxLG1iPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBuYihhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9bWImJmFbbWJdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9ZnVuY3Rpb24gb2IoYSl7aWYoLTE9PT1hLl9zdGF0dXMpe2EuX3N0YXR1cz0wO3ZhciBiPWEuX2N0b3I7Yj1iKCk7YS5fcmVzdWx0PWI7Yi50aGVuKGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihiPWIuZGVmYXVsdCxhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yil9LGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yil9KX19XG5mdW5jdGlvbiBwYihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIGFiOnJldHVyblwiRnJhZ21lbnRcIjtjYXNlICRhOnJldHVyblwiUG9ydGFsXCI7Y2FzZSBjYjpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSBiYjpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIGhiOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIGliOnJldHVyblwiU3VzcGVuc2VMaXN0XCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGViOnJldHVyblwiQ29udGV4dC5Db25zdW1lclwiO2Nhc2UgZGI6cmV0dXJuXCJDb250ZXh0LlByb3ZpZGVyXCI7Y2FzZSBnYjp2YXIgYj1hLnJlbmRlcjtiPWIuZGlzcGxheU5hbWV8fGIubmFtZXx8XCJcIjtyZXR1cm4gYS5kaXNwbGF5TmFtZXx8KFwiXCIhPT1iP1wiRm9yd2FyZFJlZihcIitiK1wiKVwiOlxuXCJGb3J3YXJkUmVmXCIpO2Nhc2UgamI6cmV0dXJuIHBiKGEudHlwZSk7Y2FzZSBsYjpyZXR1cm4gcGIoYS5yZW5kZXIpO2Nhc2Uga2I6aWYoYT0xPT09YS5fc3RhdHVzP2EuX3Jlc3VsdDpudWxsKXJldHVybiBwYihhKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBxYihhKXt2YXIgYj1cIlwiO2Rve2E6c3dpdGNoKGEudGFnKXtjYXNlIDM6Y2FzZSA0OmNhc2UgNjpjYXNlIDc6Y2FzZSAxMDpjYXNlIDk6dmFyIGM9XCJcIjticmVhayBhO2RlZmF1bHQ6dmFyIGQ9YS5fZGVidWdPd25lcixlPWEuX2RlYnVnU291cmNlLGY9cGIoYS50eXBlKTtjPW51bGw7ZCYmKGM9cGIoZC50eXBlKSk7ZD1mO2Y9XCJcIjtlP2Y9XCIgKGF0IFwiK2UuZmlsZU5hbWUucmVwbGFjZShZYSxcIlwiKStcIjpcIitlLmxpbmVOdW1iZXIrXCIpXCI6YyYmKGY9XCIgKGNyZWF0ZWQgYnkgXCIrYytcIilcIik7Yz1cIlxcbiAgICBpbiBcIisoZHx8XCJVbmtub3duXCIpK2Z9Yis9YzthPWEucmV0dXJufXdoaWxlKGEpO3JldHVybiBifVxuZnVuY3Rpb24gcmIoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fWZ1bmN0aW9uIHNiKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiB0YihhKXt2YXIgYj1zYihhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24geGIoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPXRiKGEpKX1mdW5jdGlvbiB5YihhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9c2IoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1mdW5jdGlvbiB6YihhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbih7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9XG5mdW5jdGlvbiBBYihhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz1yYihudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIEJiKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmWGEoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIENiKGEsYil7QmIoYSxiKTt2YXIgYz1yYihiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT9EYihhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZEYihhLGIudHlwZSxyYihiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIEViKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9ISFhLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWQ7XCJcIiE9PWMmJihhLm5hbWU9Yyl9XG5mdW5jdGlvbiBEYihhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fGEub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50IT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9ZnVuY3Rpb24gRmIoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9ZnVuY3Rpb24gR2IoYSxiKXthPW4oe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1GYihiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9XG5mdW5jdGlvbiBIYihhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrcmIoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIEliKGEsYil7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl0aHJvdyBFcnJvcih1KDkxKSk7cmV0dXJuIG4oe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gSmIoYSxiKXt2YXIgYz1iLnZhbHVlO2lmKG51bGw9PWMpe2M9Yi5jaGlsZHJlbjtiPWIuZGVmYXVsdFZhbHVlO2lmKG51bGwhPWMpe2lmKG51bGwhPWIpdGhyb3cgRXJyb3IodSg5MikpO2lmKEFycmF5LmlzQXJyYXkoYykpe2lmKCEoMT49Yy5sZW5ndGgpKXRocm93IEVycm9yKHUoOTMpKTtjPWNbMF19Yj1jfW51bGw9PWImJihiPVwiXCIpO2M9Yn1hLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpyYihjKX19XG5mdW5jdGlvbiBLYihhLGIpe3ZhciBjPXJiKGIudmFsdWUpLGQ9cmIoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBMYihhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiZcIlwiIT09YiYmbnVsbCE9PWImJihhLnZhbHVlPWIpfXZhciBNYj17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBOYihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIE9iKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9OYihiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBQYixRYj1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1NYi5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtQYj1QYnx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtQYi5pbm5lckhUTUw9XCI8c3ZnPlwiK2IudmFsdWVPZigpLnRvU3RyaW5nKCkrXCI8L3N2Zz5cIjtmb3IoYj1QYi5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBSYihhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifWZ1bmN0aW9uIFNiKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIFRiPXthbmltYXRpb25lbmQ6U2IoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246U2IoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpTYihcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpTYihcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LFViPXt9LFZiPXt9O1xueWEmJihWYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBUYi5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBUYi5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBUYi5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBUYi50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIFdiKGEpe2lmKFViW2FdKXJldHVybiBVYlthXTtpZighVGJbYV0pcmV0dXJuIGE7dmFyIGI9VGJbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gVmIpcmV0dXJuIFViW2FdPWJbY107cmV0dXJuIGF9XG52YXIgWGI9V2IoXCJhbmltYXRpb25lbmRcIiksWWI9V2IoXCJhbmltYXRpb25pdGVyYXRpb25cIiksWmI9V2IoXCJhbmltYXRpb25zdGFydFwiKSwkYj1XYihcInRyYW5zaXRpb25lbmRcIiksYWM9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLGJjPW5ldyAoXCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXApO2Z1bmN0aW9uIGNjKGEpe3ZhciBiPWJjLmdldChhKTt2b2lkIDA9PT1iJiYoYj1uZXcgTWFwLGJjLnNldChhLGIpKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGRjKGEpe3ZhciBiPWEsYz1hO2lmKGEuYWx0ZXJuYXRlKWZvcig7Yi5yZXR1cm47KWI9Yi5yZXR1cm47ZWxzZXthPWI7ZG8gYj1hLDAhPT0oYi5lZmZlY3RUYWcmMTAyNikmJihjPWIucmV0dXJuKSxhPWIucmV0dXJuO3doaWxlKGEpfXJldHVybiAzPT09Yi50YWc/YzpudWxsfWZ1bmN0aW9uIGVjKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09YiYmKGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihiPWEubWVtb2l6ZWRTdGF0ZSkpO2lmKG51bGwhPT1iKXJldHVybiBiLmRlaHlkcmF0ZWR9cmV0dXJuIG51bGx9ZnVuY3Rpb24gZmMoYSl7aWYoZGMoYSkhPT1hKXRocm93IEVycm9yKHUoMTg4KSk7fVxuZnVuY3Rpb24gZ2MoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpe2I9ZGMoYSk7aWYobnVsbD09PWIpdGhyb3cgRXJyb3IodSgxODgpKTtyZXR1cm4gYiE9PWE/bnVsbDphfWZvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybjtpZihudWxsPT09ZSlicmVhazt2YXIgZj1lLmFsdGVybmF0ZTtpZihudWxsPT09Zil7ZD1lLnJldHVybjtpZihudWxsIT09ZCl7Yz1kO2NvbnRpbnVlfWJyZWFrfWlmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IoZj1lLmNoaWxkO2Y7KXtpZihmPT09YylyZXR1cm4gZmMoZSksYTtpZihmPT09ZClyZXR1cm4gZmMoZSksYjtmPWYuc2libGluZ310aHJvdyBFcnJvcih1KDE4OCkpO31pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtmb3IodmFyIGc9ITEsaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1cbmMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXRocm93IEVycm9yKHUoMTg5KSk7fX1pZihjLmFsdGVybmF0ZSE9PWQpdGhyb3cgRXJyb3IodSgxOTApKTt9aWYoMyE9PWMudGFnKXRocm93IEVycm9yKHUoMTg4KSk7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBoYyhhKXthPWdjKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gaWMoYSxiKXtpZihudWxsPT1iKXRocm93IEVycm9yKHUoMzApKTtpZihudWxsPT1hKXJldHVybiBiO2lmKEFycmF5LmlzQXJyYXkoYSkpe2lmKEFycmF5LmlzQXJyYXkoYikpcmV0dXJuIGEucHVzaC5hcHBseShhLGIpLGE7YS5wdXNoKGIpO3JldHVybiBhfXJldHVybiBBcnJheS5pc0FycmF5KGIpP1thXS5jb25jYXQoYik6W2EsYl19ZnVuY3Rpb24gamMoYSxiLGMpe0FycmF5LmlzQXJyYXkoYSk/YS5mb3JFYWNoKGIsYyk6YSYmYi5jYWxsKGMsYSl9dmFyIGtjPW51bGw7XG5mdW5jdGlvbiBsYyhhKXtpZihhKXt2YXIgYj1hLl9kaXNwYXRjaExpc3RlbmVycyxjPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO2lmKEFycmF5LmlzQXJyYXkoYikpZm9yKHZhciBkPTA7ZDxiLmxlbmd0aCYmIWEuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtkKyspb2EoYSxiW2RdLGNbZF0pO2Vsc2UgYiYmb2EoYSxiLGMpO2EuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGw7YS5fZGlzcGF0Y2hJbnN0YW5jZXM9bnVsbDthLmlzUGVyc2lzdGVudCgpfHxhLmNvbnN0cnVjdG9yLnJlbGVhc2UoYSl9fWZ1bmN0aW9uIG1jKGEpe251bGwhPT1hJiYoa2M9aWMoa2MsYSkpO2E9a2M7a2M9bnVsbDtpZihhKXtqYyhhLGxjKTtpZihrYyl0aHJvdyBFcnJvcih1KDk1KSk7aWYoZmEpdGhyb3cgYT1oYSxmYT0hMSxoYT1udWxsLGE7fX1cbmZ1bmN0aW9uIG5jKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX1mdW5jdGlvbiBvYyhhKXtpZigheWEpcmV0dXJuITE7YT1cIm9uXCIrYTt2YXIgYj1hIGluIGRvY3VtZW50O2J8fChiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYi5zZXRBdHRyaWJ1dGUoYSxcInJldHVybjtcIiksYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYlthXSk7cmV0dXJuIGJ9dmFyIHBjPVtdO2Z1bmN0aW9uIHFjKGEpe2EudG9wTGV2ZWxUeXBlPW51bGw7YS5uYXRpdmVFdmVudD1udWxsO2EudGFyZ2V0SW5zdD1udWxsO2EuYW5jZXN0b3JzLmxlbmd0aD0wOzEwPnBjLmxlbmd0aCYmcGMucHVzaChhKX1cbmZ1bmN0aW9uIHJjKGEsYixjLGQpe2lmKHBjLmxlbmd0aCl7dmFyIGU9cGMucG9wKCk7ZS50b3BMZXZlbFR5cGU9YTtlLmV2ZW50U3lzdGVtRmxhZ3M9ZDtlLm5hdGl2ZUV2ZW50PWI7ZS50YXJnZXRJbnN0PWM7cmV0dXJuIGV9cmV0dXJue3RvcExldmVsVHlwZTphLGV2ZW50U3lzdGVtRmxhZ3M6ZCxuYXRpdmVFdmVudDpiLHRhcmdldEluc3Q6YyxhbmNlc3RvcnM6W119fVxuZnVuY3Rpb24gc2MoYSl7dmFyIGI9YS50YXJnZXRJbnN0LGM9Yjtkb3tpZighYyl7YS5hbmNlc3RvcnMucHVzaChjKTticmVha312YXIgZD1jO2lmKDM9PT1kLnRhZylkPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZWxzZXtmb3IoO2QucmV0dXJuOylkPWQucmV0dXJuO2Q9MyE9PWQudGFnP251bGw6ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mb31pZighZClicmVhaztiPWMudGFnOzUhPT1iJiY2IT09Ynx8YS5hbmNlc3RvcnMucHVzaChjKTtjPXRjKGQpfXdoaWxlKGMpO2ZvcihjPTA7YzxhLmFuY2VzdG9ycy5sZW5ndGg7YysrKXtiPWEuYW5jZXN0b3JzW2NdO3ZhciBlPW5jKGEubmF0aXZlRXZlbnQpO2Q9YS50b3BMZXZlbFR5cGU7dmFyIGY9YS5uYXRpdmVFdmVudCxnPWEuZXZlbnRTeXN0ZW1GbGFnczswPT09YyYmKGd8PTY0KTtmb3IodmFyIGg9bnVsbCxrPTA7azxzYS5sZW5ndGg7aysrKXt2YXIgbD1zYVtrXTtsJiYobD1sLmV4dHJhY3RFdmVudHMoZCxiLGYsZSxnKSkmJihoPVxuaWMoaCxsKSl9bWMoaCl9fWZ1bmN0aW9uIHVjKGEsYixjKXtpZighYy5oYXMoYSkpe3N3aXRjaChhKXtjYXNlIFwic2Nyb2xsXCI6dmMoYixcInNjcm9sbFwiLCEwKTticmVhaztjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOnZjKGIsXCJmb2N1c1wiLCEwKTt2YyhiLFwiYmx1clwiLCEwKTtjLnNldChcImJsdXJcIixudWxsKTtjLnNldChcImZvY3VzXCIsbnVsbCk7YnJlYWs7Y2FzZSBcImNhbmNlbFwiOmNhc2UgXCJjbG9zZVwiOm9jKGEpJiZ2YyhiLGEsITApO2JyZWFrO2Nhc2UgXCJpbnZhbGlkXCI6Y2FzZSBcInN1Ym1pdFwiOmNhc2UgXCJyZXNldFwiOmJyZWFrO2RlZmF1bHQ6LTE9PT1hYy5pbmRleE9mKGEpJiZGKGEsYil9Yy5zZXQoYSxudWxsKX19XG52YXIgd2MseGMseWMsemM9ITEsQWM9W10sQmM9bnVsbCxDYz1udWxsLERjPW51bGwsRWM9bmV3IE1hcCxGYz1uZXcgTWFwLEdjPVtdLEhjPVwibW91c2Vkb3duIG1vdXNldXAgdG91Y2hjYW5jZWwgdG91Y2hlbmQgdG91Y2hzdGFydCBhdXhjbGljayBkYmxjbGljayBwb2ludGVyY2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJ1cCBkcmFnZW5kIGRyYWdzdGFydCBkcm9wIGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBpbnB1dCB0ZXh0SW5wdXQgY2xvc2UgY2FuY2VsIGNvcHkgY3V0IHBhc3RlIGNsaWNrIGNoYW5nZSBjb250ZXh0bWVudSByZXNldCBzdWJtaXRcIi5zcGxpdChcIiBcIiksSWM9XCJmb2N1cyBibHVyIGRyYWdlbnRlciBkcmFnbGVhdmUgbW91c2VvdmVyIG1vdXNlb3V0IHBvaW50ZXJvdmVyIHBvaW50ZXJvdXQgZ290cG9pbnRlcmNhcHR1cmUgbG9zdHBvaW50ZXJjYXB0dXJlXCIuc3BsaXQoXCIgXCIpO1xuZnVuY3Rpb24gSmMoYSxiKXt2YXIgYz1jYyhiKTtIYy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3VjKGEsYixjKX0pO0ljLmZvckVhY2goZnVuY3Rpb24oYSl7dWMoYSxiLGMpfSl9ZnVuY3Rpb24gS2MoYSxiLGMsZCxlKXtyZXR1cm57YmxvY2tlZE9uOmEsdG9wTGV2ZWxUeXBlOmIsZXZlbnRTeXN0ZW1GbGFnczpjfDMyLG5hdGl2ZUV2ZW50OmUsY29udGFpbmVyOmR9fVxuZnVuY3Rpb24gTGMoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImJsdXJcIjpCYz1udWxsO2JyZWFrO2Nhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Q2M9bnVsbDticmVhaztjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcIm1vdXNlb3V0XCI6RGM9bnVsbDticmVhaztjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcm91dFwiOkVjLmRlbGV0ZShiLnBvaW50ZXJJZCk7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOkZjLmRlbGV0ZShiLnBvaW50ZXJJZCl9fWZ1bmN0aW9uIE1jKGEsYixjLGQsZSxmKXtpZihudWxsPT09YXx8YS5uYXRpdmVFdmVudCE9PWYpcmV0dXJuIGE9S2MoYixjLGQsZSxmKSxudWxsIT09YiYmKGI9TmMoYiksbnVsbCE9PWImJnhjKGIpKSxhO2EuZXZlbnRTeXN0ZW1GbGFnc3w9ZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIE9jKGEsYixjLGQsZSl7c3dpdGNoKGIpe2Nhc2UgXCJmb2N1c1wiOnJldHVybiBCYz1NYyhCYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJkcmFnZW50ZXJcIjpyZXR1cm4gQ2M9TWMoQ2MsYSxiLGMsZCxlKSwhMDtjYXNlIFwibW91c2VvdmVyXCI6cmV0dXJuIERjPU1jKERjLGEsYixjLGQsZSksITA7Y2FzZSBcInBvaW50ZXJvdmVyXCI6dmFyIGY9ZS5wb2ludGVySWQ7RWMuc2V0KGYsTWMoRWMuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpO3JldHVybiEwO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOnJldHVybiBmPWUucG9pbnRlcklkLEZjLnNldChmLE1jKEZjLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKSwhMH1yZXR1cm4hMX1cbmZ1bmN0aW9uIFBjKGEpe3ZhciBiPXRjKGEudGFyZ2V0KTtpZihudWxsIT09Yil7dmFyIGM9ZGMoYik7aWYobnVsbCE9PWMpaWYoYj1jLnRhZywxMz09PWIpe2lmKGI9ZWMoYyksbnVsbCE9PWIpe2EuYmxvY2tlZE9uPWI7ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkoYS5wcmlvcml0eSxmdW5jdGlvbigpe3ljKGMpfSk7cmV0dXJufX1lbHNlIGlmKDM9PT1iJiZjLnN0YXRlTm9kZS5oeWRyYXRlKXthLmJsb2NrZWRPbj0zPT09Yy50YWc/Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO3JldHVybn19YS5ibG9ja2VkT249bnVsbH1mdW5jdGlvbiBRYyhhKXtpZihudWxsIT09YS5ibG9ja2VkT24pcmV0dXJuITE7dmFyIGI9UmMoYS50b3BMZXZlbFR5cGUsYS5ldmVudFN5c3RlbUZsYWdzLGEuY29udGFpbmVyLGEubmF0aXZlRXZlbnQpO2lmKG51bGwhPT1iKXt2YXIgYz1OYyhiKTtudWxsIT09YyYmeGMoYyk7YS5ibG9ja2VkT249YjtyZXR1cm4hMX1yZXR1cm4hMH1cbmZ1bmN0aW9uIFNjKGEsYixjKXtRYyhhKSYmYy5kZWxldGUoYil9ZnVuY3Rpb24gVGMoKXtmb3IoemM9ITE7MDxBYy5sZW5ndGg7KXt2YXIgYT1BY1swXTtpZihudWxsIT09YS5ibG9ja2VkT24pe2E9TmMoYS5ibG9ja2VkT24pO251bGwhPT1hJiZ3YyhhKTticmVha312YXIgYj1SYyhhLnRvcExldmVsVHlwZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYS5jb250YWluZXIsYS5uYXRpdmVFdmVudCk7bnVsbCE9PWI/YS5ibG9ja2VkT249YjpBYy5zaGlmdCgpfW51bGwhPT1CYyYmUWMoQmMpJiYoQmM9bnVsbCk7bnVsbCE9PUNjJiZRYyhDYykmJihDYz1udWxsKTtudWxsIT09RGMmJlFjKERjKSYmKERjPW51bGwpO0VjLmZvckVhY2goU2MpO0ZjLmZvckVhY2goU2MpfWZ1bmN0aW9uIFVjKGEsYil7YS5ibG9ja2VkT249PT1iJiYoYS5ibG9ja2VkT249bnVsbCx6Y3x8KHpjPSEwLHIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayhyLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LFRjKSkpfVxuZnVuY3Rpb24gVmMoYSl7ZnVuY3Rpb24gYihiKXtyZXR1cm4gVWMoYixhKX1pZigwPEFjLmxlbmd0aCl7VWMoQWNbMF0sYSk7Zm9yKHZhciBjPTE7YzxBYy5sZW5ndGg7YysrKXt2YXIgZD1BY1tjXTtkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKX19bnVsbCE9PUJjJiZVYyhCYyxhKTtudWxsIT09Q2MmJlVjKENjLGEpO251bGwhPT1EYyYmVWMoRGMsYSk7RWMuZm9yRWFjaChiKTtGYy5mb3JFYWNoKGIpO2ZvcihjPTA7YzxHYy5sZW5ndGg7YysrKWQ9R2NbY10sZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCk7Zm9yKDswPEdjLmxlbmd0aCYmKGM9R2NbMF0sbnVsbD09PWMuYmxvY2tlZE9uKTspUGMoYyksbnVsbD09PWMuYmxvY2tlZE9uJiZHYy5zaGlmdCgpfVxudmFyIFdjPXt9LFljPW5ldyBNYXAsWmM9bmV3IE1hcCwkYz1bXCJhYm9ydFwiLFwiYWJvcnRcIixYYixcImFuaW1hdGlvbkVuZFwiLFliLFwiYW5pbWF0aW9uSXRlcmF0aW9uXCIsWmIsXCJhbmltYXRpb25TdGFydFwiLFwiY2FucGxheVwiLFwiY2FuUGxheVwiLFwiY2FucGxheXRocm91Z2hcIixcImNhblBsYXlUaHJvdWdoXCIsXCJkdXJhdGlvbmNoYW5nZVwiLFwiZHVyYXRpb25DaGFuZ2VcIixcImVtcHRpZWRcIixcImVtcHRpZWRcIixcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmRlZFwiLFwiZW5kZWRcIixcImVycm9yXCIsXCJlcnJvclwiLFwiZ290cG9pbnRlcmNhcHR1cmVcIixcImdvdFBvaW50ZXJDYXB0dXJlXCIsXCJsb2FkXCIsXCJsb2FkXCIsXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCIsXCJsb2FkZWRtZXRhZGF0YVwiLFwibG9hZGVkTWV0YWRhdGFcIixcImxvYWRzdGFydFwiLFwibG9hZFN0YXJ0XCIsXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiLFwicGxheWluZ1wiLFwicGxheWluZ1wiLFwicHJvZ3Jlc3NcIixcInByb2dyZXNzXCIsXCJzZWVraW5nXCIsXG5cInNlZWtpbmdcIixcInN0YWxsZWRcIixcInN0YWxsZWRcIixcInN1c3BlbmRcIixcInN1c3BlbmRcIixcInRpbWV1cGRhdGVcIixcInRpbWVVcGRhdGVcIiwkYixcInRyYW5zaXRpb25FbmRcIixcIndhaXRpbmdcIixcIndhaXRpbmdcIl07ZnVuY3Rpb24gYWQoYSxiKXtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrPTIpe3ZhciBkPWFbY10sZT1hW2MrMV0sZj1cIm9uXCIrKGVbMF0udG9VcHBlckNhc2UoKStlLnNsaWNlKDEpKTtmPXtwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpmLGNhcHR1cmVkOmYrXCJDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbZF0sZXZlbnRQcmlvcml0eTpifTtaYy5zZXQoZCxiKTtZYy5zZXQoZCxmKTtXY1tlXT1mfX1cbmFkKFwiYmx1ciBibHVyIGNhbmNlbCBjYW5jZWwgY2xpY2sgY2xpY2sgY2xvc2UgY2xvc2UgY29udGV4dG1lbnUgY29udGV4dE1lbnUgY29weSBjb3B5IGN1dCBjdXQgYXV4Y2xpY2sgYXV4Q2xpY2sgZGJsY2xpY2sgZG91YmxlQ2xpY2sgZHJhZ2VuZCBkcmFnRW5kIGRyYWdzdGFydCBkcmFnU3RhcnQgZHJvcCBkcm9wIGZvY3VzIGZvY3VzIGlucHV0IGlucHV0IGludmFsaWQgaW52YWxpZCBrZXlkb3duIGtleURvd24ga2V5cHJlc3Mga2V5UHJlc3Mga2V5dXAga2V5VXAgbW91c2Vkb3duIG1vdXNlRG93biBtb3VzZXVwIG1vdXNlVXAgcGFzdGUgcGFzdGUgcGF1c2UgcGF1c2UgcGxheSBwbGF5IHBvaW50ZXJjYW5jZWwgcG9pbnRlckNhbmNlbCBwb2ludGVyZG93biBwb2ludGVyRG93biBwb2ludGVydXAgcG9pbnRlclVwIHJhdGVjaGFuZ2UgcmF0ZUNoYW5nZSByZXNldCByZXNldCBzZWVrZWQgc2Vla2VkIHN1Ym1pdCBzdWJtaXQgdG91Y2hjYW5jZWwgdG91Y2hDYW5jZWwgdG91Y2hlbmQgdG91Y2hFbmQgdG91Y2hzdGFydCB0b3VjaFN0YXJ0IHZvbHVtZWNoYW5nZSB2b2x1bWVDaGFuZ2VcIi5zcGxpdChcIiBcIiksMCk7XG5hZChcImRyYWcgZHJhZyBkcmFnZW50ZXIgZHJhZ0VudGVyIGRyYWdleGl0IGRyYWdFeGl0IGRyYWdsZWF2ZSBkcmFnTGVhdmUgZHJhZ292ZXIgZHJhZ092ZXIgbW91c2Vtb3ZlIG1vdXNlTW92ZSBtb3VzZW91dCBtb3VzZU91dCBtb3VzZW92ZXIgbW91c2VPdmVyIHBvaW50ZXJtb3ZlIHBvaW50ZXJNb3ZlIHBvaW50ZXJvdXQgcG9pbnRlck91dCBwb2ludGVyb3ZlciBwb2ludGVyT3ZlciBzY3JvbGwgc2Nyb2xsIHRvZ2dsZSB0b2dnbGUgdG91Y2htb3ZlIHRvdWNoTW92ZSB3aGVlbCB3aGVlbFwiLnNwbGl0KFwiIFwiKSwxKTthZCgkYywyKTtmb3IodmFyIGJkPVwiY2hhbmdlIHNlbGVjdGlvbmNoYW5nZSB0ZXh0SW5wdXQgY29tcG9zaXRpb25zdGFydCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnVwZGF0ZVwiLnNwbGl0KFwiIFwiKSxjZD0wO2NkPGJkLmxlbmd0aDtjZCsrKVpjLnNldChiZFtjZF0sMCk7XG52YXIgZGQ9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxlZD1yLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxmZD0hMDtmdW5jdGlvbiBGKGEsYil7dmMoYixhLCExKX1mdW5jdGlvbiB2YyhhLGIsYyl7dmFyIGQ9WmMuZ2V0KGIpO3N3aXRjaCh2b2lkIDA9PT1kPzI6ZCl7Y2FzZSAwOmQ9Z2QuYmluZChudWxsLGIsMSxhKTticmVhaztjYXNlIDE6ZD1oZC5iaW5kKG51bGwsYiwxLGEpO2JyZWFrO2RlZmF1bHQ6ZD1pZC5iaW5kKG51bGwsYiwxLGEpfWM/YS5hZGRFdmVudExpc3RlbmVyKGIsZCwhMCk6YS5hZGRFdmVudExpc3RlbmVyKGIsZCwhMSl9ZnVuY3Rpb24gZ2QoYSxiLGMsZCl7SmF8fEhhKCk7dmFyIGU9aWQsZj1KYTtKYT0hMDt0cnl7R2EoZSxhLGIsYyxkKX1maW5hbGx5eyhKYT1mKXx8TGEoKX19ZnVuY3Rpb24gaGQoYSxiLGMsZCl7ZWQoZGQsaWQuYmluZChudWxsLGEsYixjLGQpKX1cbmZ1bmN0aW9uIGlkKGEsYixjLGQpe2lmKGZkKWlmKDA8QWMubGVuZ3RoJiYtMTxIYy5pbmRleE9mKGEpKWE9S2MobnVsbCxhLGIsYyxkKSxBYy5wdXNoKGEpO2Vsc2V7dmFyIGU9UmMoYSxiLGMsZCk7aWYobnVsbD09PWUpTGMoYSxkKTtlbHNlIGlmKC0xPEhjLmluZGV4T2YoYSkpYT1LYyhlLGEsYixjLGQpLEFjLnB1c2goYSk7ZWxzZSBpZighT2MoZSxhLGIsYyxkKSl7TGMoYSxkKTthPXJjKGEsZCxudWxsLGIpO3RyeXtNYShzYyxhKX1maW5hbGx5e3FjKGEpfX19fVxuZnVuY3Rpb24gUmMoYSxiLGMsZCl7Yz1uYyhkKTtjPXRjKGMpO2lmKG51bGwhPT1jKXt2YXIgZT1kYyhjKTtpZihudWxsPT09ZSljPW51bGw7ZWxzZXt2YXIgZj1lLnRhZztpZigxMz09PWYpe2M9ZWMoZSk7aWYobnVsbCE9PWMpcmV0dXJuIGM7Yz1udWxsfWVsc2UgaWYoMz09PWYpe2lmKGUuc3RhdGVOb2RlLmh5ZHJhdGUpcmV0dXJuIDM9PT1lLnRhZz9lLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7Yz1udWxsfWVsc2UgZSE9PWMmJihjPW51bGwpfX1hPXJjKGEsZCxjLGIpO3RyeXtNYShzYyxhKX1maW5hbGx5e3FjKGEpfXJldHVybiBudWxsfVxudmFyIGpkPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LGtkPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhqZCkuZm9yRWFjaChmdW5jdGlvbihhKXtrZC5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO2pkW2JdPWpkW2FdfSl9KTtmdW5jdGlvbiBsZChhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8amQuaGFzT3duUHJvcGVydHkoYSkmJmpkW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIG1kKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPWxkKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIG5kPW4oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiBvZChhLGIpe2lmKGIpe2lmKG5kW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IodSgxMzcsYSxcIlwiKSk7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl7aWYobnVsbCE9Yi5jaGlsZHJlbil0aHJvdyBFcnJvcih1KDYwKSk7aWYoIShcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih1KDYxKSk7fWlmKG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZSl0aHJvdyBFcnJvcih1KDYyLFwiXCIpKTt9fVxuZnVuY3Rpb24gcGQoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fXZhciBxZD1NYi5odG1sO2Z1bmN0aW9uIHJkKGEsYil7YT05PT09YS5ub2RlVHlwZXx8MTE9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50O3ZhciBjPWNjKGEpO2I9d2FbYl07Zm9yKHZhciBkPTA7ZDxiLmxlbmd0aDtkKyspdWMoYltkXSxhLGMpfWZ1bmN0aW9uIHNkKCl7fVxuZnVuY3Rpb24gdGQoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fWZ1bmN0aW9uIHVkKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1mdW5jdGlvbiB2ZChhLGIpe3ZhciBjPXVkKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPXVkKGMpfX1cbmZ1bmN0aW9uIHdkKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/d2QoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfWZ1bmN0aW9uIHhkKCl7Zm9yKHZhciBhPXdpbmRvdyxiPXRkKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7dmFyIGM9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNvbnRlbnRXaW5kb3cubG9jYXRpb24uaHJlZn1jYXRjaChkKXtjPSExfWlmKGMpYT1iLmNvbnRlbnRXaW5kb3c7ZWxzZSBicmVhaztiPXRkKGEuZG9jdW1lbnQpfXJldHVybiBifVxuZnVuY3Rpb24geWQoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX12YXIgemQ9XCIkXCIsQWQ9XCIvJFwiLEJkPVwiJD9cIixDZD1cIiQhXCIsRGQ9bnVsbCxFZD1udWxsO2Z1bmN0aW9uIEZkKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1cbmZ1bmN0aW9uIEdkKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgSGQ9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsSWQ9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwO2Z1bmN0aW9uIEpkKGEpe2Zvcig7bnVsbCE9YTthPWEubmV4dFNpYmxpbmcpe3ZhciBiPWEubm9kZVR5cGU7aWYoMT09PWJ8fDM9PT1iKWJyZWFrfXJldHVybiBhfVxuZnVuY3Rpb24gS2QoYSl7YT1hLnByZXZpb3VzU2libGluZztmb3IodmFyIGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihjPT09emR8fGM9PT1DZHx8Yz09PUJkKXtpZigwPT09YilyZXR1cm4gYTtiLS19ZWxzZSBjPT09QWQmJmIrK31hPWEucHJldmlvdXNTaWJsaW5nfXJldHVybiBudWxsfXZhciBMZD1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSxNZD1cIl9fcmVhY3RJbnRlcm5hbEluc3RhbmNlJFwiK0xkLE5kPVwiX19yZWFjdEV2ZW50SGFuZGxlcnMkXCIrTGQsT2Q9XCJfX3JlYWN0Q29udGFpbmVyZSRcIitMZDtcbmZ1bmN0aW9uIHRjKGEpe3ZhciBiPWFbTWRdO2lmKGIpcmV0dXJuIGI7Zm9yKHZhciBjPWEucGFyZW50Tm9kZTtjOyl7aWYoYj1jW09kXXx8Y1tNZF0pe2M9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWIuY2hpbGR8fG51bGwhPT1jJiZudWxsIT09Yy5jaGlsZClmb3IoYT1LZChhKTtudWxsIT09YTspe2lmKGM9YVtNZF0pcmV0dXJuIGM7YT1LZChhKX1yZXR1cm4gYn1hPWM7Yz1hLnBhcmVudE5vZGV9cmV0dXJuIG51bGx9ZnVuY3Rpb24gTmMoYSl7YT1hW01kXXx8YVtPZF07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnJiYxMyE9PWEudGFnJiYzIT09YS50YWc/bnVsbDphfWZ1bmN0aW9uIFBkKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTt0aHJvdyBFcnJvcih1KDMzKSk7fWZ1bmN0aW9uIFFkKGEpe3JldHVybiBhW05kXXx8bnVsbH1cbmZ1bmN0aW9uIFJkKGEpe2RvIGE9YS5yZXR1cm47d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9XG5mdW5jdGlvbiBTZChhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKCFjKXJldHVybiBudWxsO3ZhciBkPWxhKGMpO2lmKCFkKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjpjYXNlIFwib25Nb3VzZUVudGVyXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtpZihjJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYyl0aHJvdyBFcnJvcih1KDIzMSxcbmIsdHlwZW9mIGMpKTtyZXR1cm4gY31mdW5jdGlvbiBUZChhLGIsYyl7aWYoYj1TZChhLGMuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXNbYl0pKWMuX2Rpc3BhdGNoTGlzdGVuZXJzPWljKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPWljKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpfWZ1bmN0aW9uIFVkKGEpe2lmKGEmJmEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMpe2Zvcih2YXIgYj1hLl90YXJnZXRJbnN0LGM9W107YjspYy5wdXNoKGIpLGI9UmQoYik7Zm9yKGI9Yy5sZW5ndGg7MDxiLS07KVRkKGNbYl0sXCJjYXB0dXJlZFwiLGEpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspVGQoY1tiXSxcImJ1YmJsZWRcIixhKX19XG5mdW5jdGlvbiBWZChhLGIsYyl7YSYmYyYmYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiYoYj1TZChhLGMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSkpJiYoYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9aWMoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9aWMoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSkpfWZ1bmN0aW9uIFdkKGEpe2EmJmEuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmVmQoYS5fdGFyZ2V0SW5zdCxudWxsLGEpfWZ1bmN0aW9uIFhkKGEpe2pjKGEsVWQpfXZhciBZZD1udWxsLFpkPW51bGwsJGQ9bnVsbDtcbmZ1bmN0aW9uIGFlKCl7aWYoJGQpcmV0dXJuICRkO3ZhciBhLGI9WmQsYz1iLmxlbmd0aCxkLGU9XCJ2YWx1ZVwiaW4gWWQ/WWQudmFsdWU6WWQudGV4dENvbnRlbnQsZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtyZXR1cm4gJGQ9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKX1mdW5jdGlvbiBiZSgpe3JldHVybiEwfWZ1bmN0aW9uIGNlKCl7cmV0dXJuITF9XG5mdW5jdGlvbiBHKGEsYixjLGQpe3RoaXMuZGlzcGF0Y2hDb25maWc9YTt0aGlzLl90YXJnZXRJbnN0PWI7dGhpcy5uYXRpdmVFdmVudD1jO2E9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2U7Zm9yKHZhciBlIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShlKSYmKChiPWFbZV0pP3RoaXNbZV09YihjKTpcInRhcmdldFwiPT09ZT90aGlzLnRhcmdldD1kOnRoaXNbZV09Y1tlXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWMuZGVmYXVsdFByZXZlbnRlZD9jLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1jLnJldHVyblZhbHVlKT9iZTpjZTt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWNlO3JldHVybiB0aGlzfVxubihHLnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWJlKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWJlKX0scGVyc2lzdDpmdW5jdGlvbigpe3RoaXMuaXNQZXJzaXN0ZW50PWJlfSxpc1BlcnNpc3RlbnQ6Y2UsZGVzdHJ1Y3RvcjpmdW5jdGlvbigpe3ZhciBhPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlLFxuYjtmb3IoYiBpbiBhKXRoaXNbYl09bnVsbDt0aGlzLm5hdGl2ZUV2ZW50PXRoaXMuX3RhcmdldEluc3Q9dGhpcy5kaXNwYXRjaENvbmZpZz1udWxsO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9Y2U7dGhpcy5fZGlzcGF0Y2hJbnN0YW5jZXM9dGhpcy5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbH19KTtHLkludGVyZmFjZT17dHlwZTpudWxsLHRhcmdldDpudWxsLGN1cnJlbnRUYXJnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sZXZlbnRQaGFzZTpudWxsLGJ1YmJsZXM6bnVsbCxjYW5jZWxhYmxlOm51bGwsdGltZVN0YW1wOmZ1bmN0aW9uKGEpe3JldHVybiBhLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX0sZGVmYXVsdFByZXZlbnRlZDpudWxsLGlzVHJ1c3RlZDpudWxsfTtcbkcuZXh0ZW5kPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoKXt9ZnVuY3Rpb24gYygpe3JldHVybiBkLmFwcGx5KHRoaXMsYXJndW1lbnRzKX12YXIgZD10aGlzO2IucHJvdG90eXBlPWQucHJvdG90eXBlO3ZhciBlPW5ldyBiO24oZSxjLnByb3RvdHlwZSk7Yy5wcm90b3R5cGU9ZTtjLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1jO2MuSW50ZXJmYWNlPW4oe30sZC5JbnRlcmZhY2UsYSk7Yy5leHRlbmQ9ZC5leHRlbmQ7ZGUoYyk7cmV0dXJuIGN9O2RlKEcpO2Z1bmN0aW9uIGVlKGEsYixjLGQpe2lmKHRoaXMuZXZlbnRQb29sLmxlbmd0aCl7dmFyIGU9dGhpcy5ldmVudFBvb2wucG9wKCk7dGhpcy5jYWxsKGUsYSxiLGMsZCk7cmV0dXJuIGV9cmV0dXJuIG5ldyB0aGlzKGEsYixjLGQpfVxuZnVuY3Rpb24gZmUoYSl7aWYoIShhIGluc3RhbmNlb2YgdGhpcykpdGhyb3cgRXJyb3IodSgyNzkpKTthLmRlc3RydWN0b3IoKTsxMD50aGlzLmV2ZW50UG9vbC5sZW5ndGgmJnRoaXMuZXZlbnRQb29sLnB1c2goYSl9ZnVuY3Rpb24gZGUoYSl7YS5ldmVudFBvb2w9W107YS5nZXRQb29sZWQ9ZWU7YS5yZWxlYXNlPWZlfXZhciBnZT1HLmV4dGVuZCh7ZGF0YTpudWxsfSksaGU9Ry5leHRlbmQoe2RhdGE6bnVsbH0pLGllPVs5LDEzLDI3LDMyXSxqZT15YSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csa2U9bnVsbDt5YSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYoa2U9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTtcbnZhciBsZT15YSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIWtlLG1lPXlhJiYoIWplfHxrZSYmODxrZSYmMTE+PWtlKSxuZT1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxvZT17YmVmb3JlSW5wdXQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25CZWZvcmVJbnB1dFwiLGNhcHR1cmVkOlwib25CZWZvcmVJbnB1dENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXX0sY29tcG9zaXRpb25FbmQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvbkVuZFwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvbkVuZENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbmVuZCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25TdGFydDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcbmNhcHR1cmVkOlwib25Db21wb3NpdGlvblN0YXJ0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uVXBkYXRlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb251cGRhdGUga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9fSxwZT0hMTtcbmZ1bmN0aW9uIHFlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09aWUuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImJsdXJcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiByZShhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciBzZT0hMTtmdW5jdGlvbiB0ZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gcmUoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO3BlPSEwO3JldHVybiBuZTtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1uZSYmcGU/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24gdWUoYSxiKXtpZihzZSlyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhamUmJnFlKGEsYik/KGE9YWUoKSwkZD1aZD1ZZD1udWxsLHNlPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBtZSYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgdmU9e2V2ZW50VHlwZXM6b2UsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZTtpZihqZSliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjp2YXIgZj1vZS5jb21wb3NpdGlvblN0YXJ0O2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6Zj1vZS5jb21wb3NpdGlvbkVuZDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOmY9b2UuY29tcG9zaXRpb25VcGRhdGU7YnJlYWsgYn1mPXZvaWQgMH1lbHNlIHNlP3FlKGEsYykmJihmPW9lLmNvbXBvc2l0aW9uRW5kKTpcImtleWRvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKGY9b2UuY29tcG9zaXRpb25TdGFydCk7Zj8obWUmJlwia29cIiE9PWMubG9jYWxlJiYoc2V8fGYhPT1vZS5jb21wb3NpdGlvblN0YXJ0P2Y9PT1vZS5jb21wb3NpdGlvbkVuZCYmc2UmJihlPWFlKCkpOihZZD1kLFpkPVwidmFsdWVcImluIFlkP1lkLnZhbHVlOllkLnRleHRDb250ZW50LHNlPSEwKSksZj1nZS5nZXRQb29sZWQoZixcbmIsYyxkKSxlP2YuZGF0YT1lOihlPXJlKGMpLG51bGwhPT1lJiYoZi5kYXRhPWUpKSxYZChmKSxlPWYpOmU9bnVsbDsoYT1sZT90ZShhLGMpOnVlKGEsYykpPyhiPWhlLmdldFBvb2xlZChvZS5iZWZvcmVJbnB1dCxiLGMsZCksYi5kYXRhPWEsWGQoYikpOmI9bnVsbDtyZXR1cm4gbnVsbD09PWU/YjpudWxsPT09Yj9lOltlLGJdfX0sd2U9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24geGUoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISF3ZVthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9XG52YXIgeWU9e2NoYW5nZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNoYW5nZVwiLGNhcHR1cmVkOlwib25DaGFuZ2VDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY2hhbmdlIGNsaWNrIGZvY3VzIGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX07ZnVuY3Rpb24gemUoYSxiLGMpe2E9Ry5nZXRQb29sZWQoeWUuY2hhbmdlLGEsYixjKTthLnR5cGU9XCJjaGFuZ2VcIjtEYShjKTtYZChhKTtyZXR1cm4gYX12YXIgQWU9bnVsbCxCZT1udWxsO2Z1bmN0aW9uIENlKGEpe21jKGEpfWZ1bmN0aW9uIERlKGEpe3ZhciBiPVBkKGEpO2lmKHliKGIpKXJldHVybiBhfWZ1bmN0aW9uIEVlKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIEZlPSExO3lhJiYoRmU9b2MoXCJpbnB1dFwiKSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKSk7XG5mdW5jdGlvbiBHZSgpe0FlJiYoQWUuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsSGUpLEJlPUFlPW51bGwpfWZ1bmN0aW9uIEhlKGEpe2lmKFwidmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZEZShCZSkpaWYoYT16ZShCZSxhLG5jKGEpKSxKYSltYyhhKTtlbHNle0phPSEwO3RyeXtGYShDZSxhKX1maW5hbGx5e0phPSExLExhKCl9fX1mdW5jdGlvbiBJZShhLGIsYyl7XCJmb2N1c1wiPT09YT8oR2UoKSxBZT1iLEJlPWMsQWUuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsSGUpKTpcImJsdXJcIj09PWEmJkdlKCl9ZnVuY3Rpb24gSmUoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gRGUoQmUpfWZ1bmN0aW9uIEtlKGEsYil7aWYoXCJjbGlja1wiPT09YSlyZXR1cm4gRGUoYil9ZnVuY3Rpb24gTGUoYSxiKXtpZihcImlucHV0XCI9PT1hfHxcImNoYW5nZVwiPT09YSlyZXR1cm4gRGUoYil9XG52YXIgTWU9e2V2ZW50VHlwZXM6eWUsX2lzSW5wdXRFdmVudFN1cHBvcnRlZDpGZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWI/UGQoYik6d2luZG93LGY9ZS5ub2RlTmFtZSYmZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKFwic2VsZWN0XCI9PT1mfHxcImlucHV0XCI9PT1mJiZcImZpbGVcIj09PWUudHlwZSl2YXIgZz1FZTtlbHNlIGlmKHhlKGUpKWlmKEZlKWc9TGU7ZWxzZXtnPUplO3ZhciBoPUllfWVsc2UoZj1lLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09Zi50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09ZS50eXBlfHxcInJhZGlvXCI9PT1lLnR5cGUpJiYoZz1LZSk7aWYoZyYmKGc9ZyhhLGIpKSlyZXR1cm4gemUoZyxjLGQpO2gmJmgoYSxlLGIpO1wiYmx1clwiPT09YSYmKGE9ZS5fd3JhcHBlclN0YXRlKSYmYS5jb250cm9sbGVkJiZcIm51bWJlclwiPT09ZS50eXBlJiZEYihlLFwibnVtYmVyXCIsZS52YWx1ZSl9fSxOZT1HLmV4dGVuZCh7dmlldzpudWxsLGRldGFpbDpudWxsfSksXG5PZT17QWx0OlwiYWx0S2V5XCIsQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gUGUoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1PZVthXSk/ISFiW2FdOiExfWZ1bmN0aW9uIFFlKCl7cmV0dXJuIFBlfVxudmFyIFJlPTAsU2U9MCxUZT0hMSxVZT0hMSxWZT1OZS5leHRlbmQoe3NjcmVlblg6bnVsbCxzY3JlZW5ZOm51bGwsY2xpZW50WDpudWxsLGNsaWVudFk6bnVsbCxwYWdlWDpudWxsLHBhZ2VZOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6UWUsYnV0dG9uOm51bGwsYnV0dG9uczpudWxsLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVsYXRlZFRhcmdldHx8KGEuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudCl9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFg7dmFyIGI9UmU7UmU9YS5zY3JlZW5YO3JldHVybiBUZT9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWC1iOjA6KFRlPSEwLDApfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFlcImluIGEpcmV0dXJuIGEubW92ZW1lbnRZO1xudmFyIGI9U2U7U2U9YS5zY3JlZW5ZO3JldHVybiBVZT9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWS1iOjA6KFVlPSEwLDApfX0pLFdlPVZlLmV4dGVuZCh7cG9pbnRlcklkOm51bGwsd2lkdGg6bnVsbCxoZWlnaHQ6bnVsbCxwcmVzc3VyZTpudWxsLHRhbmdlbnRpYWxQcmVzc3VyZTpudWxsLHRpbHRYOm51bGwsdGlsdFk6bnVsbCx0d2lzdDpudWxsLHBvaW50ZXJUeXBlOm51bGwsaXNQcmltYXJ5Om51bGx9KSxYZT17bW91c2VFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VFbnRlclwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxtb3VzZUxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUxlYXZlXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LHBvaW50ZXJFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckVudGVyXCIsZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfSxwb2ludGVyTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJMZWF2ZVwiLFxuZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfX0sWWU9e2V2ZW50VHlwZXM6WGUsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hLGc9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGYmJjA9PT0oZSYzMikmJihjLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpfHwhZyYmIWYpcmV0dXJuIG51bGw7Zj1kLndpbmRvdz09PWQ/ZDooZj1kLm93bmVyRG9jdW1lbnQpP2YuZGVmYXVsdFZpZXd8fGYucGFyZW50V2luZG93OndpbmRvdztpZihnKXtpZihnPWIsYj0oYj1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50KT90YyhiKTpudWxsLG51bGwhPT1iKXt2YXIgaD1kYyhiKTtpZihiIT09aHx8NSE9PWIudGFnJiY2IT09Yi50YWcpYj1udWxsfX1lbHNlIGc9bnVsbDtpZihnPT09YilyZXR1cm4gbnVsbDtpZihcIm1vdXNlb3V0XCI9PT1hfHxcIm1vdXNlb3ZlclwiPT09XG5hKXt2YXIgaz1WZTt2YXIgbD1YZS5tb3VzZUxlYXZlO3ZhciBtPVhlLm1vdXNlRW50ZXI7dmFyIHA9XCJtb3VzZVwifWVsc2UgaWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKWs9V2UsbD1YZS5wb2ludGVyTGVhdmUsbT1YZS5wb2ludGVyRW50ZXIscD1cInBvaW50ZXJcIjthPW51bGw9PWc/ZjpQZChnKTtmPW51bGw9PWI/ZjpQZChiKTtsPWsuZ2V0UG9vbGVkKGwsZyxjLGQpO2wudHlwZT1wK1wibGVhdmVcIjtsLnRhcmdldD1hO2wucmVsYXRlZFRhcmdldD1mO2M9ay5nZXRQb29sZWQobSxiLGMsZCk7Yy50eXBlPXArXCJlbnRlclwiO2MudGFyZ2V0PWY7Yy5yZWxhdGVkVGFyZ2V0PWE7ZD1nO3A9YjtpZihkJiZwKWE6e2s9ZDttPXA7Zz0wO2ZvcihhPWs7YTthPVJkKGEpKWcrKzthPTA7Zm9yKGI9bTtiO2I9UmQoYikpYSsrO2Zvcig7MDxnLWE7KWs9UmQoayksZy0tO2Zvcig7MDxhLWc7KW09UmQobSksYS0tO2Zvcig7Zy0tOyl7aWYoaz09PW18fGs9PT1tLmFsdGVybmF0ZSlicmVhayBhO1xuaz1SZChrKTttPVJkKG0pfWs9bnVsbH1lbHNlIGs9bnVsbDttPWs7Zm9yKGs9W107ZCYmZCE9PW07KXtnPWQuYWx0ZXJuYXRlO2lmKG51bGwhPT1nJiZnPT09bSlicmVhaztrLnB1c2goZCk7ZD1SZChkKX1mb3IoZD1bXTtwJiZwIT09bTspe2c9cC5hbHRlcm5hdGU7aWYobnVsbCE9PWcmJmc9PT1tKWJyZWFrO2QucHVzaChwKTtwPVJkKHApfWZvcihwPTA7cDxrLmxlbmd0aDtwKyspVmQoa1twXSxcImJ1YmJsZWRcIixsKTtmb3IocD1kLmxlbmd0aDswPHAtLTspVmQoZFtwXSxcImNhcHR1cmVkXCIsYyk7cmV0dXJuIDA9PT0oZSY2NCk/W2xdOltsLGNdfX07ZnVuY3Rpb24gWmUoYSxiKXtyZXR1cm4gYT09PWImJigwIT09YXx8MS9hPT09MS9iKXx8YSE9PWEmJmIhPT1ifXZhciAkZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgT2JqZWN0LmlzP09iamVjdC5pczpaZSxhZj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuZnVuY3Rpb24gYmYoYSxiKXtpZigkZShhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIWFmLmNhbGwoYixjW2RdKXx8ISRlKGFbY1tkXV0sYltjW2RdXSkpcmV0dXJuITE7cmV0dXJuITB9XG52YXIgY2Y9eWEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxkZj17c2VsZWN0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uU2VsZWN0XCIsY2FwdHVyZWQ6XCJvblNlbGVjdENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb250ZXh0bWVudSBkcmFnZW5kIGZvY3VzIGtleWRvd24ga2V5dXAgbW91c2Vkb3duIG1vdXNldXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX0sZWY9bnVsbCxmZj1udWxsLGdmPW51bGwsaGY9ITE7XG5mdW5jdGlvbiBqZihhLGIpe3ZhciBjPWIud2luZG93PT09Yj9iLmRvY3VtZW50Ojk9PT1iLm5vZGVUeXBlP2I6Yi5vd25lckRvY3VtZW50O2lmKGhmfHxudWxsPT1lZnx8ZWYhPT10ZChjKSlyZXR1cm4gbnVsbDtjPWVmO1wic2VsZWN0aW9uU3RhcnRcImluIGMmJnlkKGMpP2M9e3N0YXJ0OmMuc2VsZWN0aW9uU3RhcnQsZW5kOmMuc2VsZWN0aW9uRW5kfTooYz0oYy5vd25lckRvY3VtZW50JiZjLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCksYz17YW5jaG9yTm9kZTpjLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmMuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpjLmZvY3VzTm9kZSxmb2N1c09mZnNldDpjLmZvY3VzT2Zmc2V0fSk7cmV0dXJuIGdmJiZiZihnZixjKT9udWxsOihnZj1jLGE9Ry5nZXRQb29sZWQoZGYuc2VsZWN0LGZmLGEsYiksYS50eXBlPVwic2VsZWN0XCIsYS50YXJnZXQ9ZWYsWGQoYSksYSl9XG52YXIga2Y9e2V2ZW50VHlwZXM6ZGYsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkLGUsZil7ZT1mfHwoZC53aW5kb3c9PT1kP2QuZG9jdW1lbnQ6OT09PWQubm9kZVR5cGU/ZDpkLm93bmVyRG9jdW1lbnQpO2lmKCEoZj0hZSkpe2E6e2U9Y2MoZSk7Zj13YS5vblNlbGVjdDtmb3IodmFyIGc9MDtnPGYubGVuZ3RoO2crKylpZighZS5oYXMoZltnXSkpe2U9ITE7YnJlYWsgYX1lPSEwfWY9IWV9aWYoZilyZXR1cm4gbnVsbDtlPWI/UGQoYik6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjppZih4ZShlKXx8XCJ0cnVlXCI9PT1lLmNvbnRlbnRFZGl0YWJsZSllZj1lLGZmPWIsZ2Y9bnVsbDticmVhaztjYXNlIFwiYmx1clwiOmdmPWZmPWVmPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOmhmPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpyZXR1cm4gaGY9ITEsamYoYyxkKTtjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYoY2YpYnJlYWs7XG5jYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOnJldHVybiBqZihjLGQpfXJldHVybiBudWxsfX0sbGY9Ry5leHRlbmQoe2FuaW1hdGlvbk5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLG1mPUcuZXh0ZW5kKHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksbmY9TmUuZXh0ZW5kKHtyZWxhdGVkVGFyZ2V0Om51bGx9KTtmdW5jdGlvbiBvZihhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciBwZj17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0scWY9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LHJmPU5lLmV4dGVuZCh7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1wZlthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1vZihhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/cWZbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxsb2NhdGlvbjpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxyZXBlYXQ6bnVsbCxsb2NhbGU6bnVsbCxnZXRNb2RpZmllclN0YXRlOlFlLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP29mKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP29mKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksc2Y9VmUuZXh0ZW5kKHtkYXRhVHJhbnNmZXI6bnVsbH0pLHRmPU5lLmV4dGVuZCh7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlFlfSksdWY9Ry5leHRlbmQoe3Byb3BlcnR5TmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksdmY9VmUuZXh0ZW5kKHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW5cbmE/LWEud2hlZWxEZWx0YVg6MH0sZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOm51bGwsZGVsdGFNb2RlOm51bGx9KSx3Zj17ZXZlbnRUeXBlczpXYyxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPVljLmdldChhKTtpZighZSlyZXR1cm4gbnVsbDtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PW9mKGMpKXJldHVybiBudWxsO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6YT1yZjticmVhaztjYXNlIFwiYmx1clwiOmNhc2UgXCJmb2N1c1wiOmE9bmY7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKXJldHVybiBudWxsO2Nhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6YT1cblZlO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOmE9c2Y7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6YT10ZjticmVhaztjYXNlIFhiOmNhc2UgWWI6Y2FzZSBaYjphPWxmO2JyZWFrO2Nhc2UgJGI6YT11ZjticmVhaztjYXNlIFwic2Nyb2xsXCI6YT1OZTticmVhaztjYXNlIFwid2hlZWxcIjphPXZmO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOmE9bWY7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6YT1cbldlO2JyZWFrO2RlZmF1bHQ6YT1HfWI9YS5nZXRQb29sZWQoZSxiLGMsZCk7WGQoYik7cmV0dXJuIGJ9fTtpZihwYSl0aHJvdyBFcnJvcih1KDEwMSkpO3BhPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKFwiUmVzcG9uZGVyRXZlbnRQbHVnaW4gU2ltcGxlRXZlbnRQbHVnaW4gRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIENoYW5nZUV2ZW50UGx1Z2luIFNlbGVjdEV2ZW50UGx1Z2luIEJlZm9yZUlucHV0RXZlbnRQbHVnaW5cIi5zcGxpdChcIiBcIikpO3JhKCk7dmFyIHhmPU5jO2xhPVFkO21hPXhmO25hPVBkO3hhKHtTaW1wbGVFdmVudFBsdWdpbjp3ZixFbnRlckxlYXZlRXZlbnRQbHVnaW46WWUsQ2hhbmdlRXZlbnRQbHVnaW46TWUsU2VsZWN0RXZlbnRQbHVnaW46a2YsQmVmb3JlSW5wdXRFdmVudFBsdWdpbjp2ZX0pO3ZhciB5Zj1bXSx6Zj0tMTtmdW5jdGlvbiBIKGEpezA+emZ8fChhLmN1cnJlbnQ9eWZbemZdLHlmW3pmXT1udWxsLHpmLS0pfVxuZnVuY3Rpb24gSShhLGIpe3pmKys7eWZbemZdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn12YXIgQWY9e30sSj17Y3VycmVudDpBZn0sSz17Y3VycmVudDohMX0sQmY9QWY7ZnVuY3Rpb24gQ2YoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBBZjt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1mdW5jdGlvbiBMKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9XG5mdW5jdGlvbiBEZigpe0goSyk7SChKKX1mdW5jdGlvbiBFZihhLGIsYyl7aWYoSi5jdXJyZW50IT09QWYpdGhyb3cgRXJyb3IodSgxNjgpKTtJKEosYik7SShLLGMpfWZ1bmN0aW9uIEZmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTthPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZClpZighKGUgaW4gYSkpdGhyb3cgRXJyb3IodSgxMDgscGIoYil8fFwiVW5rbm93blwiLGUpKTtyZXR1cm4gbih7fSxjLHt9LGQpfWZ1bmN0aW9uIEdmKGEpe2E9KGE9YS5zdGF0ZU5vZGUpJiZhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxBZjtCZj1KLmN1cnJlbnQ7SShKLGEpO0koSyxLLmN1cnJlbnQpO3JldHVybiEwfVxuZnVuY3Rpb24gSGYoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2lmKCFkKXRocm93IEVycm9yKHUoMTY5KSk7Yz8oYT1GZihhLGIsQmYpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YSxIKEspLEgoSiksSShKLGEpKTpIKEspO0koSyxjKX1cbnZhciBJZj1yLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxKZj1yLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2ssS2Y9ci51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayxMZj1yLnVuc3RhYmxlX3JlcXVlc3RQYWludCxNZj1yLnVuc3RhYmxlX25vdyxOZj1yLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsLE9mPXIudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksUGY9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxRZj1yLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LFJmPXIudW5zdGFibGVfTG93UHJpb3JpdHksU2Y9ci51bnN0YWJsZV9JZGxlUHJpb3JpdHksVGY9e30sVWY9ci51bnN0YWJsZV9zaG91bGRZaWVsZCxWZj12b2lkIDAhPT1MZj9MZjpmdW5jdGlvbigpe30sV2Y9bnVsbCxYZj1udWxsLFlmPSExLFpmPU1mKCksJGY9MUU0PlpmP01mOmZ1bmN0aW9uKCl7cmV0dXJuIE1mKCktWmZ9O1xuZnVuY3Rpb24gYWcoKXtzd2l0Y2goTmYoKSl7Y2FzZSBPZjpyZXR1cm4gOTk7Y2FzZSBQZjpyZXR1cm4gOTg7Y2FzZSBRZjpyZXR1cm4gOTc7Y2FzZSBSZjpyZXR1cm4gOTY7Y2FzZSBTZjpyZXR1cm4gOTU7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMzMikpO319ZnVuY3Rpb24gYmcoYSl7c3dpdGNoKGEpe2Nhc2UgOTk6cmV0dXJuIE9mO2Nhc2UgOTg6cmV0dXJuIFBmO2Nhc2UgOTc6cmV0dXJuIFFmO2Nhc2UgOTY6cmV0dXJuIFJmO2Nhc2UgOTU6cmV0dXJuIFNmO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMzIpKTt9fWZ1bmN0aW9uIGNnKGEsYil7YT1iZyhhKTtyZXR1cm4gSWYoYSxiKX1mdW5jdGlvbiBkZyhhLGIsYyl7YT1iZyhhKTtyZXR1cm4gSmYoYSxiLGMpfWZ1bmN0aW9uIGVnKGEpe251bGw9PT1XZj8oV2Y9W2FdLFhmPUpmKE9mLGZnKSk6V2YucHVzaChhKTtyZXR1cm4gVGZ9ZnVuY3Rpb24gZ2coKXtpZihudWxsIT09WGYpe3ZhciBhPVhmO1hmPW51bGw7S2YoYSl9ZmcoKX1cbmZ1bmN0aW9uIGZnKCl7aWYoIVlmJiZudWxsIT09V2Ype1lmPSEwO3ZhciBhPTA7dHJ5e3ZhciBiPVdmO2NnKDk5LGZ1bmN0aW9uKCl7Zm9yKDthPGIubGVuZ3RoO2ErKyl7dmFyIGM9YlthXTtkbyBjPWMoITApO3doaWxlKG51bGwhPT1jKX19KTtXZj1udWxsfWNhdGNoKGMpe3Rocm93IG51bGwhPT1XZiYmKFdmPVdmLnNsaWNlKGErMSkpLEpmKE9mLGdnKSxjO31maW5hbGx5e1lmPSExfX19ZnVuY3Rpb24gaGcoYSxiLGMpe2MvPTEwO3JldHVybiAxMDczNzQxODIxLSgoKDEwNzM3NDE4MjEtYStiLzEwKS9jfDApKzEpKmN9ZnVuY3Rpb24gaWcoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1uKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSl9cmV0dXJuIGJ9dmFyIGpnPXtjdXJyZW50Om51bGx9LGtnPW51bGwsbGc9bnVsbCxtZz1udWxsO2Z1bmN0aW9uIG5nKCl7bWc9bGc9a2c9bnVsbH1cbmZ1bmN0aW9uIG9nKGEpe3ZhciBiPWpnLmN1cnJlbnQ7SChqZyk7YS50eXBlLl9jb250ZXh0Ll9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiBwZyhhLGIpe2Zvcig7bnVsbCE9PWE7KXt2YXIgYz1hLmFsdGVybmF0ZTtpZihhLmNoaWxkRXhwaXJhdGlvblRpbWU8YilhLmNoaWxkRXhwaXJhdGlvblRpbWU9YixudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihjLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7ZWxzZSBpZihudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGIpYy5jaGlsZEV4cGlyYXRpb25UaW1lPWI7ZWxzZSBicmVhazthPWEucmV0dXJufX1mdW5jdGlvbiBxZyhhLGIpe2tnPWE7bWc9bGc9bnVsbDthPWEuZGVwZW5kZW5jaWVzO251bGwhPT1hJiZudWxsIT09YS5maXJzdENvbnRleHQmJihhLmV4cGlyYXRpb25UaW1lPj1iJiYocmc9ITApLGEuZmlyc3RDb250ZXh0PW51bGwpfVxuZnVuY3Rpb24gc2coYSxiKXtpZihtZyE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpbWc9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07aWYobnVsbD09PWxnKXtpZihudWxsPT09a2cpdGhyb3cgRXJyb3IodSgzMDgpKTtsZz1iO2tnLmRlcGVuZGVuY2llcz17ZXhwaXJhdGlvblRpbWU6MCxmaXJzdENvbnRleHQ6YixyZXNwb25kZXJzOm51bGx9fWVsc2UgbGc9bGcubmV4dD1ifXJldHVybiBhLl9jdXJyZW50VmFsdWV9dmFyIHRnPSExO2Z1bmN0aW9uIHVnKGEpe2EudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLm1lbW9pemVkU3RhdGUsYmFzZVF1ZXVlOm51bGwsc2hhcmVkOntwZW5kaW5nOm51bGx9LGVmZmVjdHM6bnVsbH19XG5mdW5jdGlvbiB2ZyhhLGIpe2E9YS51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPT09YSYmKGIudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLmJhc2VTdGF0ZSxiYXNlUXVldWU6YS5iYXNlUXVldWUsc2hhcmVkOmEuc2hhcmVkLGVmZmVjdHM6YS5lZmZlY3RzfSl9ZnVuY3Rpb24gd2coYSxiKXthPXtleHBpcmF0aW9uVGltZTphLHN1c3BlbnNlQ29uZmlnOmIsdGFnOjAscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsfTtyZXR1cm4gYS5uZXh0PWF9ZnVuY3Rpb24geGcoYSxiKXthPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWEpe2E9YS5zaGFyZWQ7dmFyIGM9YS5wZW5kaW5nO251bGw9PT1jP2IubmV4dD1iOihiLm5leHQ9Yy5uZXh0LGMubmV4dD1iKTthLnBlbmRpbmc9Yn19XG5mdW5jdGlvbiB5ZyhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZ2ZyhjLGEpO2E9YS51cGRhdGVRdWV1ZTtjPWEuYmFzZVF1ZXVlO251bGw9PT1jPyhhLmJhc2VRdWV1ZT1iLm5leHQ9YixiLm5leHQ9Yik6KGIubmV4dD1jLm5leHQsYy5uZXh0PWIpfVxuZnVuY3Rpb24gemcoYSxiLGMsZCl7dmFyIGU9YS51cGRhdGVRdWV1ZTt0Zz0hMTt2YXIgZj1lLmJhc2VRdWV1ZSxnPWUuc2hhcmVkLnBlbmRpbmc7aWYobnVsbCE9PWcpe2lmKG51bGwhPT1mKXt2YXIgaD1mLm5leHQ7Zi5uZXh0PWcubmV4dDtnLm5leHQ9aH1mPWc7ZS5zaGFyZWQucGVuZGluZz1udWxsO2g9YS5hbHRlcm5hdGU7bnVsbCE9PWgmJihoPWgudXBkYXRlUXVldWUsbnVsbCE9PWgmJihoLmJhc2VRdWV1ZT1nKSl9aWYobnVsbCE9PWYpe2g9Zi5uZXh0O3ZhciBrPWUuYmFzZVN0YXRlLGw9MCxtPW51bGwscD1udWxsLHg9bnVsbDtpZihudWxsIT09aCl7dmFyIHo9aDtkb3tnPXouZXhwaXJhdGlvblRpbWU7aWYoZzxkKXt2YXIgY2E9e2V4cGlyYXRpb25UaW1lOnouZXhwaXJhdGlvblRpbWUsc3VzcGVuc2VDb25maWc6ei5zdXNwZW5zZUNvbmZpZyx0YWc6ei50YWcscGF5bG9hZDp6LnBheWxvYWQsY2FsbGJhY2s6ei5jYWxsYmFjayxuZXh0Om51bGx9O251bGw9PT14PyhwPXg9XG5jYSxtPWspOng9eC5uZXh0PWNhO2c+bCYmKGw9Zyl9ZWxzZXtudWxsIT09eCYmKHg9eC5uZXh0PXtleHBpcmF0aW9uVGltZToxMDczNzQxODIzLHN1c3BlbnNlQ29uZmlnOnouc3VzcGVuc2VDb25maWcsdGFnOnoudGFnLHBheWxvYWQ6ei5wYXlsb2FkLGNhbGxiYWNrOnouY2FsbGJhY2ssbmV4dDpudWxsfSk7QWcoZyx6LnN1c3BlbnNlQ29uZmlnKTthOnt2YXIgRD1hLHQ9ejtnPWI7Y2E9Yztzd2l0Y2godC50YWcpe2Nhc2UgMTpEPXQucGF5bG9hZDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgRCl7az1ELmNhbGwoY2EsayxnKTticmVhayBhfWs9RDticmVhayBhO2Nhc2UgMzpELmVmZmVjdFRhZz1ELmVmZmVjdFRhZyYtNDA5N3w2NDtjYXNlIDA6RD10LnBheWxvYWQ7Zz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgRD9ELmNhbGwoY2EsayxnKTpEO2lmKG51bGw9PT1nfHx2b2lkIDA9PT1nKWJyZWFrIGE7az1uKHt9LGssZyk7YnJlYWsgYTtjYXNlIDI6dGc9ITB9fW51bGwhPT16LmNhbGxiYWNrJiZcbihhLmVmZmVjdFRhZ3w9MzIsZz1lLmVmZmVjdHMsbnVsbD09PWc/ZS5lZmZlY3RzPVt6XTpnLnB1c2goeikpfXo9ei5uZXh0O2lmKG51bGw9PT16fHx6PT09aClpZihnPWUuc2hhcmVkLnBlbmRpbmcsbnVsbD09PWcpYnJlYWs7ZWxzZSB6PWYubmV4dD1nLm5leHQsZy5uZXh0PWgsZS5iYXNlUXVldWU9Zj1nLGUuc2hhcmVkLnBlbmRpbmc9bnVsbH13aGlsZSgxKX1udWxsPT09eD9tPWs6eC5uZXh0PXA7ZS5iYXNlU3RhdGU9bTtlLmJhc2VRdWV1ZT14O0JnKGwpO2EuZXhwaXJhdGlvblRpbWU9bDthLm1lbW9pemVkU3RhdGU9a319XG5mdW5jdGlvbiBDZyhhLGIsYyl7YT1iLmVmZmVjdHM7Yi5lZmZlY3RzPW51bGw7aWYobnVsbCE9PWEpZm9yKGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGQ9YVtiXSxlPWQuY2FsbGJhY2s7aWYobnVsbCE9PWUpe2QuY2FsbGJhY2s9bnVsbDtkPWU7ZT1jO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkKXRocm93IEVycm9yKHUoMTkxLGQpKTtkLmNhbGwoZSl9fX12YXIgRGc9V2EuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsRWc9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7ZnVuY3Rpb24gRmcoYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOm4oe30sYixjKTthLm1lbW9pemVkU3RhdGU9YzswPT09YS5leHBpcmF0aW9uVGltZSYmKGEudXBkYXRlUXVldWUuYmFzZVN0YXRlPWMpfVxudmFyIEpnPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbEZpYmVyKT9kYyhhKT09PWE6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9R2coKSxlPURnLnN1c3BlbnNlO2Q9SGcoZCxhLGUpO2U9d2coZCxlKTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7eGcoYSxlKTtJZyhhLGQpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1HZygpLGU9RGcuc3VzcGVuc2U7ZD1IZyhkLGEsZSk7ZT13ZyhkLGUpO2UudGFnPTE7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO3hnKGEsZSk7SWcoYSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGM9R2coKSxkPURnLnN1c3BlbnNlO1xuYz1IZyhjLGEsZCk7ZD13ZyhjLGQpO2QudGFnPTI7dm9pZCAwIT09YiYmbnVsbCE9PWImJihkLmNhbGxiYWNrPWIpO3hnKGEsZCk7SWcoYSxjKX19O2Z1bmN0aW9uIEtnKGEsYixjLGQsZSxmLGcpe2E9YS5zdGF0ZU5vZGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuc2hvdWxkQ29tcG9uZW50VXBkYXRlP2Euc2hvdWxkQ29tcG9uZW50VXBkYXRlKGQsZixnKTpiLnByb3RvdHlwZSYmYi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IWJmKGMsZCl8fCFiZihlLGYpOiEwfVxuZnVuY3Rpb24gTGcoYSxiLGMpe3ZhciBkPSExLGU9QWY7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2Y9c2coZik6KGU9TChiKT9CZjpKLmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9DZihhLGUpOkFmKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9Smc7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFsRmliZXI9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gTWcoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJkpnLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24gTmcoYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1FZzt1ZyhhKTt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PXNnKGYpOihmPUwoYik/QmY6Si5jdXJyZW50LGUuY29udGV4dD1DZihhLGYpKTt6ZyhhLGMsZSxkKTtlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtmPWIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYoRmcoYSxiLGYsYyksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc3x8XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8XG4oYj1lLnN0YXRlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmZS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxiIT09ZS5zdGF0ZSYmSmcuZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksemcoYSxjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50JiYoYS5lZmZlY3RUYWd8PTQpfXZhciBPZz1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gUGcoYSxiLGMpe2E9Yy5yZWY7aWYobnVsbCE9PWEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZcIm9iamVjdFwiIT09dHlwZW9mIGEpe2lmKGMuX293bmVyKXtjPWMuX293bmVyO2lmKGMpe2lmKDEhPT1jLnRhZyl0aHJvdyBFcnJvcih1KDMwOSkpO3ZhciBkPWMuc3RhdGVOb2RlfWlmKCFkKXRocm93IEVycm9yKHUoMTQ3LGEpKTt2YXIgZT1cIlwiK2E7aWYobnVsbCE9PWImJm51bGwhPT1iLnJlZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVmJiZiLnJlZi5fc3RyaW5nUmVmPT09ZSlyZXR1cm4gYi5yZWY7Yj1mdW5jdGlvbihhKXt2YXIgYj1kLnJlZnM7Yj09PUVnJiYoYj1kLnJlZnM9e30pO251bGw9PT1hP2RlbGV0ZSBiW2VdOmJbZV09YX07Yi5fc3RyaW5nUmVmPWU7cmV0dXJuIGJ9aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBhKXRocm93IEVycm9yKHUoMjg0KSk7aWYoIWMuX293bmVyKXRocm93IEVycm9yKHUoMjkwLGEpKTt9cmV0dXJuIGF9XG5mdW5jdGlvbiBRZyhhLGIpe2lmKFwidGV4dGFyZWFcIiE9PWEudHlwZSl0aHJvdyBFcnJvcih1KDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YixcIlwiKSk7fVxuZnVuY3Rpb24gUmcoYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIubGFzdEVmZmVjdDtudWxsIT09ZD8oZC5uZXh0RWZmZWN0PWMsYi5sYXN0RWZmZWN0PWMpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWM7Yy5uZXh0RWZmZWN0PW51bGw7Yy5lZmZlY3RUYWc9OH19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIpe2E9U2coYSxiKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZWZmZWN0VGFnPVxuMixjKTpkO2IuZWZmZWN0VGFnPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmVmZmVjdFRhZz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9VGcoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gayhhLGIsYyxkKXtpZihudWxsIT09YiYmYi5lbGVtZW50VHlwZT09PWMudHlwZSlyZXR1cm4gZD1lKGIsYy5wcm9wcyksZC5yZWY9UGcoYSxiLGMpLGQucmV0dXJuPWEsZDtkPVVnKGMudHlwZSxjLmtleSxjLnByb3BzLG51bGwsYS5tb2RlLGQpO2QucmVmPVBnKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIGwoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1cbmMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9VmcoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG0oYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPVdnKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gcChhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9VGcoXCJcIitiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2UgWmE6cmV0dXJuIGM9VWcoYi50eXBlLGIua2V5LGIucHJvcHMsbnVsbCxhLm1vZGUsYyksYy5yZWY9UGcoYSxudWxsLGIpLGMucmV0dXJuPWEsYztjYXNlICRhOnJldHVybiBiPVZnKGIsYS5tb2RlLGMpLGIucmV0dXJuPWEsYn1pZihPZyhiKXx8XG5uYihiKSlyZXR1cm4gYj1XZyhiLGEubW9kZSxjLG51bGwpLGIucmV0dXJuPWEsYjtRZyhhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIHgoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2UgWmE6cmV0dXJuIGMua2V5PT09ZT9jLnR5cGU9PT1hYj9tKGEsYixjLnByb3BzLmNoaWxkcmVuLGQsZSk6ayhhLGIsYyxkKTpudWxsO2Nhc2UgJGE6cmV0dXJuIGMua2V5PT09ZT9sKGEsYixjLGQpOm51bGx9aWYoT2coYyl8fG5iKGMpKXJldHVybiBudWxsIT09ZT9udWxsOm0oYSxiLGMsZCxudWxsKTtRZyhhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIHooYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1cbmEuZ2V0KGMpfHxudWxsLGgoYixhLFwiXCIrZCxlKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSBaYTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsZC50eXBlPT09YWI/bShiLGEsZC5wcm9wcy5jaGlsZHJlbixlLGQua2V5KTprKGIsYSxkLGUpO2Nhc2UgJGE6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGwoYixhLGQsZSl9aWYoT2coZCl8fG5iKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLG0oYixhLGQsZSxudWxsKTtRZyhiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIGNhKGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLHQ9bnVsbCxtPWcseT1nPTAsQT1udWxsO251bGwhPT1tJiZ5PGgubGVuZ3RoO3krKyl7bS5pbmRleD55PyhBPW0sbT1udWxsKTpBPW0uc2libGluZzt2YXIgcT14KGUsbSxoW3ldLGspO2lmKG51bGw9PT1xKXtudWxsPT09bSYmKG09QSk7YnJlYWt9YSYmXG5tJiZudWxsPT09cS5hbHRlcm5hdGUmJmIoZSxtKTtnPWYocSxnLHkpO251bGw9PT10P2w9cTp0LnNpYmxpbmc9cTt0PXE7bT1BfWlmKHk9PT1oLmxlbmd0aClyZXR1cm4gYyhlLG0pLGw7aWYobnVsbD09PW0pe2Zvcig7eTxoLmxlbmd0aDt5KyspbT1wKGUsaFt5XSxrKSxudWxsIT09bSYmKGc9ZihtLGcseSksbnVsbD09PXQ/bD1tOnQuc2libGluZz1tLHQ9bSk7cmV0dXJuIGx9Zm9yKG09ZChlLG0pO3k8aC5sZW5ndGg7eSsrKUE9eihtLGUseSxoW3ldLGspLG51bGwhPT1BJiYoYSYmbnVsbCE9PUEuYWx0ZXJuYXRlJiZtLmRlbGV0ZShudWxsPT09QS5rZXk/eTpBLmtleSksZz1mKEEsZyx5KSxudWxsPT09dD9sPUE6dC5zaWJsaW5nPUEsdD1BKTthJiZtLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIEQoZSxnLGgsbCl7dmFyIGs9bmIoaCk7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGspdGhyb3cgRXJyb3IodSgxNTApKTtoPWsuY2FsbChoKTtcbmlmKG51bGw9PWgpdGhyb3cgRXJyb3IodSgxNTEpKTtmb3IodmFyIG09az1udWxsLHQ9Zyx5PWc9MCxBPW51bGwscT1oLm5leHQoKTtudWxsIT09dCYmIXEuZG9uZTt5KysscT1oLm5leHQoKSl7dC5pbmRleD55PyhBPXQsdD1udWxsKTpBPXQuc2libGluZzt2YXIgRD14KGUsdCxxLnZhbHVlLGwpO2lmKG51bGw9PT1EKXtudWxsPT09dCYmKHQ9QSk7YnJlYWt9YSYmdCYmbnVsbD09PUQuYWx0ZXJuYXRlJiZiKGUsdCk7Zz1mKEQsZyx5KTtudWxsPT09bT9rPUQ6bS5zaWJsaW5nPUQ7bT1EO3Q9QX1pZihxLmRvbmUpcmV0dXJuIGMoZSx0KSxrO2lmKG51bGw9PT10KXtmb3IoOyFxLmRvbmU7eSsrLHE9aC5uZXh0KCkpcT1wKGUscS52YWx1ZSxsKSxudWxsIT09cSYmKGc9ZihxLGcseSksbnVsbD09PW0/az1xOm0uc2libGluZz1xLG09cSk7cmV0dXJuIGt9Zm9yKHQ9ZChlLHQpOyFxLmRvbmU7eSsrLHE9aC5uZXh0KCkpcT16KHQsZSx5LHEudmFsdWUsbCksbnVsbCE9PXEmJihhJiZudWxsIT09XG5xLmFsdGVybmF0ZSYmdC5kZWxldGUobnVsbD09PXEua2V5P3k6cS5rZXkpLGc9ZihxLGcseSksbnVsbD09PW0/az1xOm0uc2libGluZz1xLG09cSk7YSYmdC5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4ga31yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09YWImJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2UgWmE6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKXtzd2l0Y2goay50YWcpe2Nhc2UgNzppZihmLnR5cGU9PT1hYil7YyhhLGsuc2libGluZyk7ZD1lKGssZi5wcm9wcy5jaGlsZHJlbik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1icmVhaztkZWZhdWx0OmlmKGsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxcbmsuc2libGluZyk7ZD1lKGssZi5wcm9wcyk7ZC5yZWY9UGcoYSxrLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9fWMoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPWsuc2libGluZ31mLnR5cGU9PT1hYj8oZD1XZyhmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9VWcoZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9UGcoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlICRhOmE6e2ZvcihrPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1rKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPVxuZC5zaWJsaW5nfWQ9VmcoZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9VGcoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoT2coZikpcmV0dXJuIGNhKGEsZCxmLGgpO2lmKG5iKGYpKXJldHVybiBEKGEsZCxmLGgpO2wmJlFnKGEsZik7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBmJiYhaylzd2l0Y2goYS50YWcpe2Nhc2UgMTpjYXNlIDA6dGhyb3cgYT1hLnR5cGUsRXJyb3IodSgxNTIsYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxcIkNvbXBvbmVudFwiKSk7fXJldHVybiBjKGEsZCl9fXZhciBYZz1SZyghMCksWWc9UmcoITEpLFpnPXt9LCRnPXtjdXJyZW50OlpnfSxhaD17Y3VycmVudDpaZ30sYmg9e2N1cnJlbnQ6Wmd9O1xuZnVuY3Rpb24gY2goYSl7aWYoYT09PVpnKXRocm93IEVycm9yKHUoMTc0KSk7cmV0dXJuIGF9ZnVuY3Rpb24gZGgoYSxiKXtJKGJoLGIpO0koYWgsYSk7SSgkZyxaZyk7YT1iLm5vZGVUeXBlO3N3aXRjaChhKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTpPYihudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6YT04PT09YT9iLnBhcmVudE5vZGU6YixiPWEubmFtZXNwYWNlVVJJfHxudWxsLGE9YS50YWdOYW1lLGI9T2IoYixhKX1IKCRnKTtJKCRnLGIpfWZ1bmN0aW9uIGVoKCl7SCgkZyk7SChhaCk7SChiaCl9ZnVuY3Rpb24gZmgoYSl7Y2goYmguY3VycmVudCk7dmFyIGI9Y2goJGcuY3VycmVudCk7dmFyIGM9T2IoYixhLnR5cGUpO2IhPT1jJiYoSShhaCxhKSxJKCRnLGMpKX1mdW5jdGlvbiBnaChhKXthaC5jdXJyZW50PT09YSYmKEgoJGcpLEgoYWgpKX12YXIgTT17Y3VycmVudDowfTtcbmZ1bmN0aW9uIGhoKGEpe2Zvcih2YXIgYj1hO251bGwhPT1iOyl7aWYoMTM9PT1iLnRhZyl7dmFyIGM9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbD09PWN8fGMuZGF0YT09PUJkfHxjLmRhdGE9PT1DZCkpcmV0dXJuIGJ9ZWxzZSBpZigxOT09PWIudGFnJiZ2b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMucmV2ZWFsT3JkZXIpe2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXJldHVybiBifWVsc2UgaWYobnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ31yZXR1cm4gbnVsbH1mdW5jdGlvbiBpaChhLGIpe3JldHVybntyZXNwb25kZXI6YSxwcm9wczpifX1cbnZhciBqaD1XYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGtoPVdhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLGxoPTAsTj1udWxsLE89bnVsbCxQPW51bGwsbWg9ITE7ZnVuY3Rpb24gUSgpe3Rocm93IEVycm9yKHUoMzIxKSk7fWZ1bmN0aW9uIG5oKGEsYil7aWYobnVsbD09PWIpcmV0dXJuITE7Zm9yKHZhciBjPTA7YzxiLmxlbmd0aCYmYzxhLmxlbmd0aDtjKyspaWYoISRlKGFbY10sYltjXSkpcmV0dXJuITE7cmV0dXJuITB9XG5mdW5jdGlvbiBvaChhLGIsYyxkLGUsZil7bGg9ZjtOPWI7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2IuZXhwaXJhdGlvblRpbWU9MDtqaC5jdXJyZW50PW51bGw9PT1hfHxudWxsPT09YS5tZW1vaXplZFN0YXRlP3BoOnFoO2E9YyhkLGUpO2lmKGIuZXhwaXJhdGlvblRpbWU9PT1saCl7Zj0wO2Rve2IuZXhwaXJhdGlvblRpbWU9MDtpZighKDI1PmYpKXRocm93IEVycm9yKHUoMzAxKSk7Zis9MTtQPU89bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7amguY3VycmVudD1yaDthPWMoZCxlKX13aGlsZShiLmV4cGlyYXRpb25UaW1lPT09bGgpfWpoLmN1cnJlbnQ9c2g7Yj1udWxsIT09TyYmbnVsbCE9PU8ubmV4dDtsaD0wO1A9Tz1OPW51bGw7bWg9ITE7aWYoYil0aHJvdyBFcnJvcih1KDMwMCkpO3JldHVybiBhfVxuZnVuY3Rpb24gdGgoKXt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpudWxsLGJhc2VTdGF0ZTpudWxsLGJhc2VRdWV1ZTpudWxsLHF1ZXVlOm51bGwsbmV4dDpudWxsfTtudWxsPT09UD9OLm1lbW9pemVkU3RhdGU9UD1hOlA9UC5uZXh0PWE7cmV0dXJuIFB9ZnVuY3Rpb24gdWgoKXtpZihudWxsPT09Tyl7dmFyIGE9Ti5hbHRlcm5hdGU7YT1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbH1lbHNlIGE9Ty5uZXh0O3ZhciBiPW51bGw9PT1QP04ubWVtb2l6ZWRTdGF0ZTpQLm5leHQ7aWYobnVsbCE9PWIpUD1iLE89YTtlbHNle2lmKG51bGw9PT1hKXRocm93IEVycm9yKHUoMzEwKSk7Tz1hO2E9e21lbW9pemVkU3RhdGU6Ty5tZW1vaXplZFN0YXRlLGJhc2VTdGF0ZTpPLmJhc2VTdGF0ZSxiYXNlUXVldWU6Ty5iYXNlUXVldWUscXVldWU6Ty5xdWV1ZSxuZXh0Om51bGx9O251bGw9PT1QP04ubWVtb2l6ZWRTdGF0ZT1QPWE6UD1QLm5leHQ9YX1yZXR1cm4gUH1cbmZ1bmN0aW9uIHZoKGEsYil7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihhKTpifVxuZnVuY3Rpb24gd2goYSl7dmFyIGI9dWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IodSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1PLGU9ZC5iYXNlUXVldWUsZj1jLnBlbmRpbmc7aWYobnVsbCE9PWYpe2lmKG51bGwhPT1lKXt2YXIgZz1lLm5leHQ7ZS5uZXh0PWYubmV4dDtmLm5leHQ9Z31kLmJhc2VRdWV1ZT1lPWY7Yy5wZW5kaW5nPW51bGx9aWYobnVsbCE9PWUpe2U9ZS5uZXh0O2Q9ZC5iYXNlU3RhdGU7dmFyIGg9Zz1mPW51bGwsaz1lO2Rve3ZhciBsPWsuZXhwaXJhdGlvblRpbWU7aWYobDxsaCl7dmFyIG09e2V4cGlyYXRpb25UaW1lOmsuZXhwaXJhdGlvblRpbWUsc3VzcGVuc2VDb25maWc6ay5zdXNwZW5zZUNvbmZpZyxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLGVhZ2VyU3RhdGU6ay5lYWdlclN0YXRlLG5leHQ6bnVsbH07bnVsbD09PWg/KGc9aD1tLGY9ZCk6aD1oLm5leHQ9bTtsPk4uZXhwaXJhdGlvblRpbWUmJlxuKE4uZXhwaXJhdGlvblRpbWU9bCxCZyhsKSl9ZWxzZSBudWxsIT09aCYmKGg9aC5uZXh0PXtleHBpcmF0aW9uVGltZToxMDczNzQxODIzLHN1c3BlbnNlQ29uZmlnOmsuc3VzcGVuc2VDb25maWcsYWN0aW9uOmsuYWN0aW9uLGVhZ2VyUmVkdWNlcjprLmVhZ2VyUmVkdWNlcixlYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9KSxBZyhsLGsuc3VzcGVuc2VDb25maWcpLGQ9ay5lYWdlclJlZHVjZXI9PT1hP2suZWFnZXJTdGF0ZTphKGQsay5hY3Rpb24pO2s9ay5uZXh0fXdoaWxlKG51bGwhPT1rJiZrIT09ZSk7bnVsbD09PWg/Zj1kOmgubmV4dD1nOyRlKGQsYi5tZW1vaXplZFN0YXRlKXx8KHJnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZDtiLmJhc2VTdGF0ZT1mO2IuYmFzZVF1ZXVlPWg7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1kfXJldHVybltiLm1lbW9pemVkU3RhdGUsYy5kaXNwYXRjaF19XG5mdW5jdGlvbiB4aChhKXt2YXIgYj11aCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih1KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPWMuZGlzcGF0Y2gsZT1jLnBlbmRpbmcsZj1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWUpe2MucGVuZGluZz1udWxsO3ZhciBnPWU9ZS5uZXh0O2RvIGY9YShmLGcuYWN0aW9uKSxnPWcubmV4dDt3aGlsZShnIT09ZSk7JGUoZixiLm1lbW9pemVkU3RhdGUpfHwocmc9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO251bGw9PT1iLmJhc2VRdWV1ZSYmKGIuYmFzZVN0YXRlPWYpO2MubGFzdFJlbmRlcmVkU3RhdGU9Zn1yZXR1cm5bZixkXX1cbmZ1bmN0aW9uIHloKGEpe3ZhciBiPXRoKCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEmJihhPWEoKSk7Yi5tZW1vaXplZFN0YXRlPWIuYmFzZVN0YXRlPWE7YT1iLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOnZoLGxhc3RSZW5kZXJlZFN0YXRlOmF9O2E9YS5kaXNwYXRjaD16aC5iaW5kKG51bGwsTixhKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGFdfWZ1bmN0aW9uIEFoKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxkZXBzOmQsbmV4dDpudWxsfTtiPU4udXBkYXRlUXVldWU7bnVsbD09PWI/KGI9e2xhc3RFZmZlY3Q6bnVsbH0sTi51cGRhdGVRdWV1ZT1iLGIubGFzdEVmZmVjdD1hLm5leHQ9YSk6KGM9Yi5sYXN0RWZmZWN0LG51bGw9PT1jP2IubGFzdEVmZmVjdD1hLm5leHQ9YTooZD1jLm5leHQsYy5uZXh0PWEsYS5uZXh0PWQsYi5sYXN0RWZmZWN0PWEpKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIEJoKCl7cmV0dXJuIHVoKCkubWVtb2l6ZWRTdGF0ZX1mdW5jdGlvbiBDaChhLGIsYyxkKXt2YXIgZT10aCgpO04uZWZmZWN0VGFnfD1hO2UubWVtb2l6ZWRTdGF0ZT1BaCgxfGIsYyx2b2lkIDAsdm9pZCAwPT09ZD9udWxsOmQpfWZ1bmN0aW9uIERoKGEsYixjLGQpe3ZhciBlPXVoKCk7ZD12b2lkIDA9PT1kP251bGw6ZDt2YXIgZj12b2lkIDA7aWYobnVsbCE9PU8pe3ZhciBnPU8ubWVtb2l6ZWRTdGF0ZTtmPWcuZGVzdHJveTtpZihudWxsIT09ZCYmbmgoZCxnLmRlcHMpKXtBaChiLGMsZixkKTtyZXR1cm59fU4uZWZmZWN0VGFnfD1hO2UubWVtb2l6ZWRTdGF0ZT1BaCgxfGIsYyxmLGQpfWZ1bmN0aW9uIEVoKGEsYil7cmV0dXJuIENoKDUxNiw0LGEsYil9ZnVuY3Rpb24gRmgoYSxiKXtyZXR1cm4gRGgoNTE2LDQsYSxiKX1mdW5jdGlvbiBHaChhLGIpe3JldHVybiBEaCg0LDIsYSxiKX1cbmZ1bmN0aW9uIEhoKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19ZnVuY3Rpb24gSWgoYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBEaCg0LDIsSGguYmluZChudWxsLGIsYSksYyl9ZnVuY3Rpb24gSmgoKXt9ZnVuY3Rpb24gS2goYSxiKXt0aCgpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfWZ1bmN0aW9uIExoKGEsYil7dmFyIGM9dWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJm5oKGIsZFsxXSkpcmV0dXJuIGRbMF07Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfVxuZnVuY3Rpb24gTWgoYSxiKXt2YXIgYz11aCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmbmgoYixkWzFdKSlyZXR1cm4gZFswXTthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9ZnVuY3Rpb24gTmgoYSxiLGMpe3ZhciBkPWFnKCk7Y2coOTg+ZD85ODpkLGZ1bmN0aW9uKCl7YSghMCl9KTtjZyg5NzxkPzk3OmQsZnVuY3Rpb24oKXt2YXIgZD1raC5zdXNwZW5zZTtraC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7YSghMSksYygpfWZpbmFsbHl7a2guc3VzcGVuc2U9ZH19KX1cbmZ1bmN0aW9uIHpoKGEsYixjKXt2YXIgZD1HZygpLGU9RGcuc3VzcGVuc2U7ZD1IZyhkLGEsZSk7ZT17ZXhwaXJhdGlvblRpbWU6ZCxzdXNwZW5zZUNvbmZpZzplLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9O3ZhciBmPWIucGVuZGluZztudWxsPT09Zj9lLm5leHQ9ZTooZS5uZXh0PWYubmV4dCxmLm5leHQ9ZSk7Yi5wZW5kaW5nPWU7Zj1hLmFsdGVybmF0ZTtpZihhPT09Tnx8bnVsbCE9PWYmJmY9PT1OKW1oPSEwLGUuZXhwaXJhdGlvblRpbWU9bGgsTi5leHBpcmF0aW9uVGltZT1saDtlbHNle2lmKDA9PT1hLmV4cGlyYXRpb25UaW1lJiYobnVsbD09PWZ8fDA9PT1mLmV4cGlyYXRpb25UaW1lKSYmKGY9Yi5sYXN0UmVuZGVyZWRSZWR1Y2VyLG51bGwhPT1mKSl0cnl7dmFyIGc9Yi5sYXN0UmVuZGVyZWRTdGF0ZSxoPWYoZyxjKTtlLmVhZ2VyUmVkdWNlcj1mO2UuZWFnZXJTdGF0ZT1oO2lmKCRlKGgsZykpcmV0dXJufWNhdGNoKGspe31maW5hbGx5e31JZyhhLFxuZCl9fVxudmFyIHNoPXtyZWFkQ29udGV4dDpzZyx1c2VDYWxsYmFjazpRLHVzZUNvbnRleHQ6USx1c2VFZmZlY3Q6USx1c2VJbXBlcmF0aXZlSGFuZGxlOlEsdXNlTGF5b3V0RWZmZWN0OlEsdXNlTWVtbzpRLHVzZVJlZHVjZXI6USx1c2VSZWY6USx1c2VTdGF0ZTpRLHVzZURlYnVnVmFsdWU6USx1c2VSZXNwb25kZXI6USx1c2VEZWZlcnJlZFZhbHVlOlEsdXNlVHJhbnNpdGlvbjpRfSxwaD17cmVhZENvbnRleHQ6c2csdXNlQ2FsbGJhY2s6S2gsdXNlQ29udGV4dDpzZyx1c2VFZmZlY3Q6RWgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIENoKDQsMixIaC5iaW5kKG51bGwsYixhKSxjKX0sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIENoKDQsMixhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9dGgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxcbmJdO3JldHVybiBhfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aCgpO2I9dm9pZCAwIT09Yz9jKGIpOmI7ZC5tZW1vaXplZFN0YXRlPWQuYmFzZVN0YXRlPWI7YT1kLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOmEsbGFzdFJlbmRlcmVkU3RhdGU6Yn07YT1hLmRpc3BhdGNoPXpoLmJpbmQobnVsbCxOLGEpO3JldHVybltkLm1lbW9pemVkU3RhdGUsYV19LHVzZVJlZjpmdW5jdGlvbihhKXt2YXIgYj10aCgpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfSx1c2VTdGF0ZTp5aCx1c2VEZWJ1Z1ZhbHVlOkpoLHVzZVJlc3BvbmRlcjppaCx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEsYil7dmFyIGM9eWgoYSksZD1jWzBdLGU9Y1sxXTtFaChmdW5jdGlvbigpe3ZhciBjPWtoLnN1c3BlbnNlO2toLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXtlKGEpfWZpbmFsbHl7a2guc3VzcGVuc2U9XG5jfX0sW2EsYl0pO3JldHVybiBkfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPXloKCExKSxjPWJbMF07Yj1iWzFdO3JldHVybltLaChOaC5iaW5kKG51bGwsYixhKSxbYixhXSksY119fSxxaD17cmVhZENvbnRleHQ6c2csdXNlQ2FsbGJhY2s6TGgsdXNlQ29udGV4dDpzZyx1c2VFZmZlY3Q6RmgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpJaCx1c2VMYXlvdXRFZmZlY3Q6R2gsdXNlTWVtbzpNaCx1c2VSZWR1Y2VyOndoLHVzZVJlZjpCaCx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiB3aCh2aCl9LHVzZURlYnVnVmFsdWU6SmgsdXNlUmVzcG9uZGVyOmloLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSxiKXt2YXIgYz13aCh2aCksZD1jWzBdLGU9Y1sxXTtGaChmdW5jdGlvbigpe3ZhciBjPWtoLnN1c3BlbnNlO2toLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXtlKGEpfWZpbmFsbHl7a2guc3VzcGVuc2U9Y319LFthLGJdKTtyZXR1cm4gZH0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbihhKXt2YXIgYj1cbndoKHZoKSxjPWJbMF07Yj1iWzFdO3JldHVybltMaChOaC5iaW5kKG51bGwsYixhKSxbYixhXSksY119fSxyaD17cmVhZENvbnRleHQ6c2csdXNlQ2FsbGJhY2s6TGgsdXNlQ29udGV4dDpzZyx1c2VFZmZlY3Q6RmgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpJaCx1c2VMYXlvdXRFZmZlY3Q6R2gsdXNlTWVtbzpNaCx1c2VSZWR1Y2VyOnhoLHVzZVJlZjpCaCx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiB4aCh2aCl9LHVzZURlYnVnVmFsdWU6SmgsdXNlUmVzcG9uZGVyOmloLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSxiKXt2YXIgYz14aCh2aCksZD1jWzBdLGU9Y1sxXTtGaChmdW5jdGlvbigpe3ZhciBjPWtoLnN1c3BlbnNlO2toLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXtlKGEpfWZpbmFsbHl7a2guc3VzcGVuc2U9Y319LFthLGJdKTtyZXR1cm4gZH0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbihhKXt2YXIgYj14aCh2aCksYz1iWzBdO2I9YlsxXTtyZXR1cm5bTGgoTmguYmluZChudWxsLFxuYixhKSxbYixhXSksY119fSxPaD1udWxsLFBoPW51bGwsUWg9ITE7ZnVuY3Rpb24gUmgoYSxiKXt2YXIgYz1TaCg1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2MudHlwZT1cIkRFTEVURURcIjtjLnN0YXRlTm9kZT1iO2MucmV0dXJuPWE7Yy5lZmZlY3RUYWc9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfVxuZnVuY3Rpb24gVGgoYSxiKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTp2YXIgYz1hLnR5cGU7Yj0xIT09Yi5ub2RlVHlwZXx8Yy50b0xvd2VyQ2FzZSgpIT09Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP251bGw6YjtyZXR1cm4gbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgNjpyZXR1cm4gYj1cIlwiPT09YS5wZW5kaW5nUHJvcHN8fDMhPT1iLm5vZGVUeXBlP251bGw6YixudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSAxMzpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIFVoKGEpe2lmKFFoKXt2YXIgYj1QaDtpZihiKXt2YXIgYz1iO2lmKCFUaChhLGIpKXtiPUpkKGMubmV4dFNpYmxpbmcpO2lmKCFifHwhVGgoYSxiKSl7YS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTEwMjV8MjtRaD0hMTtPaD1hO3JldHVybn1SaChPaCxjKX1PaD1hO1BoPUpkKGIuZmlyc3RDaGlsZCl9ZWxzZSBhLmVmZmVjdFRhZz1hLmVmZmVjdFRhZyYtMTAyNXwyLFFoPSExLE9oPWF9fWZ1bmN0aW9uIFZoKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZyYmMTMhPT1hLnRhZzspYT1hLnJldHVybjtPaD1hfVxuZnVuY3Rpb24gV2goYSl7aWYoYSE9PU9oKXJldHVybiExO2lmKCFRaClyZXR1cm4gVmgoYSksUWg9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFHZChiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9UGg7YjspUmgoYSxiKSxiPUpkKGIubmV4dFNpYmxpbmcpO1ZoKGEpO2lmKDEzPT09YS50YWcpe2E9YS5tZW1vaXplZFN0YXRlO2E9bnVsbCE9PWE/YS5kZWh5ZHJhdGVkOm51bGw7aWYoIWEpdGhyb3cgRXJyb3IodSgzMTcpKTthOnthPWEubmV4dFNpYmxpbmc7Zm9yKGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihjPT09QWQpe2lmKDA9PT1iKXtQaD1KZChhLm5leHRTaWJsaW5nKTticmVhayBhfWItLX1lbHNlIGMhPT16ZCYmYyE9PUNkJiZjIT09QmR8fGIrK31hPWEubmV4dFNpYmxpbmd9UGg9bnVsbH19ZWxzZSBQaD1PaD9KZChhLnN0YXRlTm9kZS5uZXh0U2libGluZyk6bnVsbDtyZXR1cm4hMH1cbmZ1bmN0aW9uIFhoKCl7UGg9T2g9bnVsbDtRaD0hMX12YXIgWWg9V2EuUmVhY3RDdXJyZW50T3duZXIscmc9ITE7ZnVuY3Rpb24gUihhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP1lnKGIsbnVsbCxjLGQpOlhnKGIsYS5jaGlsZCxjLGQpfWZ1bmN0aW9uIFpoKGEsYixjLGQsZSl7Yz1jLnJlbmRlcjt2YXIgZj1iLnJlZjtxZyhiLGUpO2Q9b2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhcmcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmVmZmVjdFRhZyY9LTUxNyxhLmV4cGlyYXRpb25UaW1lPD1lJiYoYS5leHBpcmF0aW9uVGltZT0wKSwkaChhLGIsZSk7Yi5lZmZlY3RUYWd8PTE7UihhLGIsZCxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGFpKGEsYixjLGQsZSxmKXtpZihudWxsPT09YSl7dmFyIGc9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiYhYmkoZykmJnZvaWQgMD09PWcuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWcsY2koYSxiLGcsZCxlLGYpO2E9VWcoYy50eXBlLG51bGwsZCxudWxsLGIubW9kZSxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9Zz1hLmNoaWxkO2lmKGU8ZiYmKGU9Zy5tZW1vaXplZFByb3BzLGM9Yy5jb21wYXJlLGM9bnVsbCE9PWM/YzpiZixjKGUsZCkmJmEucmVmPT09Yi5yZWYpKXJldHVybiAkaChhLGIsZik7Yi5lZmZlY3RUYWd8PTE7YT1TZyhnLGQpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1cbmZ1bmN0aW9uIGNpKGEsYixjLGQsZSxmKXtyZXR1cm4gbnVsbCE9PWEmJmJmKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZiYmKHJnPSExLGU8Zik/KGIuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZSwkaChhLGIsZikpOmRpKGEsYixjLGQsZil9ZnVuY3Rpb24gZWkoYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5lZmZlY3RUYWd8PTEyOH1mdW5jdGlvbiBkaShhLGIsYyxkLGUpe3ZhciBmPUwoYyk/QmY6Si5jdXJyZW50O2Y9Q2YoYixmKTtxZyhiLGUpO2M9b2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhcmcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmVmZmVjdFRhZyY9LTUxNyxhLmV4cGlyYXRpb25UaW1lPD1lJiYoYS5leHBpcmF0aW9uVGltZT0wKSwkaChhLGIsZSk7Yi5lZmZlY3RUYWd8PTE7UihhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGZpKGEsYixjLGQsZSl7aWYoTChjKSl7dmFyIGY9ITA7R2YoYil9ZWxzZSBmPSExO3FnKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKW51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxMZyhiLGMsZCksTmcoYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9c2cobCk6KGw9TChjKT9CZjpKLmN1cnJlbnQsbD1DZihiLGwpKTt2YXIgbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxwPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZTtwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmTWcoYixnLGQsbCk7dGc9ITE7dmFyIHg9Yi5tZW1vaXplZFN0YXRlO2cuc3RhdGU9eDt6ZyhiLGQsZyxlKTtrPWIubWVtb2l6ZWRTdGF0ZTtoIT09ZHx8eCE9PWt8fEsuY3VycmVudHx8dGc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoRmcoYixjLG0sZCksaz1iLm1lbW9pemVkU3RhdGUpLChoPXRnfHxLZyhiLGMsaCxkLHgsayxsKSk/KHB8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudHx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudCYmZy5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSksXCJmdW5jdGlvblwiPT09XG50eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1rKSxnLnByb3BzPWQsZy5zdGF0ZT1rLGcuY29udGV4dD1sLGQ9aCk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGQ9ITEpfWVsc2UgZz1iLnN0YXRlTm9kZSx2ZyhhLGIpLGg9Yi5tZW1vaXplZFByb3BzLGcucHJvcHM9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOmlnKGIudHlwZSxoKSxrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGUsXCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPXNnKGwpOihsPUwoYyk/QmY6Si5jdXJyZW50LGw9Q2YoYixsKSksbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcywocD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09XG50eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmTWcoYixnLGQsbCksdGc9ITEsaz1iLm1lbW9pemVkU3RhdGUsZy5zdGF0ZT1rLHpnKGIsZCxnLGUpLHg9Yi5tZW1vaXplZFN0YXRlLGghPT1kfHxrIT09eHx8Sy5jdXJyZW50fHx0Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihGZyhiLGMsbSxkKSx4PWIubWVtb2l6ZWRTdGF0ZSksKG09dGd8fEtnKGIsYyxoLGQsayx4LGwpKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZnLmNvbXBvbmVudFdpbGxVcGRhdGUoZCxcbngsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCx4LGwpKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmVmZmVjdFRhZ3w9MjU2KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT14KSxnLnByb3BzPWQsZy5zdGF0ZT14LGcuY29udGV4dD1sLGQ9bSk6XG4oXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksZD0hMSk7cmV0dXJuIGdpKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIGdpKGEsYixjLGQsZSxmKXtlaShhLGIpO3ZhciBnPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmSGYoYixjLCExKSwkaChhLGIsZik7ZD1iLnN0YXRlTm9kZTtZaC5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmVmZmVjdFRhZ3w9MTtudWxsIT09YSYmZz8oYi5jaGlsZD1YZyhiLGEuY2hpbGQsbnVsbCxmKSxiLmNoaWxkPVhnKGIsbnVsbCxoLGYpKTpSKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJkhmKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gaGkoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9FZihhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZFZihhLGIuY29udGV4dCwhMSk7ZGgoYSxiLmNvbnRhaW5lckluZm8pfVxudmFyIGlpPXtkZWh5ZHJhdGVkOm51bGwscmV0cnlUaW1lOjB9O1xuZnVuY3Rpb24gamkoYSxiLGMpe3ZhciBkPWIubW9kZSxlPWIucGVuZGluZ1Byb3BzLGY9TS5jdXJyZW50LGc9ITEsaDsoaD0wIT09KGIuZWZmZWN0VGFnJjY0KSl8fChoPTAhPT0oZiYyKSYmKG51bGw9PT1hfHxudWxsIT09YS5tZW1vaXplZFN0YXRlKSk7aD8oZz0hMCxiLmVmZmVjdFRhZyY9LTY1KTpudWxsIT09YSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZXx8dm9pZCAwPT09ZS5mYWxsYmFja3x8ITA9PT1lLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwoZnw9MSk7SShNLGYmMSk7aWYobnVsbD09PWEpe3ZvaWQgMCE9PWUuZmFsbGJhY2smJlVoKGIpO2lmKGcpe2c9ZS5mYWxsYmFjaztlPVdnKG51bGwsZCwwLG51bGwpO2UucmV0dXJuPWI7aWYoMD09PShiLm1vZGUmMikpZm9yKGE9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZS5jaGlsZD1hO251bGwhPT1hOylhLnJldHVybj1lLGE9YS5zaWJsaW5nO2M9V2coZyxkLGMsbnVsbCk7Yy5yZXR1cm49XG5iO2Uuc2libGluZz1jO2IubWVtb2l6ZWRTdGF0ZT1paTtiLmNoaWxkPWU7cmV0dXJuIGN9ZD1lLmNoaWxkcmVuO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBiLmNoaWxkPVlnKGIsbnVsbCxkLGMpfWlmKG51bGwhPT1hLm1lbW9pemVkU3RhdGUpe2E9YS5jaGlsZDtkPWEuc2libGluZztpZihnKXtlPWUuZmFsbGJhY2s7Yz1TZyhhLGEucGVuZGluZ1Byb3BzKTtjLnJldHVybj1iO2lmKDA9PT0oYi5tb2RlJjIpJiYoZz1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxnIT09YS5jaGlsZCkpZm9yKGMuY2hpbGQ9ZztudWxsIT09ZzspZy5yZXR1cm49YyxnPWcuc2libGluZztkPVNnKGQsZSk7ZC5yZXR1cm49YjtjLnNpYmxpbmc9ZDtjLmNoaWxkRXhwaXJhdGlvblRpbWU9MDtiLm1lbW9pemVkU3RhdGU9aWk7Yi5jaGlsZD1jO3JldHVybiBkfWM9WGcoYixhLmNoaWxkLGUuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGIuY2hpbGQ9XG5jfWE9YS5jaGlsZDtpZihnKXtnPWUuZmFsbGJhY2s7ZT1XZyhudWxsLGQsMCxudWxsKTtlLnJldHVybj1iO2UuY2hpbGQ9YTtudWxsIT09YSYmKGEucmV0dXJuPWUpO2lmKDA9PT0oYi5tb2RlJjIpKWZvcihhPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGUuY2hpbGQ9YTtudWxsIT09YTspYS5yZXR1cm49ZSxhPWEuc2libGluZztjPVdnKGcsZCxjLG51bGwpO2MucmV0dXJuPWI7ZS5zaWJsaW5nPWM7Yy5lZmZlY3RUYWd8PTI7ZS5jaGlsZEV4cGlyYXRpb25UaW1lPTA7Yi5tZW1vaXplZFN0YXRlPWlpO2IuY2hpbGQ9ZTtyZXR1cm4gY31iLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYi5jaGlsZD1YZyhiLGEsZS5jaGlsZHJlbixjKX1cbmZ1bmN0aW9uIGtpKGEsYil7YS5leHBpcmF0aW9uVGltZTxiJiYoYS5leHBpcmF0aW9uVGltZT1iKTt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxiJiYoYy5leHBpcmF0aW9uVGltZT1iKTtwZyhhLnJldHVybixiKX1mdW5jdGlvbiBsaShhLGIsYyxkLGUsZil7dmFyIGc9YS5tZW1vaXplZFN0YXRlO251bGw9PT1nP2EubWVtb2l6ZWRTdGF0ZT17aXNCYWNrd2FyZHM6YixyZW5kZXJpbmc6bnVsbCxyZW5kZXJpbmdTdGFydFRpbWU6MCxsYXN0OmQsdGFpbDpjLHRhaWxFeHBpcmF0aW9uOjAsdGFpbE1vZGU6ZSxsYXN0RWZmZWN0OmZ9OihnLmlzQmFja3dhcmRzPWIsZy5yZW5kZXJpbmc9bnVsbCxnLnJlbmRlcmluZ1N0YXJ0VGltZT0wLGcubGFzdD1kLGcudGFpbD1jLGcudGFpbEV4cGlyYXRpb249MCxnLnRhaWxNb2RlPWUsZy5sYXN0RWZmZWN0PWYpfVxuZnVuY3Rpb24gbWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5yZXZlYWxPcmRlcixmPWQudGFpbDtSKGEsYixkLmNoaWxkcmVuLGMpO2Q9TS5jdXJyZW50O2lmKDAhPT0oZCYyKSlkPWQmMXwyLGIuZWZmZWN0VGFnfD02NDtlbHNle2lmKG51bGwhPT1hJiYwIT09KGEuZWZmZWN0VGFnJjY0KSlhOmZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtpZigxMz09PWEudGFnKW51bGwhPT1hLm1lbW9pemVkU3RhdGUmJmtpKGEsYyk7ZWxzZSBpZigxOT09PWEudGFnKWtpKGEsYyk7ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWIpYnJlYWsgYTtmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YilicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31kJj0xfUkoTSxkKTtpZigwPT09KGIubW9kZSYyKSliLm1lbW9pemVkU3RhdGU9XG5udWxsO2Vsc2Ugc3dpdGNoKGUpe2Nhc2UgXCJmb3J3YXJkc1wiOmM9Yi5jaGlsZDtmb3IoZT1udWxsO251bGwhPT1jOylhPWMuYWx0ZXJuYXRlLG51bGwhPT1hJiZudWxsPT09aGgoYSkmJihlPWMpLGM9Yy5zaWJsaW5nO2M9ZTtudWxsPT09Yz8oZT1iLmNoaWxkLGIuY2hpbGQ9bnVsbCk6KGU9Yy5zaWJsaW5nLGMuc2libGluZz1udWxsKTtsaShiLCExLGUsYyxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcImJhY2t3YXJkc1wiOmM9bnVsbDtlPWIuY2hpbGQ7Zm9yKGIuY2hpbGQ9bnVsbDtudWxsIT09ZTspe2E9ZS5hbHRlcm5hdGU7aWYobnVsbCE9PWEmJm51bGw9PT1oaChhKSl7Yi5jaGlsZD1lO2JyZWFrfWE9ZS5zaWJsaW5nO2Uuc2libGluZz1jO2M9ZTtlPWF9bGkoYiwhMCxjLG51bGwsZixiLmxhc3RFZmZlY3QpO2JyZWFrO2Nhc2UgXCJ0b2dldGhlclwiOmxpKGIsITEsbnVsbCxudWxsLHZvaWQgMCxiLmxhc3RFZmZlY3QpO2JyZWFrO2RlZmF1bHQ6Yi5tZW1vaXplZFN0YXRlPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiAkaChhLGIsYyl7bnVsbCE9PWEmJihiLmRlcGVuZGVuY2llcz1hLmRlcGVuZGVuY2llcyk7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTswIT09ZCYmQmcoZCk7aWYoYi5jaGlsZEV4cGlyYXRpb25UaW1lPGMpcmV0dXJuIG51bGw7aWYobnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkKXRocm93IEVycm9yKHUoMTUzKSk7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPVNnKGEsYS5wZW5kaW5nUHJvcHMpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1TZyhhLGEucGVuZGluZ1Byb3BzKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfXZhciBuaSxvaSxwaSxxaTtcbm5pPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTtvaT1mdW5jdGlvbigpe307XG5waT1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPWEubWVtb2l6ZWRQcm9wcztpZihmIT09ZCl7dmFyIGc9Yi5zdGF0ZU5vZGU7Y2goJGcuY3VycmVudCk7YT1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpmPXpiKGcsZik7ZD16YihnLGQpO2E9W107YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmY9R2IoZyxmKTtkPUdiKGcsZCk7YT1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6Zj1uKHt9LGYse3ZhbHVlOnZvaWQgMH0pO2Q9bih7fSxkLHt2YWx1ZTp2b2lkIDB9KTthPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmY9SWIoZyxmKTtkPUliKGcsZCk7YT1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBmLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihnLm9uY2xpY2s9c2QpfW9kKGMsZCk7dmFyIGgsaztjPW51bGw7Zm9yKGggaW4gZilpZighZC5oYXNPd25Qcm9wZXJ0eShoKSYmZi5oYXNPd25Qcm9wZXJ0eShoKSYmbnVsbCE9ZltoXSlpZihcInN0eWxlXCI9PT1cbmgpZm9yKGsgaW4gZz1mW2hdLGcpZy5oYXNPd25Qcm9wZXJ0eShrKSYmKGN8fChjPXt9KSxjW2tdPVwiXCIpO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1oJiZcImNoaWxkcmVuXCIhPT1oJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09aCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWgmJlwiYXV0b0ZvY3VzXCIhPT1oJiYodmEuaGFzT3duUHJvcGVydHkoaCk/YXx8KGE9W10pOihhPWF8fFtdKS5wdXNoKGgsbnVsbCkpO2ZvcihoIGluIGQpe3ZhciBsPWRbaF07Zz1udWxsIT1mP2ZbaF06dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkoaCkmJmwhPT1nJiYobnVsbCE9bHx8bnVsbCE9ZykpaWYoXCJzdHlsZVwiPT09aClpZihnKXtmb3IoayBpbiBnKSFnLmhhc093blByb3BlcnR5KGspfHxsJiZsLmhhc093blByb3BlcnR5KGspfHwoY3x8KGM9e30pLGNba109XCJcIik7Zm9yKGsgaW4gbClsLmhhc093blByb3BlcnR5KGspJiZnW2tdIT09bFtrXSYmKGN8fChjPXt9KSxcbmNba109bFtrXSl9ZWxzZSBjfHwoYXx8KGE9W10pLGEucHVzaChoLGMpKSxjPWw7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWg/KGw9bD9sLl9faHRtbDp2b2lkIDAsZz1nP2cuX19odG1sOnZvaWQgMCxudWxsIT1sJiZnIT09bCYmKGE9YXx8W10pLnB1c2goaCxsKSk6XCJjaGlsZHJlblwiPT09aD9nPT09bHx8XCJzdHJpbmdcIiE9PXR5cGVvZiBsJiZcIm51bWJlclwiIT09dHlwZW9mIGx8fChhPWF8fFtdKS5wdXNoKGgsXCJcIitsKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09aCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWgmJih2YS5oYXNPd25Qcm9wZXJ0eShoKT8obnVsbCE9bCYmcmQoZSxoKSxhfHxnPT09bHx8KGE9W10pKTooYT1hfHxbXSkucHVzaChoLGwpKX1jJiYoYT1hfHxbXSkucHVzaChcInN0eWxlXCIsYyk7ZT1hO2lmKGIudXBkYXRlUXVldWU9ZSliLmVmZmVjdFRhZ3w9NH19O1xucWk9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJihiLmVmZmVjdFRhZ3w9NCl9O2Z1bmN0aW9uIHJpKGEsYil7c3dpdGNoKGEudGFpbE1vZGUpe2Nhc2UgXCJoaWRkZW5cIjpiPWEudGFpbDtmb3IodmFyIGM9bnVsbDtudWxsIT09YjspbnVsbCE9PWIuYWx0ZXJuYXRlJiYoYz1iKSxiPWIuc2libGluZztudWxsPT09Yz9hLnRhaWw9bnVsbDpjLnNpYmxpbmc9bnVsbDticmVhaztjYXNlIFwiY29sbGFwc2VkXCI6Yz1hLnRhaWw7Zm9yKHZhciBkPW51bGw7bnVsbCE9PWM7KW51bGwhPT1jLmFsdGVybmF0ZSYmKGQ9YyksYz1jLnNpYmxpbmc7bnVsbD09PWQ/Ynx8bnVsbD09PWEudGFpbD9hLnRhaWw9bnVsbDphLnRhaWwuc2libGluZz1udWxsOmQuc2libGluZz1udWxsfX1cbmZ1bmN0aW9uIHNpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcztzd2l0Y2goYi50YWcpe2Nhc2UgMjpjYXNlIDE2OmNhc2UgMTU6Y2FzZSAwOmNhc2UgMTE6Y2FzZSA3OmNhc2UgODpjYXNlIDEyOmNhc2UgOTpjYXNlIDE0OnJldHVybiBudWxsO2Nhc2UgMTpyZXR1cm4gTChiLnR5cGUpJiZEZigpLG51bGw7Y2FzZSAzOnJldHVybiBlaCgpLEgoSyksSChKKSxjPWIuc3RhdGVOb2RlLGMucGVuZGluZ0NvbnRleHQmJihjLmNvbnRleHQ9Yy5wZW5kaW5nQ29udGV4dCxjLnBlbmRpbmdDb250ZXh0PW51bGwpLG51bGwhPT1hJiZudWxsIT09YS5jaGlsZHx8IVdoKGIpfHwoYi5lZmZlY3RUYWd8PTQpLG9pKGIpLG51bGw7Y2FzZSA1OmdoKGIpO2M9Y2goYmguY3VycmVudCk7dmFyIGU9Yi50eXBlO2lmKG51bGwhPT1hJiZudWxsIT1iLnN0YXRlTm9kZSlwaShhLGIsZSxkLGMpLGEucmVmIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KTtlbHNle2lmKCFkKXtpZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjYpKTtcbnJldHVybiBudWxsfWE9Y2goJGcuY3VycmVudCk7aWYoV2goYikpe2Q9Yi5zdGF0ZU5vZGU7ZT1iLnR5cGU7dmFyIGY9Yi5tZW1vaXplZFByb3BzO2RbTWRdPWI7ZFtOZF09Zjtzd2l0Y2goZSl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpGKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihhPTA7YTxhYy5sZW5ndGg7YSsrKUYoYWNbYV0sZCk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkYoXCJlcnJvclwiLGQpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkYoXCJlcnJvclwiLGQpO0YoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcImZvcm1cIjpGKFwicmVzZXRcIixkKTtGKFwic3VibWl0XCIsZCk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpGKFwidG9nZ2xlXCIsZCk7YnJlYWs7Y2FzZSBcImlucHV0XCI6QWIoZCxmKTtGKFwiaW52YWxpZFwiLGQpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZC5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhZi5tdWx0aXBsZX07RihcImludmFsaWRcIixkKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6SmIoZCxmKSxGKFwiaW52YWxpZFwiLGQpLHJkKGMsXCJvbkNoYW5nZVwiKX1vZChlLGYpO2E9bnVsbDtmb3IodmFyIGcgaW4gZilpZihmLmhhc093blByb3BlcnR5KGcpKXt2YXIgaD1mW2ddO1wiY2hpbGRyZW5cIj09PWc/XCJzdHJpbmdcIj09PXR5cGVvZiBoP2QudGV4dENvbnRlbnQhPT1oJiYoYT1bXCJjaGlsZHJlblwiLGhdKTpcIm51bWJlclwiPT09dHlwZW9mIGgmJmQudGV4dENvbnRlbnQhPT1cIlwiK2gmJihhPVtcImNoaWxkcmVuXCIsXCJcIitoXSk6dmEuaGFzT3duUHJvcGVydHkoZykmJm51bGwhPWgmJnJkKGMsZyl9c3dpdGNoKGUpe2Nhc2UgXCJpbnB1dFwiOnhiKGQpO0ViKGQsZiwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6eGIoZCk7TGIoZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLm9uQ2xpY2smJlxuKGQub25jbGljaz1zZCl9Yz1hO2IudXBkYXRlUXVldWU9YztudWxsIT09YyYmKGIuZWZmZWN0VGFnfD00KX1lbHNle2c9OT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQ7YT09PXFkJiYoYT1OYihlKSk7YT09PXFkP1wic2NyaXB0XCI9PT1lPyhhPWcuY3JlYXRlRWxlbWVudChcImRpdlwiKSxhLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGE9YS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpKTpcInN0cmluZ1wiPT09dHlwZW9mIGQuaXM/YT1nLmNyZWF0ZUVsZW1lbnQoZSx7aXM6ZC5pc30pOihhPWcuY3JlYXRlRWxlbWVudChlKSxcInNlbGVjdFwiPT09ZSYmKGc9YSxkLm11bHRpcGxlP2cubXVsdGlwbGU9ITA6ZC5zaXplJiYoZy5zaXplPWQuc2l6ZSkpKTphPWcuY3JlYXRlRWxlbWVudE5TKGEsZSk7YVtNZF09YjthW05kXT1kO25pKGEsYiwhMSwhMSk7Yi5zdGF0ZU5vZGU9YTtnPXBkKGUsZCk7c3dpdGNoKGUpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RihcImxvYWRcIixcbmEpO2g9ZDticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoaD0wO2g8YWMubGVuZ3RoO2grKylGKGFjW2hdLGEpO2g9ZDticmVhaztjYXNlIFwic291cmNlXCI6RihcImVycm9yXCIsYSk7aD1kO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkYoXCJlcnJvclwiLGEpO0YoXCJsb2FkXCIsYSk7aD1kO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RihcInJlc2V0XCIsYSk7RihcInN1Ym1pdFwiLGEpO2g9ZDticmVhaztjYXNlIFwiZGV0YWlsc1wiOkYoXCJ0b2dnbGVcIixhKTtoPWQ7YnJlYWs7Y2FzZSBcImlucHV0XCI6QWIoYSxkKTtoPXpiKGEsZCk7RihcImludmFsaWRcIixhKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmg9R2IoYSxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIWQubXVsdGlwbGV9O2g9bih7fSxkLHt2YWx1ZTp2b2lkIDB9KTtGKFwiaW52YWxpZFwiLGEpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpKYihhLFxuZCk7aD1JYihhLGQpO0YoXCJpbnZhbGlkXCIsYSk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2RlZmF1bHQ6aD1kfW9kKGUsaCk7dmFyIGs9aDtmb3IoZiBpbiBrKWlmKGsuaGFzT3duUHJvcGVydHkoZikpe3ZhciBsPWtbZl07XCJzdHlsZVwiPT09Zj9tZChhLGwpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWY/KGw9bD9sLl9faHRtbDp2b2lkIDAsbnVsbCE9bCYmUWIoYSxsKSk6XCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGw/KFwidGV4dGFyZWFcIiE9PWV8fFwiXCIhPT1sKSYmUmIoYSxsKTpcIm51bWJlclwiPT09dHlwZW9mIGwmJlJiKGEsXCJcIitsKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ZiYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWYmJlwiYXV0b0ZvY3VzXCIhPT1mJiYodmEuaGFzT3duUHJvcGVydHkoZik/bnVsbCE9bCYmcmQoYyxmKTpudWxsIT1sJiZYYShhLGYsbCxnKSl9c3dpdGNoKGUpe2Nhc2UgXCJpbnB1dFwiOnhiKGEpO0ViKGEsZCwhMSk7XG5icmVhaztjYXNlIFwidGV4dGFyZWFcIjp4YihhKTtMYihhKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9ZC52YWx1ZSYmYS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIrcmIoZC52YWx1ZSkpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLm11bHRpcGxlPSEhZC5tdWx0aXBsZTtjPWQudmFsdWU7bnVsbCE9Yz9IYihhLCEhZC5tdWx0aXBsZSxjLCExKTpudWxsIT1kLmRlZmF1bHRWYWx1ZSYmSGIoYSwhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGgub25DbGljayYmKGEub25jbGljaz1zZCl9RmQoZSxkKSYmKGIuZWZmZWN0VGFnfD00KX1udWxsIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KX1yZXR1cm4gbnVsbDtjYXNlIDY6aWYoYSYmbnVsbCE9Yi5zdGF0ZU5vZGUpcWkoYSxiLGEubWVtb2l6ZWRQcm9wcyxkKTtlbHNle2lmKFwic3RyaW5nXCIhPT10eXBlb2YgZCYmbnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHUoMTY2KSk7XG5jPWNoKGJoLmN1cnJlbnQpO2NoKCRnLmN1cnJlbnQpO1doKGIpPyhjPWIuc3RhdGVOb2RlLGQ9Yi5tZW1vaXplZFByb3BzLGNbTWRdPWIsYy5ub2RlVmFsdWUhPT1kJiYoYi5lZmZlY3RUYWd8PTQpKTooYz0oOT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGQpLGNbTWRdPWIsYi5zdGF0ZU5vZGU9Yyl9cmV0dXJuIG51bGw7Y2FzZSAxMzpIKE0pO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXJldHVybiBiLmV4cGlyYXRpb25UaW1lPWMsYjtjPW51bGwhPT1kO2Q9ITE7bnVsbD09PWE/dm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLmZhbGxiYWNrJiZXaChiKTooZT1hLm1lbW9pemVkU3RhdGUsZD1udWxsIT09ZSxjfHxudWxsPT09ZXx8KGU9YS5jaGlsZC5zaWJsaW5nLG51bGwhPT1lJiYoZj1iLmZpcnN0RWZmZWN0LG51bGwhPT1mPyhiLmZpcnN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PWYpOihiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1cbmUsZS5uZXh0RWZmZWN0PW51bGwpLGUuZWZmZWN0VGFnPTgpKSk7aWYoYyYmIWQmJjAhPT0oYi5tb2RlJjIpKWlmKG51bGw9PT1hJiYhMCE9PWIubWVtb2l6ZWRQcm9wcy51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8MCE9PShNLmN1cnJlbnQmMSkpUz09PXRpJiYoUz11aSk7ZWxzZXtpZihTPT09dGl8fFM9PT11aSlTPXZpOzAhPT13aSYmbnVsbCE9PVQmJih4aShULFUpLHlpKFQsd2kpKX1pZihjfHxkKWIuZWZmZWN0VGFnfD00O3JldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gZWgoKSxvaShiKSxudWxsO2Nhc2UgMTA6cmV0dXJuIG9nKGIpLG51bGw7Y2FzZSAxNzpyZXR1cm4gTChiLnR5cGUpJiZEZigpLG51bGw7Y2FzZSAxOTpIKE0pO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2U9MCE9PShiLmVmZmVjdFRhZyY2NCk7Zj1kLnJlbmRlcmluZztpZihudWxsPT09ZilpZihlKXJpKGQsITEpO2Vsc2V7aWYoUyE9PXRpfHxudWxsIT09YSYmMCE9PShhLmVmZmVjdFRhZyZcbjY0KSlmb3IoZj1iLmNoaWxkO251bGwhPT1mOyl7YT1oaChmKTtpZihudWxsIT09YSl7Yi5lZmZlY3RUYWd8PTY0O3JpKGQsITEpO2U9YS51cGRhdGVRdWV1ZTtudWxsIT09ZSYmKGIudXBkYXRlUXVldWU9ZSxiLmVmZmVjdFRhZ3w9NCk7bnVsbD09PWQubGFzdEVmZmVjdCYmKGIuZmlyc3RFZmZlY3Q9bnVsbCk7Yi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdDtmb3IoZD1iLmNoaWxkO251bGwhPT1kOyllPWQsZj1jLGUuZWZmZWN0VGFnJj0yLGUubmV4dEVmZmVjdD1udWxsLGUuZmlyc3RFZmZlY3Q9bnVsbCxlLmxhc3RFZmZlY3Q9bnVsbCxhPWUuYWx0ZXJuYXRlLG51bGw9PT1hPyhlLmNoaWxkRXhwaXJhdGlvblRpbWU9MCxlLmV4cGlyYXRpb25UaW1lPWYsZS5jaGlsZD1udWxsLGUubWVtb2l6ZWRQcm9wcz1udWxsLGUubWVtb2l6ZWRTdGF0ZT1udWxsLGUudXBkYXRlUXVldWU9bnVsbCxlLmRlcGVuZGVuY2llcz1udWxsKTooZS5jaGlsZEV4cGlyYXRpb25UaW1lPWEuY2hpbGRFeHBpcmF0aW9uVGltZSxcbmUuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZSxlLmNoaWxkPWEuY2hpbGQsZS5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcyxlLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlLGUudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxmPWEuZGVwZW5kZW5jaWVzLGUuZGVwZW5kZW5jaWVzPW51bGw9PT1mP251bGw6e2V4cGlyYXRpb25UaW1lOmYuZXhwaXJhdGlvblRpbWUsZmlyc3RDb250ZXh0OmYuZmlyc3RDb250ZXh0LHJlc3BvbmRlcnM6Zi5yZXNwb25kZXJzfSksZD1kLnNpYmxpbmc7SShNLE0uY3VycmVudCYxfDIpO3JldHVybiBiLmNoaWxkfWY9Zi5zaWJsaW5nfX1lbHNle2lmKCFlKWlmKGE9aGgoZiksbnVsbCE9PWEpe2lmKGIuZWZmZWN0VGFnfD02NCxlPSEwLGM9YS51cGRhdGVRdWV1ZSxudWxsIT09YyYmKGIudXBkYXRlUXVldWU9YyxiLmVmZmVjdFRhZ3w9NCkscmkoZCwhMCksbnVsbD09PWQudGFpbCYmXCJoaWRkZW5cIj09PWQudGFpbE1vZGUmJiFmLmFsdGVybmF0ZSlyZXR1cm4gYj1cbmIubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3QsbnVsbCE9PWImJihiLm5leHRFZmZlY3Q9bnVsbCksbnVsbH1lbHNlIDIqJGYoKS1kLnJlbmRlcmluZ1N0YXJ0VGltZT5kLnRhaWxFeHBpcmF0aW9uJiYxPGMmJihiLmVmZmVjdFRhZ3w9NjQsZT0hMCxyaShkLCExKSxiLmV4cGlyYXRpb25UaW1lPWIuY2hpbGRFeHBpcmF0aW9uVGltZT1jLTEpO2QuaXNCYWNrd2FyZHM/KGYuc2libGluZz1iLmNoaWxkLGIuY2hpbGQ9Zik6KGM9ZC5sYXN0LG51bGwhPT1jP2Muc2libGluZz1mOmIuY2hpbGQ9ZixkLmxhc3Q9Zil9cmV0dXJuIG51bGwhPT1kLnRhaWw/KDA9PT1kLnRhaWxFeHBpcmF0aW9uJiYoZC50YWlsRXhwaXJhdGlvbj0kZigpKzUwMCksYz1kLnRhaWwsZC5yZW5kZXJpbmc9YyxkLnRhaWw9Yy5zaWJsaW5nLGQubGFzdEVmZmVjdD1iLmxhc3RFZmZlY3QsZC5yZW5kZXJpbmdTdGFydFRpbWU9JGYoKSxjLnNpYmxpbmc9bnVsbCxiPU0uY3VycmVudCxJKE0sZT9iJjF8MjpiJjEpLGMpOm51bGx9dGhyb3cgRXJyb3IodSgxNTYsXG5iLnRhZykpO31mdW5jdGlvbiB6aShhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMTpMKGEudHlwZSkmJkRmKCk7dmFyIGI9YS5lZmZlY3RUYWc7cmV0dXJuIGImNDA5Nj8oYS5lZmZlY3RUYWc9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMzplaCgpO0goSyk7SChKKTtiPWEuZWZmZWN0VGFnO2lmKDAhPT0oYiY2NCkpdGhyb3cgRXJyb3IodSgyODUpKTthLmVmZmVjdFRhZz1iJi00MDk3fDY0O3JldHVybiBhO2Nhc2UgNTpyZXR1cm4gZ2goYSksbnVsbDtjYXNlIDEzOnJldHVybiBIKE0pLGI9YS5lZmZlY3RUYWcsYiY0MDk2PyhhLmVmZmVjdFRhZz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAxOTpyZXR1cm4gSChNKSxudWxsO2Nhc2UgNDpyZXR1cm4gZWgoKSxudWxsO2Nhc2UgMTA6cmV0dXJuIG9nKGEpLG51bGw7ZGVmYXVsdDpyZXR1cm4gbnVsbH19ZnVuY3Rpb24gQWkoYSxiKXtyZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazpxYihiKX19XG52YXIgQmk9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7ZnVuY3Rpb24gQ2koYSxiKXt2YXIgYz1iLnNvdXJjZSxkPWIuc3RhY2s7bnVsbD09PWQmJm51bGwhPT1jJiYoZD1xYihjKSk7bnVsbCE9PWMmJnBiKGMudHlwZSk7Yj1iLnZhbHVlO251bGwhPT1hJiYxPT09YS50YWcmJnBiKGEudHlwZSk7dHJ5e2NvbnNvbGUuZXJyb3IoYil9Y2F0Y2goZSl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGU7fSl9fWZ1bmN0aW9uIERpKGEsYil7dHJ5e2IucHJvcHM9YS5tZW1vaXplZFByb3BzLGIuc3RhdGU9YS5tZW1vaXplZFN0YXRlLGIuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChjKXtFaShhLGMpfX1mdW5jdGlvbiBGaShhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09YilpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYil0cnl7YihudWxsKX1jYXRjaChjKXtFaShhLGMpfWVsc2UgYi5jdXJyZW50PW51bGx9XG5mdW5jdGlvbiBHaShhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOnJldHVybjtjYXNlIDE6aWYoYi5lZmZlY3RUYWcmMjU2JiZudWxsIT09YSl7dmFyIGM9YS5tZW1vaXplZFByb3BzLGQ9YS5tZW1vaXplZFN0YXRlO2E9Yi5zdGF0ZU5vZGU7Yj1hLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGIuZWxlbWVudFR5cGU9PT1iLnR5cGU/YzppZyhiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifXJldHVybjtjYXNlIDM6Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6Y2FzZSAxNzpyZXR1cm59dGhyb3cgRXJyb3IodSgxNjMpKTt9XG5mdW5jdGlvbiBIaShhLGIpe2I9Yi51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXt2YXIgYz1iPWIubmV4dDtkb3tpZigoYy50YWcmYSk9PT1hKXt2YXIgZD1jLmRlc3Ryb3k7Yy5kZXN0cm95PXZvaWQgMDt2b2lkIDAhPT1kJiZkKCl9Yz1jLm5leHR9d2hpbGUoYyE9PWIpfX1mdW5jdGlvbiBJaShhLGIpe2I9Yi51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXt2YXIgYz1iPWIubmV4dDtkb3tpZigoYy50YWcmYSk9PT1hKXt2YXIgZD1jLmNyZWF0ZTtjLmRlc3Ryb3k9ZCgpfWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX19XG5mdW5jdGlvbiBKaShhLGIsYyl7c3dpdGNoKGMudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6SWkoMyxjKTtyZXR1cm47Y2FzZSAxOmE9Yy5zdGF0ZU5vZGU7aWYoYy5lZmZlY3RUYWcmNClpZihudWxsPT09YilhLmNvbXBvbmVudERpZE1vdW50KCk7ZWxzZXt2YXIgZD1jLmVsZW1lbnRUeXBlPT09Yy50eXBlP2IubWVtb2l6ZWRQcm9wczppZyhjLnR5cGUsYi5tZW1vaXplZFByb3BzKTthLmNvbXBvbmVudERpZFVwZGF0ZShkLGIubWVtb2l6ZWRTdGF0ZSxhLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKX1iPWMudXBkYXRlUXVldWU7bnVsbCE9PWImJkNnKGMsYixhKTtyZXR1cm47Y2FzZSAzOmI9Yy51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YT1udWxsO2lmKG51bGwhPT1jLmNoaWxkKXN3aXRjaChjLmNoaWxkLnRhZyl7Y2FzZSA1OmE9Yy5jaGlsZC5zdGF0ZU5vZGU7YnJlYWs7Y2FzZSAxOmE9Yy5jaGlsZC5zdGF0ZU5vZGV9Q2coYyxiLGEpfXJldHVybjtcbmNhc2UgNTphPWMuc3RhdGVOb2RlO251bGw9PT1iJiZjLmVmZmVjdFRhZyY0JiZGZChjLnR5cGUsYy5tZW1vaXplZFByb3BzKSYmYS5mb2N1cygpO3JldHVybjtjYXNlIDY6cmV0dXJuO2Nhc2UgNDpyZXR1cm47Y2FzZSAxMjpyZXR1cm47Y2FzZSAxMzpudWxsPT09Yy5tZW1vaXplZFN0YXRlJiYoYz1jLmFsdGVybmF0ZSxudWxsIT09YyYmKGM9Yy5tZW1vaXplZFN0YXRlLG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbCE9PWMmJlZjKGMpKSkpO3JldHVybjtjYXNlIDE5OmNhc2UgMTc6Y2FzZSAyMDpjYXNlIDIxOnJldHVybn10aHJvdyBFcnJvcih1KDE2MykpO31cbmZ1bmN0aW9uIEtpKGEsYixjKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgTGkmJkxpKGIpO3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6YT1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hJiYoYT1hLmxhc3RFZmZlY3QsbnVsbCE9PWEpKXt2YXIgZD1hLm5leHQ7Y2coOTc8Yz85NzpjLGZ1bmN0aW9uKCl7dmFyIGE9ZDtkb3t2YXIgYz1hLmRlc3Ryb3k7aWYodm9pZCAwIT09Yyl7dmFyIGc9Yjt0cnl7YygpfWNhdGNoKGgpe0VpKGcsaCl9fWE9YS5uZXh0fXdoaWxlKGEhPT1kKX0pfWJyZWFrO2Nhc2UgMTpGaShiKTtjPWIuc3RhdGVOb2RlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmNvbXBvbmVudFdpbGxVbm1vdW50JiZEaShiLGMpO2JyZWFrO2Nhc2UgNTpGaShiKTticmVhaztjYXNlIDQ6TWkoYSxiLGMpfX1cbmZ1bmN0aW9uIE5pKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2EucmV0dXJuPW51bGw7YS5jaGlsZD1udWxsO2EubWVtb2l6ZWRTdGF0ZT1udWxsO2EudXBkYXRlUXVldWU9bnVsbDthLmRlcGVuZGVuY2llcz1udWxsO2EuYWx0ZXJuYXRlPW51bGw7YS5maXJzdEVmZmVjdD1udWxsO2EubGFzdEVmZmVjdD1udWxsO2EucGVuZGluZ1Byb3BzPW51bGw7YS5tZW1vaXplZFByb3BzPW51bGw7YS5zdGF0ZU5vZGU9bnVsbDtudWxsIT09YiYmTmkoYil9ZnVuY3Rpb24gT2koYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiBQaShhKXthOntmb3IodmFyIGI9YS5yZXR1cm47bnVsbCE9PWI7KXtpZihPaShiKSl7dmFyIGM9YjticmVhayBhfWI9Yi5yZXR1cm59dGhyb3cgRXJyb3IodSgxNjApKTt9Yj1jLnN0YXRlTm9kZTtzd2l0Y2goYy50YWcpe2Nhc2UgNTp2YXIgZD0hMTticmVhaztjYXNlIDM6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMTYxKSk7fWMuZWZmZWN0VGFnJjE2JiYoUmIoYixcIlwiKSxjLmVmZmVjdFRhZyY9LTE3KTthOmI6Zm9yKGM9YTs7KXtmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fE9pKGMucmV0dXJuKSl7Yz1udWxsO2JyZWFrIGF9Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2ZvcihjPWMuc2libGluZzs1IT09Yy50YWcmJjYhPT1jLnRhZyYmMTghPT1jLnRhZzspe2lmKGMuZWZmZWN0VGFnJjIpY29udGludWUgYjtcbmlmKG51bGw9PT1jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGQucmV0dXJuPWMsYz1jLmNoaWxkfWlmKCEoYy5lZmZlY3RUYWcmMikpe2M9Yy5zdGF0ZU5vZGU7YnJlYWsgYX19ZD9RaShhLGMsYik6UmkoYSxjLGIpfVxuZnVuY3Rpb24gUWkoYSxiLGMpe3ZhciBkPWEudGFnLGU9NT09PWR8fDY9PT1kO2lmKGUpYT1lP2Euc3RhdGVOb2RlOmEuc3RhdGVOb2RlLmluc3RhbmNlLGI/OD09PWMubm9kZVR5cGU/Yy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLGIpOmMuaW5zZXJ0QmVmb3JlKGEsYik6KDg9PT1jLm5vZGVUeXBlPyhiPWMucGFyZW50Tm9kZSxiLmluc2VydEJlZm9yZShhLGMpKTooYj1jLGIuYXBwZW5kQ2hpbGQoYSkpLGM9Yy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1jJiZ2b2lkIDAhPT1jfHxudWxsIT09Yi5vbmNsaWNrfHwoYi5vbmNsaWNrPXNkKSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKFFpKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspUWkoYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gUmkoYSxiLGMpe3ZhciBkPWEudGFnLGU9NT09PWR8fDY9PT1kO2lmKGUpYT1lP2Euc3RhdGVOb2RlOmEuc3RhdGVOb2RlLmluc3RhbmNlLGI/Yy5pbnNlcnRCZWZvcmUoYSxiKTpjLmFwcGVuZENoaWxkKGEpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihSaShhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KVJpKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIE1pKGEsYixjKXtmb3IodmFyIGQ9YixlPSExLGYsZzs7KXtpZighZSl7ZT1kLnJldHVybjthOmZvcig7Oyl7aWYobnVsbD09PWUpdGhyb3cgRXJyb3IodSgxNjApKTtmPWUuc3RhdGVOb2RlO3N3aXRjaChlLnRhZyl7Y2FzZSA1Omc9ITE7YnJlYWsgYTtjYXNlIDM6Zj1mLmNvbnRhaW5lckluZm87Zz0hMDticmVhayBhO2Nhc2UgNDpmPWYuY29udGFpbmVySW5mbztnPSEwO2JyZWFrIGF9ZT1lLnJldHVybn1lPSEwfWlmKDU9PT1kLnRhZ3x8Nj09PWQudGFnKXthOmZvcih2YXIgaD1hLGs9ZCxsPWMsbT1rOzspaWYoS2koaCxtLGwpLG51bGwhPT1tLmNoaWxkJiY0IT09bS50YWcpbS5jaGlsZC5yZXR1cm49bSxtPW0uY2hpbGQ7ZWxzZXtpZihtPT09aylicmVhayBhO2Zvcig7bnVsbD09PW0uc2libGluZzspe2lmKG51bGw9PT1tLnJldHVybnx8bS5yZXR1cm49PT1rKWJyZWFrIGE7bT1tLnJldHVybn1tLnNpYmxpbmcucmV0dXJuPW0ucmV0dXJuO209bS5zaWJsaW5nfWc/KGg9XG5mLGs9ZC5zdGF0ZU5vZGUsOD09PWgubm9kZVR5cGU/aC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGspOmgucmVtb3ZlQ2hpbGQoaykpOmYucmVtb3ZlQ2hpbGQoZC5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWQudGFnKXtpZihudWxsIT09ZC5jaGlsZCl7Zj1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2c9ITA7ZC5jaGlsZC5yZXR1cm49ZDtkPWQuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYoS2koYSxkLGMpLG51bGwhPT1kLmNoaWxkKXtkLmNoaWxkLnJldHVybj1kO2Q9ZC5jaGlsZDtjb250aW51ZX1pZihkPT09YilicmVhaztmb3IoO251bGw9PT1kLnNpYmxpbmc7KXtpZihudWxsPT09ZC5yZXR1cm58fGQucmV0dXJuPT09YilyZXR1cm47ZD1kLnJldHVybjs0PT09ZC50YWcmJihlPSExKX1kLnNpYmxpbmcucmV0dXJuPWQucmV0dXJuO2Q9ZC5zaWJsaW5nfX1cbmZ1bmN0aW9uIFNpKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6Y2FzZSAyMjpIaSgzLGIpO3JldHVybjtjYXNlIDE6cmV0dXJuO2Nhc2UgNTp2YXIgYz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXt2YXIgZD1iLm1lbW9pemVkUHJvcHMsZT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDthPWIudHlwZTt2YXIgZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtpZihudWxsIT09Zil7Y1tOZF09ZDtcImlucHV0XCI9PT1hJiZcInJhZGlvXCI9PT1kLnR5cGUmJm51bGwhPWQubmFtZSYmQmIoYyxkKTtwZChhLGUpO2I9cGQoYSxkKTtmb3IoZT0wO2U8Zi5sZW5ndGg7ZSs9Mil7dmFyIGc9ZltlXSxoPWZbZSsxXTtcInN0eWxlXCI9PT1nP21kKGMsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9RYihjLGgpOlwiY2hpbGRyZW5cIj09PWc/UmIoYyxoKTpYYShjLGcsaCxiKX1zd2l0Y2goYSl7Y2FzZSBcImlucHV0XCI6Q2IoYyxkKTticmVhaztcbmNhc2UgXCJ0ZXh0YXJlYVwiOktiKGMsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWQubXVsdGlwbGUsYT1kLnZhbHVlLG51bGwhPWE/SGIoYywhIWQubXVsdGlwbGUsYSwhMSk6YiE9PSEhZC5tdWx0aXBsZSYmKG51bGwhPWQuZGVmYXVsdFZhbHVlP0hiKGMsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTpIYihjLCEhZC5tdWx0aXBsZSxkLm11bHRpcGxlP1tdOlwiXCIsITEpKX19fXJldHVybjtjYXNlIDY6aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHUoMTYyKSk7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPWIubWVtb2l6ZWRQcm9wcztyZXR1cm47Y2FzZSAzOmI9Yi5zdGF0ZU5vZGU7Yi5oeWRyYXRlJiYoYi5oeWRyYXRlPSExLFZjKGIuY29udGFpbmVySW5mbykpO3JldHVybjtjYXNlIDEyOnJldHVybjtjYXNlIDEzOmM9YjtudWxsPT09Yi5tZW1vaXplZFN0YXRlP1xuZD0hMTooZD0hMCxjPWIuY2hpbGQsVGk9JGYoKSk7aWYobnVsbCE9PWMpYTpmb3IoYT1jOzspe2lmKDU9PT1hLnRhZylmPWEuc3RhdGVOb2RlLGQ/KGY9Zi5zdHlsZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5zZXRQcm9wZXJ0eT9mLnNldFByb3BlcnR5KFwiZGlzcGxheVwiLFwibm9uZVwiLFwiaW1wb3J0YW50XCIpOmYuZGlzcGxheT1cIm5vbmVcIik6KGY9YS5zdGF0ZU5vZGUsZT1hLm1lbW9pemVkUHJvcHMuc3R5bGUsZT12b2lkIDAhPT1lJiZudWxsIT09ZSYmZS5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ZS5kaXNwbGF5Om51bGwsZi5zdHlsZS5kaXNwbGF5PWxkKFwiZGlzcGxheVwiLGUpKTtlbHNlIGlmKDY9PT1hLnRhZylhLnN0YXRlTm9kZS5ub2RlVmFsdWU9ZD9cIlwiOmEubWVtb2l6ZWRQcm9wcztlbHNlIGlmKDEzPT09YS50YWcmJm51bGwhPT1hLm1lbW9pemVkU3RhdGUmJm51bGw9PT1hLm1lbW9pemVkU3RhdGUuZGVoeWRyYXRlZCl7Zj1hLmNoaWxkLnNpYmxpbmc7Zi5yZXR1cm49YTthPVxuZjtjb250aW51ZX1lbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YylicmVhaztmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YylicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31VaShiKTtyZXR1cm47Y2FzZSAxOTpVaShiKTtyZXR1cm47Y2FzZSAxNzpyZXR1cm59dGhyb3cgRXJyb3IodSgxNjMpKTt9ZnVuY3Rpb24gVWkoYSl7dmFyIGI9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YS51cGRhdGVRdWV1ZT1udWxsO3ZhciBjPWEuc3RhdGVOb2RlO251bGw9PT1jJiYoYz1hLnN0YXRlTm9kZT1uZXcgQmkpO2IuZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgZD1WaS5iaW5kKG51bGwsYSxiKTtjLmhhcyhiKXx8KGMuYWRkKGIpLGIudGhlbihkLGQpKX0pfX1cbnZhciBXaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtmdW5jdGlvbiBYaShhLGIsYyl7Yz13ZyhjLG51bGwpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe1lpfHwoWWk9ITAsWmk9ZCk7Q2koYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiAkaShhLGIsYyl7Yz13ZyhjLG51bGwpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtDaShhLGIpO3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09YWo/YWo9bmV3IFNldChbdGhpc10pOmFqLmFkZCh0aGlzKSxDaShhLGIpKTt2YXIgYz1iLnN0YWNrO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYi52YWx1ZSx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWM/YzpcIlwifSl9KTtyZXR1cm4gY31cbnZhciBiaj1NYXRoLmNlaWwsY2o9V2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixkaj1XYS5SZWFjdEN1cnJlbnRPd25lcixWPTAsZWo9OCxmaj0xNixnaj0zMix0aT0wLGhqPTEsaWo9Mix1aT0zLHZpPTQsamo9NSxXPVYsVD1udWxsLFg9bnVsbCxVPTAsUz10aSxraj1udWxsLGxqPTEwNzM3NDE4MjMsbWo9MTA3Mzc0MTgyMyxuaj1udWxsLHdpPTAsb2o9ITEsVGk9MCxwaj01MDAsWT1udWxsLFlpPSExLFppPW51bGwsYWo9bnVsbCxxaj0hMSxyaj1udWxsLHNqPTkwLHRqPW51bGwsdWo9MCx2aj1udWxsLHdqPTA7ZnVuY3Rpb24gR2coKXtyZXR1cm4oVyYoZmp8Z2opKSE9PVY/MTA3Mzc0MTgyMS0oJGYoKS8xMHwwKTowIT09d2o/d2o6d2o9MTA3Mzc0MTgyMS0oJGYoKS8xMHwwKX1cbmZ1bmN0aW9uIEhnKGEsYixjKXtiPWIubW9kZTtpZigwPT09KGImMikpcmV0dXJuIDEwNzM3NDE4MjM7dmFyIGQ9YWcoKTtpZigwPT09KGImNCkpcmV0dXJuIDk5PT09ZD8xMDczNzQxODIzOjEwNzM3NDE4MjI7aWYoKFcmZmopIT09VilyZXR1cm4gVTtpZihudWxsIT09YylhPWhnKGEsYy50aW1lb3V0TXN8MHx8NUUzLDI1MCk7ZWxzZSBzd2l0Y2goZCl7Y2FzZSA5OTphPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA5ODphPWhnKGEsMTUwLDEwMCk7YnJlYWs7Y2FzZSA5NzpjYXNlIDk2OmE9aGcoYSw1RTMsMjUwKTticmVhaztjYXNlIDk1OmE9MjticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMzI2KSk7fW51bGwhPT1UJiZhPT09VSYmLS1hO3JldHVybiBhfVxuZnVuY3Rpb24gSWcoYSxiKXtpZig1MDx1ail0aHJvdyB1aj0wLHZqPW51bGwsRXJyb3IodSgxODUpKTthPXhqKGEsYik7aWYobnVsbCE9PWEpe3ZhciBjPWFnKCk7MTA3Mzc0MTgyMz09PWI/KFcmZWopIT09ViYmKFcmKGZqfGdqKSk9PT1WP3lqKGEpOihaKGEpLFc9PT1WJiZnZygpKTpaKGEpOyhXJjQpPT09Vnx8OTghPT1jJiY5OSE9PWN8fChudWxsPT09dGo/dGo9bmV3IE1hcChbW2EsYl1dKTooYz10ai5nZXQoYSksKHZvaWQgMD09PWN8fGM+YikmJnRqLnNldChhLGIpKSl9fVxuZnVuY3Rpb24geGooYSxiKXthLmV4cGlyYXRpb25UaW1lPGImJihhLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPGImJihjLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBkPWEucmV0dXJuLGU9bnVsbDtpZihudWxsPT09ZCYmMz09PWEudGFnKWU9YS5zdGF0ZU5vZGU7ZWxzZSBmb3IoO251bGwhPT1kOyl7Yz1kLmFsdGVybmF0ZTtkLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGQuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihjLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7aWYobnVsbD09PWQucmV0dXJuJiYzPT09ZC50YWcpe2U9ZC5zdGF0ZU5vZGU7YnJlYWt9ZD1kLnJldHVybn1udWxsIT09ZSYmKFQ9PT1lJiYoQmcoYiksUz09PXZpJiZ4aShlLFUpKSx5aShlLGIpKTtyZXR1cm4gZX1cbmZ1bmN0aW9uIHpqKGEpe3ZhciBiPWEubGFzdEV4cGlyZWRUaW1lO2lmKDAhPT1iKXJldHVybiBiO2I9YS5maXJzdFBlbmRpbmdUaW1lO2lmKCFBaihhLGIpKXJldHVybiBiO3ZhciBjPWEubGFzdFBpbmdlZFRpbWU7YT1hLm5leHRLbm93blBlbmRpbmdMZXZlbDthPWM+YT9jOmE7cmV0dXJuIDI+PWEmJmIhPT1hPzA6YX1cbmZ1bmN0aW9uIFooYSl7aWYoMCE9PWEubGFzdEV4cGlyZWRUaW1lKWEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT0xMDczNzQxODIzLGEuY2FsbGJhY2tQcmlvcml0eT05OSxhLmNhbGxiYWNrTm9kZT1lZyh5ai5iaW5kKG51bGwsYSkpO2Vsc2V7dmFyIGI9emooYSksYz1hLmNhbGxiYWNrTm9kZTtpZigwPT09YiludWxsIT09YyYmKGEuY2FsbGJhY2tOb2RlPW51bGwsYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPTAsYS5jYWxsYmFja1ByaW9yaXR5PTkwKTtlbHNle3ZhciBkPUdnKCk7MTA3Mzc0MTgyMz09PWI/ZD05OToxPT09Ynx8Mj09PWI/ZD05NTooZD0xMCooMTA3Mzc0MTgyMS1iKS0xMCooMTA3Mzc0MTgyMS1kKSxkPTA+PWQ/OTk6MjUwPj1kPzk4OjUyNTA+PWQ/OTc6OTUpO2lmKG51bGwhPT1jKXt2YXIgZT1hLmNhbGxiYWNrUHJpb3JpdHk7aWYoYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPT09YiYmZT49ZClyZXR1cm47YyE9PVRmJiZLZihjKX1hLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9XG5iO2EuY2FsbGJhY2tQcmlvcml0eT1kO2I9MTA3Mzc0MTgyMz09PWI/ZWcoeWouYmluZChudWxsLGEpKTpkZyhkLEJqLmJpbmQobnVsbCxhKSx7dGltZW91dDoxMCooMTA3Mzc0MTgyMS1iKS0kZigpfSk7YS5jYWxsYmFja05vZGU9Yn19fVxuZnVuY3Rpb24gQmooYSxiKXt3aj0wO2lmKGIpcmV0dXJuIGI9R2coKSxDaihhLGIpLFooYSksbnVsbDt2YXIgYz16aihhKTtpZigwIT09Yyl7Yj1hLmNhbGxiYWNrTm9kZTtpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgzMjcpKTtEaigpO2E9PT1UJiZjPT09VXx8RWooYSxjKTtpZihudWxsIT09WCl7dmFyIGQ9VztXfD1majt2YXIgZT1GaigpO2RvIHRyeXtHaigpO2JyZWFrfWNhdGNoKGgpe0hqKGEsaCl9d2hpbGUoMSk7bmcoKTtXPWQ7Y2ouY3VycmVudD1lO2lmKFM9PT1oail0aHJvdyBiPWtqLEVqKGEsYykseGkoYSxjKSxaKGEpLGI7aWYobnVsbD09PVgpc3dpdGNoKGU9YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZSxhLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9YyxkPVMsVD1udWxsLGQpe2Nhc2UgdGk6Y2FzZSBoajp0aHJvdyBFcnJvcih1KDM0NSkpO2Nhc2UgaWo6Q2ooYSwyPGM/MjpjKTticmVhaztjYXNlIHVpOnhpKGEsYyk7ZD1hLmxhc3RTdXNwZW5kZWRUaW1lO1xuYz09PWQmJihhLm5leHRLbm93blBlbmRpbmdMZXZlbD1JaihlKSk7aWYoMTA3Mzc0MTgyMz09PWxqJiYoZT1UaStwai0kZigpLDEwPGUpKXtpZihvail7dmFyIGY9YS5sYXN0UGluZ2VkVGltZTtpZigwPT09Znx8Zj49Yyl7YS5sYXN0UGluZ2VkVGltZT1jO0VqKGEsYyk7YnJlYWt9fWY9emooYSk7aWYoMCE9PWYmJmYhPT1jKWJyZWFrO2lmKDAhPT1kJiZkIT09Yyl7YS5sYXN0UGluZ2VkVGltZT1kO2JyZWFrfWEudGltZW91dEhhbmRsZT1IZChKai5iaW5kKG51bGwsYSksZSk7YnJlYWt9SmooYSk7YnJlYWs7Y2FzZSB2aTp4aShhLGMpO2Q9YS5sYXN0U3VzcGVuZGVkVGltZTtjPT09ZCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPUlqKGUpKTtpZihvaiYmKGU9YS5sYXN0UGluZ2VkVGltZSwwPT09ZXx8ZT49Yykpe2EubGFzdFBpbmdlZFRpbWU9YztFaihhLGMpO2JyZWFrfWU9emooYSk7aWYoMCE9PWUmJmUhPT1jKWJyZWFrO2lmKDAhPT1kJiZkIT09Yyl7YS5sYXN0UGluZ2VkVGltZT1cbmQ7YnJlYWt9MTA3Mzc0MTgyMyE9PW1qP2Q9MTAqKDEwNzM3NDE4MjEtbWopLSRmKCk6MTA3Mzc0MTgyMz09PWxqP2Q9MDooZD0xMCooMTA3Mzc0MTgyMS1saiktNUUzLGU9JGYoKSxjPTEwKigxMDczNzQxODIxLWMpLWUsZD1lLWQsMD5kJiYoZD0wKSxkPSgxMjA+ZD8xMjA6NDgwPmQ/NDgwOjEwODA+ZD8xMDgwOjE5MjA+ZD8xOTIwOjNFMz5kPzNFMzo0MzIwPmQ/NDMyMDoxOTYwKmJqKGQvMTk2MCkpLWQsYzxkJiYoZD1jKSk7aWYoMTA8ZCl7YS50aW1lb3V0SGFuZGxlPUhkKEpqLmJpbmQobnVsbCxhKSxkKTticmVha31KaihhKTticmVhaztjYXNlIGpqOmlmKDEwNzM3NDE4MjMhPT1saiYmbnVsbCE9PW5qKXtmPWxqO3ZhciBnPW5qO2Q9Zy5idXN5TWluRHVyYXRpb25Nc3wwOzA+PWQ/ZD0wOihlPWcuYnVzeURlbGF5TXN8MCxmPSRmKCktKDEwKigxMDczNzQxODIxLWYpLShnLnRpbWVvdXRNc3wwfHw1RTMpKSxkPWY8PWU/MDplK2QtZik7aWYoMTA8ZCl7eGkoYSxjKTthLnRpbWVvdXRIYW5kbGU9XG5IZChKai5iaW5kKG51bGwsYSksZCk7YnJlYWt9fUpqKGEpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMjkpKTt9WihhKTtpZihhLmNhbGxiYWNrTm9kZT09PWIpcmV0dXJuIEJqLmJpbmQobnVsbCxhKX19cmV0dXJuIG51bGx9XG5mdW5jdGlvbiB5aihhKXt2YXIgYj1hLmxhc3RFeHBpcmVkVGltZTtiPTAhPT1iP2I6MTA3Mzc0MTgyMztpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgzMjcpKTtEaigpO2E9PT1UJiZiPT09VXx8RWooYSxiKTtpZihudWxsIT09WCl7dmFyIGM9VztXfD1majt2YXIgZD1GaigpO2RvIHRyeXtLaigpO2JyZWFrfWNhdGNoKGUpe0hqKGEsZSl9d2hpbGUoMSk7bmcoKTtXPWM7Y2ouY3VycmVudD1kO2lmKFM9PT1oail0aHJvdyBjPWtqLEVqKGEsYikseGkoYSxiKSxaKGEpLGM7aWYobnVsbCE9PVgpdGhyb3cgRXJyb3IodSgyNjEpKTthLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlO2EuZmluaXNoZWRFeHBpcmF0aW9uVGltZT1iO1Q9bnVsbDtKaihhKTtaKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIExqKCl7aWYobnVsbCE9PXRqKXt2YXIgYT10ajt0aj1udWxsO2EuZm9yRWFjaChmdW5jdGlvbihhLGMpe0NqKGMsYSk7WihjKX0pO2dnKCl9fVxuZnVuY3Rpb24gTWooYSxiKXt2YXIgYz1XO1d8PTE7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7Vz1jLFc9PT1WJiZnZygpfX1mdW5jdGlvbiBOaihhLGIpe3ZhciBjPVc7VyY9LTI7V3w9ZWo7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7Vz1jLFc9PT1WJiZnZygpfX1cbmZ1bmN0aW9uIEVqKGEsYil7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDt2YXIgYz1hLnRpbWVvdXRIYW5kbGU7LTEhPT1jJiYoYS50aW1lb3V0SGFuZGxlPS0xLElkKGMpKTtpZihudWxsIT09WClmb3IoYz1YLnJldHVybjtudWxsIT09Yzspe3ZhciBkPWM7c3dpdGNoKGQudGFnKXtjYXNlIDE6ZD1kLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWQmJnZvaWQgMCE9PWQmJkRmKCk7YnJlYWs7Y2FzZSAzOmVoKCk7SChLKTtIKEopO2JyZWFrO2Nhc2UgNTpnaChkKTticmVhaztjYXNlIDQ6ZWgoKTticmVhaztjYXNlIDEzOkgoTSk7YnJlYWs7Y2FzZSAxOTpIKE0pO2JyZWFrO2Nhc2UgMTA6b2coZCl9Yz1jLnJldHVybn1UPWE7WD1TZyhhLmN1cnJlbnQsbnVsbCk7VT1iO1M9dGk7a2o9bnVsbDttaj1saj0xMDczNzQxODIzO25qPW51bGw7d2k9MDtvaj0hMX1cbmZ1bmN0aW9uIEhqKGEsYil7ZG97dHJ5e25nKCk7amguY3VycmVudD1zaDtpZihtaClmb3IodmFyIGM9Ti5tZW1vaXplZFN0YXRlO251bGwhPT1jOyl7dmFyIGQ9Yy5xdWV1ZTtudWxsIT09ZCYmKGQucGVuZGluZz1udWxsKTtjPWMubmV4dH1saD0wO1A9Tz1OPW51bGw7bWg9ITE7aWYobnVsbD09PVh8fG51bGw9PT1YLnJldHVybilyZXR1cm4gUz1oaixraj1iLFg9bnVsbDthOnt2YXIgZT1hLGY9WC5yZXR1cm4sZz1YLGg9YjtiPVU7Zy5lZmZlY3RUYWd8PTIwNDg7Zy5maXJzdEVmZmVjdD1nLmxhc3RFZmZlY3Q9bnVsbDtpZihudWxsIT09aCYmXCJvYmplY3RcIj09PXR5cGVvZiBoJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgaC50aGVuKXt2YXIgaz1oO2lmKDA9PT0oZy5tb2RlJjIpKXt2YXIgbD1nLmFsdGVybmF0ZTtsPyhnLnVwZGF0ZVF1ZXVlPWwudXBkYXRlUXVldWUsZy5tZW1vaXplZFN0YXRlPWwubWVtb2l6ZWRTdGF0ZSxnLmV4cGlyYXRpb25UaW1lPWwuZXhwaXJhdGlvblRpbWUpOihnLnVwZGF0ZVF1ZXVlPVxubnVsbCxnLm1lbW9pemVkU3RhdGU9bnVsbCl9dmFyIG09MCE9PShNLmN1cnJlbnQmMSkscD1mO2Rve3ZhciB4O2lmKHg9MTM9PT1wLnRhZyl7dmFyIHo9cC5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT16KXg9bnVsbCE9PXouZGVoeWRyYXRlZD8hMDohMTtlbHNle3ZhciBjYT1wLm1lbW9pemVkUHJvcHM7eD12b2lkIDA9PT1jYS5mYWxsYmFjaz8hMTohMCE9PWNhLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrPyEwOm0/ITE6ITB9fWlmKHgpe3ZhciBEPXAudXBkYXRlUXVldWU7aWYobnVsbD09PUQpe3ZhciB0PW5ldyBTZXQ7dC5hZGQoayk7cC51cGRhdGVRdWV1ZT10fWVsc2UgRC5hZGQoayk7aWYoMD09PShwLm1vZGUmMikpe3AuZWZmZWN0VGFnfD02NDtnLmVmZmVjdFRhZyY9LTI5ODE7aWYoMT09PWcudGFnKWlmKG51bGw9PT1nLmFsdGVybmF0ZSlnLnRhZz0xNztlbHNle3ZhciB5PXdnKDEwNzM3NDE4MjMsbnVsbCk7eS50YWc9Mjt4ZyhnLHkpfWcuZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMztcbmJyZWFrIGF9aD12b2lkIDA7Zz1iO3ZhciBBPWUucGluZ0NhY2hlO251bGw9PT1BPyhBPWUucGluZ0NhY2hlPW5ldyBXaSxoPW5ldyBTZXQsQS5zZXQoayxoKSk6KGg9QS5nZXQoayksdm9pZCAwPT09aCYmKGg9bmV3IFNldCxBLnNldChrLGgpKSk7aWYoIWguaGFzKGcpKXtoLmFkZChnKTt2YXIgcT1Pai5iaW5kKG51bGwsZSxrLGcpO2sudGhlbihxLHEpfXAuZWZmZWN0VGFnfD00MDk2O3AuZXhwaXJhdGlvblRpbWU9YjticmVhayBhfXA9cC5yZXR1cm59d2hpbGUobnVsbCE9PXApO2g9RXJyb3IoKHBiKGcudHlwZSl8fFwiQSBSZWFjdCBjb21wb25lbnRcIikrXCIgc3VzcGVuZGVkIHdoaWxlIHJlbmRlcmluZywgYnV0IG5vIGZhbGxiYWNrIFVJIHdhcyBzcGVjaWZpZWQuXFxuXFxuQWRkIGEgPFN1c3BlbnNlIGZhbGxiYWNrPS4uLj4gY29tcG9uZW50IGhpZ2hlciBpbiB0aGUgdHJlZSB0byBwcm92aWRlIGEgbG9hZGluZyBpbmRpY2F0b3Igb3IgcGxhY2Vob2xkZXIgdG8gZGlzcGxheS5cIitxYihnKSl9UyE9PVxuamomJihTPWlqKTtoPUFpKGgsZyk7cD1mO2Rve3N3aXRjaChwLnRhZyl7Y2FzZSAzOms9aDtwLmVmZmVjdFRhZ3w9NDA5NjtwLmV4cGlyYXRpb25UaW1lPWI7dmFyIEI9WGkocCxrLGIpO3lnKHAsQik7YnJlYWsgYTtjYXNlIDE6az1oO3ZhciB3PXAudHlwZSx1Yj1wLnN0YXRlTm9kZTtpZigwPT09KHAuZWZmZWN0VGFnJjY0KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiB3LmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PXViJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgdWIuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09YWp8fCFhai5oYXModWIpKSkpe3AuZWZmZWN0VGFnfD00MDk2O3AuZXhwaXJhdGlvblRpbWU9Yjt2YXIgdmI9JGkocCxrLGIpO3lnKHAsdmIpO2JyZWFrIGF9fXA9cC5yZXR1cm59d2hpbGUobnVsbCE9PXApfVg9UGooWCl9Y2F0Y2goWGMpe2I9WGM7Y29udGludWV9YnJlYWt9d2hpbGUoMSl9XG5mdW5jdGlvbiBGaigpe3ZhciBhPWNqLmN1cnJlbnQ7Y2ouY3VycmVudD1zaDtyZXR1cm4gbnVsbD09PWE/c2g6YX1mdW5jdGlvbiBBZyhhLGIpe2E8bGomJjI8YSYmKGxqPWEpO251bGwhPT1iJiZhPG1qJiYyPGEmJihtaj1hLG5qPWIpfWZ1bmN0aW9uIEJnKGEpe2E+d2kmJih3aT1hKX1mdW5jdGlvbiBLaigpe2Zvcig7bnVsbCE9PVg7KVg9UWooWCl9ZnVuY3Rpb24gR2ooKXtmb3IoO251bGwhPT1YJiYhVWYoKTspWD1RaihYKX1mdW5jdGlvbiBRaihhKXt2YXIgYj1SaihhLmFsdGVybmF0ZSxhLFUpO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09YiYmKGI9UGooYSkpO2RqLmN1cnJlbnQ9bnVsbDtyZXR1cm4gYn1cbmZ1bmN0aW9uIFBqKGEpe1g9YTtkb3t2YXIgYj1YLmFsdGVybmF0ZTthPVgucmV0dXJuO2lmKDA9PT0oWC5lZmZlY3RUYWcmMjA0OCkpe2I9c2koYixYLFUpO2lmKDE9PT1VfHwxIT09WC5jaGlsZEV4cGlyYXRpb25UaW1lKXtmb3IodmFyIGM9MCxkPVguY2hpbGQ7bnVsbCE9PWQ7KXt2YXIgZT1kLmV4cGlyYXRpb25UaW1lLGY9ZC5jaGlsZEV4cGlyYXRpb25UaW1lO2U+YyYmKGM9ZSk7Zj5jJiYoYz1mKTtkPWQuc2libGluZ31YLmNoaWxkRXhwaXJhdGlvblRpbWU9Y31pZihudWxsIT09YilyZXR1cm4gYjtudWxsIT09YSYmMD09PShhLmVmZmVjdFRhZyYyMDQ4KSYmKG51bGw9PT1hLmZpcnN0RWZmZWN0JiYoYS5maXJzdEVmZmVjdD1YLmZpcnN0RWZmZWN0KSxudWxsIT09WC5sYXN0RWZmZWN0JiYobnVsbCE9PWEubGFzdEVmZmVjdCYmKGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PVguZmlyc3RFZmZlY3QpLGEubGFzdEVmZmVjdD1YLmxhc3RFZmZlY3QpLDE8WC5lZmZlY3RUYWcmJihudWxsIT09XG5hLmxhc3RFZmZlY3Q/YS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9WDphLmZpcnN0RWZmZWN0PVgsYS5sYXN0RWZmZWN0PVgpKX1lbHNle2I9emkoWCk7aWYobnVsbCE9PWIpcmV0dXJuIGIuZWZmZWN0VGFnJj0yMDQ3LGI7bnVsbCE9PWEmJihhLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1udWxsLGEuZWZmZWN0VGFnfD0yMDQ4KX1iPVguc2libGluZztpZihudWxsIT09YilyZXR1cm4gYjtYPWF9d2hpbGUobnVsbCE9PVgpO1M9PT10aSYmKFM9amopO3JldHVybiBudWxsfWZ1bmN0aW9uIElqKGEpe3ZhciBiPWEuZXhwaXJhdGlvblRpbWU7YT1hLmNoaWxkRXhwaXJhdGlvblRpbWU7cmV0dXJuIGI+YT9iOmF9ZnVuY3Rpb24gSmooYSl7dmFyIGI9YWcoKTtjZyg5OSxTai5iaW5kKG51bGwsYSxiKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBTaihhLGIpe2RvIERqKCk7d2hpbGUobnVsbCE9PXJqKTtpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgzMjcpKTt2YXIgYz1hLmZpbmlzaGVkV29yayxkPWEuZmluaXNoZWRFeHBpcmF0aW9uVGltZTtpZihudWxsPT09YylyZXR1cm4gbnVsbDthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRFeHBpcmF0aW9uVGltZT0wO2lmKGM9PT1hLmN1cnJlbnQpdGhyb3cgRXJyb3IodSgxNzcpKTthLmNhbGxiYWNrTm9kZT1udWxsO2EuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT0wO2EuY2FsbGJhY2tQcmlvcml0eT05MDthLm5leHRLbm93blBlbmRpbmdMZXZlbD0wO3ZhciBlPUlqKGMpO2EuZmlyc3RQZW5kaW5nVGltZT1lO2Q8PWEubGFzdFN1c3BlbmRlZFRpbWU/YS5maXJzdFN1c3BlbmRlZFRpbWU9YS5sYXN0U3VzcGVuZGVkVGltZT1hLm5leHRLbm93blBlbmRpbmdMZXZlbD0wOmQ8PWEuZmlyc3RTdXNwZW5kZWRUaW1lJiYoYS5maXJzdFN1c3BlbmRlZFRpbWU9XG5kLTEpO2Q8PWEubGFzdFBpbmdlZFRpbWUmJihhLmxhc3RQaW5nZWRUaW1lPTApO2Q8PWEubGFzdEV4cGlyZWRUaW1lJiYoYS5sYXN0RXhwaXJlZFRpbWU9MCk7YT09PVQmJihYPVQ9bnVsbCxVPTApOzE8Yy5lZmZlY3RUYWc/bnVsbCE9PWMubGFzdEVmZmVjdD8oYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxlPWMuZmlyc3RFZmZlY3QpOmU9YzplPWMuZmlyc3RFZmZlY3Q7aWYobnVsbCE9PWUpe3ZhciBmPVc7V3w9Z2o7ZGouY3VycmVudD1udWxsO0RkPWZkO3ZhciBnPXhkKCk7aWYoeWQoZykpe2lmKFwic2VsZWN0aW9uU3RhcnRcImluIGcpdmFyIGg9e3N0YXJ0Omcuc2VsZWN0aW9uU3RhcnQsZW5kOmcuc2VsZWN0aW9uRW5kfTtlbHNlIGE6e2g9KGg9Zy5vd25lckRvY3VtZW50KSYmaC5kZWZhdWx0Vmlld3x8d2luZG93O3ZhciBrPWguZ2V0U2VsZWN0aW9uJiZoLmdldFNlbGVjdGlvbigpO2lmKGsmJjAhPT1rLnJhbmdlQ291bnQpe2g9ay5hbmNob3JOb2RlO3ZhciBsPWsuYW5jaG9yT2Zmc2V0LFxubT1rLmZvY3VzTm9kZTtrPWsuZm9jdXNPZmZzZXQ7dHJ5e2gubm9kZVR5cGUsbS5ub2RlVHlwZX1jYXRjaCh3Yil7aD1udWxsO2JyZWFrIGF9dmFyIHA9MCx4PS0xLHo9LTEsY2E9MCxEPTAsdD1nLHk9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciBBOzspe3QhPT1ofHwwIT09bCYmMyE9PXQubm9kZVR5cGV8fCh4PXArbCk7dCE9PW18fDAhPT1rJiYzIT09dC5ub2RlVHlwZXx8KHo9cCtrKTszPT09dC5ub2RlVHlwZSYmKHArPXQubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PShBPXQuZmlyc3RDaGlsZCkpYnJlYWs7eT10O3Q9QX1mb3IoOzspe2lmKHQ9PT1nKWJyZWFrIGI7eT09PWgmJisrY2E9PT1sJiYoeD1wKTt5PT09bSYmKytEPT09ayYmKHo9cCk7aWYobnVsbCE9PShBPXQubmV4dFNpYmxpbmcpKWJyZWFrO3Q9eTt5PXQucGFyZW50Tm9kZX10PUF9aD0tMT09PXh8fC0xPT09ej9udWxsOntzdGFydDp4LGVuZDp6fX1lbHNlIGg9bnVsbH1oPWh8fHtzdGFydDowLGVuZDowfX1lbHNlIGg9XG5udWxsO0VkPXthY3RpdmVFbGVtZW50RGV0YWNoZWQ6bnVsbCxmb2N1c2VkRWxlbTpnLHNlbGVjdGlvblJhbmdlOmh9O2ZkPSExO1k9ZTtkbyB0cnl7VGooKX1jYXRjaCh3Yil7aWYobnVsbD09PVkpdGhyb3cgRXJyb3IodSgzMzApKTtFaShZLHdiKTtZPVkubmV4dEVmZmVjdH13aGlsZShudWxsIT09WSk7WT1lO2RvIHRyeXtmb3IoZz1hLGg9YjtudWxsIT09WTspe3ZhciBxPVkuZWZmZWN0VGFnO3EmMTYmJlJiKFkuc3RhdGVOb2RlLFwiXCIpO2lmKHEmMTI4KXt2YXIgQj1ZLmFsdGVybmF0ZTtpZihudWxsIT09Qil7dmFyIHc9Qi5yZWY7bnVsbCE9PXcmJihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdz93KG51bGwpOncuY3VycmVudD1udWxsKX19c3dpdGNoKHEmMTAzOCl7Y2FzZSAyOlBpKFkpO1kuZWZmZWN0VGFnJj0tMzticmVhaztjYXNlIDY6UGkoWSk7WS5lZmZlY3RUYWcmPS0zO1NpKFkuYWx0ZXJuYXRlLFkpO2JyZWFrO2Nhc2UgMTAyNDpZLmVmZmVjdFRhZyY9LTEwMjU7YnJlYWs7Y2FzZSAxMDI4OlkuZWZmZWN0VGFnJj1cbi0xMDI1O1NpKFkuYWx0ZXJuYXRlLFkpO2JyZWFrO2Nhc2UgNDpTaShZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDg6bD1ZLE1pKGcsbCxoKSxOaShsKX1ZPVkubmV4dEVmZmVjdH19Y2F0Y2god2Ipe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7RWkoWSx3Yik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO3c9RWQ7Qj14ZCgpO3E9dy5mb2N1c2VkRWxlbTtoPXcuc2VsZWN0aW9uUmFuZ2U7aWYoQiE9PXEmJnEmJnEub3duZXJEb2N1bWVudCYmd2QocS5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxxKSl7bnVsbCE9PWgmJnlkKHEpJiYoQj1oLnN0YXJ0LHc9aC5lbmQsdm9pZCAwPT09dyYmKHc9QiksXCJzZWxlY3Rpb25TdGFydFwiaW4gcT8ocS5zZWxlY3Rpb25TdGFydD1CLHEuc2VsZWN0aW9uRW5kPU1hdGgubWluKHcscS52YWx1ZS5sZW5ndGgpKToodz0oQj1xLm93bmVyRG9jdW1lbnR8fGRvY3VtZW50KSYmQi5kZWZhdWx0Vmlld3x8d2luZG93LHcuZ2V0U2VsZWN0aW9uJiZcbih3PXcuZ2V0U2VsZWN0aW9uKCksbD1xLnRleHRDb250ZW50Lmxlbmd0aCxnPU1hdGgubWluKGguc3RhcnQsbCksaD12b2lkIDA9PT1oLmVuZD9nOk1hdGgubWluKGguZW5kLGwpLCF3LmV4dGVuZCYmZz5oJiYobD1oLGg9ZyxnPWwpLGw9dmQocSxnKSxtPXZkKHEsaCksbCYmbSYmKDEhPT13LnJhbmdlQ291bnR8fHcuYW5jaG9yTm9kZSE9PWwubm9kZXx8dy5hbmNob3JPZmZzZXQhPT1sLm9mZnNldHx8dy5mb2N1c05vZGUhPT1tLm5vZGV8fHcuZm9jdXNPZmZzZXQhPT1tLm9mZnNldCkmJihCPUIuY3JlYXRlUmFuZ2UoKSxCLnNldFN0YXJ0KGwubm9kZSxsLm9mZnNldCksdy5yZW1vdmVBbGxSYW5nZXMoKSxnPmg/KHcuYWRkUmFuZ2UoQiksdy5leHRlbmQobS5ub2RlLG0ub2Zmc2V0KSk6KEIuc2V0RW5kKG0ubm9kZSxtLm9mZnNldCksdy5hZGRSYW5nZShCKSkpKSkpO0I9W107Zm9yKHc9cTt3PXcucGFyZW50Tm9kZTspMT09PXcubm9kZVR5cGUmJkIucHVzaCh7ZWxlbWVudDp3LGxlZnQ6dy5zY3JvbGxMZWZ0LFxudG9wOncuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIHEuZm9jdXMmJnEuZm9jdXMoKTtmb3IocT0wO3E8Qi5sZW5ndGg7cSsrKXc9QltxXSx3LmVsZW1lbnQuc2Nyb2xsTGVmdD13LmxlZnQsdy5lbGVtZW50LnNjcm9sbFRvcD13LnRvcH1mZD0hIURkO0VkPURkPW51bGw7YS5jdXJyZW50PWM7WT1lO2RvIHRyeXtmb3IocT1hO251bGwhPT1ZOyl7dmFyIHViPVkuZWZmZWN0VGFnO3ViJjM2JiZKaShxLFkuYWx0ZXJuYXRlLFkpO2lmKHViJjEyOCl7Qj12b2lkIDA7dmFyIHZiPVkucmVmO2lmKG51bGwhPT12Yil7dmFyIFhjPVkuc3RhdGVOb2RlO3N3aXRjaChZLnRhZyl7Y2FzZSA1OkI9WGM7YnJlYWs7ZGVmYXVsdDpCPVhjfVwiZnVuY3Rpb25cIj09PXR5cGVvZiB2Yj92YihCKTp2Yi5jdXJyZW50PUJ9fVk9WS5uZXh0RWZmZWN0fX1jYXRjaCh3Yil7aWYobnVsbD09PVkpdGhyb3cgRXJyb3IodSgzMzApKTtFaShZLHdiKTtZPVkubmV4dEVmZmVjdH13aGlsZShudWxsIT09WSk7WT1cbm51bGw7VmYoKTtXPWZ9ZWxzZSBhLmN1cnJlbnQ9YztpZihxailxaj0hMSxyaj1hLHNqPWI7ZWxzZSBmb3IoWT1lO251bGwhPT1ZOyliPVkubmV4dEVmZmVjdCxZLm5leHRFZmZlY3Q9bnVsbCxZPWI7Yj1hLmZpcnN0UGVuZGluZ1RpbWU7MD09PWImJihhaj1udWxsKTsxMDczNzQxODIzPT09Yj9hPT09dmo/dWorKzoodWo9MCx2aj1hKTp1aj0wO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBVaiYmVWooYy5zdGF0ZU5vZGUsZCk7WihhKTtpZihZaSl0aHJvdyBZaT0hMSxhPVppLFppPW51bGwsYTtpZigoVyZlaikhPT1WKXJldHVybiBudWxsO2dnKCk7cmV0dXJuIG51bGx9ZnVuY3Rpb24gVGooKXtmb3IoO251bGwhPT1ZOyl7dmFyIGE9WS5lZmZlY3RUYWc7MCE9PShhJjI1NikmJkdpKFkuYWx0ZXJuYXRlLFkpOzA9PT0oYSY1MTIpfHxxanx8KHFqPSEwLGRnKDk3LGZ1bmN0aW9uKCl7RGooKTtyZXR1cm4gbnVsbH0pKTtZPVkubmV4dEVmZmVjdH19XG5mdW5jdGlvbiBEaigpe2lmKDkwIT09c2ope3ZhciBhPTk3PHNqPzk3OnNqO3NqPTkwO3JldHVybiBjZyhhLFZqKX19ZnVuY3Rpb24gVmooKXtpZihudWxsPT09cmopcmV0dXJuITE7dmFyIGE9cmo7cmo9bnVsbDtpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgzMzEpKTt2YXIgYj1XO1d8PWdqO2ZvcihhPWEuY3VycmVudC5maXJzdEVmZmVjdDtudWxsIT09YTspe3RyeXt2YXIgYz1hO2lmKDAhPT0oYy5lZmZlY3RUYWcmNTEyKSlzd2l0Y2goYy50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpIaSg1LGMpLElpKDUsYyl9fWNhdGNoKGQpe2lmKG51bGw9PT1hKXRocm93IEVycm9yKHUoMzMwKSk7RWkoYSxkKX1jPWEubmV4dEVmZmVjdDthLm5leHRFZmZlY3Q9bnVsbDthPWN9Vz1iO2dnKCk7cmV0dXJuITB9XG5mdW5jdGlvbiBXaihhLGIsYyl7Yj1BaShjLGIpO2I9WGkoYSxiLDEwNzM3NDE4MjMpO3hnKGEsYik7YT14aihhLDEwNzM3NDE4MjMpO251bGwhPT1hJiZaKGEpfWZ1bmN0aW9uIEVpKGEsYil7aWYoMz09PWEudGFnKVdqKGEsYSxiKTtlbHNlIGZvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe2lmKDM9PT1jLnRhZyl7V2ooYyxhLGIpO2JyZWFrfWVsc2UgaWYoMT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09YWp8fCFhai5oYXMoZCkpKXthPUFpKGIsYSk7YT0kaShjLGEsMTA3Mzc0MTgyMyk7eGcoYyxhKTtjPXhqKGMsMTA3Mzc0MTgyMyk7bnVsbCE9PWMmJlooYyk7YnJlYWt9fWM9Yy5yZXR1cm59fVxuZnVuY3Rpb24gT2ooYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtUPT09YSYmVT09PWM/Uz09PXZpfHxTPT09dWkmJjEwNzM3NDE4MjM9PT1saiYmJGYoKS1UaTxwaj9FaihhLFUpOm9qPSEwOkFqKGEsYykmJihiPWEubGFzdFBpbmdlZFRpbWUsMCE9PWImJmI8Y3x8KGEubGFzdFBpbmdlZFRpbWU9YyxaKGEpKSl9ZnVuY3Rpb24gVmkoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtudWxsIT09YyYmYy5kZWxldGUoYik7Yj0wOzA9PT1iJiYoYj1HZygpLGI9SGcoYixhLG51bGwpKTthPXhqKGEsYik7bnVsbCE9PWEmJlooYSl9dmFyIFJqO1xuUmo9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWIuZXhwaXJhdGlvblRpbWU7aWYobnVsbCE9PWEpe3ZhciBlPWIucGVuZGluZ1Byb3BzO2lmKGEubWVtb2l6ZWRQcm9wcyE9PWV8fEsuY3VycmVudClyZz0hMDtlbHNle2lmKGQ8Yyl7cmc9ITE7c3dpdGNoKGIudGFnKXtjYXNlIDM6aGkoYik7WGgoKTticmVhaztjYXNlIDU6ZmgoYik7aWYoYi5tb2RlJjQmJjEhPT1jJiZlLmhpZGRlbilyZXR1cm4gYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9MSxudWxsO2JyZWFrO2Nhc2UgMTpMKGIudHlwZSkmJkdmKGIpO2JyZWFrO2Nhc2UgNDpkaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTA6ZD1iLm1lbW9pemVkUHJvcHMudmFsdWU7ZT1iLnR5cGUuX2NvbnRleHQ7SShqZyxlLl9jdXJyZW50VmFsdWUpO2UuX2N1cnJlbnRWYWx1ZT1kO2JyZWFrO2Nhc2UgMTM6aWYobnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSl7ZD1iLmNoaWxkLmNoaWxkRXhwaXJhdGlvblRpbWU7XG5pZigwIT09ZCYmZD49YylyZXR1cm4gamkoYSxiLGMpO0koTSxNLmN1cnJlbnQmMSk7Yj0kaChhLGIsYyk7cmV0dXJuIG51bGwhPT1iP2Iuc2libGluZzpudWxsfUkoTSxNLmN1cnJlbnQmMSk7YnJlYWs7Y2FzZSAxOTpkPWIuY2hpbGRFeHBpcmF0aW9uVGltZT49YztpZigwIT09KGEuZWZmZWN0VGFnJjY0KSl7aWYoZClyZXR1cm4gbWkoYSxiLGMpO2IuZWZmZWN0VGFnfD02NH1lPWIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmKGUucmVuZGVyaW5nPW51bGwsZS50YWlsPW51bGwpO0koTSxNLmN1cnJlbnQpO2lmKCFkKXJldHVybiBudWxsfXJldHVybiAkaChhLGIsYyl9cmc9ITF9fWVsc2Ugcmc9ITE7Yi5leHBpcmF0aW9uVGltZT0wO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmQ9Yi50eXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTthPWIucGVuZGluZ1Byb3BzO2U9Q2YoYixKLmN1cnJlbnQpO3FnKGIsYyk7ZT1vaChudWxsLFxuYixkLGEsZSxjKTtiLmVmZmVjdFRhZ3w9MTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGUmJm51bGwhPT1lJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5yZW5kZXImJnZvaWQgMD09PWUuJCR0eXBlb2Ype2IudGFnPTE7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKEwoZCkpe3ZhciBmPSEwO0dmKGIpfWVsc2UgZj0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsO3VnKGIpO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZGZyhiLGQsZyxhKTtlLnVwZGF0ZXI9Smc7Yi5zdGF0ZU5vZGU9ZTtlLl9yZWFjdEludGVybmFsRmliZXI9YjtOZyhiLGQsYSxjKTtiPWdpKG51bGwsYixkLCEwLGYsYyl9ZWxzZSBiLnRhZz0wLFIobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6YTp7ZT1iLmVsZW1lbnRUeXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9XG5udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7b2IoZSk7aWYoMSE9PWUuX3N0YXR1cyl0aHJvdyBlLl9yZXN1bHQ7ZT1lLl9yZXN1bHQ7Yi50eXBlPWU7Zj1iLnRhZz1YaihlKTthPWlnKGUsYSk7c3dpdGNoKGYpe2Nhc2UgMDpiPWRpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDE6Yj1maShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxMTpiPVpoKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDE0OmI9YWkobnVsbCxiLGUsaWcoZS50eXBlLGEpLGQsYyk7YnJlYWsgYX10aHJvdyBFcnJvcih1KDMwNixlLFwiXCIpKTt9cmV0dXJuIGI7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTppZyhkLGUpLGRpKGEsYixkLGUsYyk7Y2FzZSAxOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTppZyhkLGUpLGZpKGEsYixkLGUsYyk7XG5jYXNlIDM6aGkoYik7ZD1iLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1hfHxudWxsPT09ZCl0aHJvdyBFcnJvcih1KDI4MikpO2Q9Yi5wZW5kaW5nUHJvcHM7ZT1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09ZT9lLmVsZW1lbnQ6bnVsbDt2ZyhhLGIpO3pnKGIsZCxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpWGgoKSxiPSRoKGEsYixjKTtlbHNle2lmKGU9Yi5zdGF0ZU5vZGUuaHlkcmF0ZSlQaD1KZChiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLmZpcnN0Q2hpbGQpLE9oPWIsZT1RaD0hMDtpZihlKWZvcihjPVlnKGIsbnVsbCxkLGMpLGIuY2hpbGQ9YztjOyljLmVmZmVjdFRhZz1jLmVmZmVjdFRhZyYtM3wxMDI0LGM9Yy5zaWJsaW5nO2Vsc2UgUihhLGIsZCxjKSxYaCgpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDU6cmV0dXJuIGZoKGIpLG51bGw9PT1hJiZVaChiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOlxubnVsbCxnPWUuY2hpbGRyZW4sR2QoZCxlKT9nPW51bGw6bnVsbCE9PWYmJkdkKGQsZikmJihiLmVmZmVjdFRhZ3w9MTYpLGVpKGEsYiksYi5tb2RlJjQmJjEhPT1jJiZlLmhpZGRlbj8oYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9MSxiPW51bGwpOihSKGEsYixnLGMpLGI9Yi5jaGlsZCksYjtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZVaChiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIGppKGEsYixjKTtjYXNlIDQ6cmV0dXJuIGRoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPVhnKGIsbnVsbCxkLGMpOlIoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTppZyhkLGUpLFpoKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBSKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gUihhLFxuYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIFIoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTt2YXIgaD1iLnR5cGUuX2NvbnRleHQ7SShqZyxoLl9jdXJyZW50VmFsdWUpO2guX2N1cnJlbnRWYWx1ZT1mO2lmKG51bGwhPT1nKWlmKGg9Zy52YWx1ZSxmPSRlKGgsZik/MDooXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzP2QuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzKGgsZik6MTA3Mzc0MTgyMyl8MCwwPT09Zil7aWYoZy5jaGlsZHJlbj09PWUuY2hpbGRyZW4mJiFLLmN1cnJlbnQpe2I9JGgoYSxiLGMpO2JyZWFrIGF9fWVsc2UgZm9yKGg9Yi5jaGlsZCxudWxsIT09aCYmKGgucmV0dXJuPWIpO251bGwhPT1oOyl7dmFyIGs9aC5kZXBlbmRlbmNpZXM7aWYobnVsbCE9PVxuayl7Zz1oLmNoaWxkO2Zvcih2YXIgbD1rLmZpcnN0Q29udGV4dDtudWxsIT09bDspe2lmKGwuY29udGV4dD09PWQmJjAhPT0obC5vYnNlcnZlZEJpdHMmZikpezE9PT1oLnRhZyYmKGw9d2coYyxudWxsKSxsLnRhZz0yLHhnKGgsbCkpO2guZXhwaXJhdGlvblRpbWU8YyYmKGguZXhwaXJhdGlvblRpbWU9Yyk7bD1oLmFsdGVybmF0ZTtudWxsIT09bCYmbC5leHBpcmF0aW9uVGltZTxjJiYobC5leHBpcmF0aW9uVGltZT1jKTtwZyhoLnJldHVybixjKTtrLmV4cGlyYXRpb25UaW1lPGMmJihrLmV4cGlyYXRpb25UaW1lPWMpO2JyZWFrfWw9bC5uZXh0fX1lbHNlIGc9MTA9PT1oLnRhZz9oLnR5cGU9PT1iLnR5cGU/bnVsbDpoLmNoaWxkOmguY2hpbGQ7aWYobnVsbCE9PWcpZy5yZXR1cm49aDtlbHNlIGZvcihnPWg7bnVsbCE9PWc7KXtpZihnPT09Yil7Zz1udWxsO2JyZWFrfWg9Zy5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1nLnJldHVybjtnPWg7YnJlYWt9Zz1nLnJldHVybn1oPVxuZ31SKGEsYixlLmNoaWxkcmVuLGMpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDk6cmV0dXJuIGU9Yi50eXBlLGY9Yi5wZW5kaW5nUHJvcHMsZD1mLmNoaWxkcmVuLHFnKGIsYyksZT1zZyhlLGYudW5zdGFibGVfb2JzZXJ2ZWRCaXRzKSxkPWQoZSksYi5lZmZlY3RUYWd8PTEsUihhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTQ6cmV0dXJuIGU9Yi50eXBlLGY9aWcoZSxiLnBlbmRpbmdQcm9wcyksZj1pZyhlLnR5cGUsZiksYWkoYSxiLGUsZixkLGMpO2Nhc2UgMTU6cmV0dXJuIGNpKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsZCxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTppZyhkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxiLnRhZz0xLEwoZCk/KGE9ITAsR2YoYikpOmE9ITEscWcoYixjKSxMZyhiLGQsZSksTmcoYixkLGUsYyksZ2kobnVsbCxcbmIsZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIG1pKGEsYixjKX10aHJvdyBFcnJvcih1KDE1NixiLnRhZykpO307dmFyIFVqPW51bGwsTGk9bnVsbDtmdW5jdGlvbiBZaihhKXtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXylyZXR1cm4hMTt2YXIgYj1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoYi5pc0Rpc2FibGVkfHwhYi5zdXBwb3J0c0ZpYmVyKXJldHVybiEwO3RyeXt2YXIgYz1iLmluamVjdChhKTtVaj1mdW5jdGlvbihhKXt0cnl7Yi5vbkNvbW1pdEZpYmVyUm9vdChjLGEsdm9pZCAwLDY0PT09KGEuY3VycmVudC5lZmZlY3RUYWcmNjQpKX1jYXRjaChlKXt9fTtMaT1mdW5jdGlvbihhKXt0cnl7Yi5vbkNvbW1pdEZpYmVyVW5tb3VudChjLGEpfWNhdGNoKGUpe319fWNhdGNoKGQpe31yZXR1cm4hMH1cbmZ1bmN0aW9uIFpqKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5kZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5lZmZlY3RUYWc9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmNoaWxkRXhwaXJhdGlvblRpbWU9dGhpcy5leHBpcmF0aW9uVGltZT0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gU2goYSxiLGMsZCl7cmV0dXJuIG5ldyBaaihhLGIsYyxkKX1cbmZ1bmN0aW9uIGJpKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9ZnVuY3Rpb24gWGooYSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGJpKGEpPzE6MDtpZih2b2lkIDAhPT1hJiZudWxsIT09YSl7YT1hLiQkdHlwZW9mO2lmKGE9PT1nYilyZXR1cm4gMTE7aWYoYT09PWpiKXJldHVybiAxNH1yZXR1cm4gMn1cbmZ1bmN0aW9uIFNnKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbD09PWM/KGM9U2goYS50YWcsYixhLmtleSxhLm1vZGUpLGMuZWxlbWVudFR5cGU9YS5lbGVtZW50VHlwZSxjLnR5cGU9YS50eXBlLGMuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGMuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9Yyk6KGMucGVuZGluZ1Byb3BzPWIsYy5lZmZlY3RUYWc9MCxjLm5leHRFZmZlY3Q9bnVsbCxjLmZpcnN0RWZmZWN0PW51bGwsYy5sYXN0RWZmZWN0PW51bGwpO2MuY2hpbGRFeHBpcmF0aW9uVGltZT1hLmNoaWxkRXhwaXJhdGlvblRpbWU7Yy5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2I9YS5kZXBlbmRlbmNpZXM7Yy5kZXBlbmRlbmNpZXM9bnVsbD09PWI/bnVsbDp7ZXhwaXJhdGlvblRpbWU6Yi5leHBpcmF0aW9uVGltZSxcbmZpcnN0Q29udGV4dDpiLmZpcnN0Q29udGV4dCxyZXNwb25kZXJzOmIucmVzcG9uZGVyc307Yy5zaWJsaW5nPWEuc2libGluZztjLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBVZyhhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpYmkoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgYWI6cmV0dXJuIFdnKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgZmI6Zz04O2V8PTc7YnJlYWs7Y2FzZSBiYjpnPTg7ZXw9MTticmVhaztjYXNlIGNiOnJldHVybiBhPVNoKDEyLGMsYixlfDgpLGEuZWxlbWVudFR5cGU9Y2IsYS50eXBlPWNiLGEuZXhwaXJhdGlvblRpbWU9ZixhO2Nhc2UgaGI6cmV0dXJuIGE9U2goMTMsYyxiLGUpLGEudHlwZT1oYixhLmVsZW1lbnRUeXBlPWhiLGEuZXhwaXJhdGlvblRpbWU9ZixhO2Nhc2UgaWI6cmV0dXJuIGE9U2goMTksYyxiLGUpLGEuZWxlbWVudFR5cGU9aWIsYS5leHBpcmF0aW9uVGltZT1mLGE7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGRiOmc9XG4xMDticmVhayBhO2Nhc2UgZWI6Zz05O2JyZWFrIGE7Y2FzZSBnYjpnPTExO2JyZWFrIGE7Y2FzZSBqYjpnPTE0O2JyZWFrIGE7Y2FzZSBrYjpnPTE2O2Q9bnVsbDticmVhayBhO2Nhc2UgbGI6Zz0yMjticmVhayBhfXRocm93IEVycm9yKHUoMTMwLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKSk7fWI9U2goZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IuZXhwaXJhdGlvblRpbWU9ZjtyZXR1cm4gYn1mdW5jdGlvbiBXZyhhLGIsYyxkKXthPVNoKDcsYSxkLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1mdW5jdGlvbiBUZyhhLGIsYyl7YT1TaCg2LGEsbnVsbCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9XG5mdW5jdGlvbiBWZyhhLGIsYyl7Yj1TaCg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5leHBpcmF0aW9uVGltZT1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGFrKGEsYixjKXt0aGlzLnRhZz1iO3RoaXMuY3VycmVudD1udWxsO3RoaXMuY29udGFpbmVySW5mbz1hO3RoaXMucGluZ0NhY2hlPXRoaXMucGVuZGluZ0NoaWxkcmVuPW51bGw7dGhpcy5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTA7dGhpcy5maW5pc2hlZFdvcms9bnVsbDt0aGlzLnRpbWVvdXRIYW5kbGU9LTE7dGhpcy5wZW5kaW5nQ29udGV4dD10aGlzLmNvbnRleHQ9bnVsbDt0aGlzLmh5ZHJhdGU9Yzt0aGlzLmNhbGxiYWNrTm9kZT1udWxsO3RoaXMuY2FsbGJhY2tQcmlvcml0eT05MDt0aGlzLmxhc3RFeHBpcmVkVGltZT10aGlzLmxhc3RQaW5nZWRUaW1lPXRoaXMubmV4dEtub3duUGVuZGluZ0xldmVsPXRoaXMubGFzdFN1c3BlbmRlZFRpbWU9dGhpcy5maXJzdFN1c3BlbmRlZFRpbWU9dGhpcy5maXJzdFBlbmRpbmdUaW1lPTB9XG5mdW5jdGlvbiBBaihhLGIpe3ZhciBjPWEuZmlyc3RTdXNwZW5kZWRUaW1lO2E9YS5sYXN0U3VzcGVuZGVkVGltZTtyZXR1cm4gMCE9PWMmJmM+PWImJmE8PWJ9ZnVuY3Rpb24geGkoYSxiKXt2YXIgYz1hLmZpcnN0U3VzcGVuZGVkVGltZSxkPWEubGFzdFN1c3BlbmRlZFRpbWU7YzxiJiYoYS5maXJzdFN1c3BlbmRlZFRpbWU9Yik7aWYoZD5ifHwwPT09YylhLmxhc3RTdXNwZW5kZWRUaW1lPWI7Yjw9YS5sYXN0UGluZ2VkVGltZSYmKGEubGFzdFBpbmdlZFRpbWU9MCk7Yjw9YS5sYXN0RXhwaXJlZFRpbWUmJihhLmxhc3RFeHBpcmVkVGltZT0wKX1cbmZ1bmN0aW9uIHlpKGEsYil7Yj5hLmZpcnN0UGVuZGluZ1RpbWUmJihhLmZpcnN0UGVuZGluZ1RpbWU9Yik7dmFyIGM9YS5maXJzdFN1c3BlbmRlZFRpbWU7MCE9PWMmJihiPj1jP2EuZmlyc3RTdXNwZW5kZWRUaW1lPWEubGFzdFN1c3BlbmRlZFRpbWU9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDpiPj1hLmxhc3RTdXNwZW5kZWRUaW1lJiYoYS5sYXN0U3VzcGVuZGVkVGltZT1iKzEpLGI+YS5uZXh0S25vd25QZW5kaW5nTGV2ZWwmJihhLm5leHRLbm93blBlbmRpbmdMZXZlbD1iKSl9ZnVuY3Rpb24gQ2ooYSxiKXt2YXIgYz1hLmxhc3RFeHBpcmVkVGltZTtpZigwPT09Y3x8Yz5iKWEubGFzdEV4cGlyZWRUaW1lPWJ9XG5mdW5jdGlvbiBiayhhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1HZygpLGc9RGcuc3VzcGVuc2U7Zj1IZyhmLGUsZyk7YTppZihjKXtjPWMuX3JlYWN0SW50ZXJuYWxGaWJlcjtiOntpZihkYyhjKSE9PWN8fDEhPT1jLnRhZyl0aHJvdyBFcnJvcih1KDE3MCkpO3ZhciBoPWM7ZG97c3dpdGNoKGgudGFnKXtjYXNlIDM6aD1oLnN0YXRlTm9kZS5jb250ZXh0O2JyZWFrIGI7Y2FzZSAxOmlmKEwoaC50eXBlKSl7aD1oLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBifX1oPWgucmV0dXJufXdoaWxlKG51bGwhPT1oKTt0aHJvdyBFcnJvcih1KDE3MSkpO31pZigxPT09Yy50YWcpe3ZhciBrPWMudHlwZTtpZihMKGspKXtjPUZmKGMsayxoKTticmVhayBhfX1jPWh9ZWxzZSBjPUFmO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9d2coZixnKTtiLnBheWxvYWQ9e2VsZW1lbnQ6YX07ZD12b2lkIDA9PT1cbmQ/bnVsbDpkO251bGwhPT1kJiYoYi5jYWxsYmFjaz1kKTt4ZyhlLGIpO0lnKGUsZik7cmV0dXJuIGZ9ZnVuY3Rpb24gY2soYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1mdW5jdGlvbiBkayhhLGIpe2E9YS5tZW1vaXplZFN0YXRlO251bGwhPT1hJiZudWxsIT09YS5kZWh5ZHJhdGVkJiZhLnJldHJ5VGltZTxiJiYoYS5yZXRyeVRpbWU9Yil9ZnVuY3Rpb24gZWsoYSxiKXtkayhhLGIpOyhhPWEuYWx0ZXJuYXRlKSYmZGsoYSxiKX1cbmZ1bmN0aW9uIGZrKGEsYixjKXtjPW51bGwhPWMmJiEwPT09Yy5oeWRyYXRlO3ZhciBkPW5ldyBhayhhLGIsYyksZT1TaCgzLG51bGwsbnVsbCwyPT09Yj83OjE9PT1iPzM6MCk7ZC5jdXJyZW50PWU7ZS5zdGF0ZU5vZGU9ZDt1ZyhlKTthW09kXT1kLmN1cnJlbnQ7YyYmMCE9PWImJkpjKGEsOT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQpO3RoaXMuX2ludGVybmFsUm9vdD1kfWZrLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7YmsoYSx0aGlzLl9pbnRlcm5hbFJvb3QsbnVsbCxudWxsKX07ZmsucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLl9pbnRlcm5hbFJvb3QsYj1hLmNvbnRhaW5lckluZm87YmsobnVsbCxhLG51bGwsZnVuY3Rpb24oKXtiW09kXT1udWxsfSl9O1xuZnVuY3Rpb24gZ2soYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfWZ1bmN0aW9uIGhrKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgZmsoYSwwLGI/e2h5ZHJhdGU6ITB9OnZvaWQgMCl9XG5mdW5jdGlvbiBpayhhLGIsYyxkLGUpe3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXt2YXIgZz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPWNrKGcpO2guY2FsbChhKX19YmsoYixnLGEsZSl9ZWxzZXtmPWMuX3JlYWN0Um9vdENvbnRhaW5lcj1oayhjLGQpO2c9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1jayhnKTtrLmNhbGwoYSl9fU5qKGZ1bmN0aW9uKCl7YmsoYixnLGEsZSl9KX1yZXR1cm4gY2soZyl9ZnVuY3Rpb24gamsoYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjokYSxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1cbndjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWhnKEdnKCksMTUwLDEwMCk7SWcoYSxiKTtlayhhLGIpfX07eGM9ZnVuY3Rpb24oYSl7MTM9PT1hLnRhZyYmKElnKGEsMyksZWsoYSwzKSl9O3ljPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUdnKCk7Yj1IZyhiLGEsbnVsbCk7SWcoYSxiKTtlayhhLGIpfX07XG56YT1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOkNiKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1RZChkKTtpZighZSl0aHJvdyBFcnJvcih1KDkwKSk7eWIoZCk7Q2IoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOktiKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZIYihhLCEhYy5tdWx0aXBsZSxiLCExKX19O0ZhPU1qO1xuR2E9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1XO1d8PTQ7dHJ5e3JldHVybiBjZyg5OCxhLmJpbmQobnVsbCxiLGMsZCxlKSl9ZmluYWxseXtXPWYsVz09PVYmJmdnKCl9fTtIYT1mdW5jdGlvbigpeyhXJigxfGZqfGdqKSk9PT1WJiYoTGooKSxEaigpKX07SWE9ZnVuY3Rpb24oYSxiKXt2YXIgYz1XO1d8PTI7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7Vz1jLFc9PT1WJiZnZygpfX07ZnVuY3Rpb24ga2soYSxiKXt2YXIgYz0yPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbDtpZighZ2soYikpdGhyb3cgRXJyb3IodSgyMDApKTtyZXR1cm4gamsoYSxiLG51bGwsYyl9dmFyIGxrPXtFdmVudHM6W05jLFBkLFFkLHhhLHRhLFhkLGZ1bmN0aW9uKGEpe2pjKGEsV2QpfSxEYSxFYSxpZCxtYyxEaix7Y3VycmVudDohMX1dfTtcbihmdW5jdGlvbihhKXt2YXIgYj1hLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlO3JldHVybiBZaihuKHt9LGEse292ZXJyaWRlSG9va1N0YXRlOm51bGwsb3ZlcnJpZGVQcm9wczpudWxsLHNldFN1c3BlbnNlSGFuZGxlcjpudWxsLHNjaGVkdWxlVXBkYXRlOm51bGwsY3VycmVudERpc3BhdGNoZXJSZWY6V2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXthPWhjKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpmdW5jdGlvbihhKXtyZXR1cm4gYj9iKGEpOm51bGx9LGZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaDpudWxsLHNjaGVkdWxlUmVmcmVzaDpudWxsLHNjaGVkdWxlUm9vdDpudWxsLHNldFJlZnJlc2hIYW5kbGVyOm51bGwsZ2V0Q3VycmVudEZpYmVyOm51bGx9KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6dGMsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi4xNC4wXCIsXG5yZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTtleHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPWxrO2V4cG9ydHMuY3JlYXRlUG9ydGFsPWtrO2V4cG9ydHMuZmluZERPTU5vZGU9ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7aWYodm9pZCAwPT09Yil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyKXRocm93IEVycm9yKHUoMTg4KSk7dGhyb3cgRXJyb3IodSgyNjgsT2JqZWN0LmtleXMoYSkpKTt9YT1oYyhiKTthPW51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGU7cmV0dXJuIGF9O1xuZXhwb3J0cy5mbHVzaFN5bmM9ZnVuY3Rpb24oYSxiKXtpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgxODcpKTt2YXIgYz1XO1d8PTE7dHJ5e3JldHVybiBjZyg5OSxhLmJpbmQobnVsbCxiKSl9ZmluYWxseXtXPWMsZ2coKX19O2V4cG9ydHMuaHlkcmF0ZT1mdW5jdGlvbihhLGIsYyl7aWYoIWdrKGIpKXRocm93IEVycm9yKHUoMjAwKSk7cmV0dXJuIGlrKG51bGwsYSxiLCEwLGMpfTtleHBvcnRzLnJlbmRlcj1mdW5jdGlvbihhLGIsYyl7aWYoIWdrKGIpKXRocm93IEVycm9yKHUoMjAwKSk7cmV0dXJuIGlrKG51bGwsYSxiLCExLGMpfTtcbmV4cG9ydHMudW5tb3VudENvbXBvbmVudEF0Tm9kZT1mdW5jdGlvbihhKXtpZighZ2soYSkpdGhyb3cgRXJyb3IodSg0MCkpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KE5qKGZ1bmN0aW9uKCl7aWsobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbDthW09kXT1udWxsfSl9KSwhMCk6ITF9O2V4cG9ydHMudW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM9TWo7ZXhwb3J0cy51bnN0YWJsZV9jcmVhdGVQb3J0YWw9ZnVuY3Rpb24oYSxiKXtyZXR1cm4ga2soYSxiLDI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsKX07XG5leHBvcnRzLnVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyPWZ1bmN0aW9uKGEsYixjLGQpe2lmKCFnayhjKSl0aHJvdyBFcnJvcih1KDIwMCkpO2lmKG51bGw9PWF8fHZvaWQgMD09PWEuX3JlYWN0SW50ZXJuYWxGaWJlcil0aHJvdyBFcnJvcih1KDM4KSk7cmV0dXJuIGlrKGEsYixjLCExLGQpfTtleHBvcnRzLnZlcnNpb249XCIxNi4xNC4wXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjE0LjBcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBsPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixwPW4/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMscT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYscj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyx0PW4/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LHU9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsdj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSx3PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAseD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMix5PW4/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHo9bj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSxBPW4/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6XG42MDExNixCPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBDKGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifVxudmFyIEQ9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEU9e307ZnVuY3Rpb24gRihhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1FO3RoaXMudXBkYXRlcj1jfHxEfUYucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307Ri5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtpZihcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hKXRocm93IEVycm9yKEMoODUpKTt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0YucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O1xuZnVuY3Rpb24gRygpe31HLnByb3RvdHlwZT1GLnByb3RvdHlwZTtmdW5jdGlvbiBIKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUU7dGhpcy51cGRhdGVyPWN8fER9dmFyIEk9SC5wcm90b3R5cGU9bmV3IEc7SS5jb25zdHJ1Y3Rvcj1IO2woSSxGLnByb3RvdHlwZSk7SS5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgSj17Y3VycmVudDpudWxsfSxLPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksTD17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gTShhLGIsYyl7dmFyIGUsZD17fSxnPW51bGwsaz1udWxsO2lmKG51bGwhPWIpZm9yKGUgaW4gdm9pZCAwIT09Yi5yZWYmJihrPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilLLmNhbGwoYixlKSYmIUwuaGFzT3duUHJvcGVydHkoZSkmJihkW2VdPWJbZV0pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZilkLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGYpe2Zvcih2YXIgaD1BcnJheShmKSxtPTA7bTxmO20rKyloW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49aH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoZSBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZFtlXSYmKGRbZV09ZltlXSk7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLGtleTpnLHJlZjprLHByb3BzOmQsX293bmVyOkouY3VycmVudH19XG5mdW5jdGlvbiBOKGEsYil7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBPKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1wfWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrKFwiXCIrYSkucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIFA9L1xcLysvZyxRPVtdO2Z1bmN0aW9uIFIoYSxiLGMsZSl7aWYoUS5sZW5ndGgpe3ZhciBkPVEucG9wKCk7ZC5yZXN1bHQ9YTtkLmtleVByZWZpeD1iO2QuZnVuYz1jO2QuY29udGV4dD1lO2QuY291bnQ9MDtyZXR1cm4gZH1yZXR1cm57cmVzdWx0OmEsa2V5UHJlZml4OmIsZnVuYzpjLGNvbnRleHQ6ZSxjb3VudDowfX1cbmZ1bmN0aW9uIFMoYSl7YS5yZXN1bHQ9bnVsbDthLmtleVByZWZpeD1udWxsO2EuZnVuYz1udWxsO2EuY29udGV4dD1udWxsO2EuY291bnQ9MDsxMD5RLmxlbmd0aCYmUS5wdXNoKGEpfVxuZnVuY3Rpb24gVChhLGIsYyxlKXt2YXIgZD10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09ZHx8XCJib29sZWFuXCI9PT1kKWE9bnVsbDt2YXIgZz0hMTtpZihudWxsPT09YSlnPSEwO2Vsc2Ugc3dpdGNoKGQpe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6Zz0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgcDpjYXNlIHE6Zz0hMH19aWYoZylyZXR1cm4gYyhlLGEsXCJcIj09PWI/XCIuXCIrVShhLDApOmIpLDE7Zz0wO2I9XCJcIj09PWI/XCIuXCI6YitcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgaz0wO2s8YS5sZW5ndGg7aysrKXtkPWFba107dmFyIGY9YitVKGQsayk7Zys9VChkLGYsYyxlKX1lbHNlIGlmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGE/Zj1udWxsOihmPUImJmFbQl18fGFbXCJAQGl0ZXJhdG9yXCJdLGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGY/ZjpudWxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1mLmNhbGwoYSksaz1cbjA7IShkPWEubmV4dCgpKS5kb25lOylkPWQudmFsdWUsZj1iK1UoZCxrKyspLGcrPVQoZCxmLGMsZSk7ZWxzZSBpZihcIm9iamVjdFwiPT09ZCl0aHJvdyBjPVwiXCIrYSxFcnJvcihDKDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1jP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmMsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFYoYSxiLGMpe3JldHVybiBudWxsPT1hPzA6VChhLFwiXCIsYixjKX1mdW5jdGlvbiBVKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBXKGEsYil7YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKX1cbmZ1bmN0aW9uIGFhKGEsYixjKXt2YXIgZT1hLnJlc3VsdCxkPWEua2V5UHJlZml4O2E9YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKTtBcnJheS5pc0FycmF5KGEpP1goYSxlLGMsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTpudWxsIT1hJiYoTyhhKSYmKGE9TihhLGQrKCFhLmtleXx8YiYmYi5rZXk9PT1hLmtleT9cIlwiOihcIlwiK2Eua2V5KS5yZXBsYWNlKFAsXCIkJi9cIikrXCIvXCIpK2MpKSxlLnB1c2goYSkpfWZ1bmN0aW9uIFgoYSxiLGMsZSxkKXt2YXIgZz1cIlwiO251bGwhPWMmJihnPShcIlwiK2MpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIik7Yj1SKGIsZyxlLGQpO1YoYSxhYSxiKTtTKGIpfXZhciBZPXtjdXJyZW50Om51bGx9O2Z1bmN0aW9uIFooKXt2YXIgYT1ZLmN1cnJlbnQ7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IoQygzMjEpKTtyZXR1cm4gYX1cbnZhciBiYT17UmVhY3RDdXJyZW50RGlzcGF0Y2hlcjpZLFJlYWN0Q3VycmVudEJhdGNoQ29uZmlnOntzdXNwZW5zZTpudWxsfSxSZWFjdEN1cnJlbnRPd25lcjpKLElzU29tZVJlbmRlcmVyQWN0aW5nOntjdXJyZW50OiExfSxhc3NpZ246bH07ZXhwb3J0cy5DaGlsZHJlbj17bWFwOmZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBlPVtdO1goYSxlLG51bGwsYixjKTtyZXR1cm4gZX0sZm9yRWFjaDpmdW5jdGlvbihhLGIsYyl7aWYobnVsbD09YSlyZXR1cm4gYTtiPVIobnVsbCxudWxsLGIsYyk7VihhLFcsYik7UyhiKX0sY291bnQ6ZnVuY3Rpb24oYSl7cmV0dXJuIFYoYSxmdW5jdGlvbigpe3JldHVybiBudWxsfSxudWxsKX0sdG9BcnJheTpmdW5jdGlvbihhKXt2YXIgYj1bXTtYKGEsYixudWxsLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk7cmV0dXJuIGJ9LG9ubHk6ZnVuY3Rpb24oYSl7aWYoIU8oYSkpdGhyb3cgRXJyb3IoQygxNDMpKTtyZXR1cm4gYX19O1xuZXhwb3J0cy5Db21wb25lbnQ9RjtleHBvcnRzLkZyYWdtZW50PXI7ZXhwb3J0cy5Qcm9maWxlcj11O2V4cG9ydHMuUHVyZUNvbXBvbmVudD1IO2V4cG9ydHMuU3RyaWN0TW9kZT10O2V4cG9ydHMuU3VzcGVuc2U9eTtleHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPWJhO1xuZXhwb3J0cy5jbG9uZUVsZW1lbnQ9ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PT1hfHx2b2lkIDA9PT1hKXRocm93IEVycm9yKEMoMjY3LGEpKTt2YXIgZT1sKHt9LGEucHJvcHMpLGQ9YS5rZXksZz1hLnJlZixrPWEuX293bmVyO2lmKG51bGwhPWIpe3ZvaWQgMCE9PWIucmVmJiYoZz1iLnJlZixrPUouY3VycmVudCk7dm9pZCAwIT09Yi5rZXkmJihkPVwiXCIrYi5rZXkpO2lmKGEudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyl2YXIgZj1hLnR5cGUuZGVmYXVsdFByb3BzO2ZvcihoIGluIGIpSy5jYWxsKGIsaCkmJiFMLmhhc093blByb3BlcnR5KGgpJiYoZVtoXT12b2lkIDA9PT1iW2hdJiZ2b2lkIDAhPT1mP2ZbaF06YltoXSl9dmFyIGg9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1oKWUuY2hpbGRyZW49YztlbHNlIGlmKDE8aCl7Zj1BcnJheShoKTtmb3IodmFyIG09MDttPGg7bSsrKWZbbV09YXJndW1lbnRzW20rMl07ZS5jaGlsZHJlbj1mfXJldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLFxua2V5OmQscmVmOmcscHJvcHM6ZSxfb3duZXI6a319O2V4cG9ydHMuY3JlYXRlQ29udGV4dD1mdW5jdGlvbihhLGIpe3ZvaWQgMD09PWImJihiPW51bGwpO2E9eyQkdHlwZW9mOncsX2NhbGN1bGF0ZUNoYW5nZWRCaXRzOmIsX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjp2LF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9O2V4cG9ydHMuY3JlYXRlRWxlbWVudD1NO2V4cG9ydHMuY3JlYXRlRmFjdG9yeT1mdW5jdGlvbihhKXt2YXIgYj1NLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn07ZXhwb3J0cy5jcmVhdGVSZWY9ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX07ZXhwb3J0cy5mb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp4LHJlbmRlcjphfX07ZXhwb3J0cy5pc1ZhbGlkRWxlbWVudD1PO1xuZXhwb3J0cy5sYXp5PWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjpBLF9jdG9yOmEsX3N0YXR1czotMSxfcmVzdWx0Om51bGx9fTtleHBvcnRzLm1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm57JCR0eXBlb2Y6eix0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19O2V4cG9ydHMudXNlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUNhbGxiYWNrKGEsYil9O2V4cG9ydHMudXNlQ29udGV4dD1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlQ29udGV4dChhLGIpfTtleHBvcnRzLnVzZURlYnVnVmFsdWU9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudXNlRWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VJbXBlcmF0aXZlSGFuZGxlPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gWigpLnVzZUltcGVyYXRpdmVIYW5kbGUoYSxiLGMpfTtcbmV4cG9ydHMudXNlTGF5b3V0RWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VMYXlvdXRFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VNZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VNZW1vKGEsYil9O2V4cG9ydHMudXNlUmVkdWNlcj1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFooKS51c2VSZWR1Y2VyKGEsYixjKX07ZXhwb3J0cy51c2VSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIFooKS51c2VSZWYoYSl9O2V4cG9ydHMudXNlU3RhdGU9ZnVuY3Rpb24oYSl7cmV0dXJuIFooKS51c2VTdGF0ZShhKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTYuMTQuMFwiO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjAuMTkuMVxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBmLGcsaCxrLGw7XG5pZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgcD1udWxsLHE9bnVsbCx0PWZ1bmN0aW9uKCl7aWYobnVsbCE9PXApdHJ5e3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7cCghMCxhKTtwPW51bGx9Y2F0Y2goYil7dGhyb3cgc2V0VGltZW91dCh0LDApLGI7fX0sdT1EYXRlLm5vdygpO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIERhdGUubm93KCktdX07Zj1mdW5jdGlvbihhKXtudWxsIT09cD9zZXRUaW1lb3V0KGYsMCxhKToocD1hLHNldFRpbWVvdXQodCwwKSl9O2c9ZnVuY3Rpb24oYSxiKXtxPXNldFRpbWVvdXQoYSxiKX07aD1mdW5jdGlvbigpe2NsZWFyVGltZW91dChxKX07az1mdW5jdGlvbigpe3JldHVybiExfTtsPWV4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oKXt9fWVsc2V7dmFyIHc9d2luZG93LnBlcmZvcm1hbmNlLHg9d2luZG93LkRhdGUsXG55PXdpbmRvdy5zZXRUaW1lb3V0LHo9d2luZG93LmNsZWFyVGltZW91dDtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNvbnNvbGUpe3ZhciBBPXdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZTtcImZ1bmN0aW9uXCIhPT10eXBlb2Ygd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgcmVxdWVzdEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgQSYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgY2FuY2VsQW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpfWlmKFwib2JqZWN0XCI9PT1cbnR5cGVvZiB3JiZcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdy5ub3cpZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gdy5ub3coKX07ZWxzZXt2YXIgQj14Lm5vdygpO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHgubm93KCktQn19dmFyIEM9ITEsRD1udWxsLEU9LTEsRj01LEc9MDtrPWZ1bmN0aW9uKCl7cmV0dXJuIGV4cG9ydHMudW5zdGFibGVfbm93KCk+PUd9O2w9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oYSl7MD5hfHwxMjU8YT9jb25zb2xlLmVycm9yKFwiZm9yY2VGcmFtZVJhdGUgdGFrZXMgYSBwb3NpdGl2ZSBpbnQgYmV0d2VlbiAwIGFuZCAxMjUsIGZvcmNpbmcgZnJhbWVyYXRlcyBoaWdoZXIgdGhhbiAxMjUgZnBzIGlzIG5vdCB1bnN1cHBvcnRlZFwiKTpGPTA8YT9NYXRoLmZsb29yKDFFMy9hKTo1fTt2YXIgSD1uZXcgTWVzc2FnZUNoYW5uZWwsST1ILnBvcnQyO0gucG9ydDEub25tZXNzYWdlPVxuZnVuY3Rpb24oKXtpZihudWxsIT09RCl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtHPWErRjt0cnl7RCghMCxhKT9JLnBvc3RNZXNzYWdlKG51bGwpOihDPSExLEQ9bnVsbCl9Y2F0Y2goYil7dGhyb3cgSS5wb3N0TWVzc2FnZShudWxsKSxiO319ZWxzZSBDPSExfTtmPWZ1bmN0aW9uKGEpe0Q9YTtDfHwoQz0hMCxJLnBvc3RNZXNzYWdlKG51bGwpKX07Zz1mdW5jdGlvbihhLGIpe0U9eShmdW5jdGlvbigpe2EoZXhwb3J0cy51bnN0YWJsZV9ub3coKSl9LGIpfTtoPWZ1bmN0aW9uKCl7eihFKTtFPS0xfX1mdW5jdGlvbiBKKGEsYil7dmFyIGM9YS5sZW5ndGg7YS5wdXNoKGIpO2E6Zm9yKDs7KXt2YXIgZD1jLTE+Pj4xLGU9YVtkXTtpZih2b2lkIDAhPT1lJiYwPEsoZSxiKSlhW2RdPWIsYVtjXT1lLGM9ZDtlbHNlIGJyZWFrIGF9fWZ1bmN0aW9uIEwoYSl7YT1hWzBdO3JldHVybiB2b2lkIDA9PT1hP251bGw6YX1cbmZ1bmN0aW9uIE0oYSl7dmFyIGI9YVswXTtpZih2b2lkIDAhPT1iKXt2YXIgYz1hLnBvcCgpO2lmKGMhPT1iKXthWzBdPWM7YTpmb3IodmFyIGQ9MCxlPWEubGVuZ3RoO2Q8ZTspe3ZhciBtPTIqKGQrMSktMSxuPWFbbV0sdj1tKzEscj1hW3ZdO2lmKHZvaWQgMCE9PW4mJjA+SyhuLGMpKXZvaWQgMCE9PXImJjA+SyhyLG4pPyhhW2RdPXIsYVt2XT1jLGQ9dik6KGFbZF09bixhW21dPWMsZD1tKTtlbHNlIGlmKHZvaWQgMCE9PXImJjA+SyhyLGMpKWFbZF09cixhW3ZdPWMsZD12O2Vsc2UgYnJlYWsgYX19cmV0dXJuIGJ9cmV0dXJuIG51bGx9ZnVuY3Rpb24gSyhhLGIpe3ZhciBjPWEuc29ydEluZGV4LWIuc29ydEluZGV4O3JldHVybiAwIT09Yz9jOmEuaWQtYi5pZH12YXIgTj1bXSxPPVtdLFA9MSxRPW51bGwsUj0zLFM9ITEsVD0hMSxVPSExO1xuZnVuY3Rpb24gVihhKXtmb3IodmFyIGI9TChPKTtudWxsIT09Yjspe2lmKG51bGw9PT1iLmNhbGxiYWNrKU0oTyk7ZWxzZSBpZihiLnN0YXJ0VGltZTw9YSlNKE8pLGIuc29ydEluZGV4PWIuZXhwaXJhdGlvblRpbWUsSihOLGIpO2Vsc2UgYnJlYWs7Yj1MKE8pfX1mdW5jdGlvbiBXKGEpe1U9ITE7VihhKTtpZighVClpZihudWxsIT09TChOKSlUPSEwLGYoWCk7ZWxzZXt2YXIgYj1MKE8pO251bGwhPT1iJiZnKFcsYi5zdGFydFRpbWUtYSl9fVxuZnVuY3Rpb24gWChhLGIpe1Q9ITE7VSYmKFU9ITEsaCgpKTtTPSEwO3ZhciBjPVI7dHJ5e1YoYik7Zm9yKFE9TChOKTtudWxsIT09USYmKCEoUS5leHBpcmF0aW9uVGltZT5iKXx8YSYmIWsoKSk7KXt2YXIgZD1RLmNhbGxiYWNrO2lmKG51bGwhPT1kKXtRLmNhbGxiYWNrPW51bGw7Uj1RLnByaW9yaXR5TGV2ZWw7dmFyIGU9ZChRLmV4cGlyYXRpb25UaW1lPD1iKTtiPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGU/US5jYWxsYmFjaz1lOlE9PT1MKE4pJiZNKE4pO1YoYil9ZWxzZSBNKE4pO1E9TChOKX1pZihudWxsIT09USl2YXIgbT0hMDtlbHNle3ZhciBuPUwoTyk7bnVsbCE9PW4mJmcoVyxuLnN0YXJ0VGltZS1iKTttPSExfXJldHVybiBtfWZpbmFsbHl7UT1udWxsLFI9YyxTPSExfX1cbmZ1bmN0aW9uIFkoYSl7c3dpdGNoKGEpe2Nhc2UgMTpyZXR1cm4tMTtjYXNlIDI6cmV0dXJuIDI1MDtjYXNlIDU6cmV0dXJuIDEwNzM3NDE4MjM7Y2FzZSA0OnJldHVybiAxRTQ7ZGVmYXVsdDpyZXR1cm4gNUUzfX12YXIgWj1sO2V4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7ZXhwb3J0cy51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xO2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9Qcm9maWxpbmc9bnVsbDtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaz1mdW5jdGlvbihhKXthLmNhbGxiYWNrPW51bGx9O2V4cG9ydHMudW5zdGFibGVfY29udGludWVFeGVjdXRpb249ZnVuY3Rpb24oKXtUfHxTfHwoVD0hMCxmKFgpKX07XG5leHBvcnRzLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIFJ9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gTChOKX07ZXhwb3J0cy51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKGEpe3N3aXRjaChSKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgYj0zO2JyZWFrO2RlZmF1bHQ6Yj1SfXZhciBjPVI7Uj1iO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7Uj1jfX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9yZXF1ZXN0UGFpbnQ9WjtleHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBjPVI7Uj1hO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7Uj1jfX07XG5leHBvcnRzLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWV4cG9ydHMudW5zdGFibGVfbm93KCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7dmFyIGU9Yy5kZWxheTtlPVwibnVtYmVyXCI9PT10eXBlb2YgZSYmMDxlP2QrZTpkO2M9XCJudW1iZXJcIj09PXR5cGVvZiBjLnRpbWVvdXQ/Yy50aW1lb3V0OlkoYSl9ZWxzZSBjPVkoYSksZT1kO2M9ZStjO2E9e2lkOlArKyxjYWxsYmFjazpiLHByaW9yaXR5TGV2ZWw6YSxzdGFydFRpbWU6ZSxleHBpcmF0aW9uVGltZTpjLHNvcnRJbmRleDotMX07ZT5kPyhhLnNvcnRJbmRleD1lLEooTyxhKSxudWxsPT09TChOKSYmYT09PUwoTykmJihVP2goKTpVPSEwLGcoVyxlLWQpKSk6KGEuc29ydEluZGV4PWMsSihOLGEpLFR8fFN8fChUPSEwLGYoWCkpKTtyZXR1cm4gYX07XG5leHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtWKGEpO3ZhciBiPUwoTik7cmV0dXJuIGIhPT1RJiZudWxsIT09USYmbnVsbCE9PWImJm51bGwhPT1iLmNhbGxiYWNrJiZiLnN0YXJ0VGltZTw9YSYmYi5leHBpcmF0aW9uVGltZTxRLmV4cGlyYXRpb25UaW1lfHxrKCl9O2V4cG9ydHMudW5zdGFibGVfd3JhcENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPVI7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9UjtSPWI7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e1I9Y319fTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcblxuICAgIC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4vLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuX193ZWJwYWNrX3JlcXVpcmVfXy5tID0gX193ZWJwYWNrX21vZHVsZXNfXztcblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmYgPSB7fTtcbi8vIFRoaXMgZmlsZSBjb250YWlucyBvbmx5IHRoZSBlbnRyeSBjaHVuay5cbi8vIFRoZSBjaHVuayBsb2FkaW5nIGZ1bmN0aW9uIGZvciBhZGRpdGlvbmFsIGNodW5rc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5lID0gKGNodW5rSWQpID0+IHtcblx0cmV0dXJuIFByb21pc2UuYWxsKE9iamVjdC5rZXlzKF9fd2VicGFja19yZXF1aXJlX18uZikucmVkdWNlKChwcm9taXNlcywga2V5KSA9PiB7XG5cdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5mW2tleV0oY2h1bmtJZCwgcHJvbWlzZXMpO1xuXHRcdHJldHVybiBwcm9taXNlcztcblx0fSwgW10pKTtcbn07IiwiLy8gVGhpcyBmdW5jdGlvbiBhbGxvdyB0byByZWZlcmVuY2UgYXN5bmMgY2h1bmtzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnUgPSAoY2h1bmtJZCkgPT4ge1xuXHQvLyByZXR1cm4gdXJsIGZvciBmaWxlbmFtZXMgYmFzZWQgb24gdGVtcGxhdGVcblx0cmV0dXJuIFwiXCIgKyBjaHVua0lkICsgXCIuYnVuZGxlLmpzXCI7XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IChleHBvcnRzKSA9PiB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyYztcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSB7XG5cdFx0XHR2YXIgaSA9IHNjcmlwdHMubGVuZ3RoIC0gMTtcblx0XHRcdHdoaWxlIChpID4gLTEgJiYgIXNjcmlwdFVybCkgc2NyaXB0VXJsID0gc2NyaXB0c1tpLS1dLnNyYztcblx0XHR9XG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIi8vIG5vIGJhc2VVUklcblxuLy8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3Ncbi8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuLy8gW3Jlc29sdmUsIHJlamVjdCwgUHJvbWlzZV0gPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG52YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuXHQ1OTA6IDBcbn07XG5cbl9fd2VicGFja19yZXF1aXJlX18uZi5qID0gKGNodW5rSWQsIHByb21pc2VzKSA9PiB7XG5cdFx0Ly8gSlNPTlAgY2h1bmsgbG9hZGluZyBmb3IgamF2YXNjcmlwdFxuXHRcdHZhciBpbnN0YWxsZWRDaHVua0RhdGEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLm8oaW5zdGFsbGVkQ2h1bmtzLCBjaHVua0lkKSA/IGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA6IHVuZGVmaW5lZDtcblx0XHRpZihpbnN0YWxsZWRDaHVua0RhdGEgIT09IDApIHsgLy8gMCBtZWFucyBcImFscmVhZHkgaW5zdGFsbGVkXCIuXG5cblx0XHRcdC8vIGEgUHJvbWlzZSBtZWFucyBcImN1cnJlbnRseSBsb2FkaW5nXCIuXG5cdFx0XHRpZihpbnN0YWxsZWRDaHVua0RhdGEpIHtcblx0XHRcdFx0cHJvbWlzZXMucHVzaChpbnN0YWxsZWRDaHVua0RhdGFbMl0pO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aWYodHJ1ZSkgeyAvLyBhbGwgY2h1bmtzIGhhdmUgSlNcblx0XHRcdFx0XHQvLyBzZXR1cCBQcm9taXNlIGluIGNodW5rIGNhY2hlXG5cdFx0XHRcdFx0dmFyIHByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiAoaW5zdGFsbGVkQ2h1bmtEYXRhID0gaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdID0gW3Jlc29sdmUsIHJlamVjdF0pKTtcblx0XHRcdFx0XHRwcm9taXNlcy5wdXNoKGluc3RhbGxlZENodW5rRGF0YVsyXSA9IHByb21pc2UpO1xuXG5cdFx0XHRcdFx0Ly8gc3RhcnQgY2h1bmsgbG9hZGluZ1xuXHRcdFx0XHRcdHZhciB1cmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLnAgKyBfX3dlYnBhY2tfcmVxdWlyZV9fLnUoY2h1bmtJZCk7XG5cdFx0XHRcdFx0Ly8gY3JlYXRlIGVycm9yIGJlZm9yZSBzdGFjayB1bndvdW5kIHRvIGdldCB1c2VmdWwgc3RhY2t0cmFjZSBsYXRlclxuXHRcdFx0XHRcdHZhciBlcnJvciA9IG5ldyBFcnJvcigpO1xuXHRcdFx0XHRcdHZhciBsb2FkaW5nRW5kZWQgPSAoZXZlbnQpID0+IHtcblx0XHRcdFx0XHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhpbnN0YWxsZWRDaHVua3MsIGNodW5rSWQpKSB7XG5cdFx0XHRcdFx0XHRcdGluc3RhbGxlZENodW5rRGF0YSA9IGluc3RhbGxlZENodW5rc1tjaHVua0lkXTtcblx0XHRcdFx0XHRcdFx0aWYoaW5zdGFsbGVkQ2h1bmtEYXRhICE9PSAwKSBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gPSB1bmRlZmluZWQ7XG5cdFx0XHRcdFx0XHRcdGlmKGluc3RhbGxlZENodW5rRGF0YSkge1xuXHRcdFx0XHRcdFx0XHRcdHZhciBlcnJvclR5cGUgPSBldmVudCAmJiAoZXZlbnQudHlwZSA9PT0gJ2xvYWQnID8gJ21pc3NpbmcnIDogZXZlbnQudHlwZSk7XG5cdFx0XHRcdFx0XHRcdFx0dmFyIHJlYWxTcmMgPSBldmVudCAmJiBldmVudC50YXJnZXQgJiYgZXZlbnQudGFyZ2V0LnNyYztcblx0XHRcdFx0XHRcdFx0XHRlcnJvci5tZXNzYWdlID0gJ0xvYWRpbmcgY2h1bmsgJyArIGNodW5rSWQgKyAnIGZhaWxlZC5cXG4oJyArIGVycm9yVHlwZSArICc6ICcgKyByZWFsU3JjICsgJyknO1xuXHRcdFx0XHRcdFx0XHRcdGVycm9yLm5hbWUgPSAnQ2h1bmtMb2FkRXJyb3InO1xuXHRcdFx0XHRcdFx0XHRcdGVycm9yLnR5cGUgPSBlcnJvclR5cGU7XG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3IucmVxdWVzdCA9IHJlYWxTcmM7XG5cdFx0XHRcdFx0XHRcdFx0aW5zdGFsbGVkQ2h1bmtEYXRhWzFdKGVycm9yKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5sKHVybCwgbG9hZGluZ0VuZGVkLCBcImNodW5rLVwiICsgY2h1bmtJZCwgY2h1bmtJZCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG59O1xuXG4vLyBubyBwcmVmZXRjaGluZ1xuXG4vLyBubyBwcmVsb2FkZWRcblxuLy8gbm8gSE1SXG5cbi8vIG5vIEhNUiBtYW5pZmVzdFxuXG4vLyBubyBvbiBjaHVua3MgbG9hZGVkXG5cbi8vIGluc3RhbGwgYSBKU09OUCBjYWxsYmFjayBmb3IgY2h1bmsgbG9hZGluZ1xudmFyIHdlYnBhY2tKc29ucENhbGxiYWNrID0gKHBhcmVudENodW5rTG9hZGluZ0Z1bmN0aW9uLCBkYXRhKSA9PiB7XG5cdHZhciBbY2h1bmtJZHMsIG1vcmVNb2R1bGVzLCBydW50aW1lXSA9IGRhdGE7XG5cdC8vIGFkZCBcIm1vcmVNb2R1bGVzXCIgdG8gdGhlIG1vZHVsZXMgb2JqZWN0LFxuXHQvLyB0aGVuIGZsYWcgYWxsIFwiY2h1bmtJZHNcIiBhcyBsb2FkZWQgYW5kIGZpcmUgY2FsbGJhY2tcblx0dmFyIG1vZHVsZUlkLCBjaHVua0lkLCBpID0gMDtcblx0aWYoY2h1bmtJZHMuc29tZSgoaWQpID0+IChpbnN0YWxsZWRDaHVua3NbaWRdICE9PSAwKSkpIHtcblx0XHRmb3IobW9kdWxlSWQgaW4gbW9yZU1vZHVsZXMpIHtcblx0XHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhtb3JlTW9kdWxlcywgbW9kdWxlSWQpKSB7XG5cdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18ubVttb2R1bGVJZF0gPSBtb3JlTW9kdWxlc1ttb2R1bGVJZF07XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGlmKHJ1bnRpbWUpIHZhciByZXN1bHQgPSBydW50aW1lKF9fd2VicGFja19yZXF1aXJlX18pO1xuXHR9XG5cdGlmKHBhcmVudENodW5rTG9hZGluZ0Z1bmN0aW9uKSBwYXJlbnRDaHVua0xvYWRpbmdGdW5jdGlvbihkYXRhKTtcblx0Zm9yKDtpIDwgY2h1bmtJZHMubGVuZ3RoOyBpKyspIHtcblx0XHRjaHVua0lkID0gY2h1bmtJZHNbaV07XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGluc3RhbGxlZENodW5rcywgY2h1bmtJZCkgJiYgaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdKSB7XG5cdFx0XHRpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF1bMF0oKTtcblx0XHR9XG5cdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdID0gMDtcblx0fVxuXG59XG5cbnZhciBjaHVua0xvYWRpbmdHbG9iYWwgPSBzZWxmW1wid2VicGFja0NodW5rdGFza18yXCJdID0gc2VsZltcIndlYnBhY2tDaHVua3Rhc2tfMlwiXSB8fCBbXTtcbmNodW5rTG9hZGluZ0dsb2JhbC5mb3JFYWNoKHdlYnBhY2tKc29ucENhbGxiYWNrLmJpbmQobnVsbCwgMCkpO1xuY2h1bmtMb2FkaW5nR2xvYmFsLnB1c2ggPSB3ZWJwYWNrSnNvbnBDYWxsYmFjay5iaW5kKG51bGwsIGNodW5rTG9hZGluZ0dsb2JhbC5wdXNoLmJpbmQoY2h1bmtMb2FkaW5nR2xvYmFsKSk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaW5kZXguY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9pbmRleC5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJjb25zdCBnZXRGdWxsWWVhciA9ICgpID0+IHtcclxuICByZXR1cm4gbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpO1xyXG59XHJcblxyXG5jb25zdCBnZXRGb290ZXJDb3B5ID0gKGlzSW5kZXgpID0+IHtcclxuICByZXR1cm4gaXNJbmRleCA/IFwiSG9sYmVydG9uIFNjaG9vbFwiIDogXCJIb2xiZXJ0b24gU2Nob29sIG1haW4gZGFzaGJvYXJkXCI7XHJcbn1cclxuXHJcbmNvbnN0IGdldExhdGVzdE5vdGlmaWNhdGlvbiA9ICgpID0+IHtcclxuICByZXR1cm4gJzxzdHJvbmc+VXJnZW50IHJlcXVpcmVtZW50PC9zdHJvbmc+IC0gY29tcGxldGUgYnkgRU9EJztcclxufVxyXG5cclxuZXhwb3J0IHsgZ2V0RnVsbFllYXIsIGdldEZvb3RlckNvcHksIGdldExhdGVzdE5vdGlmaWNhdGlvbiB9IiwiaW1wb3J0IHN0cmluZ0hhc2ggZnJvbSAnc3RyaW5nLWhhc2gnO1xuaW1wb3J0IGFzYXAgZnJvbSAnYXNhcCc7XG5cbmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gIGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikge1xuICAgIF90eXBlb2YgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgICByZXR1cm4gdHlwZW9mIG9iajtcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIF90eXBlb2YgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIF90eXBlb2Yob2JqKTtcbn1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkge1xuICBpZiAoa2V5IGluIG9iaikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBvYmo7XG59XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307XG4gICAgdmFyIG93bktleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpO1xuXG4gICAgaWYgKHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBvd25LZXlzID0gb3duS2V5cy5jb25jYXQoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2UpLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7XG4gICAgICAgIHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwgc3ltKS5lbnVtZXJhYmxlO1xuICAgICAgfSkpO1xuICAgIH1cblxuICAgIG93bktleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHtcbiAgcmV0dXJuIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfbm9uSXRlcmFibGVTcHJlYWQoKTtcbn1cblxuZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkoYXJyLmxlbmd0aCk7IGkgPCBhcnIubGVuZ3RoOyBpKyspIGFycjJbaV0gPSBhcnJbaV07XG5cbiAgICByZXR1cm4gYXJyMjtcbiAgfVxufVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHtcbiAgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikgfHwgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGl0ZXIpID09PSBcIltvYmplY3QgQXJndW1lbnRzXVwiKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTtcbn1cblxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2VcIik7XG59XG5cbi8qIEBmbG93ICovXG4vKiA6OlxudHlwZSBPYmplY3RNYXAgPSB7IFtpZDpzdHJpbmddOiBhbnkgfTtcbiovXG5cbnZhciBVUFBFUkNBU0VfUkUgPSAvKFtBLVpdKS9nO1xuXG52YXIgVVBQRVJDQVNFX1JFX1RPX0tFQkFCID0gZnVuY3Rpb24gVVBQRVJDQVNFX1JFX1RPX0tFQkFCKG1hdGNoXG4vKiA6IHN0cmluZyAqL1xuKSB7XG4gIHJldHVybiAoXG4gICAgLyogOiBzdHJpbmcgKi9cbiAgICBcIi1cIi5jb25jYXQobWF0Y2gudG9Mb3dlckNhc2UoKSlcbiAgKTtcbn07XG5cbnZhciBrZWJhYmlmeVN0eWxlTmFtZSA9IGZ1bmN0aW9uIGtlYmFiaWZ5U3R5bGVOYW1lKHN0cmluZ1xuLyogOiBzdHJpbmcgKi9cbilcbi8qIDogc3RyaW5nICovXG57XG4gIHZhciByZXN1bHQgPSBzdHJpbmcucmVwbGFjZShVUFBFUkNBU0VfUkUsIFVQUEVSQ0FTRV9SRV9UT19LRUJBQik7XG5cbiAgaWYgKHJlc3VsdFswXSA9PT0gJ20nICYmIHJlc3VsdFsxXSA9PT0gJ3MnICYmIHJlc3VsdFsyXSA9PT0gJy0nKSB7XG4gICAgcmV0dXJuIFwiLVwiLmNvbmNhdChyZXN1bHQpO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG4vKipcbiAqIENTUyBwcm9wZXJ0aWVzIHdoaWNoIGFjY2VwdCBudW1iZXJzIGJ1dCBhcmUgbm90IGluIHVuaXRzIG9mIFwicHhcIi5cbiAqIFRha2VuIGZyb20gUmVhY3QncyBDU1NQcm9wZXJ0eS5qc1xuICovXG5cbnZhciBpc1VuaXRsZXNzTnVtYmVyID0ge1xuICBhbmltYXRpb25JdGVyYXRpb25Db3VudDogdHJ1ZSxcbiAgYm9yZGVySW1hZ2VPdXRzZXQ6IHRydWUsXG4gIGJvcmRlckltYWdlU2xpY2U6IHRydWUsXG4gIGJvcmRlckltYWdlV2lkdGg6IHRydWUsXG4gIGJveEZsZXg6IHRydWUsXG4gIGJveEZsZXhHcm91cDogdHJ1ZSxcbiAgYm94T3JkaW5hbEdyb3VwOiB0cnVlLFxuICBjb2x1bW5Db3VudDogdHJ1ZSxcbiAgZmxleDogdHJ1ZSxcbiAgZmxleEdyb3c6IHRydWUsXG4gIGZsZXhQb3NpdGl2ZTogdHJ1ZSxcbiAgZmxleFNocmluazogdHJ1ZSxcbiAgZmxleE5lZ2F0aXZlOiB0cnVlLFxuICBmbGV4T3JkZXI6IHRydWUsXG4gIGdyaWRSb3c6IHRydWUsXG4gIGdyaWRDb2x1bW46IHRydWUsXG4gIGZvbnRXZWlnaHQ6IHRydWUsXG4gIGxpbmVDbGFtcDogdHJ1ZSxcbiAgbGluZUhlaWdodDogdHJ1ZSxcbiAgb3BhY2l0eTogdHJ1ZSxcbiAgb3JkZXI6IHRydWUsXG4gIG9ycGhhbnM6IHRydWUsXG4gIHRhYlNpemU6IHRydWUsXG4gIHdpZG93czogdHJ1ZSxcbiAgekluZGV4OiB0cnVlLFxuICB6b29tOiB0cnVlLFxuICAvLyBTVkctcmVsYXRlZCBwcm9wZXJ0aWVzXG4gIGZpbGxPcGFjaXR5OiB0cnVlLFxuICBmbG9vZE9wYWNpdHk6IHRydWUsXG4gIHN0b3BPcGFjaXR5OiB0cnVlLFxuICBzdHJva2VEYXNoYXJyYXk6IHRydWUsXG4gIHN0cm9rZURhc2hvZmZzZXQ6IHRydWUsXG4gIHN0cm9rZU1pdGVybGltaXQ6IHRydWUsXG4gIHN0cm9rZU9wYWNpdHk6IHRydWUsXG4gIHN0cm9rZVdpZHRoOiB0cnVlXG59O1xuLyoqXG4gKiBUYWtlbiBmcm9tIFJlYWN0J3MgQ1NTUHJvcGVydHkuanNcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gcHJlZml4IHZlbmRvci1zcGVjaWZpYyBwcmVmaXgsIGVnOiBXZWJraXRcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgc3R5bGUgbmFtZSwgZWc6IHRyYW5zaXRpb25EdXJhdGlvblxuICogQHJldHVybiB7c3RyaW5nfSBzdHlsZSBuYW1lIHByZWZpeGVkIHdpdGggYHByZWZpeGAsIHByb3Blcmx5IGNhbWVsQ2FzZWQsIGVnOlxuICogV2Via2l0VHJhbnNpdGlvbkR1cmF0aW9uXG4gKi9cblxuZnVuY3Rpb24gcHJlZml4S2V5KHByZWZpeCwga2V5KSB7XG4gIHJldHVybiBwcmVmaXggKyBrZXkuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBrZXkuc3Vic3RyaW5nKDEpO1xufVxuLyoqXG4gKiBTdXBwb3J0IHN0eWxlIG5hbWVzIHRoYXQgbWF5IGNvbWUgcGFzc2VkIGluIHByZWZpeGVkIGJ5IGFkZGluZyBwZXJtdXRhdGlvbnNcbiAqIG9mIHZlbmRvciBwcmVmaXhlcy5cbiAqIFRha2VuIGZyb20gUmVhY3QncyBDU1NQcm9wZXJ0eS5qc1xuICovXG5cblxudmFyIHByZWZpeGVzID0gWydXZWJraXQnLCAnbXMnLCAnTW96JywgJ08nXTsgLy8gVXNpbmcgT2JqZWN0LmtleXMgaGVyZSwgb3IgZWxzZSB0aGUgdmFuaWxsYSBmb3ItaW4gbG9vcCBtYWtlcyBJRTggZ28gaW50byBhblxuLy8gaW5maW5pdGUgbG9vcCwgYmVjYXVzZSBpdCBpdGVyYXRlcyBvdmVyIHRoZSBuZXdseSBhZGRlZCBwcm9wcyB0b28uXG4vLyBUYWtlbiBmcm9tIFJlYWN0J3MgQ1NTUHJvcGVydHkuanNcblxuT2JqZWN0LmtleXMoaXNVbml0bGVzc051bWJlcikuZm9yRWFjaChmdW5jdGlvbiAocHJvcCkge1xuICBwcmVmaXhlcy5mb3JFYWNoKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICBpc1VuaXRsZXNzTnVtYmVyW3ByZWZpeEtleShwcmVmaXgsIHByb3ApXSA9IGlzVW5pdGxlc3NOdW1iZXJbcHJvcF07XG4gIH0pO1xufSk7XG52YXIgc3RyaW5naWZ5VmFsdWUgPSBmdW5jdGlvbiBzdHJpbmdpZnlWYWx1ZShrZXlcbi8qIDogc3RyaW5nICovXG4sIHByb3Bcbi8qIDogYW55ICovXG4pXG4vKiA6IHN0cmluZyAqL1xue1xuICBpZiAodHlwZW9mIHByb3AgPT09IFwibnVtYmVyXCIpIHtcbiAgICBpZiAoaXNVbml0bGVzc051bWJlcltrZXldKSB7XG4gICAgICByZXR1cm4gXCJcIiArIHByb3A7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBwcm9wICsgXCJweFwiO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gJycgKyBwcm9wO1xuICB9XG59O1xudmFyIHN0cmluZ2lmeUFuZEltcG9ydGFudGlmeVZhbHVlID0gZnVuY3Rpb24gc3RyaW5naWZ5QW5kSW1wb3J0YW50aWZ5VmFsdWUoa2V5XG4vKiA6IHN0cmluZyAqL1xuLCBwcm9wXG4vKiA6IGFueSAqL1xuKSB7XG4gIHJldHVybiAoXG4gICAgLyogOiBzdHJpbmcgKi9cbiAgICBpbXBvcnRhbnRpZnkoc3RyaW5naWZ5VmFsdWUoa2V5LCBwcm9wKSlcbiAgKTtcbn07IC8vIFR1cm4gYSBzdHJpbmcgaW50byBhIGhhc2ggc3RyaW5nIG9mIGJhc2UtMzYgdmFsdWVzICh1c2luZyBsZXR0ZXJzIGFuZCBudW1iZXJzKVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG5cbnZhciBoYXNoU3RyaW5nID0gZnVuY3Rpb24gaGFzaFN0cmluZyhzdHJpbmdcbi8qIDogc3RyaW5nICovXG4sIGtleVxuLyogOiA/c3RyaW5nICovXG4pIHtcbiAgcmV0dXJuIChcbiAgICAvKiBzdHJpbmcgKi9cbiAgICBzdHJpbmdIYXNoKHN0cmluZykudG9TdHJpbmcoMzYpXG4gICk7XG59OyAvLyBIYXNoIGEgamF2YXNjcmlwdCBvYmplY3QgdXNpbmcgSlNPTi5zdHJpbmdpZnkuIFRoaXMgaXMgdmVyeSBmYXN0LCBhYm91dCAzXG4vLyBtaWNyb3NlY29uZHMgb24gbXkgY29tcHV0ZXIgZm9yIGEgc2FtcGxlIG9iamVjdDpcbi8vIGh0dHA6Ly9qc3BlcmYuY29tL3Rlc3QtaGFzaGZudjMyYS1oYXNoLzVcbi8vXG4vLyBOb3RlIHRoYXQgdGhpcyB1c2VzIEpTT04uc3RyaW5naWZ5IHRvIHN0cmluZ2lmeSB0aGUgb2JqZWN0cyBzbyBpbiBvcmRlciBmb3Jcbi8vIHRoaXMgdG8gcHJvZHVjZSBjb25zaXN0ZW50IGhhc2hlcyBicm93c2VycyBuZWVkIHRvIGhhdmUgYSBjb25zaXN0ZW50XG4vLyBvcmRlcmluZyBvZiBvYmplY3RzLiBCZW4gQWxwZXJ0IHNheXMgdGhhdCBGYWNlYm9vayBkZXBlbmRzIG9uIHRoaXMsIHNvIHdlXG4vLyBjYW4gcHJvYmFibHkgZGVwZW5kIG9uIHRoaXMgdG9vLlxuXG52YXIgaGFzaE9iamVjdCA9IGZ1bmN0aW9uIGhhc2hPYmplY3Qob2JqZWN0XG4vKiA6IE9iamVjdE1hcCAqL1xuKSB7XG4gIHJldHVybiAoXG4gICAgLyogOiBzdHJpbmcgKi9cbiAgICBoYXNoU3RyaW5nKEpTT04uc3RyaW5naWZ5KG9iamVjdCkpXG4gICk7XG59OyAvLyBHaXZlbiBhIHNpbmdsZSBzdHlsZSB2YWx1ZSBzdHJpbmcgbGlrZSB0aGUgXCJiXCIgZnJvbSBcImE6IGI7XCIsIGFkZHMgIWltcG9ydGFudFxuLy8gdG8gZ2VuZXJhdGUgXCJiICFpbXBvcnRhbnRcIi5cblxudmFyIGltcG9ydGFudGlmeSA9IGZ1bmN0aW9uIGltcG9ydGFudGlmeShzdHJpbmdcbi8qIDogc3RyaW5nICovXG4pIHtcbiAgcmV0dXJuIChcbiAgICAvKiA6IHN0cmluZyAqL1xuICAgIC8vIEJyYWNrZXQgc3RyaW5nIGNoYXJhY3RlciBhY2Nlc3MgaXMgdmVyeSBmYXN0LCBhbmQgaW4gdGhlIGRlZmF1bHQgY2FzZSB3ZVxuICAgIC8vIG5vcm1hbGx5IGRvbid0IGV4cGVjdCB0aGVyZSB0byBiZSBcIiFpbXBvcnRhbnRcIiBhdCB0aGUgZW5kIG9mIHRoZSBzdHJpbmdcbiAgICAvLyBzbyB3ZSBjYW4gdXNlIHRoaXMgc2ltcGxlIGNoZWNrIHRvIHRha2UgYW4gb3B0aW1pemVkIHBhdGguIElmIHRoZXJlXG4gICAgLy8gaGFwcGVucyB0byBiZSBhIFwiIVwiIGluIHRoaXMgcG9zaXRpb24sIHdlIGZvbGxvdyB1cCB3aXRoIGEgbW9yZSB0aG9yb3VnaFxuICAgIC8vIGNoZWNrLlxuICAgIHN0cmluZ1tzdHJpbmcubGVuZ3RoIC0gMTBdID09PSAnIScgJiYgc3RyaW5nLnNsaWNlKC0xMSkgPT09ICcgIWltcG9ydGFudCcgPyBzdHJpbmcgOiBcIlwiLmNvbmNhdChzdHJpbmcsIFwiICFpbXBvcnRhbnRcIilcbiAgKTtcbn07XG5cbi8qIEBmbG93ICovXG52YXIgTUFQX0VYSVNUUyA9IHR5cGVvZiBNYXAgIT09ICd1bmRlZmluZWQnO1xuXG52YXIgT3JkZXJlZEVsZW1lbnRzID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uICgpIHtcbiAgLyogOjpcbiAgZWxlbWVudHM6IHtbc3RyaW5nXTogYW55fTtcbiAga2V5T3JkZXI6IHN0cmluZ1tdO1xuICAqL1xuICBmdW5jdGlvbiBPcmRlcmVkRWxlbWVudHMoKSB7XG4gICAgdGhpcy5lbGVtZW50cyA9IHt9O1xuICAgIHRoaXMua2V5T3JkZXIgPSBbXTtcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBPcmRlcmVkRWxlbWVudHMucHJvdG90eXBlO1xuXG4gIF9wcm90by5mb3JFYWNoID0gZnVuY3Rpb24gZm9yRWFjaChjYWxsYmFja1xuICAvKiA6IChzdHJpbmcsIGFueSkgPT4gdm9pZCAqL1xuICApIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMua2V5T3JkZXIubGVuZ3RoOyBpKyspIHtcbiAgICAgIC8vICh2YWx1ZSwga2V5KSB0byBtYXRjaCBNYXAncyBBUElcbiAgICAgIGNhbGxiYWNrKHRoaXMuZWxlbWVudHNbdGhpcy5rZXlPcmRlcltpXV0sIHRoaXMua2V5T3JkZXJbaV0pO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uc2V0ID0gZnVuY3Rpb24gc2V0KGtleVxuICAvKiA6IHN0cmluZyAqL1xuICAsIHZhbHVlXG4gIC8qIDogYW55ICovXG4gICwgc2hvdWxkUmVvcmRlclxuICAvKiA6ID9ib29sZWFuICovXG4gICkge1xuICAgIGlmICghdGhpcy5lbGVtZW50cy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICB0aGlzLmtleU9yZGVyLnB1c2goa2V5KTtcbiAgICB9IGVsc2UgaWYgKHNob3VsZFJlb3JkZXIpIHtcbiAgICAgIHZhciBpbmRleCA9IHRoaXMua2V5T3JkZXIuaW5kZXhPZihrZXkpO1xuICAgICAgdGhpcy5rZXlPcmRlci5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgdGhpcy5rZXlPcmRlci5wdXNoKGtleSk7XG4gICAgfVxuXG4gICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgIHRoaXMuZWxlbWVudHNba2V5XSA9IHZhbHVlO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChNQVBfRVhJU1RTICYmIHZhbHVlIGluc3RhbmNlb2YgTWFwIHx8IHZhbHVlIGluc3RhbmNlb2YgT3JkZXJlZEVsZW1lbnRzKSB7XG4gICAgICAvLyBXZSBoYXZlIGZvdW5kIGEgbmVzdGVkIE1hcCwgc28gd2UgbmVlZCB0byByZWN1cnNlIHNvIHRoYXQgYWxsXG4gICAgICAvLyBvZiB0aGUgbmVzdGVkIG9iamVjdHMgYW5kIE1hcHMgYXJlIG1lcmdlZCBwcm9wZXJseS5cbiAgICAgIHZhciBuZXN0ZWQgPSB0aGlzLmVsZW1lbnRzLmhhc093blByb3BlcnR5KGtleSkgPyB0aGlzLmVsZW1lbnRzW2tleV0gOiBuZXcgT3JkZXJlZEVsZW1lbnRzKCk7XG4gICAgICB2YWx1ZS5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSwga2V5KSB7XG4gICAgICAgIG5lc3RlZC5zZXQoa2V5LCB2YWx1ZSwgc2hvdWxkUmVvcmRlcik7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuZWxlbWVudHNba2V5XSA9IG5lc3RlZDtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoIUFycmF5LmlzQXJyYXkodmFsdWUpICYmIF90eXBlb2YodmFsdWUpID09PSAnb2JqZWN0Jykge1xuICAgICAgLy8gV2UgaGF2ZSBmb3VuZCBhIG5lc3RlZCBvYmplY3QsIHNvIHdlIG5lZWQgdG8gcmVjdXJzZSBzbyB0aGF0IGFsbFxuICAgICAgLy8gb2YgdGhlIG5lc3RlZCBvYmplY3RzIGFuZCBNYXBzIGFyZSBtZXJnZWQgcHJvcGVybHkuXG4gICAgICB2YXIgX25lc3RlZCA9IHRoaXMuZWxlbWVudHMuaGFzT3duUHJvcGVydHkoa2V5KSA/IHRoaXMuZWxlbWVudHNba2V5XSA6IG5ldyBPcmRlcmVkRWxlbWVudHMoKTtcblxuICAgICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyh2YWx1ZSk7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBfbmVzdGVkLnNldChrZXlzW2ldLCB2YWx1ZVtrZXlzW2ldXSwgc2hvdWxkUmVvcmRlcik7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuZWxlbWVudHNba2V5XSA9IF9uZXN0ZWQ7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5lbGVtZW50c1trZXldID0gdmFsdWU7XG4gIH07XG5cbiAgX3Byb3RvLmdldCA9IGZ1bmN0aW9uIGdldChrZXlcbiAgLyogOiBzdHJpbmcgKi9cbiAgKVxuICAvKiA6IGFueSAqL1xuICB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudHNba2V5XTtcbiAgfTtcblxuICBfcHJvdG8uaGFzID0gZnVuY3Rpb24gaGFzKGtleVxuICAvKiA6IHN0cmluZyAqL1xuICApXG4gIC8qIDogYm9vbGVhbiAqL1xuICB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudHMuaGFzT3duUHJvcGVydHkoa2V5KTtcbiAgfTtcblxuICBfcHJvdG8uYWRkU3R5bGVUeXBlID0gZnVuY3Rpb24gYWRkU3R5bGVUeXBlKHN0eWxlVHlwZVxuICAvKiA6IGFueSAqL1xuICApXG4gIC8qIDogdm9pZCAqL1xuICB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIGlmIChNQVBfRVhJU1RTICYmIHN0eWxlVHlwZSBpbnN0YW5jZW9mIE1hcCB8fCBzdHlsZVR5cGUgaW5zdGFuY2VvZiBPcmRlcmVkRWxlbWVudHMpIHtcbiAgICAgIHN0eWxlVHlwZS5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSwga2V5KSB7XG4gICAgICAgIF90aGlzLnNldChrZXksIHZhbHVlLCB0cnVlKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHN0eWxlVHlwZSk7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgICB0aGlzLnNldChrZXlzW2ldLCBzdHlsZVR5cGVba2V5c1tpXV0sIHRydWUpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICByZXR1cm4gT3JkZXJlZEVsZW1lbnRzO1xufSgpO1xuXG5mdW5jdGlvbiB1bndyYXBFeHBvcnRzICh4KSB7XG5cdHJldHVybiB4ICYmIHguX19lc01vZHVsZSAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoeCwgJ2RlZmF1bHQnKSA/IHguZGVmYXVsdCA6IHg7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZuLCBtb2R1bGUpIHtcblx0cmV0dXJuIG1vZHVsZSA9IHsgZXhwb3J0czoge30gfSwgZm4obW9kdWxlLCBtb2R1bGUuZXhwb3J0cyksIG1vZHVsZS5leHBvcnRzO1xufVxuXG5mdW5jdGlvbiBnZXRDanNFeHBvcnRGcm9tTmFtZXNwYWNlIChuKSB7XG5cdHJldHVybiBuICYmIG4uZGVmYXVsdCB8fCBuO1xufVxuXG52YXIgY2FwaXRhbGl6ZVN0cmluZ18xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY2FwaXRhbGl6ZVN0cmluZztcbmZ1bmN0aW9uIGNhcGl0YWxpemVTdHJpbmcoc3RyKSB7XG4gIHJldHVybiBzdHIuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzdHIuc2xpY2UoMSk7XG59XG59KTtcblxudW53cmFwRXhwb3J0cyhjYXBpdGFsaXplU3RyaW5nXzEpO1xuXG52YXIgcHJlZml4UHJvcGVydHlfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHByZWZpeFByb3BlcnR5O1xuXG5cblxudmFyIF9jYXBpdGFsaXplU3RyaW5nMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoY2FwaXRhbGl6ZVN0cmluZ18xKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gcHJlZml4UHJvcGVydHkocHJlZml4UHJvcGVydGllcywgcHJvcGVydHksIHN0eWxlKSB7XG4gIGlmIChwcmVmaXhQcm9wZXJ0aWVzLmhhc093blByb3BlcnR5KHByb3BlcnR5KSkge1xuICAgIHZhciBuZXdTdHlsZSA9IHt9O1xuICAgIHZhciByZXF1aXJlZFByZWZpeGVzID0gcHJlZml4UHJvcGVydGllc1twcm9wZXJ0eV07XG4gICAgdmFyIGNhcGl0YWxpemVkUHJvcGVydHkgPSAoMCwgX2NhcGl0YWxpemVTdHJpbmcyLmRlZmF1bHQpKHByb3BlcnR5KTtcbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHN0eWxlKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzdHlsZVByb3BlcnR5ID0ga2V5c1tpXTtcbiAgICAgIGlmIChzdHlsZVByb3BlcnR5ID09PSBwcm9wZXJ0eSkge1xuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHJlcXVpcmVkUHJlZml4ZXMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICBuZXdTdHlsZVtyZXF1aXJlZFByZWZpeGVzW2pdICsgY2FwaXRhbGl6ZWRQcm9wZXJ0eV0gPSBzdHlsZVtwcm9wZXJ0eV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIG5ld1N0eWxlW3N0eWxlUHJvcGVydHldID0gc3R5bGVbc3R5bGVQcm9wZXJ0eV07XG4gICAgfVxuICAgIHJldHVybiBuZXdTdHlsZTtcbiAgfVxuICByZXR1cm4gc3R5bGU7XG59XG59KTtcblxudW53cmFwRXhwb3J0cyhwcmVmaXhQcm9wZXJ0eV8xKTtcblxudmFyIHByZWZpeFZhbHVlXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBwcmVmaXhWYWx1ZTtcbmZ1bmN0aW9uIHByZWZpeFZhbHVlKHBsdWdpbnMsIHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUsIG1ldGFEYXRhKSB7XG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSBwbHVnaW5zLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgdmFyIHByb2Nlc3NlZFZhbHVlID0gcGx1Z2luc1tpXShwcm9wZXJ0eSwgdmFsdWUsIHN0eWxlLCBtZXRhRGF0YSk7XG5cbiAgICAvLyB3ZSBjYW4gc3RvcCBwcm9jZXNzaW5nIGlmIGEgdmFsdWUgaXMgcmV0dXJuZWRcbiAgICAvLyBhcyBhbGwgcGx1Z2luIGNyaXRlcmlhIGFyZSB1bmlxdWVcbiAgICBpZiAocHJvY2Vzc2VkVmFsdWUpIHtcbiAgICAgIHJldHVybiBwcm9jZXNzZWRWYWx1ZTtcbiAgICB9XG4gIH1cbn1cbn0pO1xuXG51bndyYXBFeHBvcnRzKHByZWZpeFZhbHVlXzEpO1xuXG52YXIgYWRkTmV3VmFsdWVzT25seV8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gYWRkTmV3VmFsdWVzT25seTtcbmZ1bmN0aW9uIGFkZElmTmV3KGxpc3QsIHZhbHVlKSB7XG4gIGlmIChsaXN0LmluZGV4T2YodmFsdWUpID09PSAtMSkge1xuICAgIGxpc3QucHVzaCh2YWx1ZSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gYWRkTmV3VmFsdWVzT25seShsaXN0LCB2YWx1ZXMpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWVzKSkge1xuICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSB2YWx1ZXMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgIGFkZElmTmV3KGxpc3QsIHZhbHVlc1tpXSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGFkZElmTmV3KGxpc3QsIHZhbHVlcyk7XG4gIH1cbn1cbn0pO1xuXG51bndyYXBFeHBvcnRzKGFkZE5ld1ZhbHVlc09ubHlfMSk7XG5cbnZhciBpc09iamVjdF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaXNPYmplY3Q7XG5mdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBPYmplY3QgJiYgIUFycmF5LmlzQXJyYXkodmFsdWUpO1xufVxufSk7XG5cbnVud3JhcEV4cG9ydHMoaXNPYmplY3RfMSk7XG5cbnZhciBjcmVhdGVQcmVmaXhlcl8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY3JlYXRlUHJlZml4ZXI7XG5cblxuXG52YXIgX3ByZWZpeFByb3BlcnR5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocHJlZml4UHJvcGVydHlfMSk7XG5cblxuXG52YXIgX3ByZWZpeFZhbHVlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocHJlZml4VmFsdWVfMSk7XG5cblxuXG52YXIgX2FkZE5ld1ZhbHVlc09ubHkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChhZGROZXdWYWx1ZXNPbmx5XzEpO1xuXG5cblxudmFyIF9pc09iamVjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGlzT2JqZWN0XzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBjcmVhdGVQcmVmaXhlcihfcmVmKSB7XG4gIHZhciBwcmVmaXhNYXAgPSBfcmVmLnByZWZpeE1hcCxcbiAgICAgIHBsdWdpbnMgPSBfcmVmLnBsdWdpbnM7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIHByZWZpeChzdHlsZSkge1xuICAgIGZvciAodmFyIHByb3BlcnR5IGluIHN0eWxlKSB7XG4gICAgICB2YXIgdmFsdWUgPSBzdHlsZVtwcm9wZXJ0eV07XG5cbiAgICAgIC8vIGhhbmRsZSBuZXN0ZWQgb2JqZWN0c1xuICAgICAgaWYgKCgwLCBfaXNPYmplY3QyLmRlZmF1bHQpKHZhbHVlKSkge1xuICAgICAgICBzdHlsZVtwcm9wZXJ0eV0gPSBwcmVmaXgodmFsdWUpO1xuICAgICAgICAvLyBoYW5kbGUgYXJyYXkgdmFsdWVzXG4gICAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgIHZhciBjb21iaW5lZFZhbHVlID0gW107XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHZhbHVlLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICAgICAgdmFyIHByb2Nlc3NlZFZhbHVlID0gKDAsIF9wcmVmaXhWYWx1ZTIuZGVmYXVsdCkocGx1Z2lucywgcHJvcGVydHksIHZhbHVlW2ldLCBzdHlsZSwgcHJlZml4TWFwKTtcbiAgICAgICAgICAoMCwgX2FkZE5ld1ZhbHVlc09ubHkyLmRlZmF1bHQpKGNvbWJpbmVkVmFsdWUsIHByb2Nlc3NlZFZhbHVlIHx8IHZhbHVlW2ldKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIG9ubHkgbW9kaWZ5IHRoZSB2YWx1ZSBpZiBpdCB3YXMgdG91Y2hlZFxuICAgICAgICAvLyBieSBhbnkgcGx1Z2luIHRvIHByZXZlbnQgdW5uZWNlc3NhcnkgbXV0YXRpb25zXG4gICAgICAgIGlmIChjb21iaW5lZFZhbHVlLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBzdHlsZVtwcm9wZXJ0eV0gPSBjb21iaW5lZFZhbHVlO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgX3Byb2Nlc3NlZFZhbHVlID0gKDAsIF9wcmVmaXhWYWx1ZTIuZGVmYXVsdCkocGx1Z2lucywgcHJvcGVydHksIHZhbHVlLCBzdHlsZSwgcHJlZml4TWFwKTtcblxuICAgICAgICAvLyBvbmx5IG1vZGlmeSB0aGUgdmFsdWUgaWYgaXQgd2FzIHRvdWNoZWRcbiAgICAgICAgLy8gYnkgYW55IHBsdWdpbiB0byBwcmV2ZW50IHVubmVjZXNzYXJ5IG11dGF0aW9uc1xuICAgICAgICBpZiAoX3Byb2Nlc3NlZFZhbHVlKSB7XG4gICAgICAgICAgc3R5bGVbcHJvcGVydHldID0gX3Byb2Nlc3NlZFZhbHVlO1xuICAgICAgICB9XG5cbiAgICAgICAgc3R5bGUgPSAoMCwgX3ByZWZpeFByb3BlcnR5Mi5kZWZhdWx0KShwcmVmaXhNYXAsIHByb3BlcnR5LCBzdHlsZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0eWxlO1xuICB9O1xufVxufSk7XG5cbnZhciBjcmVhdGVQcmVmaXhlciA9IHVud3JhcEV4cG9ydHMoY3JlYXRlUHJlZml4ZXJfMSk7XG5cbnZhciBiYWNrZ3JvdW5kQ2xpcF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gYmFja2dyb3VuZENsaXA7XG5cbi8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0NTUy9iYWNrZ3JvdW5kLWNsaXAjQnJvd3Nlcl9jb21wYXRpYmlsaXR5XG5mdW5jdGlvbiBiYWNrZ3JvdW5kQ2xpcChwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgdmFsdWUgPT09ICd0ZXh0Jykge1xuICAgIHJldHVybiBbJy13ZWJraXQtdGV4dCcsICd0ZXh0J107XG4gIH1cbn1cbn0pO1xuXG52YXIgYmFja2dyb3VuZENsaXAgPSB1bndyYXBFeHBvcnRzKGJhY2tncm91bmRDbGlwXzEpO1xuXG52YXIgaXNQcmVmaXhlZFZhbHVlXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBpc1ByZWZpeGVkVmFsdWU7XG52YXIgcmVnZXggPSAvLXdlYmtpdC18LW1vei18LW1zLS87XG5cbmZ1bmN0aW9uIGlzUHJlZml4ZWRWYWx1ZSh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiByZWdleC50ZXN0KHZhbHVlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xufSk7XG5cbnVud3JhcEV4cG9ydHMoaXNQcmVmaXhlZFZhbHVlXzEpO1xuXG52YXIgY2FsY18xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY2FsYztcblxuXG5cbnZhciBfaXNQcmVmaXhlZFZhbHVlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoaXNQcmVmaXhlZFZhbHVlXzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgcHJlZml4ZXMgPSBbJy13ZWJraXQtJywgJy1tb3otJywgJyddO1xuZnVuY3Rpb24gY2FsYyhwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgISgwLCBfaXNQcmVmaXhlZFZhbHVlMi5kZWZhdWx0KSh2YWx1ZSkgJiYgdmFsdWUuaW5kZXhPZignY2FsYygnKSA+IC0xKSB7XG4gICAgcmV0dXJuIHByZWZpeGVzLm1hcChmdW5jdGlvbiAocHJlZml4KSB7XG4gICAgICByZXR1cm4gdmFsdWUucmVwbGFjZSgvY2FsY1xcKC9nLCBwcmVmaXggKyAnY2FsYygnKTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBjYWxjID0gdW53cmFwRXhwb3J0cyhjYWxjXzEpO1xuXG52YXIgY3Jvc3NGYWRlXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjcm9zc0ZhZGU7XG5cblxuXG52YXIgX2lzUHJlZml4ZWRWYWx1ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGlzUHJlZml4ZWRWYWx1ZV8xKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gaHR0cDovL2Nhbml1c2UuY29tLyNzZWFyY2g9Y3Jvc3MtZmFkZVxudmFyIHByZWZpeGVzID0gWyctd2Via2l0LScsICcnXTtcbmZ1bmN0aW9uIGNyb3NzRmFkZShwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgISgwLCBfaXNQcmVmaXhlZFZhbHVlMi5kZWZhdWx0KSh2YWx1ZSkgJiYgdmFsdWUuaW5kZXhPZignY3Jvc3MtZmFkZSgnKSA+IC0xKSB7XG4gICAgcmV0dXJuIHByZWZpeGVzLm1hcChmdW5jdGlvbiAocHJlZml4KSB7XG4gICAgICByZXR1cm4gdmFsdWUucmVwbGFjZSgvY3Jvc3MtZmFkZVxcKC9nLCBwcmVmaXggKyAnY3Jvc3MtZmFkZSgnKTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBjcm9zc0ZhZGUgPSB1bndyYXBFeHBvcnRzKGNyb3NzRmFkZV8xKTtcblxudmFyIGN1cnNvcl8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY3Vyc29yO1xudmFyIHByZWZpeGVzID0gWyctd2Via2l0LScsICctbW96LScsICcnXTtcblxudmFyIHZhbHVlcyA9IHtcbiAgJ3pvb20taW4nOiB0cnVlLFxuICAnem9vbS1vdXQnOiB0cnVlLFxuICBncmFiOiB0cnVlLFxuICBncmFiYmluZzogdHJ1ZVxufTtcblxuZnVuY3Rpb24gY3Vyc29yKHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAocHJvcGVydHkgPT09ICdjdXJzb3InICYmIHZhbHVlcy5oYXNPd25Qcm9wZXJ0eSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyB2YWx1ZTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBjdXJzb3IgPSB1bndyYXBFeHBvcnRzKGN1cnNvcl8xKTtcblxudmFyIGZpbHRlcl8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZmlsdGVyO1xuXG5cblxudmFyIF9pc1ByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChpc1ByZWZpeGVkVmFsdWVfMSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIGh0dHA6Ly9jYW5pdXNlLmNvbS8jZmVhdD1jc3MtZmlsdGVyLWZ1bmN0aW9uXG52YXIgcHJlZml4ZXMgPSBbJy13ZWJraXQtJywgJyddO1xuZnVuY3Rpb24gZmlsdGVyKHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiAhKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSAmJiB2YWx1ZS5pbmRleE9mKCdmaWx0ZXIoJykgPiAtMSkge1xuICAgIHJldHVybiBwcmVmaXhlcy5tYXAoZnVuY3Rpb24gKHByZWZpeCkge1xuICAgICAgcmV0dXJuIHZhbHVlLnJlcGxhY2UoL2ZpbHRlclxcKC9nLCBwcmVmaXggKyAnZmlsdGVyKCcpO1xuICAgIH0pO1xuICB9XG59XG59KTtcblxudmFyIGZpbHRlciA9IHVud3JhcEV4cG9ydHMoZmlsdGVyXzEpO1xuXG52YXIgZmxleF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZmxleDtcbnZhciB2YWx1ZXMgPSB7XG4gIGZsZXg6IFsnLXdlYmtpdC1ib3gnLCAnLW1vei1ib3gnLCAnLW1zLWZsZXhib3gnLCAnLXdlYmtpdC1mbGV4JywgJ2ZsZXgnXSxcbiAgJ2lubGluZS1mbGV4JzogWyctd2Via2l0LWlubGluZS1ib3gnLCAnLW1vei1pbmxpbmUtYm94JywgJy1tcy1pbmxpbmUtZmxleGJveCcsICctd2Via2l0LWlubGluZS1mbGV4JywgJ2lubGluZS1mbGV4J11cbn07XG5cbmZ1bmN0aW9uIGZsZXgocHJvcGVydHksIHZhbHVlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ2Rpc3BsYXknICYmIHZhbHVlcy5oYXNPd25Qcm9wZXJ0eSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gdmFsdWVzW3ZhbHVlXTtcbiAgfVxufVxufSk7XG5cbnZhciBmbGV4ID0gdW53cmFwRXhwb3J0cyhmbGV4XzEpO1xuXG52YXIgZmxleGJveElFXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBmbGV4Ym94SUU7XG52YXIgYWx0ZXJuYXRpdmVWYWx1ZXMgPSB7XG4gICdzcGFjZS1hcm91bmQnOiAnZGlzdHJpYnV0ZScsXG4gICdzcGFjZS1iZXR3ZWVuJzogJ2p1c3RpZnknLFxuICAnZmxleC1zdGFydCc6ICdzdGFydCcsXG4gICdmbGV4LWVuZCc6ICdlbmQnXG59O1xudmFyIGFsdGVybmF0aXZlUHJvcHMgPSB7XG4gIGFsaWduQ29udGVudDogJ21zRmxleExpbmVQYWNrJyxcbiAgYWxpZ25TZWxmOiAnbXNGbGV4SXRlbUFsaWduJyxcbiAgYWxpZ25JdGVtczogJ21zRmxleEFsaWduJyxcbiAganVzdGlmeUNvbnRlbnQ6ICdtc0ZsZXhQYWNrJyxcbiAgb3JkZXI6ICdtc0ZsZXhPcmRlcicsXG4gIGZsZXhHcm93OiAnbXNGbGV4UG9zaXRpdmUnLFxuICBmbGV4U2hyaW5rOiAnbXNGbGV4TmVnYXRpdmUnLFxuICBmbGV4QmFzaXM6ICdtc0ZsZXhQcmVmZXJyZWRTaXplJ1xuICAvLyBGdWxsIGV4cGFuZGVkIHN5bnRheCBpcyBmbGV4LWdyb3cgfCBmbGV4LXNocmluayB8IGZsZXgtYmFzaXMuXG59O3ZhciBmbGV4U2hvcnRoYW5kTWFwcGluZ3MgPSB7XG4gIGF1dG86ICcxIDEgYXV0bycsXG4gIGluaGVyaXQ6ICdpbmhlcml0JyxcbiAgaW5pdGlhbDogJzAgMSBhdXRvJyxcbiAgbm9uZTogJzAgMCBhdXRvJyxcbiAgdW5zZXQ6ICd1bnNldCdcbn07XG52YXIgaXNVbml0bGVzc051bWJlciA9IC9eXFxkKyhcXC5cXGQrKT8kLztcblxuZnVuY3Rpb24gZmxleGJveElFKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUpIHtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhbHRlcm5hdGl2ZVByb3BzLCBwcm9wZXJ0eSkpIHtcbiAgICBzdHlsZVthbHRlcm5hdGl2ZVByb3BzW3Byb3BlcnR5XV0gPSBhbHRlcm5hdGl2ZVZhbHVlc1t2YWx1ZV0gfHwgdmFsdWU7XG4gIH1cbiAgaWYgKHByb3BlcnR5ID09PSAnZmxleCcpIHtcbiAgICAvLyBGb3IgY2VydGFpbiB2YWx1ZXMgd2UgY2FuIGRvIHN0cmFpZ2h0IG1hcHBpbmdzIGJhc2VkIG9uIHRoZSBzcGVjXG4gICAgLy8gZm9yIHRoZSBleHBhbnNpb25zLlxuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZmxleFNob3J0aGFuZE1hcHBpbmdzLCB2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zRmxleCA9IGZsZXhTaG9ydGhhbmRNYXBwaW5nc1t2YWx1ZV07XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIEhlcmUgd2UgaGF2ZSBubyBkaXJlY3QgbWFwcGluZywgc28gd2UgZmF2b3IgbG9va2luZyBmb3IgYVxuICAgIC8vIHVuaXRsZXNzIHBvc2l0aXZlIG51bWJlciBhcyB0aGF0IHdpbGwgYmUgdGhlIG1vc3QgY29tbW9uIHVzZS1jYXNlLlxuICAgIGlmIChpc1VuaXRsZXNzTnVtYmVyLnRlc3QodmFsdWUpKSB7XG4gICAgICBzdHlsZS5tc0ZsZXggPSB2YWx1ZSArICcgMSAwJSc7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gVGhlIG5leHQgdGhpbmcgd2UgY2FuIGxvb2sgZm9yIGlzIGlmIHRoZXJlIGFyZSBtdWx0aXBsZSB2YWx1ZXMuXG4gICAgdmFyIGZsZXhWYWx1ZXMgPSB2YWx1ZS5zcGxpdCgvXFxzLyk7XG4gICAgLy8gSWYgd2Ugb25seSBoYXZlIGEgc2luZ2xlIHZhbHVlIHRoYXQgd2Fzbid0IGEgcG9zaXRpdmUgdW5pdGxlc3NcbiAgICAvLyBvciBhIHByZS1tYXBwZWQgdmFsdWUsIHRoZW4gd2UgY2FuIGFzc3VtZSBpdCBpcyBhIHVuaXQgdmFsdWUuXG4gICAgc3dpdGNoIChmbGV4VmFsdWVzLmxlbmd0aCkge1xuICAgICAgY2FzZSAxOlxuICAgICAgICBzdHlsZS5tc0ZsZXggPSAnMSAxICcgKyB2YWx1ZTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgY2FzZSAyOlxuICAgICAgICAvLyBJZiB3ZSBoYXZlIDIgdW5pdHMsIHRoZW4gd2UgZXhwZWN0IHRoYXQgdGhlIGZpcnN0IHdpbGxcbiAgICAgICAgLy8gYWx3YXlzIGJlIGEgdW5pdGxlc3MgbnVtYmVyIGFuZCByZXByZXNlbnRzIGZsZXgtZ3Jvdy5cbiAgICAgICAgLy8gVGhlIHNlY29uZCB1bml0IHdpbGwgcmVwcmVzZW50IGZsZXgtc2hyaW5rIGZvciBhIHVuaXRsZXNzXG4gICAgICAgIC8vIHZhbHVlLCBvciBmbGV4LWJhc2lzIG90aGVyd2lzZS5cbiAgICAgICAgaWYgKGlzVW5pdGxlc3NOdW1iZXIudGVzdChmbGV4VmFsdWVzWzFdKSkge1xuICAgICAgICAgIHN0eWxlLm1zRmxleCA9IGZsZXhWYWx1ZXNbMF0gKyAnICcgKyBmbGV4VmFsdWVzWzFdICsgJyAwJSc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3R5bGUubXNGbGV4ID0gZmxleFZhbHVlc1swXSArICcgMSAnICsgZmxleFZhbHVlc1sxXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm47XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBzdHlsZS5tc0ZsZXggPSB2YWx1ZTtcbiAgICB9XG4gIH1cbn1cbn0pO1xuXG52YXIgZmxleGJveElFID0gdW53cmFwRXhwb3J0cyhmbGV4Ym94SUVfMSk7XG5cbnZhciBmbGV4Ym94T2xkXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBmbGV4Ym94T2xkO1xudmFyIGFsdGVybmF0aXZlVmFsdWVzID0ge1xuICAnc3BhY2UtYXJvdW5kJzogJ2p1c3RpZnknLFxuICAnc3BhY2UtYmV0d2Vlbic6ICdqdXN0aWZ5JyxcbiAgJ2ZsZXgtc3RhcnQnOiAnc3RhcnQnLFxuICAnZmxleC1lbmQnOiAnZW5kJyxcbiAgJ3dyYXAtcmV2ZXJzZSc6ICdtdWx0aXBsZScsXG4gIHdyYXA6ICdtdWx0aXBsZSdcbn07XG5cbnZhciBhbHRlcm5hdGl2ZVByb3BzID0ge1xuICBhbGlnbkl0ZW1zOiAnV2Via2l0Qm94QWxpZ24nLFxuICBqdXN0aWZ5Q29udGVudDogJ1dlYmtpdEJveFBhY2snLFxuICBmbGV4V3JhcDogJ1dlYmtpdEJveExpbmVzJyxcbiAgZmxleEdyb3c6ICdXZWJraXRCb3hGbGV4J1xufTtcblxuZnVuY3Rpb24gZmxleGJveE9sZChwcm9wZXJ0eSwgdmFsdWUsIHN0eWxlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ2ZsZXhEaXJlY3Rpb24nICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICBpZiAodmFsdWUuaW5kZXhPZignY29sdW1uJykgPiAtMSkge1xuICAgICAgc3R5bGUuV2Via2l0Qm94T3JpZW50ID0gJ3ZlcnRpY2FsJztcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGUuV2Via2l0Qm94T3JpZW50ID0gJ2hvcml6b250YWwnO1xuICAgIH1cbiAgICBpZiAodmFsdWUuaW5kZXhPZigncmV2ZXJzZScpID4gLTEpIHtcbiAgICAgIHN0eWxlLldlYmtpdEJveERpcmVjdGlvbiA9ICdyZXZlcnNlJztcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGUuV2Via2l0Qm94RGlyZWN0aW9uID0gJ25vcm1hbCc7XG4gICAgfVxuICB9XG4gIGlmIChhbHRlcm5hdGl2ZVByb3BzLmhhc093blByb3BlcnR5KHByb3BlcnR5KSkge1xuICAgIHN0eWxlW2FsdGVybmF0aXZlUHJvcHNbcHJvcGVydHldXSA9IGFsdGVybmF0aXZlVmFsdWVzW3ZhbHVlXSB8fCB2YWx1ZTtcbiAgfVxufVxufSk7XG5cbnZhciBmbGV4Ym94T2xkID0gdW53cmFwRXhwb3J0cyhmbGV4Ym94T2xkXzEpO1xuXG52YXIgZ3JhZGllbnRfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGdyYWRpZW50O1xuXG5cblxudmFyIF9pc1ByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChpc1ByZWZpeGVkVmFsdWVfMSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBwcmVmaXhlcyA9IFsnLXdlYmtpdC0nLCAnLW1vei0nLCAnJ107XG5cbnZhciB2YWx1ZXMgPSAvbGluZWFyLWdyYWRpZW50fHJhZGlhbC1ncmFkaWVudHxyZXBlYXRpbmctbGluZWFyLWdyYWRpZW50fHJlcGVhdGluZy1yYWRpYWwtZ3JhZGllbnQvZ2k7XG5cbmZ1bmN0aW9uIGdyYWRpZW50KHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiAhKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSAmJiB2YWx1ZXMudGVzdCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKHZhbHVlcywgZnVuY3Rpb24gKGdyYWQpIHtcbiAgICAgICAgcmV0dXJuIHByZWZpeCArIGdyYWQ7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBncmFkaWVudCA9IHVud3JhcEV4cG9ydHMoZ3JhZGllbnRfMSk7XG5cbnZhciBncmlkXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfc2xpY2VkVG9BcnJheSA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gc2xpY2VJdGVyYXRvcihhcnIsIGkpIHsgdmFyIF9hcnIgPSBbXTsgdmFyIF9uID0gdHJ1ZTsgdmFyIF9kID0gZmFsc2U7IHZhciBfZSA9IHVuZGVmaW5lZDsgdHJ5IHsgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgeyBfYXJyLnB1c2goX3MudmFsdWUpOyBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7IH0gfSBjYXRjaCAoZXJyKSB7IF9kID0gdHJ1ZTsgX2UgPSBlcnI7IH0gZmluYWxseSB7IHRyeSB7IGlmICghX24gJiYgX2lbXCJyZXR1cm5cIl0pIF9pW1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfSByZXR1cm4gZnVuY3Rpb24gKGFyciwgaSkgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7IHJldHVybiBhcnI7IH0gZWxzZSBpZiAoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSB7IHJldHVybiBzbGljZUl0ZXJhdG9yKGFyciwgaSk7IH0gZWxzZSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlXCIpOyB9IH07IH0oKTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gZ3JpZDtcbmZ1bmN0aW9uIGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyAmJiAhaXNOYU4odmFsdWUpO1xufVxuXG52YXIgYWxpZ25tZW50VmFsdWVzID0gWydjZW50ZXInLCAnZW5kJywgJ3N0YXJ0JywgJ3N0cmV0Y2gnXTtcblxudmFyIGRpc3BsYXlWYWx1ZXMgPSB7XG4gICdpbmxpbmUtZ3JpZCc6IFsnLW1zLWlubGluZS1ncmlkJywgJ2lubGluZS1ncmlkJ10sXG4gIGdyaWQ6IFsnLW1zLWdyaWQnLCAnZ3JpZCddXG59O1xuXG52YXIgcHJvcGVydHlDb252ZXJ0ZXJzID0ge1xuICBhbGlnblNlbGY6IGZ1bmN0aW9uIGFsaWduU2VsZih2YWx1ZSwgc3R5bGUpIHtcbiAgICBpZiAoYWxpZ25tZW50VmFsdWVzLmluZGV4T2YodmFsdWUpID4gLTEpIHtcbiAgICAgIHN0eWxlLm1zR3JpZFJvd0FsaWduID0gdmFsdWU7XG4gICAgfVxuICB9LFxuXG4gIGdyaWRDb2x1bW46IGZ1bmN0aW9uIGdyaWRDb2x1bW4odmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zR3JpZENvbHVtbiA9IHZhbHVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgX3ZhbHVlJHNwbGl0JG1hcCA9IHZhbHVlLnNwbGl0KCcvJykubWFwKGZ1bmN0aW9uIChwb3NpdGlvbikge1xuICAgICAgICByZXR1cm4gK3Bvc2l0aW9uO1xuICAgICAgfSksXG4gICAgICAgICAgX3ZhbHVlJHNwbGl0JG1hcDIgPSBfc2xpY2VkVG9BcnJheShfdmFsdWUkc3BsaXQkbWFwLCAyKSxcbiAgICAgICAgICBzdGFydCA9IF92YWx1ZSRzcGxpdCRtYXAyWzBdLFxuICAgICAgICAgIGVuZCA9IF92YWx1ZSRzcGxpdCRtYXAyWzFdO1xuXG4gICAgICBwcm9wZXJ0eUNvbnZlcnRlcnMuZ3JpZENvbHVtblN0YXJ0KHN0YXJ0LCBzdHlsZSk7XG4gICAgICBwcm9wZXJ0eUNvbnZlcnRlcnMuZ3JpZENvbHVtbkVuZChlbmQsIHN0eWxlKTtcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZENvbHVtbkVuZDogZnVuY3Rpb24gZ3JpZENvbHVtbkVuZCh2YWx1ZSwgc3R5bGUpIHtcbiAgICB2YXIgbXNHcmlkQ29sdW1uID0gc3R5bGUubXNHcmlkQ29sdW1uO1xuXG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkgJiYgaXNTaW1wbGVQb3NpdGlvblZhbHVlKG1zR3JpZENvbHVtbikpIHtcbiAgICAgIHN0eWxlLm1zR3JpZENvbHVtblNwYW4gPSB2YWx1ZSAtIG1zR3JpZENvbHVtbjtcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZENvbHVtblN0YXJ0OiBmdW5jdGlvbiBncmlkQ29sdW1uU3RhcnQodmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zR3JpZENvbHVtbiA9IHZhbHVlO1xuICAgIH1cbiAgfSxcblxuICBncmlkUm93OiBmdW5jdGlvbiBncmlkUm93KHZhbHVlLCBzdHlsZSkge1xuICAgIGlmIChpc1NpbXBsZVBvc2l0aW9uVmFsdWUodmFsdWUpKSB7XG4gICAgICBzdHlsZS5tc0dyaWRSb3cgPSB2YWx1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIF92YWx1ZSRzcGxpdCRtYXAzID0gdmFsdWUuc3BsaXQoJy8nKS5tYXAoZnVuY3Rpb24gKHBvc2l0aW9uKSB7XG4gICAgICAgIHJldHVybiArcG9zaXRpb247XG4gICAgICB9KSxcbiAgICAgICAgICBfdmFsdWUkc3BsaXQkbWFwNCA9IF9zbGljZWRUb0FycmF5KF92YWx1ZSRzcGxpdCRtYXAzLCAyKSxcbiAgICAgICAgICBzdGFydCA9IF92YWx1ZSRzcGxpdCRtYXA0WzBdLFxuICAgICAgICAgIGVuZCA9IF92YWx1ZSRzcGxpdCRtYXA0WzFdO1xuXG4gICAgICBwcm9wZXJ0eUNvbnZlcnRlcnMuZ3JpZFJvd1N0YXJ0KHN0YXJ0LCBzdHlsZSk7XG4gICAgICBwcm9wZXJ0eUNvbnZlcnRlcnMuZ3JpZFJvd0VuZChlbmQsIHN0eWxlKTtcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZFJvd0VuZDogZnVuY3Rpb24gZ3JpZFJvd0VuZCh2YWx1ZSwgc3R5bGUpIHtcbiAgICB2YXIgbXNHcmlkUm93ID0gc3R5bGUubXNHcmlkUm93O1xuXG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkgJiYgaXNTaW1wbGVQb3NpdGlvblZhbHVlKG1zR3JpZFJvdykpIHtcbiAgICAgIHN0eWxlLm1zR3JpZFJvd1NwYW4gPSB2YWx1ZSAtIG1zR3JpZFJvdztcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZFJvd1N0YXJ0OiBmdW5jdGlvbiBncmlkUm93U3RhcnQodmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zR3JpZFJvdyA9IHZhbHVlO1xuICAgIH1cbiAgfSxcblxuICBncmlkVGVtcGxhdGVDb2x1bW5zOiBmdW5jdGlvbiBncmlkVGVtcGxhdGVDb2x1bW5zKHZhbHVlLCBzdHlsZSkge1xuICAgIHN0eWxlLm1zR3JpZENvbHVtbnMgPSB2YWx1ZTtcbiAgfSxcblxuICBncmlkVGVtcGxhdGVSb3dzOiBmdW5jdGlvbiBncmlkVGVtcGxhdGVSb3dzKHZhbHVlLCBzdHlsZSkge1xuICAgIHN0eWxlLm1zR3JpZFJvd3MgPSB2YWx1ZTtcbiAgfSxcblxuICBqdXN0aWZ5U2VsZjogZnVuY3Rpb24ganVzdGlmeVNlbGYodmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGFsaWdubWVudFZhbHVlcy5pbmRleE9mKHZhbHVlKSA+IC0xKSB7XG4gICAgICBzdHlsZS5tc0dyaWRDb2x1bW5BbGlnbiA9IHZhbHVlO1xuICAgIH1cbiAgfVxufTtcblxuZnVuY3Rpb24gZ3JpZChwcm9wZXJ0eSwgdmFsdWUsIHN0eWxlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ2Rpc3BsYXknICYmIHZhbHVlIGluIGRpc3BsYXlWYWx1ZXMpIHtcbiAgICByZXR1cm4gZGlzcGxheVZhbHVlc1t2YWx1ZV07XG4gIH1cblxuICBpZiAocHJvcGVydHkgaW4gcHJvcGVydHlDb252ZXJ0ZXJzKSB7XG4gICAgdmFyIHByb3BlcnR5Q29udmVydGVyID0gcHJvcGVydHlDb252ZXJ0ZXJzW3Byb3BlcnR5XTtcbiAgICBwcm9wZXJ0eUNvbnZlcnRlcih2YWx1ZSwgc3R5bGUpO1xuICB9XG59XG59KTtcblxudmFyIGdyaWQgPSB1bndyYXBFeHBvcnRzKGdyaWRfMSk7XG5cbnZhciBpbWFnZVNldF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaW1hZ2VTZXQ7XG5cblxuXG52YXIgX2lzUHJlZml4ZWRWYWx1ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGlzUHJlZml4ZWRWYWx1ZV8xKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gaHR0cDovL2Nhbml1c2UuY29tLyNmZWF0PWNzcy1pbWFnZS1zZXRcbnZhciBwcmVmaXhlcyA9IFsnLXdlYmtpdC0nLCAnJ107XG5mdW5jdGlvbiBpbWFnZVNldChwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgISgwLCBfaXNQcmVmaXhlZFZhbHVlMi5kZWZhdWx0KSh2YWx1ZSkgJiYgdmFsdWUuaW5kZXhPZignaW1hZ2Utc2V0KCcpID4gLTEpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKC9pbWFnZS1zZXRcXCgvZywgcHJlZml4ICsgJ2ltYWdlLXNldCgnKTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBpbWFnZVNldCA9IHVud3JhcEV4cG9ydHMoaW1hZ2VTZXRfMSk7XG5cbnZhciBsb2dpY2FsXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBsb2dpY2FsO1xudmFyIGFsdGVybmF0aXZlUHJvcHMgPSB7XG4gIG1hcmdpbkJsb2NrU3RhcnQ6IFsnV2Via2l0TWFyZ2luQmVmb3JlJ10sXG4gIG1hcmdpbkJsb2NrRW5kOiBbJ1dlYmtpdE1hcmdpbkFmdGVyJ10sXG4gIG1hcmdpbklubGluZVN0YXJ0OiBbJ1dlYmtpdE1hcmdpblN0YXJ0JywgJ01vek1hcmdpblN0YXJ0J10sXG4gIG1hcmdpbklubGluZUVuZDogWydXZWJraXRNYXJnaW5FbmQnLCAnTW96TWFyZ2luRW5kJ10sXG4gIHBhZGRpbmdCbG9ja1N0YXJ0OiBbJ1dlYmtpdFBhZGRpbmdCZWZvcmUnXSxcbiAgcGFkZGluZ0Jsb2NrRW5kOiBbJ1dlYmtpdFBhZGRpbmdBZnRlciddLFxuICBwYWRkaW5nSW5saW5lU3RhcnQ6IFsnV2Via2l0UGFkZGluZ1N0YXJ0JywgJ01velBhZGRpbmdTdGFydCddLFxuICBwYWRkaW5nSW5saW5lRW5kOiBbJ1dlYmtpdFBhZGRpbmdFbmQnLCAnTW96UGFkZGluZ0VuZCddLFxuICBib3JkZXJCbG9ja1N0YXJ0OiBbJ1dlYmtpdEJvcmRlckJlZm9yZSddLFxuICBib3JkZXJCbG9ja1N0YXJ0Q29sb3I6IFsnV2Via2l0Qm9yZGVyQmVmb3JlQ29sb3InXSxcbiAgYm9yZGVyQmxvY2tTdGFydFN0eWxlOiBbJ1dlYmtpdEJvcmRlckJlZm9yZVN0eWxlJ10sXG4gIGJvcmRlckJsb2NrU3RhcnRXaWR0aDogWydXZWJraXRCb3JkZXJCZWZvcmVXaWR0aCddLFxuICBib3JkZXJCbG9ja0VuZDogWydXZWJraXRCb3JkZXJBZnRlciddLFxuICBib3JkZXJCbG9ja0VuZENvbG9yOiBbJ1dlYmtpdEJvcmRlckFmdGVyQ29sb3InXSxcbiAgYm9yZGVyQmxvY2tFbmRTdHlsZTogWydXZWJraXRCb3JkZXJBZnRlclN0eWxlJ10sXG4gIGJvcmRlckJsb2NrRW5kV2lkdGg6IFsnV2Via2l0Qm9yZGVyQWZ0ZXJXaWR0aCddLFxuICBib3JkZXJJbmxpbmVTdGFydDogWydXZWJraXRCb3JkZXJTdGFydCcsICdNb3pCb3JkZXJTdGFydCddLFxuICBib3JkZXJJbmxpbmVTdGFydENvbG9yOiBbJ1dlYmtpdEJvcmRlclN0YXJ0Q29sb3InLCAnTW96Qm9yZGVyU3RhcnRDb2xvciddLFxuICBib3JkZXJJbmxpbmVTdGFydFN0eWxlOiBbJ1dlYmtpdEJvcmRlclN0YXJ0U3R5bGUnLCAnTW96Qm9yZGVyU3RhcnRTdHlsZSddLFxuICBib3JkZXJJbmxpbmVTdGFydFdpZHRoOiBbJ1dlYmtpdEJvcmRlclN0YXJ0V2lkdGgnLCAnTW96Qm9yZGVyU3RhcnRXaWR0aCddLFxuICBib3JkZXJJbmxpbmVFbmQ6IFsnV2Via2l0Qm9yZGVyRW5kJywgJ01vekJvcmRlckVuZCddLFxuICBib3JkZXJJbmxpbmVFbmRDb2xvcjogWydXZWJraXRCb3JkZXJFbmRDb2xvcicsICdNb3pCb3JkZXJFbmRDb2xvciddLFxuICBib3JkZXJJbmxpbmVFbmRTdHlsZTogWydXZWJraXRCb3JkZXJFbmRTdHlsZScsICdNb3pCb3JkZXJFbmRTdHlsZSddLFxuICBib3JkZXJJbmxpbmVFbmRXaWR0aDogWydXZWJraXRCb3JkZXJFbmRXaWR0aCcsICdNb3pCb3JkZXJFbmRXaWR0aCddXG59O1xuXG5mdW5jdGlvbiBsb2dpY2FsKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUpIHtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhbHRlcm5hdGl2ZVByb3BzLCBwcm9wZXJ0eSkpIHtcbiAgICB2YXIgYWx0ZXJuYXRpdmVQcm9wTGlzdCA9IGFsdGVybmF0aXZlUHJvcHNbcHJvcGVydHldO1xuICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBhbHRlcm5hdGl2ZVByb3BMaXN0Lmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICBzdHlsZVthbHRlcm5hdGl2ZVByb3BMaXN0W2ldXSA9IHZhbHVlO1xuICAgIH1cbiAgfVxufVxufSk7XG5cbnZhciBsb2dpY2FsID0gdW53cmFwRXhwb3J0cyhsb2dpY2FsXzEpO1xuXG52YXIgcG9zaXRpb25fMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHBvc2l0aW9uO1xuZnVuY3Rpb24gcG9zaXRpb24ocHJvcGVydHksIHZhbHVlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ3Bvc2l0aW9uJyAmJiB2YWx1ZSA9PT0gJ3N0aWNreScpIHtcbiAgICByZXR1cm4gWyctd2Via2l0LXN0aWNreScsICdzdGlja3knXTtcbiAgfVxufVxufSk7XG5cbnZhciBwb3NpdGlvbiA9IHVud3JhcEV4cG9ydHMocG9zaXRpb25fMSk7XG5cbnZhciBzaXppbmdfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHNpemluZztcbnZhciBwcmVmaXhlcyA9IFsnLXdlYmtpdC0nLCAnLW1vei0nLCAnJ107XG5cbnZhciBwcm9wZXJ0aWVzID0ge1xuICBtYXhIZWlnaHQ6IHRydWUsXG4gIG1heFdpZHRoOiB0cnVlLFxuICB3aWR0aDogdHJ1ZSxcbiAgaGVpZ2h0OiB0cnVlLFxuICBjb2x1bW5XaWR0aDogdHJ1ZSxcbiAgbWluV2lkdGg6IHRydWUsXG4gIG1pbkhlaWdodDogdHJ1ZVxufTtcbnZhciB2YWx1ZXMgPSB7XG4gICdtaW4tY29udGVudCc6IHRydWUsXG4gICdtYXgtY29udGVudCc6IHRydWUsXG4gICdmaWxsLWF2YWlsYWJsZSc6IHRydWUsXG4gICdmaXQtY29udGVudCc6IHRydWUsXG4gICdjb250YWluLWZsb2F0cyc6IHRydWVcbn07XG5cbmZ1bmN0aW9uIHNpemluZyhwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHByb3BlcnRpZXMuaGFzT3duUHJvcGVydHkocHJvcGVydHkpICYmIHZhbHVlcy5oYXNPd25Qcm9wZXJ0eSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyB2YWx1ZTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBzaXppbmcgPSB1bndyYXBFeHBvcnRzKHNpemluZ18xKTtcblxuLyogZXNsaW50LWRpc2FibGUgbm8tdmFyLCBwcmVmZXItdGVtcGxhdGUgKi9cbnZhciB1cHBlcmNhc2VQYXR0ZXJuID0gL1tBLVpdL2c7XG52YXIgbXNQYXR0ZXJuID0gL15tcy0vO1xudmFyIGNhY2hlID0ge307XG5cbmZ1bmN0aW9uIHRvSHlwaGVuTG93ZXIobWF0Y2gpIHtcbiAgcmV0dXJuICctJyArIG1hdGNoLnRvTG93ZXJDYXNlKClcbn1cblxuZnVuY3Rpb24gaHlwaGVuYXRlU3R5bGVOYW1lKG5hbWUpIHtcbiAgaWYgKGNhY2hlLmhhc093blByb3BlcnR5KG5hbWUpKSB7XG4gICAgcmV0dXJuIGNhY2hlW25hbWVdXG4gIH1cblxuICB2YXIgaE5hbWUgPSBuYW1lLnJlcGxhY2UodXBwZXJjYXNlUGF0dGVybiwgdG9IeXBoZW5Mb3dlcik7XG4gIHJldHVybiAoY2FjaGVbbmFtZV0gPSBtc1BhdHRlcm4udGVzdChoTmFtZSkgPyAnLScgKyBoTmFtZSA6IGhOYW1lKVxufVxuXG52YXIgaHlwaGVuYXRlU3R5bGVOYW1lJDEgPSAvKiNfX1BVUkVfXyovT2JqZWN0LmZyZWV6ZSh7XG4gIGRlZmF1bHQ6IGh5cGhlbmF0ZVN0eWxlTmFtZVxufSk7XG5cbnZhciBfaHlwaGVuYXRlU3R5bGVOYW1lID0gZ2V0Q2pzRXhwb3J0RnJvbU5hbWVzcGFjZShoeXBoZW5hdGVTdHlsZU5hbWUkMSk7XG5cbnZhciBoeXBoZW5hdGVQcm9wZXJ0eV8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaHlwaGVuYXRlUHJvcGVydHk7XG5cblxuXG52YXIgX2h5cGhlbmF0ZVN0eWxlTmFtZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9oeXBoZW5hdGVTdHlsZU5hbWUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBoeXBoZW5hdGVQcm9wZXJ0eShwcm9wZXJ0eSkge1xuICByZXR1cm4gKDAsIF9oeXBoZW5hdGVTdHlsZU5hbWUyLmRlZmF1bHQpKHByb3BlcnR5KTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xufSk7XG5cbnVud3JhcEV4cG9ydHMoaHlwaGVuYXRlUHJvcGVydHlfMSk7XG5cbnZhciB0cmFuc2l0aW9uXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB0cmFuc2l0aW9uO1xuXG5cblxudmFyIF9oeXBoZW5hdGVQcm9wZXJ0eTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGh5cGhlbmF0ZVByb3BlcnR5XzEpO1xuXG5cblxudmFyIF9pc1ByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChpc1ByZWZpeGVkVmFsdWVfMSk7XG5cblxuXG52YXIgX2NhcGl0YWxpemVTdHJpbmcyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChjYXBpdGFsaXplU3RyaW5nXzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgcHJvcGVydGllcyA9IHtcbiAgdHJhbnNpdGlvbjogdHJ1ZSxcbiAgdHJhbnNpdGlvblByb3BlcnR5OiB0cnVlLFxuICBXZWJraXRUcmFuc2l0aW9uOiB0cnVlLFxuICBXZWJraXRUcmFuc2l0aW9uUHJvcGVydHk6IHRydWUsXG4gIE1velRyYW5zaXRpb246IHRydWUsXG4gIE1velRyYW5zaXRpb25Qcm9wZXJ0eTogdHJ1ZVxufTtcblxuXG52YXIgcHJlZml4TWFwcGluZyA9IHtcbiAgV2Via2l0OiAnLXdlYmtpdC0nLFxuICBNb3o6ICctbW96LScsXG4gIG1zOiAnLW1zLSdcbn07XG5cbmZ1bmN0aW9uIHByZWZpeFZhbHVlKHZhbHVlLCBwcm9wZXJ0eVByZWZpeE1hcCkge1xuICBpZiAoKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSkge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuXG4gIC8vIG9ubHkgc3BsaXQgbXVsdGkgdmFsdWVzLCBub3QgY3ViaWMgYmV6aWVyc1xuICB2YXIgbXVsdGlwbGVWYWx1ZXMgPSB2YWx1ZS5zcGxpdCgvLCg/IVteKCldKig/OlxcKFteKCldKlxcKSk/XFwpKS9nKTtcblxuICBmb3IgKHZhciBpID0gMCwgbGVuID0gbXVsdGlwbGVWYWx1ZXMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICB2YXIgc2luZ2xlVmFsdWUgPSBtdWx0aXBsZVZhbHVlc1tpXTtcbiAgICB2YXIgdmFsdWVzID0gW3NpbmdsZVZhbHVlXTtcbiAgICBmb3IgKHZhciBwcm9wZXJ0eSBpbiBwcm9wZXJ0eVByZWZpeE1hcCkge1xuICAgICAgdmFyIGRhc2hDYXNlUHJvcGVydHkgPSAoMCwgX2h5cGhlbmF0ZVByb3BlcnR5Mi5kZWZhdWx0KShwcm9wZXJ0eSk7XG5cbiAgICAgIGlmIChzaW5nbGVWYWx1ZS5pbmRleE9mKGRhc2hDYXNlUHJvcGVydHkpID4gLTEgJiYgZGFzaENhc2VQcm9wZXJ0eSAhPT0gJ29yZGVyJykge1xuICAgICAgICB2YXIgcHJlZml4ZXMgPSBwcm9wZXJ0eVByZWZpeE1hcFtwcm9wZXJ0eV07XG4gICAgICAgIGZvciAodmFyIGogPSAwLCBwTGVuID0gcHJlZml4ZXMubGVuZ3RoOyBqIDwgcExlbjsgKytqKSB7XG4gICAgICAgICAgLy8gam9pbiBhbGwgcHJlZml4ZXMgYW5kIGNyZWF0ZSBhIG5ldyB2YWx1ZVxuICAgICAgICAgIHZhbHVlcy51bnNoaWZ0KHNpbmdsZVZhbHVlLnJlcGxhY2UoZGFzaENhc2VQcm9wZXJ0eSwgcHJlZml4TWFwcGluZ1twcmVmaXhlc1tqXV0gKyBkYXNoQ2FzZVByb3BlcnR5KSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBtdWx0aXBsZVZhbHVlc1tpXSA9IHZhbHVlcy5qb2luKCcsJyk7XG4gIH1cblxuICByZXR1cm4gbXVsdGlwbGVWYWx1ZXMuam9pbignLCcpO1xufVxuXG5mdW5jdGlvbiB0cmFuc2l0aW9uKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUsIHByb3BlcnR5UHJlZml4TWFwKSB7XG4gIC8vIGFsc28gY2hlY2sgZm9yIGFscmVhZHkgcHJlZml4ZWQgdHJhbnNpdGlvbnNcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgcHJvcGVydGllcy5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkpIHtcbiAgICB2YXIgb3V0cHV0VmFsdWUgPSBwcmVmaXhWYWx1ZSh2YWx1ZSwgcHJvcGVydHlQcmVmaXhNYXApO1xuICAgIC8vIGlmIHRoZSBwcm9wZXJ0eSBpcyBhbHJlYWR5IHByZWZpeGVkXG4gICAgdmFyIHdlYmtpdE91dHB1dCA9IG91dHB1dFZhbHVlLnNwbGl0KC8sKD8hW14oKV0qKD86XFwoW14oKV0qXFwpKT9cXCkpL2cpLmZpbHRlcihmdW5jdGlvbiAodmFsKSB7XG4gICAgICByZXR1cm4gIS8tbW96LXwtbXMtLy50ZXN0KHZhbCk7XG4gICAgfSkuam9pbignLCcpO1xuXG4gICAgaWYgKHByb3BlcnR5LmluZGV4T2YoJ1dlYmtpdCcpID4gLTEpIHtcbiAgICAgIHJldHVybiB3ZWJraXRPdXRwdXQ7XG4gICAgfVxuXG4gICAgdmFyIG1vek91dHB1dCA9IG91dHB1dFZhbHVlLnNwbGl0KC8sKD8hW14oKV0qKD86XFwoW14oKV0qXFwpKT9cXCkpL2cpLmZpbHRlcihmdW5jdGlvbiAodmFsKSB7XG4gICAgICByZXR1cm4gIS8td2Via2l0LXwtbXMtLy50ZXN0KHZhbCk7XG4gICAgfSkuam9pbignLCcpO1xuXG4gICAgaWYgKHByb3BlcnR5LmluZGV4T2YoJ01veicpID4gLTEpIHtcbiAgICAgIHJldHVybiBtb3pPdXRwdXQ7XG4gICAgfVxuXG4gICAgc3R5bGVbJ1dlYmtpdCcgKyAoMCwgX2NhcGl0YWxpemVTdHJpbmcyLmRlZmF1bHQpKHByb3BlcnR5KV0gPSB3ZWJraXRPdXRwdXQ7XG4gICAgc3R5bGVbJ01veicgKyAoMCwgX2NhcGl0YWxpemVTdHJpbmcyLmRlZmF1bHQpKHByb3BlcnR5KV0gPSBtb3pPdXRwdXQ7XG4gICAgcmV0dXJuIG91dHB1dFZhbHVlO1xuICB9XG59XG59KTtcblxudmFyIHRyYW5zaXRpb24gPSB1bndyYXBFeHBvcnRzKHRyYW5zaXRpb25fMSk7XG5cbnZhciB3ID0gW1wiV2Via2l0XCJdO1xudmFyIG0gPSBbXCJNb3pcIl07XG52YXIgbXMgPSBbXCJtc1wiXTtcbnZhciB3bSA9IFtcIldlYmtpdFwiLCBcIk1velwiXTtcbnZhciB3bXMgPSBbXCJXZWJraXRcIiwgXCJtc1wiXTtcbnZhciB3bW1zID0gW1wiV2Via2l0XCIsIFwiTW96XCIsIFwibXNcIl07XG52YXIgc3RhdGljRGF0YSA9IHtcbiAgcGx1Z2luczogW2JhY2tncm91bmRDbGlwLCBjYWxjLCBjcm9zc0ZhZGUsIGN1cnNvciwgZmlsdGVyLCBmbGV4LCBmbGV4Ym94SUUsIGZsZXhib3hPbGQsIGdyYWRpZW50LCBncmlkLCBpbWFnZVNldCwgbG9naWNhbCwgcG9zaXRpb24sIHNpemluZywgdHJhbnNpdGlvbl0sXG4gIHByZWZpeE1hcDoge1xuICAgIFwidHJhbnNmb3JtXCI6IHdtcyxcbiAgICBcInRyYW5zZm9ybU9yaWdpblwiOiB3bXMsXG4gICAgXCJ0cmFuc2Zvcm1PcmlnaW5YXCI6IHdtcyxcbiAgICBcInRyYW5zZm9ybU9yaWdpbllcIjogd21zLFxuICAgIFwiYmFja2ZhY2VWaXNpYmlsaXR5XCI6IHcsXG4gICAgXCJwZXJzcGVjdGl2ZVwiOiB3LFxuICAgIFwicGVyc3BlY3RpdmVPcmlnaW5cIjogdyxcbiAgICBcInRyYW5zZm9ybVN0eWxlXCI6IHcsXG4gICAgXCJ0cmFuc2Zvcm1PcmlnaW5aXCI6IHcsXG4gICAgXCJhbmltYXRpb25cIjogdyxcbiAgICBcImFuaW1hdGlvbkRlbGF5XCI6IHcsXG4gICAgXCJhbmltYXRpb25EaXJlY3Rpb25cIjogdyxcbiAgICBcImFuaW1hdGlvbkZpbGxNb2RlXCI6IHcsXG4gICAgXCJhbmltYXRpb25EdXJhdGlvblwiOiB3LFxuICAgIFwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnRcIjogdyxcbiAgICBcImFuaW1hdGlvbk5hbWVcIjogdyxcbiAgICBcImFuaW1hdGlvblBsYXlTdGF0ZVwiOiB3LFxuICAgIFwiYW5pbWF0aW9uVGltaW5nRnVuY3Rpb25cIjogdyxcbiAgICBcImFwcGVhcmFuY2VcIjogd20sXG4gICAgXCJ1c2VyU2VsZWN0XCI6IHdtbXMsXG4gICAgXCJmb250S2VybmluZ1wiOiB3LFxuICAgIFwidGV4dEVtcGhhc2lzUG9zaXRpb25cIjogdyxcbiAgICBcInRleHRFbXBoYXNpc1wiOiB3LFxuICAgIFwidGV4dEVtcGhhc2lzU3R5bGVcIjogdyxcbiAgICBcInRleHRFbXBoYXNpc0NvbG9yXCI6IHcsXG4gICAgXCJib3hEZWNvcmF0aW9uQnJlYWtcIjogdyxcbiAgICBcImNsaXBQYXRoXCI6IHcsXG4gICAgXCJtYXNrSW1hZ2VcIjogdyxcbiAgICBcIm1hc2tNb2RlXCI6IHcsXG4gICAgXCJtYXNrUmVwZWF0XCI6IHcsXG4gICAgXCJtYXNrUG9zaXRpb25cIjogdyxcbiAgICBcIm1hc2tDbGlwXCI6IHcsXG4gICAgXCJtYXNrT3JpZ2luXCI6IHcsXG4gICAgXCJtYXNrU2l6ZVwiOiB3LFxuICAgIFwibWFza0NvbXBvc2l0ZVwiOiB3LFxuICAgIFwibWFza1wiOiB3LFxuICAgIFwibWFza0JvcmRlclNvdXJjZVwiOiB3LFxuICAgIFwibWFza0JvcmRlck1vZGVcIjogdyxcbiAgICBcIm1hc2tCb3JkZXJTbGljZVwiOiB3LFxuICAgIFwibWFza0JvcmRlcldpZHRoXCI6IHcsXG4gICAgXCJtYXNrQm9yZGVyT3V0c2V0XCI6IHcsXG4gICAgXCJtYXNrQm9yZGVyUmVwZWF0XCI6IHcsXG4gICAgXCJtYXNrQm9yZGVyXCI6IHcsXG4gICAgXCJtYXNrVHlwZVwiOiB3LFxuICAgIFwidGV4dERlY29yYXRpb25TdHlsZVwiOiB3bSxcbiAgICBcInRleHREZWNvcmF0aW9uU2tpcFwiOiB3bSxcbiAgICBcInRleHREZWNvcmF0aW9uTGluZVwiOiB3bSxcbiAgICBcInRleHREZWNvcmF0aW9uQ29sb3JcIjogd20sXG4gICAgXCJmaWx0ZXJcIjogdyxcbiAgICBcImZvbnRGZWF0dXJlU2V0dGluZ3NcIjogd20sXG4gICAgXCJicmVha0FmdGVyXCI6IHdtbXMsXG4gICAgXCJicmVha0JlZm9yZVwiOiB3bW1zLFxuICAgIFwiYnJlYWtJbnNpZGVcIjogd21tcyxcbiAgICBcImNvbHVtbkNvdW50XCI6IHdtLFxuICAgIFwiY29sdW1uRmlsbFwiOiB3bSxcbiAgICBcImNvbHVtbkdhcFwiOiB3bSxcbiAgICBcImNvbHVtblJ1bGVcIjogd20sXG4gICAgXCJjb2x1bW5SdWxlQ29sb3JcIjogd20sXG4gICAgXCJjb2x1bW5SdWxlU3R5bGVcIjogd20sXG4gICAgXCJjb2x1bW5SdWxlV2lkdGhcIjogd20sXG4gICAgXCJjb2x1bW5zXCI6IHdtLFxuICAgIFwiY29sdW1uU3BhblwiOiB3bSxcbiAgICBcImNvbHVtbldpZHRoXCI6IHdtLFxuICAgIFwid3JpdGluZ01vZGVcIjogd21zLFxuICAgIFwiZmxleFwiOiB3bXMsXG4gICAgXCJmbGV4QmFzaXNcIjogdyxcbiAgICBcImZsZXhEaXJlY3Rpb25cIjogd21zLFxuICAgIFwiZmxleEdyb3dcIjogdyxcbiAgICBcImZsZXhGbG93XCI6IHdtcyxcbiAgICBcImZsZXhTaHJpbmtcIjogdyxcbiAgICBcImZsZXhXcmFwXCI6IHdtcyxcbiAgICBcImFsaWduQ29udGVudFwiOiB3LFxuICAgIFwiYWxpZ25JdGVtc1wiOiB3LFxuICAgIFwiYWxpZ25TZWxmXCI6IHcsXG4gICAgXCJqdXN0aWZ5Q29udGVudFwiOiB3LFxuICAgIFwib3JkZXJcIjogdyxcbiAgICBcInRyYW5zaXRpb25EZWxheVwiOiB3LFxuICAgIFwidHJhbnNpdGlvbkR1cmF0aW9uXCI6IHcsXG4gICAgXCJ0cmFuc2l0aW9uUHJvcGVydHlcIjogdyxcbiAgICBcInRyYW5zaXRpb25UaW1pbmdGdW5jdGlvblwiOiB3LFxuICAgIFwiYmFja2Ryb3BGaWx0ZXJcIjogdyxcbiAgICBcInNjcm9sbFNuYXBUeXBlXCI6IHdtcyxcbiAgICBcInNjcm9sbFNuYXBQb2ludHNYXCI6IHdtcyxcbiAgICBcInNjcm9sbFNuYXBQb2ludHNZXCI6IHdtcyxcbiAgICBcInNjcm9sbFNuYXBEZXN0aW5hdGlvblwiOiB3bXMsXG4gICAgXCJzY3JvbGxTbmFwQ29vcmRpbmF0ZVwiOiB3bXMsXG4gICAgXCJzaGFwZUltYWdlVGhyZXNob2xkXCI6IHcsXG4gICAgXCJzaGFwZUltYWdlTWFyZ2luXCI6IHcsXG4gICAgXCJzaGFwZUltYWdlT3V0c2lkZVwiOiB3LFxuICAgIFwiaHlwaGVuc1wiOiB3bW1zLFxuICAgIFwiZmxvd0ludG9cIjogd21zLFxuICAgIFwiZmxvd0Zyb21cIjogd21zLFxuICAgIFwicmVnaW9uRnJhZ21lbnRcIjogd21zLFxuICAgIFwidGV4dE9yaWVudGF0aW9uXCI6IHcsXG4gICAgXCJib3hTaXppbmdcIjogbSxcbiAgICBcInRleHRBbGlnbkxhc3RcIjogbSxcbiAgICBcInRhYlNpemVcIjogbSxcbiAgICBcIndyYXBGbG93XCI6IG1zLFxuICAgIFwid3JhcFRocm91Z2hcIjogbXMsXG4gICAgXCJ3cmFwTWFyZ2luXCI6IG1zLFxuICAgIFwidG91Y2hBY3Rpb25cIjogbXMsXG4gICAgXCJ0ZXh0U2l6ZUFkanVzdFwiOiB3bXMsXG4gICAgXCJib3JkZXJJbWFnZVwiOiB3LFxuICAgIFwiYm9yZGVySW1hZ2VPdXRzZXRcIjogdyxcbiAgICBcImJvcmRlckltYWdlUmVwZWF0XCI6IHcsXG4gICAgXCJib3JkZXJJbWFnZVNsaWNlXCI6IHcsXG4gICAgXCJib3JkZXJJbWFnZVNvdXJjZVwiOiB3LFxuICAgIFwiYm9yZGVySW1hZ2VXaWR0aFwiOiB3XG4gIH1cbn07XG5cbnZhciBwcmVmaXhBbGwgPSBjcmVhdGVQcmVmaXhlcihzdGF0aWNEYXRhKTtcbi8qIDo6XG5pbXBvcnQgdHlwZSB7IFNoZWV0RGVmaW5pdGlvbiB9IGZyb20gJy4vaW5kZXguanMnO1xudHlwZSBTdHJpbmdIYW5kbGVycyA9IHsgW2lkOnN0cmluZ106IEZ1bmN0aW9uIH07XG50eXBlIFNlbGVjdG9yQ2FsbGJhY2sgPSAoc2VsZWN0b3I6IHN0cmluZykgPT4gc3RyaW5nW107XG5leHBvcnQgdHlwZSBTZWxlY3RvckhhbmRsZXIgPSAoXG4gICAgc2VsZWN0b3I6IHN0cmluZyxcbiAgICBiYXNlU2VsZWN0b3I6IHN0cmluZyxcbiAgICBjYWxsYmFjazogU2VsZWN0b3JDYWxsYmFja1xuKSA9PiBzdHJpbmdbXSB8IHN0cmluZyB8IG51bGw7XG4qL1xuXG4vKipcbiAqIGBzZWxlY3RvckhhbmRsZXJzYCBhcmUgZnVuY3Rpb25zIHdoaWNoIGhhbmRsZSBzcGVjaWFsIHNlbGVjdG9ycyB3aGljaCBhY3RcbiAqIGRpZmZlcmVudGx5IHRoYW4gbm9ybWFsIHN0eWxlIGRlZmluaXRpb25zLiBUaGVzZSBmdW5jdGlvbnMgbG9vayBhdCB0aGVcbiAqIGN1cnJlbnQgc2VsZWN0b3IgYW5kIGNhbiBnZW5lcmF0ZSBDU1MgZm9yIHRoZSBzdHlsZXMgaW4gdGhlaXIgc3VidHJlZSBieVxuICogY2FsbGluZyB0aGUgY2FsbGJhY2sgd2l0aCBhIG5ldyBzZWxlY3Rvci5cbiAqXG4gKiBGb3IgZXhhbXBsZSwgd2hlbiBnZW5lcmF0aW5nIHN0eWxlcyB3aXRoIGEgYmFzZSBzZWxlY3RvciBvZiAnLmZvbycgYW5kIHRoZVxuICogZm9sbG93aW5nIHN0eWxlcyBvYmplY3Q6XG4gKlxuICogICB7XG4gKiAgICAgJzpudGgtY2hpbGQoMm4pJzoge1xuICogICAgICAgJzpob3Zlcic6IHtcbiAqICAgICAgICAgY29sb3I6ICdyZWQnXG4gKiAgICAgICB9XG4gKiAgICAgfVxuICogICB9XG4gKlxuICogd2hlbiB3ZSByZWFjaCB0aGUgJzpob3Zlcicgc3R5bGUsIHdlIHdvdWxkIGNhbGwgb3VyIHNlbGVjdG9yIGhhbmRsZXJzIGxpa2VcbiAqXG4gKiAgIGhhbmRsZXIoJzpob3ZlcicsICcuZm9vOm50aC1jaGlsZCgybiknLCBjYWxsYmFjaylcbiAqXG4gKiBTaW5jZSBvdXIgYHBzZXVkb1NlbGVjdG9yc2AgaGFuZGxlcyAnOmhvdmVyJyBzdHlsZXMsIHRoYXQgaGFuZGxlciB3b3VsZCBjYWxsXG4gKiB0aGUgY2FsbGJhY2sgbGlrZVxuICpcbiAqICAgY2FsbGJhY2soJy5mb286bnRoLWNoaWxkKDJuKTpob3ZlcicpXG4gKlxuICogdG8gZ2VuZXJhdGUgaXRzIHN1YnRyZWUgYHsgY29sb3I6ICdyZWQnIH1gIHN0eWxlcyB3aXRoIGFcbiAqICcuZm9vOm50aC1jaGlsZCgybik6aG92ZXInIHNlbGVjdG9yLiBUaGUgY2FsbGJhY2sgd291bGQgcmV0dXJuIGFuIGFycmF5IG9mIENTU1xuICogcnVsZXMgbGlrZVxuICpcbiAqICAgWycuZm9vOm50aC1jaGlsZCgybik6aG92ZXJ7Y29sb3I6cmVkICFpbXBvcnRhbnQ7fSddXG4gKlxuICogYW5kIHRoZSBoYW5kbGVyIHdvdWxkIHRoZW4gcmV0dXJuIHRoYXQgcmVzdWx0aW5nIENTUy5cbiAqXG4gKiBgZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnNgIGlzIHRoZSBsaXN0IG9mIGRlZmF1bHQgaGFuZGxlcnMgdXNlZCBpbiBhIGNhbGwgdG9cbiAqIGBnZW5lcmF0ZUNTU2AuXG4gKlxuICogQG5hbWUgU2VsZWN0b3JIYW5kbGVyXG4gKiBAZnVuY3Rpb25cbiAqIEBwYXJhbSB7c3RyaW5nfSBzZWxlY3RvcjogVGhlIGN1cnJlbnRseSBpbnNwZWN0ZWQgc2VsZWN0b3IuICc6aG92ZXInIGluIHRoZVxuICogICAgIGV4YW1wbGUgYWJvdmUuXG4gKiBAcGFyYW0ge3N0cmluZ30gYmFzZVNlbGVjdG9yOiBUaGUgc2VsZWN0b3Igb2YgdGhlIHBhcmVudCBzdHlsZXMuXG4gKiAgICAgJy5mb286bnRoLWNoaWxkKDJuKScgaW4gdGhlIGV4YW1wbGUgYWJvdmUuXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBnZW5lcmF0ZVN1YnRyZWVTdHlsZXM6IEEgZnVuY3Rpb24gd2hpY2ggY2FuIGJlIGNhbGxlZCB0b1xuICogICAgIGdlbmVyYXRlIENTUyBmb3IgdGhlIHN1YnRyZWUgb2Ygc3R5bGVzIGNvcnJlc3BvbmRpbmcgdG8gdGhlIHNlbGVjdG9yLlxuICogICAgIEFjY2VwdHMgYSBuZXcgYmFzZVNlbGVjdG9yIHRvIHVzZSBmb3IgZ2VuZXJhdGluZyB0aG9zZSBzdHlsZXMuXG4gKiBAcmV0dXJucyB7c3RyaW5nW10gfCBzdHJpbmcgfCBudWxsfSBUaGUgZ2VuZXJhdGVkIENTUyBmb3IgdGhpcyBzZWxlY3Rvciwgb3JcbiAqICAgICBudWxsIGlmIHdlIGRvbid0IGhhbmRsZSB0aGlzIHNlbGVjdG9yLlxuICovXG5cbnZhciBkZWZhdWx0U2VsZWN0b3JIYW5kbGVyc1xuLyogOiBTZWxlY3RvckhhbmRsZXJbXSAqL1xuPSBbLy8gSGFuZGxlIHBzZXVkby1zZWxlY3RvcnMsIGxpa2UgOmhvdmVyIGFuZCA6bnRoLWNoaWxkKDNuKVxuZnVuY3Rpb24gcHNldWRvU2VsZWN0b3JzKHNlbGVjdG9yLCBiYXNlU2VsZWN0b3IsIGdlbmVyYXRlU3VidHJlZVN0eWxlcykge1xuICBpZiAoc2VsZWN0b3JbMF0gIT09IFwiOlwiKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gZ2VuZXJhdGVTdWJ0cmVlU3R5bGVzKGJhc2VTZWxlY3RvciArIHNlbGVjdG9yKTtcbn0sIC8vIEhhbmRsZSBtZWRpYSBxdWVyaWVzIChvciBmb250LWZhY2VzKVxuZnVuY3Rpb24gbWVkaWFRdWVyaWVzKHNlbGVjdG9yLCBiYXNlU2VsZWN0b3IsIGdlbmVyYXRlU3VidHJlZVN0eWxlcykge1xuICBpZiAoc2VsZWN0b3JbMF0gIT09IFwiQFwiKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH0gLy8gR2VuZXJhdGUgdGhlIHN0eWxlcyBub3JtYWxseSwgYW5kIHRoZW4gd3JhcCB0aGVtIGluIHRoZSBtZWRpYSBxdWVyeS5cblxuXG4gIHZhciBnZW5lcmF0ZWQgPSBnZW5lcmF0ZVN1YnRyZWVTdHlsZXMoYmFzZVNlbGVjdG9yKTtcbiAgcmV0dXJuIFtcIlwiLmNvbmNhdChzZWxlY3RvciwgXCJ7XCIpLmNvbmNhdChnZW5lcmF0ZWQuam9pbignJyksIFwifVwiKV07XG59XTtcbi8qKlxuICogR2VuZXJhdGUgQ1NTIGZvciBhIHNlbGVjdG9yIGFuZCBzb21lIHN0eWxlcy5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGhhbmRsZXMgdGhlIG1lZGlhIHF1ZXJpZXMgYW5kIHBzZXVkbyBzZWxlY3RvcnMgdGhhdCBjYW4gYmUgdXNlZFxuICogaW4gYXBocm9kaXRlIHN0eWxlcy5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3I6IEEgYmFzZSBDU1Mgc2VsZWN0b3IgZm9yIHRoZSBzdHlsZXMgdG8gYmUgZ2VuZXJhdGVkXG4gKiAgICAgd2l0aC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBzdHlsZVR5cGVzOiBBIGxpc3Qgb2YgcHJvcGVydGllcyBvZiB0aGUgcmV0dXJuIHR5cGUgb2ZcbiAqICAgICBTdHlsZVNoZWV0LmNyZWF0ZSwgZS5nLiBbc3R5bGVzLnJlZCwgc3R5bGVzLmJsdWVdLlxuICogQHBhcmFtIHtBcnJheS48U2VsZWN0b3JIYW5kbGVyPn0gc2VsZWN0b3JIYW5kbGVyczogQSBsaXN0IG9mIHNlbGVjdG9yXG4gKiAgICAgaGFuZGxlcnMgdG8gdXNlIGZvciBoYW5kbGluZyBzcGVjaWFsIHNlbGVjdG9ycy4gU2VlXG4gKiAgICAgYGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzYC5cbiAqIEBwYXJhbSBzdHJpbmdIYW5kbGVyczogU2VlIGBnZW5lcmF0ZUNTU1J1bGVzZXRgXG4gKiBAcGFyYW0gdXNlSW1wb3J0YW50OiBTZWUgYGdlbmVyYXRlQ1NTUnVsZXNldGBcbiAqXG4gKiBUbyBhY3R1YWxseSBnZW5lcmF0ZSB0aGUgQ1NTIHNwZWNpYWwtY29uc3RydWN0LWxlc3Mgc3R5bGVzIGFyZSBwYXNzZWQgdG9cbiAqIGBnZW5lcmF0ZUNTU1J1bGVzZXRgLlxuICpcbiAqIEZvciBpbnN0YW5jZSwgYSBjYWxsIHRvXG4gKlxuICogICAgIGdlbmVyYXRlQ1NTKFwiLmZvb1wiLCBbe1xuICogICAgICAgY29sb3I6IFwicmVkXCIsXG4gKiAgICAgICBcIkBtZWRpYSBzY3JlZW5cIjoge1xuICogICAgICAgICBoZWlnaHQ6IDIwLFxuICogICAgICAgICBcIjpob3ZlclwiOiB7XG4gKiAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcImJsYWNrXCJcbiAqICAgICAgICAgfVxuICogICAgICAgfSxcbiAqICAgICAgIFwiOmFjdGl2ZVwiOiB7XG4gKiAgICAgICAgIGZvbnRXZWlnaHQ6IFwiYm9sZFwiXG4gKiAgICAgICB9XG4gKiAgICAgfV0sIGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzKTtcbiAqXG4gKiB3aXRoIHRoZSBkZWZhdWx0IGBzZWxlY3RvckhhbmRsZXJzYCB3aWxsIG1ha2UgNSBjYWxscyB0b1xuICogYGdlbmVyYXRlQ1NTUnVsZXNldGA6XG4gKlxuICogICAgIGdlbmVyYXRlQ1NTUnVsZXNldChcIi5mb29cIiwgeyBjb2xvcjogXCJyZWRcIiB9LCAuLi4pXG4gKiAgICAgZ2VuZXJhdGVDU1NSdWxlc2V0KFwiLmZvbzphY3RpdmVcIiwgeyBmb250V2VpZ2h0OiBcImJvbGRcIiB9LCAuLi4pXG4gKiAgICAgLy8gVGhlc2UgMiB3aWxsIGJlIHdyYXBwZWQgaW4gQG1lZGlhIHNjcmVlbiB7fVxuICogICAgIGdlbmVyYXRlQ1NTUnVsZXNldChcIi5mb29cIiwgeyBoZWlnaHQ6IDIwIH0sIC4uLilcbiAqICAgICBnZW5lcmF0ZUNTU1J1bGVzZXQoXCIuZm9vOmhvdmVyXCIsIHsgYmFja2dyb3VuZENvbG9yOiBcImJsYWNrXCIgfSwgLi4uKVxuICovXG5cbnZhciBnZW5lcmF0ZUNTUyA9IGZ1bmN0aW9uIGdlbmVyYXRlQ1NTKHNlbGVjdG9yXG4vKiA6IHN0cmluZyAqL1xuLCBzdHlsZVR5cGVzXG4vKiA6IFNoZWV0RGVmaW5pdGlvbltdICovXG4sIHNlbGVjdG9ySGFuZGxlcnNcbi8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbiwgc3RyaW5nSGFuZGxlcnNcbi8qIDogU3RyaW5nSGFuZGxlcnMgKi9cbiwgdXNlSW1wb3J0YW50XG4vKiA6IGJvb2xlYW4gKi9cbilcbi8qIDogc3RyaW5nW10gKi9cbntcbiAgdmFyIG1lcmdlZCA9IG5ldyBPcmRlcmVkRWxlbWVudHMoKTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlVHlwZXMubGVuZ3RoOyBpKyspIHtcbiAgICBtZXJnZWQuYWRkU3R5bGVUeXBlKHN0eWxlVHlwZXNbaV0pO1xuICB9XG5cbiAgdmFyIHBsYWluRGVjbGFyYXRpb25zID0gbmV3IE9yZGVyZWRFbGVtZW50cygpO1xuICB2YXIgZ2VuZXJhdGVkU3R5bGVzID0gW107IC8vIFRPRE8oZW1pbHkpOiBiZW5jaG1hcmsgdGhpcyB0byBzZWUgaWYgYSBwbGFpbiBmb3IgbG9vcCB3b3VsZCBiZSBmYXN0ZXIuXG5cbiAgbWVyZ2VkLmZvckVhY2goZnVuY3Rpb24gKHZhbCwga2V5KSB7XG4gICAgLy8gRm9yIGVhY2gga2V5LCBzZWUgaWYgb25lIG9mIHRoZSBzZWxlY3RvciBoYW5kbGVycyB3aWxsIGhhbmRsZSB0aGVzZVxuICAgIC8vIHN0eWxlcy5cbiAgICB2YXIgZm91bmRIYW5kbGVyID0gc2VsZWN0b3JIYW5kbGVycy5zb21lKGZ1bmN0aW9uIChoYW5kbGVyKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gaGFuZGxlcihrZXksIHNlbGVjdG9yLCBmdW5jdGlvbiAobmV3U2VsZWN0b3IpIHtcbiAgICAgICAgcmV0dXJuIGdlbmVyYXRlQ1NTKG5ld1NlbGVjdG9yLCBbdmFsXSwgc2VsZWN0b3JIYW5kbGVycywgc3RyaW5nSGFuZGxlcnMsIHVzZUltcG9ydGFudCk7XG4gICAgICB9KTtcblxuICAgICAgaWYgKHJlc3VsdCAhPSBudWxsKSB7XG4gICAgICAgIC8vIElmIHRoZSBoYW5kbGVyIHJldHVybmVkIHNvbWV0aGluZywgYWRkIGl0IHRvIHRoZSBnZW5lcmF0ZWRcbiAgICAgICAgLy8gQ1NTIGFuZCBzdG9wIGxvb2tpbmcgZm9yIGFub3RoZXIgaGFuZGxlci5cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkocmVzdWx0KSkge1xuICAgICAgICAgIGdlbmVyYXRlZFN0eWxlcy5wdXNoLmFwcGx5KGdlbmVyYXRlZFN0eWxlcywgX3RvQ29uc3VtYWJsZUFycmF5KHJlc3VsdCkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICAgICAgICAgIGNvbnNvbGUud2FybignV0FSTklORzogU2VsZWN0b3IgaGFuZGxlcnMgc2hvdWxkIHJldHVybiBhbiBhcnJheSBvZiBydWxlcy4nICsgJ1JldHVybmluZyBhIHN0cmluZyBjb250YWluaW5nIG11bHRpcGxlIHJ1bGVzIGlzIGRlcHJlY2F0ZWQuJywgaGFuZGxlcik7XG4gICAgICAgICAgZ2VuZXJhdGVkU3R5bGVzLnB1c2goXCJAbWVkaWEgYWxsIHtcIi5jb25jYXQocmVzdWx0LCBcIn1cIikpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfSk7IC8vIElmIG5vbmUgb2YgdGhlIGhhbmRsZXJzIGhhbmRsZWQgaXQsIGFkZCBpdCB0byB0aGUgbGlzdCBvZiBwbGFpblxuICAgIC8vIHN0eWxlIGRlY2xhcmF0aW9ucy5cblxuICAgIGlmICghZm91bmRIYW5kbGVyKSB7XG4gICAgICBwbGFpbkRlY2xhcmF0aW9ucy5zZXQoa2V5LCB2YWwsIHRydWUpO1xuICAgIH1cbiAgfSk7XG4gIHZhciBnZW5lcmF0ZWRSdWxlc2V0ID0gZ2VuZXJhdGVDU1NSdWxlc2V0KHNlbGVjdG9yLCBwbGFpbkRlY2xhcmF0aW9ucywgc3RyaW5nSGFuZGxlcnMsIHVzZUltcG9ydGFudCwgc2VsZWN0b3JIYW5kbGVycyk7XG5cbiAgaWYgKGdlbmVyYXRlZFJ1bGVzZXQpIHtcbiAgICBnZW5lcmF0ZWRTdHlsZXMudW5zaGlmdChnZW5lcmF0ZWRSdWxlc2V0KTtcbiAgfVxuXG4gIHJldHVybiBnZW5lcmF0ZWRTdHlsZXM7XG59O1xuLyoqXG4gKiBIZWxwZXIgbWV0aG9kIG9mIGdlbmVyYXRlQ1NTUnVsZXNldCB0byBmYWNpbGl0YXRlIGN1c3RvbSBoYW5kbGluZyBvZiBjZXJ0YWluXG4gKiBDU1MgcHJvcGVydGllcy4gVXNlZCBmb3IgZS5nLiBmb250IGZhbWlsaWVzLlxuICpcbiAqIFNlZSBnZW5lcmF0ZUNTU1J1bGVzZXQgZm9yIHVzYWdlIGFuZCBkb2N1bWVudGF0aW9uIG9mIHBhcmFtYXRlciB0eXBlcy5cbiAqL1xuXG52YXIgcnVuU3RyaW5nSGFuZGxlcnMgPSBmdW5jdGlvbiBydW5TdHJpbmdIYW5kbGVycyhkZWNsYXJhdGlvbnNcbi8qIDogT3JkZXJlZEVsZW1lbnRzICovXG4sIHN0cmluZ0hhbmRsZXJzXG4vKiA6IFN0cmluZ0hhbmRsZXJzICovXG4sIHNlbGVjdG9ySGFuZGxlcnNcbi8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbilcbi8qIDogdm9pZCAqL1xue1xuICBpZiAoIXN0cmluZ0hhbmRsZXJzKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHN0cmluZ0hhbmRsZXJLZXlzID0gT2JqZWN0LmtleXMoc3RyaW5nSGFuZGxlcnMpO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3RyaW5nSGFuZGxlcktleXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIga2V5ID0gc3RyaW5nSGFuZGxlcktleXNbaV07XG5cbiAgICBpZiAoZGVjbGFyYXRpb25zLmhhcyhrZXkpKSB7XG4gICAgICAvLyBBIGRlY2xhcmF0aW9uIGV4aXN0cyBmb3IgdGhpcyBwYXJ0aWN1bGFyIHN0cmluZyBoYW5kbGVyLCBzbyB3ZVxuICAgICAgLy8gbmVlZCB0byBsZXQgdGhlIHN0cmluZyBoYW5kbGVyIGludGVycHJldCB0aGUgZGVjbGFyYXRpb24gZmlyc3RcbiAgICAgIC8vIGJlZm9yZSBwcm9jZWVkaW5nLlxuICAgICAgLy9cbiAgICAgIC8vIFRPRE8oZW1pbHkpOiBQYXNzIGluIGEgY2FsbGJhY2sgd2hpY2ggZ2VuZXJhdGVzIENTUywgc2ltaWxhciB0b1xuICAgICAgLy8gaG93IG91ciBzZWxlY3RvciBoYW5kbGVycyB3b3JrLCBpbnN0ZWFkIG9mIHBhc3NpbmcgaW5cbiAgICAgIC8vIGBzZWxlY3RvckhhbmRsZXJzYCBhbmQgaGF2ZSB0aGVtIG1ha2UgY2FsbHMgdG8gYGdlbmVyYXRlQ1NTYFxuICAgICAgLy8gdGhlbXNlbHZlcy4gUmlnaHQgbm93LCB0aGlzIGlzIGltcHJhY3RpY2FsIGJlY2F1c2Ugb3VyIHN0cmluZ1xuICAgICAgLy8gaGFuZGxlcnMgYXJlIHZlcnkgc3BlY2lhbGl6ZWQgYW5kIGRvIGNvbXBsZXggdGhpbmdzLlxuICAgICAgZGVjbGFyYXRpb25zLnNldChrZXksIHN0cmluZ0hhbmRsZXJzW2tleV0oZGVjbGFyYXRpb25zLmdldChrZXkpLCBzZWxlY3RvckhhbmRsZXJzKSwgLy8gUHJlc2VydmUgb3JkZXIgaGVyZSwgc2luY2Ugd2UgYXJlIHJlYWxseSByZXBsYWNpbmcgYW5cbiAgICAgIC8vIHVucHJvY2Vzc2VkIHN0eWxlIHdpdGggYSBwcm9jZXNzZWQgc3R5bGUsIG5vdCBvdmVycmlkaW5nIGFuXG4gICAgICAvLyBlYXJsaWVyIHN0eWxlXG4gICAgICBmYWxzZSk7XG4gICAgfVxuICB9XG59O1xuXG52YXIgdHJhbnNmb3JtUnVsZSA9IGZ1bmN0aW9uIHRyYW5zZm9ybVJ1bGUoa2V5XG4vKiA6IHN0cmluZyAqL1xuLCB2YWx1ZVxuLyogOiBzdHJpbmcgKi9cbiwgdHJhbnNmb3JtVmFsdWVcbi8qIDogZnVuY3Rpb24gKi9cbikge1xuICByZXR1cm4gKFxuICAgIC8qIDogc3RyaW5nICovXG4gICAgXCJcIi5jb25jYXQoa2ViYWJpZnlTdHlsZU5hbWUoa2V5KSwgXCI6XCIpLmNvbmNhdCh0cmFuc2Zvcm1WYWx1ZShrZXksIHZhbHVlKSwgXCI7XCIpXG4gICk7XG59O1xuXG52YXIgYXJyYXlUb09iamVjdEtleXNSZWR1Y2VyID0gZnVuY3Rpb24gYXJyYXlUb09iamVjdEtleXNSZWR1Y2VyKGFjYywgdmFsKSB7XG4gIGFjY1t2YWxdID0gdHJ1ZTtcbiAgcmV0dXJuIGFjYztcbn07XG4vKipcbiAqIEdlbmVyYXRlIGEgQ1NTIHJ1bGVzZXQgd2l0aCB0aGUgc2VsZWN0b3IgYW5kIGNvbnRhaW5pbmcgdGhlIGRlY2xhcmF0aW9ucy5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGFzc3VtZXMgdGhhdCB0aGUgZ2l2ZW4gZGVjbGFyYXRpb25zIGRvbid0IGNvbnRhaW4gYW55IHNwZWNpYWxcbiAqIGNoaWxkcmVuIChzdWNoIGFzIG1lZGlhIHF1ZXJpZXMsIHBzZXVkby1zZWxlY3RvcnMsIG9yIGRlc2NlbmRhbnQgc3R5bGVzKS5cbiAqXG4gKiBOb3RlIHRoYXQgdGhpcyBtZXRob2QgZG9lcyBub3QgZGVhbCB3aXRoIG5lc3RpbmcgdXNlZCBmb3IgZS5nLlxuICogcHN1ZWRvLXNlbGVjdG9ycyBvciBtZWRpYSBxdWVyaWVzLiBUaGF0IHJlc3BvbnNpYmlsaXR5IGlzIGxlZnQgdG8gIHRoZVxuICogYGdlbmVyYXRlQ1NTYCBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3I6IHRoZSBzZWxlY3RvciBhc3NvY2lhdGVkIHdpdGggdGhlIHJ1bGVzZXRcbiAqIEBwYXJhbSB7T2JqZWN0fSBkZWNsYXJhdGlvbnM6IGEgbWFwIGZyb20gY2FtZWxDYXNlZCBDU1MgcHJvcGVydHkgbmFtZSB0byBDU1NcbiAqICAgICBwcm9wZXJ0eSB2YWx1ZS5cbiAqIEBwYXJhbSB7T2JqZWN0LjxzdHJpbmcsIGZ1bmN0aW9uPn0gc3RyaW5nSGFuZGxlcnM6IGEgbWFwIGZyb20gY2FtZWxDYXNlZCBDU1NcbiAqICAgICBwcm9wZXJ0eSBuYW1lIHRvIGEgZnVuY3Rpb24gd2hpY2ggd2lsbCBtYXAgdGhlIGdpdmVuIHZhbHVlIHRvIHRoZSB2YWx1ZVxuICogICAgIHRoYXQgaXMgb3V0cHV0LlxuICogQHBhcmFtIHtib29sfSB1c2VJbXBvcnRhbnQ6IEEgYm9vbGVhbiBzYXlpbmcgd2hldGhlciB0byBhcHBlbmQgXCIhaW1wb3J0YW50XCJcbiAqICAgICB0byBlYWNoIG9mIHRoZSBDU1MgZGVjbGFyYXRpb25zLlxuICogQHJldHVybnMge3N0cmluZ30gQSBzdHJpbmcgb2YgcmF3IENTUy5cbiAqXG4gKiBFeGFtcGxlczpcbiAqXG4gKiAgICBnZW5lcmF0ZUNTU1J1bGVzZXQoXCIuYmxhaFwiLCB7IGNvbG9yOiBcInJlZFwiIH0pXG4gKiAgICAtPiBcIi5ibGFoe2NvbG9yOiByZWQgIWltcG9ydGFudDt9XCJcbiAqICAgIGdlbmVyYXRlQ1NTUnVsZXNldChcIi5ibGFoXCIsIHsgY29sb3I6IFwicmVkXCIgfSwge30sIGZhbHNlKVxuICogICAgLT4gXCIuYmxhaHtjb2xvcjogcmVkfVwiXG4gKiAgICBnZW5lcmF0ZUNTU1J1bGVzZXQoXCIuYmxhaFwiLCB7IGNvbG9yOiBcInJlZFwiIH0sIHtjb2xvcjogYyA9PiBjLnRvVXBwZXJDYXNlfSlcbiAqICAgIC0+IFwiLmJsYWh7Y29sb3I6IFJFRH1cIlxuICogICAgZ2VuZXJhdGVDU1NSdWxlc2V0KFwiLmJsYWg6aG92ZXJcIiwgeyBjb2xvcjogXCJyZWRcIiB9KVxuICogICAgLT4gXCIuYmxhaDpob3Zlcntjb2xvcjogcmVkfVwiXG4gKi9cblxuXG52YXIgZ2VuZXJhdGVDU1NSdWxlc2V0ID0gZnVuY3Rpb24gZ2VuZXJhdGVDU1NSdWxlc2V0KHNlbGVjdG9yXG4vKiA6IHN0cmluZyAqL1xuLCBkZWNsYXJhdGlvbnNcbi8qIDogT3JkZXJlZEVsZW1lbnRzICovXG4sIHN0cmluZ0hhbmRsZXJzXG4vKiA6IFN0cmluZ0hhbmRsZXJzICovXG4sIHVzZUltcG9ydGFudFxuLyogOiBib29sZWFuICovXG4sIHNlbGVjdG9ySGFuZGxlcnNcbi8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbilcbi8qIDogc3RyaW5nICovXG57XG4gIC8vIE11dGF0ZXMgZGVjbGFyYXRpb25zXG4gIHJ1blN0cmluZ0hhbmRsZXJzKGRlY2xhcmF0aW9ucywgc3RyaW5nSGFuZGxlcnMsIHNlbGVjdG9ySGFuZGxlcnMpO1xuICB2YXIgb3JpZ2luYWxFbGVtZW50cyA9IE9iamVjdC5rZXlzKGRlY2xhcmF0aW9ucy5lbGVtZW50cykucmVkdWNlKGFycmF5VG9PYmplY3RLZXlzUmVkdWNlciwgT2JqZWN0LmNyZWF0ZShudWxsKSk7IC8vIE5PVEUoZW1pbHkpOiBUaGlzIG11dGF0ZXMgaGFuZGxlZERlY2xhcmF0aW9ucy5lbGVtZW50cy5cblxuICB2YXIgcHJlZml4ZWRFbGVtZW50cyA9IHByZWZpeEFsbChkZWNsYXJhdGlvbnMuZWxlbWVudHMpO1xuICB2YXIgZWxlbWVudE5hbWVzID0gT2JqZWN0LmtleXMocHJlZml4ZWRFbGVtZW50cyk7XG5cbiAgaWYgKGVsZW1lbnROYW1lcy5sZW5ndGggIT09IGRlY2xhcmF0aW9ucy5rZXlPcmRlci5sZW5ndGgpIHtcbiAgICAvLyBUaGVyZSBhcmUgc29tZSBwcmVmaXhlZCB2YWx1ZXMsIHNvIHdlIG5lZWQgdG8gZmlndXJlIG91dCBob3cgdG8gc29ydFxuICAgIC8vIHRoZW0uXG4gICAgLy9cbiAgICAvLyBMb29wIHRocm91Z2ggcHJlZml4ZWRFbGVtZW50cywgbG9va2luZyBmb3IgYW55dGhpbmcgdGhhdCBpcyBub3QgaW5cbiAgICAvLyBzb3J0T3JkZXIsIHdoaWNoIG1lYW5zIGl0IHdhcyBhZGRlZCBieSBwcmVmaXhBbGwuIFRoaXMgbWVhbnMgdGhhdCB3ZVxuICAgIC8vIG5lZWQgdG8gZmlndXJlIG91dCB3aGVyZSBpdCBzaG91bGQgYXBwZWFyIGluIHRoZSBzb3J0T3JkZXIuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBlbGVtZW50TmFtZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmICghb3JpZ2luYWxFbGVtZW50c1tlbGVtZW50TmFtZXNbaV1dKSB7XG4gICAgICAgIC8vIFRoaXMgZWxlbWVudCBpcyBub3QgaW4gdGhlIHNvcnRPcmRlciwgd2hpY2ggbWVhbnMgaXQgaXMgYSBwcmVmaXhlZFxuICAgICAgICAvLyB2YWx1ZSB0aGF0IHdhcyBhZGRlZCBieSBwcmVmaXhBbGwuIExldCdzIHRyeSB0byBmaWd1cmUgb3V0IHdoZXJlIGl0XG4gICAgICAgIC8vIGdvZXMuXG4gICAgICAgIHZhciBvcmlnaW5hbFN0eWxlID0gdm9pZCAwO1xuXG4gICAgICAgIGlmIChlbGVtZW50TmFtZXNbaV1bMF0gPT09ICdXJykge1xuICAgICAgICAgIC8vIFRoaXMgaXMgYSBXZWJraXQtcHJlZml4ZWQgc3R5bGUsIGxpa2UgXCJXZWJraXRUcmFuc2l0aW9uXCIuIExldCdzXG4gICAgICAgICAgLy8gZmluZCBpdHMgb3JpZ2luYWwgc3R5bGUncyBzb3J0IG9yZGVyLlxuICAgICAgICAgIG9yaWdpbmFsU3R5bGUgPSBlbGVtZW50TmFtZXNbaV1bNl0udG9Mb3dlckNhc2UoKSArIGVsZW1lbnROYW1lc1tpXS5zbGljZSg3KTtcbiAgICAgICAgfSBlbHNlIGlmIChlbGVtZW50TmFtZXNbaV1bMV0gPT09ICdvJykge1xuICAgICAgICAgIC8vIFRoaXMgaXMgYSBNb3otcHJlZml4ZWQgc3R5bGUsIGxpa2UgXCJNb3pUcmFuc2l0aW9uXCIuIFdlIGNoZWNrXG4gICAgICAgICAgLy8gdGhlIHNlY29uZCBjaGFyYWN0ZXIgdG8gYXZvaWQgY29sbGlkaW5nIHdpdGggTXMtcHJlZml4ZWRcbiAgICAgICAgICAvLyBzdHlsZXMuIExldCdzIGZpbmQgaXRzIG9yaWdpbmFsIHN0eWxlJ3Mgc29ydCBvcmRlci5cbiAgICAgICAgICBvcmlnaW5hbFN0eWxlID0gZWxlbWVudE5hbWVzW2ldWzNdLnRvTG93ZXJDYXNlKCkgKyBlbGVtZW50TmFtZXNbaV0uc2xpY2UoNCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gaWYgKGVsZW1lbnROYW1lc1tpXVsxXSA9PT0gJ3MnKSB7XG4gICAgICAgICAgLy8gVGhpcyBpcyBhIE1zLXByZWZpeGVkIHN0eWxlLCBsaWtlIFwiTXNUcmFuc2l0aW9uXCIuXG4gICAgICAgICAgb3JpZ2luYWxTdHlsZSA9IGVsZW1lbnROYW1lc1tpXVsyXS50b0xvd2VyQ2FzZSgpICsgZWxlbWVudE5hbWVzW2ldLnNsaWNlKDMpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG9yaWdpbmFsU3R5bGUgJiYgb3JpZ2luYWxFbGVtZW50c1tvcmlnaW5hbFN0eWxlXSkge1xuICAgICAgICAgIHZhciBvcmlnaW5hbEluZGV4ID0gZGVjbGFyYXRpb25zLmtleU9yZGVyLmluZGV4T2Yob3JpZ2luYWxTdHlsZSk7XG4gICAgICAgICAgZGVjbGFyYXRpb25zLmtleU9yZGVyLnNwbGljZShvcmlnaW5hbEluZGV4LCAwLCBlbGVtZW50TmFtZXNbaV0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIFdlIGRvbid0IGtub3cgd2hhdCB0aGUgb3JpZ2luYWwgc3R5bGUgd2FzLCBzbyBzb3J0IGl0IHRvXG4gICAgICAgICAgLy8gdG9wLiBUaGlzIGNhbiBoYXBwZW4gZm9yIHN0eWxlcyB0aGF0IGFyZSBhZGRlZCB0aGF0IGRvbid0XG4gICAgICAgICAgLy8gaGF2ZSB0aGUgc2FtZSBiYXNlIG5hbWUgYXMgdGhlIG9yaWdpbmFsIHN0eWxlLlxuICAgICAgICAgIGRlY2xhcmF0aW9ucy5rZXlPcmRlci51bnNoaWZ0KGVsZW1lbnROYW1lc1tpXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB2YXIgdHJhbnNmb3JtVmFsdWUgPSB1c2VJbXBvcnRhbnQgPT09IGZhbHNlID8gc3RyaW5naWZ5VmFsdWUgOiBzdHJpbmdpZnlBbmRJbXBvcnRhbnRpZnlWYWx1ZTtcbiAgdmFyIHJ1bGVzID0gW107XG5cbiAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGRlY2xhcmF0aW9ucy5rZXlPcmRlci5sZW5ndGg7IF9pKyspIHtcbiAgICB2YXIga2V5ID0gZGVjbGFyYXRpb25zLmtleU9yZGVyW19pXTtcbiAgICB2YXIgdmFsdWUgPSBwcmVmaXhlZEVsZW1lbnRzW2tleV07XG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgIC8vIGlubGluZS1zdHlsZS1wcmVmaXhlciByZXR1cm5zIGFuIGFycmF5IHdoZW4gdGhlcmUgc2hvdWxkIGJlXG4gICAgICAvLyBtdWx0aXBsZSBydWxlcyBmb3IgdGhlIHNhbWUga2V5LiBIZXJlIHdlIGZsYXR0ZW4gdG8gbXVsdGlwbGVcbiAgICAgIC8vIHBhaXJzIHdpdGggdGhlIHNhbWUga2V5LlxuICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWx1ZS5sZW5ndGg7IGorKykge1xuICAgICAgICBydWxlcy5wdXNoKHRyYW5zZm9ybVJ1bGUoa2V5LCB2YWx1ZVtqXSwgdHJhbnNmb3JtVmFsdWUpKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgcnVsZXMucHVzaCh0cmFuc2Zvcm1SdWxlKGtleSwgdmFsdWUsIHRyYW5zZm9ybVZhbHVlKSk7XG4gICAgfVxuICB9XG5cbiAgaWYgKHJ1bGVzLmxlbmd0aCkge1xuICAgIHJldHVybiBcIlwiLmNvbmNhdChzZWxlY3RvciwgXCJ7XCIpLmNvbmNhdChydWxlcy5qb2luKFwiXCIpLCBcIn1cIik7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIFwiXCI7XG4gIH1cbn07XG5cbi8qIDo6XG5pbXBvcnQgdHlwZSB7IFNoZWV0RGVmaW5pdGlvbiwgU2hlZXREZWZpbml0aW9ucyB9IGZyb20gJy4vaW5kZXguanMnO1xuaW1wb3J0IHR5cGUgeyBNYXliZVNoZWV0RGVmaW5pdGlvbiB9IGZyb20gJy4vZXhwb3J0cy5qcyc7XG5pbXBvcnQgdHlwZSB7IFNlbGVjdG9ySGFuZGxlciB9IGZyb20gJy4vZ2VuZXJhdGUuanMnO1xuKi9cbi8vIFRoZSBjdXJyZW50IDxzdHlsZT4gdGFnIHdlIGFyZSBpbnNlcnRpbmcgaW50bywgb3IgbnVsbCBpZiB3ZSBoYXZlbid0XG4vLyBpbnNlcnRlZCBhbnl0aGluZyB5ZXQuIFdlIGNvdWxkIGZpbmQgdGhpcyBlYWNoIHRpbWUgdXNpbmdcbi8vIGBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwic3R5bGVbZGF0YS1hcGhyb2RpdGVcIl0pYCwgYnV0IGhvbGRpbmcgb250byBpdCBpc1xuLy8gZmFzdGVyLlxuXG52YXIgc3R5bGVUYWdcbi8qIDogP0hUTUxTdHlsZUVsZW1lbnQgKi9cbj0gbnVsbDsgLy8gSW5qZWN0IGEgc2V0IG9mIHJ1bGVzIGludG8gYSA8c3R5bGU+IHRhZyBpbiB0aGUgaGVhZCBvZiB0aGUgZG9jdW1lbnQuIFRoaXNcbi8vIHdpbGwgYXV0b21hdGljYWxseSBjcmVhdGUgYSBzdHlsZSB0YWcgYW5kIHRoZW4gY29udGludWUgdG8gdXNlIGl0IGZvclxuLy8gbXVsdGlwbGUgaW5qZWN0aW9ucy4gSXQgd2lsbCBhbHNvIHVzZSBhIHN0eWxlIHRhZyB3aXRoIHRoZSBgZGF0YS1hcGhyb2RpdGVgXG4vLyB0YWcgb24gaXQgaWYgdGhhdCBleGlzdHMgaW4gdGhlIERPTS4gVGhpcyBjb3VsZCBiZSB1c2VkIGZvciBlLmcuIHJldXNpbmcgdGhlXG4vLyBzYW1lIHN0eWxlIHRhZyB0aGF0IHNlcnZlci1zaWRlIHJlbmRlcmluZyBpbnNlcnRzLlxuXG52YXIgaW5qZWN0U3R5bGVUYWcgPSBmdW5jdGlvbiBpbmplY3RTdHlsZVRhZyhjc3NSdWxlc1xuLyogOiBzdHJpbmdbXSAqL1xuKSB7XG4gIGlmIChzdHlsZVRhZyA9PSBudWxsKSB7XG4gICAgLy8gVHJ5IHRvIGZpbmQgYSBzdHlsZSB0YWcgd2l0aCB0aGUgYGRhdGEtYXBocm9kaXRlYCBhdHRyaWJ1dGUgZmlyc3QuXG4gICAgc3R5bGVUYWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwic3R5bGVbZGF0YS1hcGhyb2RpdGVdXCIpXG4gICAgLyogOiBhbnkgKi9cbiAgICA7IC8vIElmIHRoYXQgZG9lc24ndCB3b3JrLCBnZW5lcmF0ZSBhIG5ldyBzdHlsZSB0YWcuXG5cbiAgICBpZiAoc3R5bGVUYWcgPT0gbnVsbCkge1xuICAgICAgLy8gVGFrZW4gZnJvbVxuICAgICAgLy8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy81MjQ2OTYvaG93LXRvLWNyZWF0ZS1hLXN0eWxlLXRhZy13aXRoLWphdmFzY3JpcHRcbiAgICAgIHZhciBoZWFkID0gZG9jdW1lbnQuaGVhZCB8fCBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaGVhZCcpWzBdO1xuICAgICAgc3R5bGVUYWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgICAgc3R5bGVUYWcudHlwZSA9ICd0ZXh0L2Nzcyc7XG4gICAgICBzdHlsZVRhZy5zZXRBdHRyaWJ1dGUoXCJkYXRhLWFwaHJvZGl0ZVwiLCBcIlwiKTtcbiAgICAgIGhlYWQuYXBwZW5kQ2hpbGQoc3R5bGVUYWcpO1xuICAgIH1cbiAgfSAvLyAkRmxvd0ZpeE1lXG5cblxuICB2YXIgc2hlZXQgPSBzdHlsZVRhZy5zdHlsZVNoZWV0IHx8IHN0eWxlVGFnLnNoZWV0XG4gIC8qIDogYW55ICovXG4gIDtcblxuICBpZiAoc2hlZXQuaW5zZXJ0UnVsZSkge1xuICAgIHZhciBudW1SdWxlcyA9IHNoZWV0LmNzc1J1bGVzLmxlbmd0aDtcbiAgICBjc3NSdWxlcy5mb3JFYWNoKGZ1bmN0aW9uIChydWxlKSB7XG4gICAgICB0cnkge1xuICAgICAgICBzaGVldC5pbnNlcnRSdWxlKHJ1bGUsIG51bVJ1bGVzKTtcbiAgICAgICAgbnVtUnVsZXMgKz0gMTtcbiAgICAgIH0gY2F0Y2ggKGUpIHsvLyBUaGUgc2VsZWN0b3IgZm9yIHRoaXMgcnVsZSB3YXNuJ3QgY29tcGF0aWJsZSB3aXRoIHRoZSBicm93c2VyXG4gICAgICB9XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGVUYWcuaW5uZXJUZXh0ID0gKHN0eWxlVGFnLmlubmVyVGV4dCB8fCAnJykgKyBjc3NSdWxlcy5qb2luKCcnKTtcbiAgfVxufTsgLy8gQ3VzdG9tIGhhbmRsZXJzIGZvciBzdHJpbmdpZnlpbmcgQ1NTIHZhbHVlcyB0aGF0IGhhdmUgc2lkZSBlZmZlY3RzXG4vLyAoc3VjaCBhcyBmb250RmFtaWx5LCB3aGljaCBjYW4gY2F1c2UgQGZvbnQtZmFjZSBydWxlcyB0byBiZSBpbmplY3RlZClcblxuXG52YXIgc3RyaW5nSGFuZGxlcnMgPSB7XG4gIC8vIFdpdGggZm9udEZhbWlseSB3ZSBsb29rIGZvciBvYmplY3RzIHRoYXQgYXJlIHBhc3NlZCBpbiBhbmQgaW50ZXJwcmV0XG4gIC8vIHRoZW0gYXMgQGZvbnQtZmFjZSBydWxlcyB0aGF0IHdlIG5lZWQgdG8gaW5qZWN0LiBUaGUgdmFsdWUgb2YgZm9udEZhbWlseVxuICAvLyBjYW4gZWl0aGVyIGJlIGEgc3RyaW5nIChhcyBub3JtYWwpLCBhbiBvYmplY3QgKGEgc2luZ2xlIGZvbnQgZmFjZSksIG9yXG4gIC8vIGFuIGFycmF5IG9mIG9iamVjdHMgYW5kIHN0cmluZ3MuXG4gIGZvbnRGYW1pbHk6IGZ1bmN0aW9uIGZvbnRGYW1pbHkodmFsKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkodmFsKSkge1xuICAgICAgdmFyIG5hbWVNYXAgPSB7fTtcbiAgICAgIHZhbC5mb3JFYWNoKGZ1bmN0aW9uICh2KSB7XG4gICAgICAgIG5hbWVNYXBbZm9udEZhbWlseSh2KV0gPSB0cnVlO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gT2JqZWN0LmtleXMobmFtZU1hcCkuam9pbihcIixcIik7XG4gICAgfSBlbHNlIGlmIChfdHlwZW9mKHZhbCkgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgIGluamVjdFN0eWxlT25jZSh2YWwuc3JjLCBcIkBmb250LWZhY2VcIiwgW3ZhbF0sIGZhbHNlKTtcbiAgICAgIHJldHVybiBcIlxcXCJcIi5jb25jYXQodmFsLmZvbnRGYW1pbHksIFwiXFxcIlwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHZhbDtcbiAgICB9XG4gIH0sXG4gIC8vIFdpdGggYW5pbWF0aW9uTmFtZSB3ZSBsb29rIGZvciBhbiBvYmplY3QgdGhhdCBjb250YWlucyBrZXlmcmFtZXMgYW5kXG4gIC8vIGluamVjdCB0aGVtIGFzIGFuIGBAa2V5ZnJhbWVzYCBibG9jaywgcmV0dXJuaW5nIGEgdW5pcXVlbHkgZ2VuZXJhdGVkXG4gIC8vIG5hbWUuIFRoZSBrZXlmcmFtZXMgb2JqZWN0IHNob3VsZCBsb29rIGxpa2VcbiAgLy8gIGFuaW1hdGlvbk5hbWU6IHtcbiAgLy8gICAgZnJvbToge1xuICAvLyAgICAgIGxlZnQ6IDAsXG4gIC8vICAgICAgdG9wOiAwLFxuICAvLyAgICB9LFxuICAvLyAgICAnNTAlJzoge1xuICAvLyAgICAgIGxlZnQ6IDE1LFxuICAvLyAgICAgIHRvcDogNSxcbiAgLy8gICAgfSxcbiAgLy8gICAgdG86IHtcbiAgLy8gICAgICBsZWZ0OiAyMCxcbiAgLy8gICAgICB0b3A6IDIwLFxuICAvLyAgICB9XG4gIC8vICB9XG4gIC8vIFRPRE8oZW1pbHkpOiBgc3RyaW5nSGFuZGxlcnNgIGRvZXNuJ3QgbGV0IHVzIHJlbmFtZSB0aGUga2V5LCBzbyBJIGhhdmVcbiAgLy8gdG8gdXNlIGBhbmltYXRpb25OYW1lYCBoZXJlLiBJbXByb3ZlIHRoYXQgc28gd2UgY2FuIGNhbGwgdGhpc1xuICAvLyBgYW5pbWF0aW9uYCBpbnN0ZWFkIG9mIGBhbmltYXRpb25OYW1lYC5cbiAgYW5pbWF0aW9uTmFtZTogZnVuY3Rpb24gYW5pbWF0aW9uTmFtZSh2YWwsIHNlbGVjdG9ySGFuZGxlcnMpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWwpKSB7XG4gICAgICByZXR1cm4gdmFsLm1hcChmdW5jdGlvbiAodikge1xuICAgICAgICByZXR1cm4gYW5pbWF0aW9uTmFtZSh2LCBzZWxlY3RvckhhbmRsZXJzKTtcbiAgICAgIH0pLmpvaW4oXCIsXCIpO1xuICAgIH0gZWxzZSBpZiAoX3R5cGVvZih2YWwpID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAvLyBHZW5lcmF0ZSBhIHVuaXF1ZSBuYW1lIGJhc2VkIG9uIHRoZSBoYXNoIG9mIHRoZSBvYmplY3QuIFdlIGNhbid0XG4gICAgICAvLyBqdXN0IHVzZSB0aGUgaGFzaCBiZWNhdXNlIHRoZSBuYW1lIGNhbid0IHN0YXJ0IHdpdGggYSBudW1iZXIuXG4gICAgICAvLyBUT0RPKGVtaWx5KTogdGhpcyBwcm9iYWJseSBtYWtlcyBkZWJ1Z2dpbmcgaGFyZCwgYWxsb3cgYSBjdXN0b21cbiAgICAgIC8vIG5hbWU/XG4gICAgICB2YXIgbmFtZSA9IFwia2V5ZnJhbWVfXCIuY29uY2F0KGhhc2hPYmplY3QodmFsKSk7IC8vIFNpbmNlIGtleWZyYW1lcyBuZWVkIDMgbGF5ZXJzIG9mIG5lc3RpbmcsIHdlIHVzZSBgZ2VuZXJhdGVDU1NgIHRvXG4gICAgICAvLyBidWlsZCB0aGUgaW5uZXIgbGF5ZXJzIGFuZCB3cmFwIGl0IGluIGBAa2V5ZnJhbWVzYCBvdXJzZWx2ZXMuXG5cbiAgICAgIHZhciBmaW5hbFZhbCA9IFwiQGtleWZyYW1lcyBcIi5jb25jYXQobmFtZSwgXCJ7XCIpOyAvLyBUT0RPIHNlZSBpZiB3ZSBjYW4gZmluZCBhIHdheSB3aGVyZSBjaGVja2luZyBmb3IgT3JkZXJlZEVsZW1lbnRzXG4gICAgICAvLyBoZXJlIGlzIG5vdCBuZWNlc3NhcnkuIEFsdGVybmF0aXZlbHksIHBlcmhhcHMgd2Ugc2hvdWxkIGhhdmUgYVxuICAgICAgLy8gdXRpbGl0eSBtZXRob2QgdGhhdCBjYW4gaXRlcmF0ZSBvdmVyIGVpdGhlciBhIHBsYWluIG9iamVjdCwgYW5cbiAgICAgIC8vIGluc3RhbmNlIG9mIE9yZGVyZWRFbGVtZW50cywgb3IgYSBNYXAsIGFuZCB0aGVuIHVzZSB0aGF0IGhlcmUgYW5kXG4gICAgICAvLyBlbHNld2hlcmUuXG5cbiAgICAgIGlmICh2YWwgaW5zdGFuY2VvZiBPcmRlcmVkRWxlbWVudHMpIHtcbiAgICAgICAgdmFsLmZvckVhY2goZnVuY3Rpb24gKHZhbFZhbCwgdmFsS2V5KSB7XG4gICAgICAgICAgZmluYWxWYWwgKz0gZ2VuZXJhdGVDU1ModmFsS2V5LCBbdmFsVmFsXSwgc2VsZWN0b3JIYW5kbGVycywgc3RyaW5nSGFuZGxlcnMsIGZhbHNlKS5qb2luKCcnKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBPYmplY3Qua2V5cyh2YWwpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgIGZpbmFsVmFsICs9IGdlbmVyYXRlQ1NTKGtleSwgW3ZhbFtrZXldXSwgc2VsZWN0b3JIYW5kbGVycywgc3RyaW5nSGFuZGxlcnMsIGZhbHNlKS5qb2luKCcnKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGZpbmFsVmFsICs9ICd9JztcbiAgICAgIGluamVjdEdlbmVyYXRlZENTU09uY2UobmFtZSwgW2ZpbmFsVmFsXSk7XG4gICAgICByZXR1cm4gbmFtZTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHZhbDtcbiAgICB9XG4gIH1cbn07IC8vIFRoaXMgaXMgYSBtYXAgZnJvbSBBcGhyb2RpdGUncyBnZW5lcmF0ZWQgY2xhc3MgbmFtZXMgdG8gYHRydWVgIChhY3RpbmcgYXMgYVxuLy8gc2V0IG9mIGNsYXNzIG5hbWVzKVxuXG52YXIgYWxyZWFkeUluamVjdGVkID0ge307IC8vIFRoaXMgaXMgdGhlIGJ1ZmZlciBvZiBzdHlsZXMgd2hpY2ggaGF2ZSBub3QgeWV0IGJlZW4gZmx1c2hlZC5cblxudmFyIGluamVjdGlvbkJ1ZmZlclxuLyogOiBzdHJpbmdbXSAqL1xuPSBbXTsgLy8gQSBmbGFnIHRvIHRlbGwgaWYgd2UgYXJlIGFscmVhZHkgYnVmZmVyaW5nIHN0eWxlcy4gVGhpcyBjb3VsZCBoYXBwZW4gZWl0aGVyXG4vLyBiZWNhdXNlIHdlIHNjaGVkdWxlZCBhIGZsdXNoIGNhbGwgYWxyZWFkeSwgc28gbmV3bHkgYWRkZWQgc3R5bGVzIHdpbGxcbi8vIGFscmVhZHkgYmUgZmx1c2hlZCwgb3IgYmVjYXVzZSB3ZSBhcmUgc3RhdGljYWxseSBidWZmZXJpbmcgb24gdGhlIHNlcnZlci5cblxudmFyIGlzQnVmZmVyaW5nID0gZmFsc2U7XG5cbnZhciBpbmplY3RHZW5lcmF0ZWRDU1NPbmNlID0gZnVuY3Rpb24gaW5qZWN0R2VuZXJhdGVkQ1NTT25jZShrZXksIGdlbmVyYXRlZENTUykge1xuICB2YXIgX2luamVjdGlvbkJ1ZmZlcjtcblxuICBpZiAoYWxyZWFkeUluamVjdGVkW2tleV0pIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoIWlzQnVmZmVyaW5nKSB7XG4gICAgLy8gV2Ugc2hvdWxkIG5ldmVyIGJlIGF1dG9tYXRpY2FsbHkgYnVmZmVyaW5nIG9uIHRoZSBzZXJ2ZXIgKG9yIGFueVxuICAgIC8vIHBsYWNlIHdpdGhvdXQgYSBkb2N1bWVudCksIHNvIGd1YXJkIGFnYWluc3QgdGhhdC5cbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgYXV0b21hdGljYWxseSBidWZmZXIgd2l0aG91dCBhIGRvY3VtZW50XCIpO1xuICAgIH0gLy8gSWYgd2UncmUgbm90IGFscmVhZHkgYnVmZmVyaW5nLCBzY2hlZHVsZSBhIGNhbGwgdG8gZmx1c2ggdGhlXG4gICAgLy8gY3VycmVudCBzdHlsZXMuXG5cblxuICAgIGlzQnVmZmVyaW5nID0gdHJ1ZTtcbiAgICBhc2FwKGZsdXNoVG9TdHlsZVRhZyk7XG4gIH1cblxuICAoX2luamVjdGlvbkJ1ZmZlciA9IGluamVjdGlvbkJ1ZmZlcikucHVzaC5hcHBseShfaW5qZWN0aW9uQnVmZmVyLCBfdG9Db25zdW1hYmxlQXJyYXkoZ2VuZXJhdGVkQ1NTKSk7XG5cbiAgYWxyZWFkeUluamVjdGVkW2tleV0gPSB0cnVlO1xufTtcblxudmFyIGluamVjdFN0eWxlT25jZSA9IGZ1bmN0aW9uIGluamVjdFN0eWxlT25jZShrZXlcbi8qIDogc3RyaW5nICovXG4sIHNlbGVjdG9yXG4vKiA6IHN0cmluZyAqL1xuLCBkZWZpbml0aW9uc1xuLyogOiBTaGVldERlZmluaXRpb25bXSAqL1xuLCB1c2VJbXBvcnRhbnRcbi8qIDogYm9vbGVhbiAqL1xuKSB7XG4gIHZhciBzZWxlY3RvckhhbmRsZXJzXG4gIC8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbiAgPSBhcmd1bWVudHMubGVuZ3RoID4gNCAmJiBhcmd1bWVudHNbNF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s0XSA6IFtdO1xuXG4gIGlmIChhbHJlYWR5SW5qZWN0ZWRba2V5XSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBnZW5lcmF0ZWQgPSBnZW5lcmF0ZUNTUyhzZWxlY3RvciwgZGVmaW5pdGlvbnMsIHNlbGVjdG9ySGFuZGxlcnMsIHN0cmluZ0hhbmRsZXJzLCB1c2VJbXBvcnRhbnQpO1xuICBpbmplY3RHZW5lcmF0ZWRDU1NPbmNlKGtleSwgZ2VuZXJhdGVkKTtcbn07XG52YXIgcmVzZXQgPSBmdW5jdGlvbiByZXNldCgpIHtcbiAgaW5qZWN0aW9uQnVmZmVyID0gW107XG4gIGFscmVhZHlJbmplY3RlZCA9IHt9O1xuICBpc0J1ZmZlcmluZyA9IGZhbHNlO1xuICBzdHlsZVRhZyA9IG51bGw7XG59O1xudmFyIHJlc2V0SW5qZWN0ZWRTdHlsZSA9IGZ1bmN0aW9uIHJlc2V0SW5qZWN0ZWRTdHlsZShrZXlcbi8qIDogc3RyaW5nICovXG4pIHtcbiAgZGVsZXRlIGFscmVhZHlJbmplY3RlZFtrZXldO1xufTtcbnZhciBnZXRCdWZmZXJlZFN0eWxlcyA9IGZ1bmN0aW9uIGdldEJ1ZmZlcmVkU3R5bGVzKCkge1xuICByZXR1cm4gaW5qZWN0aW9uQnVmZmVyO1xufTtcbnZhciBzdGFydEJ1ZmZlcmluZyA9IGZ1bmN0aW9uIHN0YXJ0QnVmZmVyaW5nKCkge1xuICBpZiAoaXNCdWZmZXJpbmcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgYnVmZmVyIHdoaWxlIGFscmVhZHkgYnVmZmVyaW5nXCIpO1xuICB9XG5cbiAgaXNCdWZmZXJpbmcgPSB0cnVlO1xufTtcblxudmFyIGZsdXNoVG9BcnJheSA9IGZ1bmN0aW9uIGZsdXNoVG9BcnJheSgpIHtcbiAgaXNCdWZmZXJpbmcgPSBmYWxzZTtcbiAgdmFyIHJldCA9IGluamVjdGlvbkJ1ZmZlcjtcbiAgaW5qZWN0aW9uQnVmZmVyID0gW107XG4gIHJldHVybiByZXQ7XG59O1xuXG52YXIgZmx1c2hUb1N0cmluZyA9IGZ1bmN0aW9uIGZsdXNoVG9TdHJpbmcoKSB7XG4gIHJldHVybiBmbHVzaFRvQXJyYXkoKS5qb2luKCcnKTtcbn07XG52YXIgZmx1c2hUb1N0eWxlVGFnID0gZnVuY3Rpb24gZmx1c2hUb1N0eWxlVGFnKCkge1xuICB2YXIgY3NzUnVsZXMgPSBmbHVzaFRvQXJyYXkoKTtcblxuICBpZiAoY3NzUnVsZXMubGVuZ3RoID4gMCkge1xuICAgIGluamVjdFN0eWxlVGFnKGNzc1J1bGVzKTtcbiAgfVxufTtcbnZhciBnZXRSZW5kZXJlZENsYXNzTmFtZXMgPSBmdW5jdGlvbiBnZXRSZW5kZXJlZENsYXNzTmFtZXMoKVxuLyogOiBzdHJpbmdbXSAqL1xue1xuICByZXR1cm4gT2JqZWN0LmtleXMoYWxyZWFkeUluamVjdGVkKTtcbn07XG52YXIgYWRkUmVuZGVyZWRDbGFzc05hbWVzID0gZnVuY3Rpb24gYWRkUmVuZGVyZWRDbGFzc05hbWVzKGNsYXNzTmFtZXNcbi8qIDogc3RyaW5nW10gKi9cbikge1xuICBjbGFzc05hbWVzLmZvckVhY2goZnVuY3Rpb24gKGNsYXNzTmFtZSkge1xuICAgIGFscmVhZHlJbmplY3RlZFtjbGFzc05hbWVdID0gdHJ1ZTtcbiAgfSk7XG59O1xuXG52YXIgaXNWYWxpZFN0eWxlRGVmaW5pdGlvbiA9IGZ1bmN0aW9uIGlzVmFsaWRTdHlsZURlZmluaXRpb24oZGVmXG4vKiA6IE9iamVjdCAqL1xuKSB7XG4gIHJldHVybiBcIl9kZWZpbml0aW9uXCIgaW4gZGVmICYmIFwiX25hbWVcIiBpbiBkZWYgJiYgXCJfbGVuXCIgaW4gZGVmO1xufTtcblxudmFyIHByb2Nlc3NTdHlsZURlZmluaXRpb25zID0gZnVuY3Rpb24gcHJvY2Vzc1N0eWxlRGVmaW5pdGlvbnMoc3R5bGVEZWZpbml0aW9uc1xuLyogOiBhbnlbXSAqL1xuLCBjbGFzc05hbWVCaXRzXG4vKiA6IHN0cmluZ1tdICovXG4sIGRlZmluaXRpb25CaXRzXG4vKiA6IE9iamVjdFtdICovXG4sIGxlbmd0aFxuLyogOiBudW1iZXIgKi9cbilcbi8qIDogbnVtYmVyICovXG57XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVEZWZpbml0aW9ucy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIC8vIEZpbHRlciBvdXQgZmFsc3kgdmFsdWVzIGZyb20gdGhlIGlucHV0LCB0byBhbGxvdyBmb3JcbiAgICAvLyBgY3NzKGEsIHRlc3QgJiYgYylgXG4gICAgaWYgKHN0eWxlRGVmaW5pdGlvbnNbaV0pIHtcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHN0eWxlRGVmaW5pdGlvbnNbaV0pKSB7XG4gICAgICAgIC8vIFdlJ3ZlIGVuY291bnRlcmVkIGFuIGFycmF5LCBzbyBsZXQncyByZWN1cnNlXG4gICAgICAgIGxlbmd0aCArPSBwcm9jZXNzU3R5bGVEZWZpbml0aW9ucyhzdHlsZURlZmluaXRpb25zW2ldLCBjbGFzc05hbWVCaXRzLCBkZWZpbml0aW9uQml0cywgbGVuZ3RoKTtcbiAgICAgIH0gZWxzZSBpZiAoaXNWYWxpZFN0eWxlRGVmaW5pdGlvbihzdHlsZURlZmluaXRpb25zW2ldKSkge1xuICAgICAgICBjbGFzc05hbWVCaXRzLnB1c2goc3R5bGVEZWZpbml0aW9uc1tpXS5fbmFtZSk7XG4gICAgICAgIGRlZmluaXRpb25CaXRzLnB1c2goc3R5bGVEZWZpbml0aW9uc1tpXS5fZGVmaW5pdGlvbik7XG4gICAgICAgIGxlbmd0aCArPSBzdHlsZURlZmluaXRpb25zW2ldLl9sZW47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIFN0eWxlIERlZmluaXRpb246IFN0eWxlcyBzaG91bGQgYmUgZGVmaW5lZCB1c2luZyB0aGUgU3R5bGVTaGVldC5jcmVhdGUgbWV0aG9kLlwiKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbGVuZ3RoO1xufTtcbi8qKlxuICogSW5qZWN0IHN0eWxlcyBhc3NvY2lhdGVkIHdpdGggdGhlIHBhc3NlZCBzdHlsZSBkZWZpbml0aW9uIG9iamVjdHMsIGFuZCByZXR1cm5cbiAqIGFuIGFzc29jaWF0ZWQgQ1NTIGNsYXNzIG5hbWUuXG4gKlxuICogQHBhcmFtIHtib29sZWFufSB1c2VJbXBvcnRhbnQgSWYgdHJ1ZSwgd2lsbCBhcHBlbmQgIWltcG9ydGFudCB0byBnZW5lcmF0ZWRcbiAqICAgICBDU1Mgb3V0cHV0LiBlLmcuIHtjb2xvcjogcmVkfSAtPiBcImNvbG9yOiByZWQgIWltcG9ydGFudFwiLlxuICogQHBhcmFtIHsoT2JqZWN0fE9iamVjdFtdKVtdfSBzdHlsZURlZmluaXRpb25zIHN0eWxlIGRlZmluaXRpb24gb2JqZWN0cywgb3JcbiAqICAgICBhcmJpdHJhcmlseSBuZXN0ZWQgYXJyYXlzIG9mIHRoZW0sIGFzIHJldHVybmVkIGFzIHByb3BlcnRpZXMgb2YgdGhlXG4gKiAgICAgcmV0dXJuIHZhbHVlIG9mIFN0eWxlU2hlZXQuY3JlYXRlKCkuXG4gKi9cblxuXG52YXIgaW5qZWN0QW5kR2V0Q2xhc3NOYW1lID0gZnVuY3Rpb24gaW5qZWN0QW5kR2V0Q2xhc3NOYW1lKHVzZUltcG9ydGFudFxuLyogOiBib29sZWFuICovXG4sIHN0eWxlRGVmaW5pdGlvbnNcbi8qIDogTWF5YmVTaGVldERlZmluaXRpb25bXSAqL1xuLCBzZWxlY3RvckhhbmRsZXJzXG4vKiA6IFNlbGVjdG9ySGFuZGxlcltdICovXG4pXG4vKiA6IHN0cmluZyAqL1xue1xuICB2YXIgY2xhc3NOYW1lQml0cyA9IFtdO1xuICB2YXIgZGVmaW5pdGlvbkJpdHMgPSBbXTsgLy8gTXV0YXRlcyBjbGFzc05hbWVCaXRzIGFuZCBkZWZpbml0aW9uQml0cyBhbmQgcmV0dXJucyBhIGxlbmd0aCB3aGljaCB3ZVxuICAvLyB3aWxsIGFwcGVuZCB0byB0aGUgaGFzaCB0byBkZWNyZWFzZSB0aGUgY2hhbmNlIG9mIGhhc2ggY29sbGlzaW9ucy5cblxuICB2YXIgbGVuZ3RoID0gcHJvY2Vzc1N0eWxlRGVmaW5pdGlvbnMoc3R5bGVEZWZpbml0aW9ucywgY2xhc3NOYW1lQml0cywgZGVmaW5pdGlvbkJpdHMsIDApOyAvLyBCcmVhayBpZiB0aGVyZSBhcmVuJ3QgYW55IHZhbGlkIHN0eWxlcy5cblxuICBpZiAoY2xhc3NOYW1lQml0cy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gXCJcIjtcbiAgfVxuXG4gIHZhciBjbGFzc05hbWU7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgICBjbGFzc05hbWUgPSBjbGFzc05hbWVCaXRzLmxlbmd0aCA9PT0gMSA/IFwiX1wiLmNvbmNhdChjbGFzc05hbWVCaXRzWzBdKSA6IFwiX1wiLmNvbmNhdChoYXNoU3RyaW5nKGNsYXNzTmFtZUJpdHMuam9pbigpKSkuY29uY2F0KChsZW5ndGggJSAzNikudG9TdHJpbmcoMzYpKTtcbiAgfSBlbHNlIHtcbiAgICBjbGFzc05hbWUgPSBjbGFzc05hbWVCaXRzLmpvaW4oXCItb19PLVwiKTtcbiAgfVxuXG4gIGluamVjdFN0eWxlT25jZShjbGFzc05hbWUsIFwiLlwiLmNvbmNhdChjbGFzc05hbWUpLCBkZWZpbml0aW9uQml0cywgdXNlSW1wb3J0YW50LCBzZWxlY3RvckhhbmRsZXJzKTtcbiAgcmV0dXJuIGNsYXNzTmFtZTtcbn07XG5cbi8qIDo6XG5pbXBvcnQgdHlwZSB7IFNlbGVjdG9ySGFuZGxlciB9IGZyb20gJy4vZ2VuZXJhdGUuanMnO1xuZXhwb3J0IHR5cGUgU2hlZXREZWZpbml0aW9uID0geyBbaWQ6c3RyaW5nXTogYW55IH07XG5leHBvcnQgdHlwZSBTaGVldERlZmluaXRpb25zID0gU2hlZXREZWZpbml0aW9uIHwgU2hlZXREZWZpbml0aW9uW107XG50eXBlIFJlbmRlckZ1bmN0aW9uID0gKCkgPT4gc3RyaW5nO1xudHlwZSBFeHRlbnNpb24gPSB7XG4gICAgc2VsZWN0b3JIYW5kbGVyOiBTZWxlY3RvckhhbmRsZXJcbn07XG5leHBvcnQgdHlwZSBNYXliZVNoZWV0RGVmaW5pdGlvbiA9IFNoZWV0RGVmaW5pdGlvbiB8IGZhbHNlIHwgbnVsbCB8IHZvaWRcbiovXG5cbnZhciB1bm1pbmlmaWVkSGFzaEZuID0gZnVuY3Rpb24gdW5taW5pZmllZEhhc2hGbihzdHJcbi8qIDogc3RyaW5nICovXG4sIGtleVxuLyogOiBzdHJpbmcgKi9cbikge1xuICByZXR1cm4gXCJcIi5jb25jYXQoa2V5LCBcIl9cIikuY29uY2F0KGhhc2hTdHJpbmcoc3RyKSk7XG59OyAvLyBTdHlsZVNoZWV0LmNyZWF0ZSBpcyBpbiBhIGhvdCBwYXRoIHNvIHdlIHdhbnQgdG8ga2VlcCBhcyBtdWNoIGxvZ2ljIG91dCBvZiBpdFxuLy8gYXMgcG9zc2libGUuIFNvLCB3ZSBmaWd1cmUgb3V0IHdoaWNoIGhhc2ggZnVuY3Rpb24gdG8gdXNlIG9uY2UsIGFuZCBvbmx5XG4vLyBzd2l0Y2ggaXQgb3V0IHZpYSBtaW5pZnkoKSBhcyBuZWNlc3NhcnkuXG4vL1xuLy8gVGhpcyBpcyBpbiBhbiBleHBvcnRlZCBmdW5jdGlvbiB0byBtYWtlIGl0IGVhc2llciB0byB0ZXN0LlxuXG5cbnZhciBpbml0aWFsSGFzaEZuID0gZnVuY3Rpb24gaW5pdGlhbEhhc2hGbigpIHtcbiAgcmV0dXJuIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgPyBoYXNoU3RyaW5nIDogdW5taW5pZmllZEhhc2hGbjtcbn07XG52YXIgaGFzaEZuID0gaW5pdGlhbEhhc2hGbigpO1xudmFyIFN0eWxlU2hlZXQgPSB7XG4gIGNyZWF0ZTogZnVuY3Rpb24gY3JlYXRlKHNoZWV0RGVmaW5pdGlvblxuICAvKiA6IFNoZWV0RGVmaW5pdGlvbiAqL1xuICApXG4gIC8qIDogT2JqZWN0ICovXG4gIHtcbiAgICB2YXIgbWFwcGVkU2hlZXREZWZpbml0aW9uID0ge307XG4gICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhzaGVldERlZmluaXRpb24pO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICB2YXIga2V5ID0ga2V5c1tpXTtcbiAgICAgIHZhciB2YWwgPSBzaGVldERlZmluaXRpb25ba2V5XTtcbiAgICAgIHZhciBzdHJpbmdWYWwgPSBKU09OLnN0cmluZ2lmeSh2YWwpO1xuICAgICAgbWFwcGVkU2hlZXREZWZpbml0aW9uW2tleV0gPSB7XG4gICAgICAgIF9sZW46IHN0cmluZ1ZhbC5sZW5ndGgsXG4gICAgICAgIF9uYW1lOiBoYXNoRm4oc3RyaW5nVmFsLCBrZXkpLFxuICAgICAgICBfZGVmaW5pdGlvbjogdmFsXG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiBtYXBwZWRTaGVldERlZmluaXRpb247XG4gIH0sXG4gIHJlaHlkcmF0ZTogZnVuY3Rpb24gcmVoeWRyYXRlKCkge1xuICAgIHZhciByZW5kZXJlZENsYXNzTmFtZXNcbiAgICAvKiA6IHN0cmluZ1tdICovXG4gICAgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IFtdO1xuICAgIGFkZFJlbmRlcmVkQ2xhc3NOYW1lcyhyZW5kZXJlZENsYXNzTmFtZXMpO1xuICB9XG59O1xuLyoqXG4gKiBVdGlsaXRpZXMgZm9yIHVzaW5nIEFwaHJvZGl0ZSBzZXJ2ZXItc2lkZS5cbiAqXG4gKiBUaGlzIGNhbiBiZSBtaW5pZmllZCBvdXQgaW4gY2xpZW50LW9ubHkgYnVuZGxlcyBieSByZXBsYWNpbmcgYHR5cGVvZiB3aW5kb3dgXG4gKiB3aXRoIGBcIm9iamVjdFwiYCwgZS5nLiB2aWEgV2VicGFjaydzIERlZmluZVBsdWdpbjpcbiAqXG4gKiAgIG5ldyB3ZWJwYWNrLkRlZmluZVBsdWdpbih7XG4gKiAgICAgXCJ0eXBlb2Ygd2luZG93XCI6IEpTT04uc3RyaW5naWZ5KFwib2JqZWN0XCIpXG4gKiAgIH0pXG4gKi9cblxudmFyIFN0eWxlU2hlZXRTZXJ2ZXIgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IG51bGwgOiB7XG4gIHJlbmRlclN0YXRpYzogZnVuY3Rpb24gcmVuZGVyU3RhdGljKHJlbmRlckZ1bmNcbiAgLyogOiBSZW5kZXJGdW5jdGlvbiAqL1xuICApIHtcbiAgICByZXNldCgpO1xuICAgIHN0YXJ0QnVmZmVyaW5nKCk7XG4gICAgdmFyIGh0bWwgPSByZW5kZXJGdW5jKCk7XG4gICAgdmFyIGNzc0NvbnRlbnQgPSBmbHVzaFRvU3RyaW5nKCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIGh0bWw6IGh0bWwsXG4gICAgICBjc3M6IHtcbiAgICAgICAgY29udGVudDogY3NzQ29udGVudCxcbiAgICAgICAgcmVuZGVyZWRDbGFzc05hbWVzOiBnZXRSZW5kZXJlZENsYXNzTmFtZXMoKVxuICAgICAgfVxuICAgIH07XG4gIH1cbn07XG4vKipcbiAqIFV0aWxpdGllcyBmb3IgdXNpbmcgQXBocm9kaXRlIGluIHRlc3RzLlxuICpcbiAqIE5vdCBtZWFudCB0byBiZSB1c2VkIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIFN0eWxlU2hlZXRUZXN0VXRpbHMgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nID8gbnVsbCA6IHtcbiAgLyoqXG4gICogUHJldmVudCBzdHlsZXMgZnJvbSBiZWluZyBpbmplY3RlZCBpbnRvIHRoZSBET00uXG4gICpcbiAgKiBUaGlzIGlzIHVzZWZ1bCBpbiBzaXR1YXRpb25zIHdoZXJlIHlvdSdkIGxpa2UgdG8gdGVzdCByZW5kZXJpbmcgVUlcbiAgKiBjb21wb25lbnRzIHdoaWNoIHVzZSBBcGhyb2RpdGUgd2l0aG91dCBhbnkgb2YgdGhlIHNpZGUtZWZmZWN0cyBvZlxuICAqIEFwaHJvZGl0ZSBoYXBwZW5pbmcuIFBhcnRpY3VsYXJseSB1c2VmdWwgZm9yIHRlc3RpbmcgdGhlIG91dHB1dCBvZlxuICAqIGNvbXBvbmVudHMgd2hlbiB5b3UgaGF2ZSBubyBET00sIGUuZy4gdGVzdGluZyBpbiBOb2RlIHdpdGhvdXQgYSBmYWtlIERPTS5cbiAgKlxuICAqIFNob3VsZCBiZSBwYWlyZWQgd2l0aCBhIHN1YnNlcXVlbnQgY2FsbCB0b1xuICAqIGNsZWFyQnVmZmVyQW5kUmVzdW1lU3R5bGVJbmplY3Rpb24uXG4gICovXG4gIHN1cHByZXNzU3R5bGVJbmplY3Rpb246IGZ1bmN0aW9uIHN1cHByZXNzU3R5bGVJbmplY3Rpb24oKSB7XG4gICAgcmVzZXQoKTtcbiAgICBzdGFydEJ1ZmZlcmluZygpO1xuICB9LFxuXG4gIC8qKlxuICAqIE9wcG9zaXRlIG1ldGhvZCBvZiBwcmV2ZW50U3R5bGVJbmplY3QuXG4gICovXG4gIGNsZWFyQnVmZmVyQW5kUmVzdW1lU3R5bGVJbmplY3Rpb246IGZ1bmN0aW9uIGNsZWFyQnVmZmVyQW5kUmVzdW1lU3R5bGVJbmplY3Rpb24oKSB7XG4gICAgcmVzZXQoKTtcbiAgfSxcblxuICAvKipcbiAgKiBSZXR1cm5zIGEgc3RyaW5nIG9mIGJ1ZmZlcmVkIHN0eWxlcyB3aGljaCBoYXZlIG5vdCBiZWVuIGZsdXNoZWRcbiAgKlxuICAqIEByZXR1cm5zIHtzdHJpbmd9ICBCdWZmZXIgb2Ygc3R5bGVzIHdoaWNoIGhhdmUgbm90IHlldCBiZWVuIGZsdXNoZWQuXG4gICovXG4gIGdldEJ1ZmZlcmVkU3R5bGVzOiBmdW5jdGlvbiBnZXRCdWZmZXJlZFN0eWxlcyQxKCkge1xuICAgIHJldHVybiBnZXRCdWZmZXJlZFN0eWxlcygpO1xuICB9XG59O1xuLyoqXG4gKiBHZW5lcmF0ZSB0aGUgQXBocm9kaXRlIEFQSSBleHBvcnRzLCB3aXRoIGdpdmVuIGBzZWxlY3RvckhhbmRsZXJzYCBhbmRcbiAqIGB1c2VJbXBvcnRhbnRgIHN0YXRlLlxuICovXG5cbmZ1bmN0aW9uIG1ha2VFeHBvcnRzKHVzZUltcG9ydGFudFxuLyogOiBib29sZWFuICovXG4pIHtcbiAgdmFyIHNlbGVjdG9ySGFuZGxlcnNcbiAgLyogOiBTZWxlY3RvckhhbmRsZXJbXSAqL1xuICA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnM7XG4gIHJldHVybiB7XG4gICAgU3R5bGVTaGVldDogX29iamVjdFNwcmVhZCh7fSwgU3R5bGVTaGVldCwge1xuICAgICAgLyoqXG4gICAgICAgKiBSZXR1cm5zIGEgdmVyc2lvbiBvZiB0aGUgZXhwb3J0cyBvZiBBcGhyb2RpdGUgKGkuZS4gYW4gb2JqZWN0XG4gICAgICAgKiB3aXRoIGBjc3NgIGFuZCBgU3R5bGVTaGVldGAgcHJvcGVydGllcykgd2hpY2ggaGF2ZSBzb21lXG4gICAgICAgKiBleHRlbnNpb25zIGluY2x1ZGVkLlxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7QXJyYXkuPE9iamVjdD59IGV4dGVuc2lvbnM6IEFuIGFycmF5IG9mIGV4dGVuc2lvbnMgdG9cbiAgICAgICAqICAgICBhZGQgdG8gdGhpcyBpbnN0YW5jZSBvZiBBcGhyb2RpdGUuIEVhY2ggb2JqZWN0IHNob3VsZCBoYXZlIGFcbiAgICAgICAqICAgICBzaW5nbGUgcHJvcGVydHkgb24gaXQsIGRlZmluaW5nIHdoaWNoIGtpbmQgb2YgZXh0ZW5zaW9uIHRvXG4gICAgICAgKiAgICAgYWRkLlxuICAgICAgICogQHBhcmFtIHtTZWxlY3RvckhhbmRsZXJ9IFtleHRlbnNpb25zW10uc2VsZWN0b3JIYW5kbGVyXTogQVxuICAgICAgICogICAgIHNlbGVjdG9yIGhhbmRsZXIgZXh0ZW5zaW9uLiBTZWUgYGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzYCBpblxuICAgICAgICogICAgIGdlbmVyYXRlLmpzLlxuICAgICAgICpcbiAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9IEFuIG9iamVjdCBjb250YWluaW5nIHRoZSBleHBvcnRzIG9mIHRoZSBuZXdcbiAgICAgICAqICAgICBpbnN0YW5jZSBvZiBBcGhyb2RpdGUuXG4gICAgICAgKi9cbiAgICAgIGV4dGVuZDogZnVuY3Rpb24gZXh0ZW5kKGV4dGVuc2lvbnNcbiAgICAgIC8qIDogRXh0ZW5zaW9uW10gKi9cbiAgICAgICkge1xuICAgICAgICB2YXIgZXh0ZW5zaW9uU2VsZWN0b3JIYW5kbGVycyA9IGV4dGVuc2lvbnMgLy8gUHVsbCBvdXQgZXh0ZW5zaW9ucyB3aXRoIGEgc2VsZWN0b3JIYW5kbGVyIHByb3BlcnR5XG4gICAgICAgIC5tYXAoZnVuY3Rpb24gKGV4dGVuc2lvbikge1xuICAgICAgICAgIHJldHVybiBleHRlbnNpb24uc2VsZWN0b3JIYW5kbGVyO1xuICAgICAgICB9KSAvLyBSZW1vdmUgbnVsbHMgKGkuZS4gZXh0ZW5zaW9ucyB3aXRob3V0IGEgc2VsZWN0b3JIYW5kbGVyIHByb3BlcnR5KS5cbiAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoaGFuZGxlcikge1xuICAgICAgICAgIHJldHVybiBoYW5kbGVyO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIG1ha2VFeHBvcnRzKHVzZUltcG9ydGFudCwgc2VsZWN0b3JIYW5kbGVycy5jb25jYXQoZXh0ZW5zaW9uU2VsZWN0b3JIYW5kbGVycykpO1xuICAgICAgfVxuICAgIH0pLFxuICAgIFN0eWxlU2hlZXRTZXJ2ZXI6IFN0eWxlU2hlZXRTZXJ2ZXIsXG4gICAgU3R5bGVTaGVldFRlc3RVdGlsczogU3R5bGVTaGVldFRlc3RVdGlscyxcbiAgICBtaW5pZnk6IGZ1bmN0aW9uIG1pbmlmeShzaG91bGRNaW5pZnlcbiAgICAvKiA6IGJvb2xlYW4gKi9cbiAgICApIHtcbiAgICAgIGhhc2hGbiA9IHNob3VsZE1pbmlmeSA/IGhhc2hTdHJpbmcgOiB1bm1pbmlmaWVkSGFzaEZuO1xuICAgIH0sXG4gICAgY3NzOiBmdW5jdGlvbiBjc3MoKVxuICAgIC8qIDogTWF5YmVTaGVldERlZmluaXRpb25bXSAqL1xuICAgIHtcbiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBzdHlsZURlZmluaXRpb25zID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgICBzdHlsZURlZmluaXRpb25zW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gaW5qZWN0QW5kR2V0Q2xhc3NOYW1lKHVzZUltcG9ydGFudCwgc3R5bGVEZWZpbml0aW9ucywgc2VsZWN0b3JIYW5kbGVycyk7XG4gICAgfSxcbiAgICBmbHVzaFRvU3R5bGVUYWc6IGZsdXNoVG9TdHlsZVRhZyxcbiAgICBpbmplY3RBbmRHZXRDbGFzc05hbWU6IGluamVjdEFuZEdldENsYXNzTmFtZSxcbiAgICBkZWZhdWx0U2VsZWN0b3JIYW5kbGVyczogZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnMsXG4gICAgcmVzZXQ6IHJlc2V0LFxuICAgIHJlc2V0SW5qZWN0ZWRTdHlsZTogcmVzZXRJbmplY3RlZFN0eWxlXG4gIH07XG59XG5cbmV4cG9ydCB7IG1ha2VFeHBvcnRzIGFzIGEgfTtcbiIsImltcG9ydCB7IGEgYXMgbWFrZUV4cG9ydHMgfSBmcm9tICcuL2NodW5rLWZlYmNlNDZiLmpzJztcbmltcG9ydCAnc3RyaW5nLWhhc2gnO1xuaW1wb3J0ICdhc2FwJztcblxudmFyIHVzZUltcG9ydGFudCA9IHRydWU7IC8vIEFkZCAhaW1wb3J0YW50IHRvIGFsbCBzdHlsZSBkZWZpbml0aW9uc1xuXG52YXIgQXBocm9kaXRlID0gbWFrZUV4cG9ydHModXNlSW1wb3J0YW50KTtcbnZhciBTdHlsZVNoZWV0ID0gQXBocm9kaXRlLlN0eWxlU2hlZXQsXG4gICAgU3R5bGVTaGVldFNlcnZlciA9IEFwaHJvZGl0ZS5TdHlsZVNoZWV0U2VydmVyLFxuICAgIFN0eWxlU2hlZXRUZXN0VXRpbHMgPSBBcGhyb2RpdGUuU3R5bGVTaGVldFRlc3RVdGlscyxcbiAgICBjc3MgPSBBcGhyb2RpdGUuY3NzLFxuICAgIG1pbmlmeSA9IEFwaHJvZGl0ZS5taW5pZnksXG4gICAgZmx1c2hUb1N0eWxlVGFnID0gQXBocm9kaXRlLmZsdXNoVG9TdHlsZVRhZyxcbiAgICBpbmplY3RBbmRHZXRDbGFzc05hbWUgPSBBcGhyb2RpdGUuaW5qZWN0QW5kR2V0Q2xhc3NOYW1lLFxuICAgIGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzID0gQXBocm9kaXRlLmRlZmF1bHRTZWxlY3RvckhhbmRsZXJzLFxuICAgIHJlc2V0ID0gQXBocm9kaXRlLnJlc2V0LFxuICAgIHJlc2V0SW5qZWN0ZWRTdHlsZSA9IEFwaHJvZGl0ZS5yZXNldEluamVjdGVkU3R5bGU7XG5cbmV4cG9ydCB7IFN0eWxlU2hlZXQsIFN0eWxlU2hlZXRTZXJ2ZXIsIFN0eWxlU2hlZXRUZXN0VXRpbHMsIGNzcywgbWluaWZ5LCBmbHVzaFRvU3R5bGVUYWcsIGluamVjdEFuZEdldENsYXNzTmFtZSwgZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnMsIHJlc2V0LCByZXNldEluamVjdGVkU3R5bGUgfTtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuaW1wb3J0IHsgZ2V0Rm9vdGVyQ29weSwgZ2V0RnVsbFllYXIgfSBmcm9tICcuLi91dGlscy91dGlscyc7XHJcbmltcG9ydCB7IFN0eWxlU2hlZXQsIGNzcyB9IGZyb20gJ2FwaHJvZGl0ZSc7XHJcblxyXG5mdW5jdGlvbiBGb290ZXIgKCkge1xyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5mb290ZXIpfT5cclxuICAgICAgPHAgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLnBhcmFncmFwaGUpfT5Db3B5cmlnaHQge2dldEZ1bGxZZWFyKCl9IC0ge2dldEZvb3RlckNvcHkoKX08L3A+XHJcbiAgICA8L2Rpdj5cclxuICApXHJcbn1cclxuXHJcbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcclxuICBmb290ZXI6IHtcclxuICAgIGJvdHRvbTogMCxcclxuICAgIGJvcmRlclRvcDogJzNweCBzb2xpZCAjZTE0ODRjJyxcclxuICAgIHdpZHRoOiAnMTAwJScsXHJcbiAgfSxcclxuICBwYXJhZ3JhcGhlOiB7XHJcbiAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxyXG4gICAgZm9udFN0eWxlOiAnaXRhbGljJyxcclxuICB9LFxyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEZvb3RlcjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZmY1MDFkODI3YzlmNGI2ZDNhYzQ1NWM1YWU1NjI0YjguanBnXCI7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IGxvZ28gZnJvbSAnLi4vYXNzZXRzL2hvbGJlcnRvbi1sb2dvLmpwZyc7XHJcbmltcG9ydCB7IFN0eWxlU2hlZXQsIGNzcyB9IGZyb20gJ2FwaHJvZGl0ZSc7XHJcblxyXG5cclxuY29uc3QgSGVhZGVyID0gKCkgPT4ge1xyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5oZWFkZXIpfT5cclxuICAgICAgPGltZyBjbGFzc05hbWU9e2NzcyhzdHlsZXMuaW1hZ2UpfSBzcmM9e2xvZ299IGFsdD17XCJIb2xiZXJ0b24gbG9nb1wifSAvPlxyXG4gICAgICA8aDEgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLnRpdGxlKX0+U2Nob29sIGRhc2hib2FyZDwvaDE+XHJcbiAgICA8L2Rpdj5cclxuICApXHJcbn1cclxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xyXG4gIGhlYWRlcjoge1xyXG4gICAgZGlzcGxheTogJ2ZsZXgnLFxyXG4gIH0sXHJcbiAgaW1hZ2U6IHtcclxuICAgIHdpZHRoOiAnMjAwcHgnLFxyXG4gICAgaGVpZ2h0OiAnMjAwcHgnLFxyXG4gIH0sXHJcbiAgdGl0bGU6IHtcclxuICAgIGNvbG9yOiAnI2UxNDg0YycsXHJcbiAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXHJcbiAgICBtYXJnaW46ICdhdXRvIGF1dG8gYXV0byAwJyxcclxuICB9LFxyXG59KTtcclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBIZWFkZXI7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgU3R5bGVTaGVldCwgY3NzIH0gZnJvbSAnYXBocm9kaXRlJztcclxuXHJcblxyXG5mdW5jdGlvbiBMb2dpbiAoKSB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lPVwiQXBwXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJBcHAtYm9keVwiPlxyXG4gICAgICAgICAgICA8cCBjbGFzc05hbWU9e2NzcyhzdHlsZXMudGV4dCl9PkxvZ2luIHRvIGFjY2VzcyB0aGUgZnVsbCBkYXNoYm9hcmQ8L3A+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmZvcm0pfT5cclxuICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmxhYmVsQW5kSW5wdXQpfSBodG1sRm9yPXtcImVtYWlsXCJ9PkVtYWlsOjwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgPGlucHV0IGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5sYWJlbEFuZElucHV0KX0gdHlwZT17XCJlbWFpbFwifSBpZD17XCJlbWFpbFwifSBuYW1lPXtcImVtYWlsXCJ9PjwvaW5wdXQ+XHJcbiAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5sYWJlbEFuZElucHV0KX0gaHRtbEZvcj17XCJwYXNzd29yZFwifT5QYXNzd29yZDo8L2xhYmVsPlxyXG4gICAgICAgICAgICAgIDxpbnB1dCBjbGFzc05hbWU9e2NzcyhzdHlsZXMubGFiZWxBbmRJbnB1dCl9IHR5cGU9e1wicGFzc3dvcmRcIn0gaWQ9e1wicGFzc3dvcmRcIn0gbmFtZT17XCJwYXNzd29yZFwifT48L2lucHV0PlxyXG4gICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmJ1dHRvbil9IHR5cGU9e1wic3VibWl0XCJ9Pk9LPC9idXR0b24+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICApXHJcbn1cclxuXHJcbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcclxuICB0ZXh0OiB7XHJcbiAgICBtYXJnaW46ICczcmVtIDAgMCAycmVtJyxcclxuICB9LFxyXG4gIGZvcm06IHtcclxuICAgIGRpc3BsYXk6ICdmbGV4JyxcclxuICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLFxyXG4gICAgbWFyZ2luOiAnMXJlbSAwIDAgMnJlbScsXHJcbiAgfSxcclxuICBsYWJlbEFuZElucHV0OiB7XHJcbiAgICBtYXJnaW46ICcwIDFyZW0gMCAwJyxcclxuICB9LFxyXG4gIGJ1dHRvbjoge1xyXG4gICAgd2lkdGggOiAnNDBweCcsXHJcbiAgICBwYWRkaW5nOicxMHB4IDIwcHgnLFxyXG4gICAgY29sb3I6ICdibGFjaycsXHJcbiAgICBiYWNrZ3JvdW5kQ29sb3I6J3doaXRlJyxcclxuICAgIGJvcmRlcjogJzNweCBzb2xpZCAgZ29sZCcsXHJcbiAgICBib3JkZXJSYWRpdXM6ICcycHgnXHJcbiAgfVxyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IExvZ2luOyIsImltcG9ydCBSZWFjdCwgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBjc3MgfSBmcm9tICdhcGhyb2RpdGUnO1xyXG5cclxuY29uc3QgTm90aWZpY2F0aW9uSXRlbSA9ICh7IHR5cGUsIGh0bWwsIHZhbHVlLCBtYXJrQXNSZWFkLCBpZCB9KSA9PiB7XHJcbiAgY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xyXG4gICAgZGVmYXVsdDoge1xyXG4gICAgICBjb2xvcjogJ2JsdWUnLFxyXG4gICAgfSxcclxuICAgIHVyZ2VudDoge1xyXG4gICAgICBjb2xvcjogJ3JlZCcsXHJcbiAgICB9LFxyXG4gICAgc21hbGxMaXN0OiB7XHJcbiAgICAgICdAbWVkaWEgKG1heC13aWR0aDogOTAwcHgpJzoge1xyXG4gICAgICAgIHBhZGRpbmc6ICcxMHB4IDhweCcsXHJcbiAgICAgICAgYm9yZGVyQm90dG9tOiAnc29saWQgYmxhY2sgMXB4JyxcclxuICAgICAgICBsaXN0U3R5bGU6ICdub25lJyxcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICBjb25zdCBsaVByb3BzID0gdXNlTWVtbygoKSA9PiB7XHJcbiAgICBjb25zdCBwcm9wcyA9IHsgJ2RhdGEtbm90aWZpY2F0aW9uLXR5cGUnOiB0eXBlIH07XHJcbiAgICBpZiAoaHRtbCkgcHJvcHMuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgPSBodG1sO1xyXG4gICAgcmV0dXJuIHByb3BzO1xyXG4gIH0sIFt0eXBlLCBodG1sXSk7XHJcblxyXG4gIGNvbnN0IGNvbG9yVHlwZSA9IHN0eWxlc1t0eXBlXSB8fCBzdHlsZXMuZGVmYXVsdDtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxsaSB7Li4ubGlQcm9wc30gY2xhc3NOYW1lPXtjc3MoY29sb3JUeXBlLCBzdHlsZXMuc21hbGxMaXN0KX0gb25DbGljaz17KCkgPT4geyAobWFya0FzUmVhZChpZCkpIH19Pnt2YWx1ZX08L2xpPlxyXG4gIClcclxufVxyXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XHJcbiAgZGVmYXVsdDoge1xyXG4gICAgY29sb3I6ICdibHVlJyxcclxuICB9LFxyXG4gIHVyZ2VudDoge1xyXG4gICAgY29sb3I6ICdyZWQnLFxyXG4gIH0sXHJcbiAgc21hbGxMaXN0OiB7XHJcbiAgICAnQG1lZGlhIChtYXgtd2lkdGg6IDkwMHB4KSc6IHtcclxuICAgICAgcGFkZGluZzogJzEwcHggOHB4JyxcclxuICAgICAgYm9yZGVyQm90dG9tOiAnc29saWQgYmxhY2sgMXB4JyxcclxuICAgICAgbGlzdFN0eWxlOiAnbm9uZScsXHJcbiAgICB9XHJcbiAgfVxyXG59KTtcclxuXHJcblxyXG5Ob3RpZmljYXRpb25JdGVtLnByb3BUeXBlcyA9IHtcclxuICBpZDogUHJvcFR5cGVzLm51bWJlcixcclxuICBodG1sOiBQcm9wVHlwZXMuc2hhcGUoe1xyXG4gICAgX19odG1sOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gIH0pLFxyXG4gIHR5cGU6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgdmFsdWU6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgbWFya0FzUmVhZDogUHJvcFR5cGVzLmZ1bmMsXHJcbn07XHJcblxyXG5Ob3RpZmljYXRpb25JdGVtLmRlZmF1bHRQcm9wcyA9IHtcclxuICB0eXBlOiAnZGVmYXVsdCcsXHJcbiAgbWFya0FzUmVhZDogKCkgPT4ge30sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBOb3RpZmljYXRpb25JdGVtO1xyXG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5cclxuY29uc3QgTm90aWZpY2F0aW9uSXRlbVNoYXBlID0gUHJvcFR5cGVzLnNoYXBlKHtcclxuICBpZDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxyXG4gIHR5cGU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcclxuICB2YWx1ZTogUHJvcFR5cGVzLnN0cmluZyxcclxuICBodG1sOiBQcm9wVHlwZXMuc2hhcGUoe1xyXG4gICAgX19odG1sOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gIH0pLFxyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IE5vdGlmaWNhdGlvbkl0ZW1TaGFwZTtcclxuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuaW1wb3J0IHsgU3R5bGVTaGVldCwgY3NzIH0gZnJvbSAnYXBocm9kaXRlJzsgIC8vIE1ha2Ugc3VyZSB0byBpbXBvcnQgU3R5bGVTaGVldCBhbmQgY3NzXHJcbmltcG9ydCBOb3RpZmljYXRpb25JdGVtIGZyb20gJy4uL05vdGlmaWNhdGlvbnMvTm90aWZpY2F0aW9uSXRlbSc7XHJcbmltcG9ydCBOb3RpZmljYXRpb25JdGVtU2hhcGUgZnJvbSAnLi9Ob3RpZmljYXRpb25JdGVtU2hhcGUnO1xyXG5pbXBvcnQgeyBnZXRMYXRlc3ROb3RpZmljYXRpb24gfSBmcm9tICcuLi91dGlscy91dGlscyc7XHJcbmltcG9ydCBXaXRoTG9nZ2luZyBmcm9tICcuLi9IT0MvV2l0aExvZ2dpbmcnO1xyXG5cclxuY2xhc3MgTm90aWZpY2F0aW9ucyBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcclxuICAgIHN1cGVyKHByb3BzKTtcclxuICAgIHRoaXMubWFya0FzUmVhZCA9IHRoaXMubWFya0FzUmVhZC5iaW5kKHRoaXMpO1xyXG4gIH1cclxuXHJcbiAgc2hvdWxkQ29tcG9uZW50VXBkYXRlKG5leHRQcm9wcykge1xyXG4gICAgLy8gT25seSB1cGRhdGUgaWYgdGhlIGxlbmd0aCBvZiB0aGUgbmV3IGxpc3ROb3RpZmljYXRpb25zIGlzIGxvbmdlciB0aGFuIHRoZSBjdXJyZW50IG9uZVxyXG4gICAgcmV0dXJuIG5leHRQcm9wcy5saXN0Tm90aWZpY2F0aW9ucy5sZW5ndGggPiB0aGlzLnByb3BzLmxpc3ROb3RpZmljYXRpb25zLmxlbmd0aDtcclxuICB9XHJcblxyXG4gIG1hcmtBc1JlYWQoaWQpIHtcclxuICAgIGNvbnNvbGUubG9nKGBOb3RpZmljYXRpb24gJHtpZH0gaGFzIGJlZW4gbWFya2VkIGFzIHJlYWRgKTtcclxuICB9XHJcblxyXG4gIHJlbmRlcigpIHtcclxuICAgIGNvbnN0IHsgZGlzcGxheURyYXdlciwgbGlzdE5vdGlmaWNhdGlvbnMgfSA9IHRoaXMucHJvcHM7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT0nY29udGFpbmVyJz5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5tZW51SXRlbSl9PlxyXG4gICAgICAgICAgWW91ciBub3RpZmljYXRpb25zXHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAge2Rpc3BsYXlEcmF3ZXIgJiYgKFxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NzcyhzdHlsZXMubm90aWZpY2F0aW9ucywgc3R5bGVzLnNtYWxsKX0+XHJcbiAgICAgICAgICAgIDxidXR0b25cclxuICAgICAgICAgICAgICBzdHlsZT17e1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXHJcbiAgICAgICAgICAgICAgICByaWdodDogJzE2cHgnLFxyXG4gICAgICAgICAgICAgICAgdG9wOiAnLjhyZW0nLFxyXG4gICAgICAgICAgICAgICAgZm9udFNpemU6ICcxNnB4JyxcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogJ25vbmUnLFxyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJ25vbmUnLFxyXG4gICAgICAgICAgICAgICAgY3Vyc29yOiAncG9pbnRlcicsXHJcbiAgICAgICAgICAgICAgfX1cclxuICAgICAgICAgICAgICBhcmlhLWxhYmVsPVwiQ2xvc2VcIlxyXG4gICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdDbG9zZSBidXR0b24gaGFzIGJlZW4gY2xpY2tlZFxcbicpO1xyXG4gICAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICB4XHJcbiAgICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8cD5IZXJlIGlzIHRoZSBsaXN0IG9mIG5vdGlmaWNhdGlvbnM8L3A+XHJcbiAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9e2NzcyhzdHlsZXMudWwpfT5cclxuICAgICAgICAgICAgICB7bGlzdE5vdGlmaWNhdGlvbnMubWFwKChub3RpZmljYXRpb24pID0+IChcclxuICAgICAgICAgICAgICAgIDxOb3RpZmljYXRpb25JdGVtXHJcbiAgICAgICAgICAgICAgICAgIGtleT17bm90aWZpY2F0aW9uLmlkfVxyXG4gICAgICAgICAgICAgICAgICBpZD17bm90aWZpY2F0aW9uLmlkfVxyXG4gICAgICAgICAgICAgICAgICB0eXBlPXtub3RpZmljYXRpb24udHlwZX1cclxuICAgICAgICAgICAgICAgICAgdmFsdWU9e25vdGlmaWNhdGlvbi52YWx1ZX1cclxuICAgICAgICAgICAgICAgICAgaHRtbD17bm90aWZpY2F0aW9uLmh0bWx9XHJcbiAgICAgICAgICAgICAgICAgIG1hcmtBc1JlYWQ9e3RoaXMubWFya0FzUmVhZH1cclxuICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgKSl9XHJcbiAgICAgICAgICAgIDwvdWw+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICApfVxyXG4gICAgICA8L2Rpdj5cclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XHJcbiAgbm90aWZpY2F0aW9uczoge1xyXG4gICAgYm9yZGVyOiAnMnB4IGRvdHRlZCAjZTE0ODRjJyxcclxuICAgIHBhZGRpbmc6ICcxcmVtIC41cmVtIDAgLjVyZW0nLFxyXG4gICAgZmxvYXQ6ICdyaWdodCcsXHJcbiAgfSxcclxuICBtZW51SXRlbToge1xyXG4gICAgdGV4dEFsaWduOiAncmlnaHQnLFxyXG4gIH0sXHJcbiAgc21hbGw6IHtcclxuICAgICdAbWVkaWEgKG1heC13aWR0aDogOTAwcHgpJzoge1xyXG4gICAgICBwb3NpdGlvbjogXCJmaXhlZFwiLFxyXG4gICAgICBib3R0b206IDAsXHJcbiAgICAgIHRvcDogMCxcclxuICAgICAgbGVmdDogMCxcclxuICAgICAgcmlnaHQ6IDAsXHJcbiAgICAgIGZvbnRTaXplOiAnMjBweCcsXHJcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJ3doaXRlJyxcclxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxyXG4gICAgfSxcclxuICAgIHVsOiB7XHJcbiAgICAgICdAbWVkaWEgKG1heC13aWR0aDogOTAwcHgpJzoge1xyXG4gICAgICAgIGxpc3RTdHlsZVBvc2l0aW9uOiAnaW5zaWRlJyxcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufSk7XHJcblxyXG5cclxuTm90aWZpY2F0aW9ucy5wcm9wVHlwZXMgPSB7XHJcbiAgZGlzcGxheURyYXdlcjogUHJvcFR5cGVzLmJvb2wsXHJcbiAgbGlzdE5vdGlmaWNhdGlvbnM6IFByb3BUeXBlcy5hcnJheU9mKE5vdGlmaWNhdGlvbkl0ZW1TaGFwZSksXHJcbn07XHJcblxyXG5Ob3RpZmljYXRpb25zLmRlZmF1bHRQcm9wcyA9IHtcclxuICBkaXNwbGF5RHJhd2VyOiBmYWxzZSxcclxuICBsaXN0Tm90aWZpY2F0aW9uczogW10sXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBXaXRoTG9nZ2luZyhOb3RpZmljYXRpb25zLCAnTm90aWZpY2F0aW9ucycpO1xyXG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xyXG5cclxuY29uc3QgV2l0aExvZ2dpbmcgPSAoV3JhcHBlZENvbXBvbmVudCwgY29tcG9uZW50TmFtZSA9ICdDb21wb25lbnQnKSA9PiB7XHJcbiAgY2xhc3MgV2l0aExvZ2dpbmdDb21wb25lbnQgZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gICAgY29tcG9uZW50RGlkTW91bnQoKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKGBDb21wb25lbnQgJHtjb21wb25lbnROYW1lfSBpcyBtb3VudGVkYCk7XHJcbiAgICB9XHJcblxyXG4gICAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKGBDb21wb25lbnQgJHtjb21wb25lbnROYW1lfSBpcyBnb2luZyB0byB1bm1vdW50YCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVyKCkge1xyXG4gICAgICByZXR1cm4gPFdyYXBwZWRDb21wb25lbnQgey4uLnRoaXMucHJvcHN9IC8+O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gU2V0IHRoZSBkaXNwbGF5TmFtZSBmb3IgZGVidWdnaW5nIHdoZW4gdGhlIGNvbXBvbmVudCBpcyBjcmVhdGVkXHJcbiAgV2l0aExvZ2dpbmdDb21wb25lbnQuZGlzcGxheU5hbWUgPSBgV2l0aExvZ2dpbmcoJHtjb21wb25lbnROYW1lfSlgO1xyXG5cclxuICAvLyBNb3ZlIGdldENvbXBvbmVudE5hbWUgb3V0c2lkZSBvZiB0aGUgY29tcG9uZW50J3MgbWV0aG9kc1xyXG4gIGNvbnN0IGdldENvbXBvbmVudE5hbWUgPSAoKSA9PiBjb21wb25lbnROYW1lO1xyXG5cclxuICAvLyBBdHRhY2ggZ2V0Q29tcG9uZW50TmFtZSBhcyBhIHN0YXRpYyBtZXRob2RcclxuICBXaXRoTG9nZ2luZ0NvbXBvbmVudC5nZXRDb21wb25lbnROYW1lID0gZ2V0Q29tcG9uZW50TmFtZTtcclxuXHJcbiAgcmV0dXJuIFdpdGhMb2dnaW5nQ29tcG9uZW50O1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgV2l0aExvZ2dpbmc7XHJcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XHJcbmltcG9ydCB7IFN0eWxlU2hlZXQsIGNzcyB9IGZyb20gJ2FwaHJvZGl0ZSc7XHJcblxyXG5jb25zdCBDb3Vyc2VMaXN0Um93ID0gKHsgaXNIZWFkZXIsIHRleHRGaXJzdENlbGwsIHRleHRTZWNvbmRDZWxsIH0pID0+IHtcclxuICBjb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XHJcbiAgICByb3c6IHtcclxuICAgICAgYmFja2dyb3VuZENvbG9yOiBpc0hlYWRlciA/ICcjZGViNWI1NDUnIDogJyNmNWY1ZjVhYicsXHJcbiAgICB9LFxyXG4gICAgaGVhZGVyVGg6IHtcclxuICAgICAgYm9yZGVyQm90dG9tOiAnMnB4IHNvbGlkICNkZWI1YjUnLFxyXG4gICAgfSxcclxuICAgIHRoOiB7XHJcbiAgICAgIGJvcmRlckJvdHRvbTogJzFweCBzb2xpZCAjZGViNWI1JyxcclxuICAgIH0sXHJcbiAgfSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8dHIgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLnJvdyl9PlxyXG4gICAgICB7aXNIZWFkZXIgPyAoXHJcbiAgICAgICAgdGV4dFNlY29uZENlbGwgPT09IG51bGwgPyAoXHJcbiAgICAgICAgICA8dGggY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmhlYWRlclRoKX0gY29sU3Bhbj1cIjJcIj57dGV4dEZpcnN0Q2VsbH08L3RoPlxyXG4gICAgICAgICkgOiAoXHJcbiAgICAgICAgICA8PlxyXG4gICAgICAgICAgICA8dGggY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmhlYWRlclRoKX0+e3RleHRGaXJzdENlbGx9PC90aD5cclxuICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5oZWFkZXJUaCl9Pnt0ZXh0U2Vjb25kQ2VsbH08L3RoPlxyXG4gICAgICAgICAgPC8+XHJcbiAgICAgICAgKVxyXG4gICAgICApIDogKFxyXG4gICAgICAgIDw+XHJcbiAgICAgICAgICA8dGQ+e3RleHRGaXJzdENlbGx9PC90ZD5cclxuICAgICAgICAgIDx0ZD57dGV4dFNlY29uZENlbGx9PC90ZD5cclxuICAgICAgICA8Lz5cclxuICAgICAgKX1cclxuICAgIDwvdHI+XHJcbiAgKTtcclxufTtcclxuXHJcbkNvdXJzZUxpc3RSb3cucHJvcFR5cGVzID0ge1xyXG4gIGlzSGVhZGVyOiBQcm9wVHlwZXMuYm9vbCxcclxuICB0ZXh0Rmlyc3RDZWxsOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXHJcbiAgdGV4dFNlY29uZENlbGw6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5udW1iZXJdKSxcclxufTtcclxuXHJcbkNvdXJzZUxpc3RSb3cuZGVmYXVsdFByb3BzID0ge1xyXG4gIGlzSGVhZGVyOiBmYWxzZSxcclxuICB0ZXh0U2Vjb25kQ2VsbDogbnVsbCxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IENvdXJzZUxpc3RSb3c7XHJcbiIsImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XHJcblxyXG5jb25zdCBDb3Vyc2VTaGFwZSA9IFByb3BUeXBlcy5zaGFwZSh7XHJcbiAgaWQ6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcclxuICBuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXHJcbiAgY3JlZGl0OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMubnVtYmVyXSkuaXNSZXF1aXJlZCxcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDb3Vyc2VTaGFwZTtcclxuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5pbXBvcnQgQ291cnNlTGlzdFJvdyBmcm9tIFwiLi9Db3Vyc2VMaXN0Um93XCI7XHJcbmltcG9ydCBDb3Vyc2VTaGFwZSBmcm9tICcuL0NvdXJzZVNoYXBlJztcclxuaW1wb3J0IHsgU3R5bGVTaGVldCwgY3NzIH0gZnJvbSAnYXBocm9kaXRlJztcclxuXHJcbmNvbnN0IENvdXJzZUxpc3QgPSAoeyBsaXN0Q291cnNlcyB9KSA9PiB7XHJcbiAgcmV0dXJuIChcclxuICAgIDx0YWJsZSBpZD17Y3NzKHN0eWxlcy5Db3VzZUxpc3QpfT5cclxuICAgICAgPHRoZWFkPlxyXG4gICAgICAgIDxDb3Vyc2VMaXN0Um93IHRleHRGaXJzdENlbGw9XCJBdmFpbGFibGUgY291cnNlc1wiIGlzSGVhZGVyPXt0cnVlfSAvPlxyXG4gICAgICAgIDxDb3Vyc2VMaXN0Um93IHRleHRGaXJzdENlbGw9XCJDb3Vyc2UgbmFtZVwiIHRleHRTZWNvbmRDZWxsPVwiQ3JlZGl0XCIgaXNIZWFkZXI9e3RydWV9IC8+XHJcbiAgICAgIDwvdGhlYWQ+XHJcbiAgICAgIDx0Ym9keT5cclxuICAgICAgICB7bGlzdENvdXJzZXMubGVuZ3RoID09IDAgJiYgPENvdXJzZUxpc3RSb3cgdGV4dEZpcnN0Q2VsbD0nTm8gY291cnNlIGF2YWlsYWJsZSB5ZXQnIC8+fVxyXG4gICAgICAgIHtsaXN0Q291cnNlcy5tYXAoKGVsZSkgPT4gPENvdXJzZUxpc3RSb3cga2V5PXtlbGUuaWR9IHRleHRGaXJzdENlbGw9e2VsZS5uYW1lfSB0ZXh0U2Vjb25kQ2VsbD17ZWxlLmNyZWRpdH0gaXNIZWFkZXI9e2ZhbHNlfSAvPil9XHJcbiAgICAgIDwvdGJvZHk+XHJcbiAgICA8L3RhYmxlPlxyXG4gIClcclxufVxyXG5cclxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xyXG4gIENvdXNlTGlzdDoge1xyXG4gICAgd2lkdGg6ICcxMDAlJyxcclxuICAgIGJvcmRlcjogJzFweCBzb2xpZCBsaWdodGdyZXknLFxyXG4gICAgYm9yZGVyQ29sbGFwc2U6ICdjb2xsYXBzZScsXHJcbiAgICBtYXJnaW5Ub3A6ICcycmVtO30nXHJcbiAgfVxyXG59KVxyXG5cclxuQ291cnNlTGlzdC5wcm9wVHlwZXMgPSB7XHJcbiAgbGlzdENvdXJzZXM6IFByb3BUeXBlcy5hcnJheU9mKENvdXJzZVNoYXBlKSxcclxufTtcclxuXHJcbkNvdXJzZUxpc3QuZGVmYXVsdFByb3BzID0ge1xyXG4gIGxpc3RDb3Vyc2VzOiBbXSxcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ291cnNlTGlzdCIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XHJcblxyXG5cclxuY29uc3QgQm9keVNlY3Rpb24gPSAoe3RpdGxlLCBjaGlsZHJlbn0pID0+IChcclxuICA8ZGl2IGNsYXNzTmFtZT0nYm9keVNlY3Rpb24nPlxyXG4gICAgPGgyPnt0aXRsZX08L2gyPlxyXG4gICAge2NoaWxkcmVufVxyXG4gIDwvZGl2PlxyXG4pO1xyXG5cclxuQm9keVNlY3Rpb24ucHJvcFR5cGVzID0ge1xyXG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXHJcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxyXG59XHJcblxyXG5Cb2R5U2VjdGlvbi5kZWZhdWx0UHJvcHMgPSB7XHJcbiAgY2hpbGRyZW46IG51bGwsXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEJvZHlTZWN0aW9uOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9Cb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20uY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9Cb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20uY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuaW1wb3J0IEJvZHlTZWN0aW9uIGZyb20gJy4vQm9keVNlY3Rpb24nO1xyXG5pbXBvcnQgJy4vQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tLmNzcyc7XHJcbmltcG9ydCB7IFN0eWxlU2hlZXQsIGNzcyB9IGZyb20gJ2FwaHJvZGl0ZSc7XHJcblxyXG5jb25zdCBCb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20gPSAoe3RpdGxlLCBjaGlsZHJlbn0pID0+IHtcclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBjbGFzc05hbWU9e2NzcyhzdHlsZXMuY21hcmdpbkJvdHRvbSl9PlxyXG4gICAgICA8Qm9keVNlY3Rpb24gdGl0bGU9e3RpdGxlfT57Y2hpbGRyZW59PC9Cb2R5U2VjdGlvbj5cclxuICAgIDwvZGl2PlxyXG4gIClcclxufVxyXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XHJcbiAgbWFyZ2luQm90dG9tOiAnNDBweCdcclxufSlcclxuXHJcbkJvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbS5wcm9wc1R5cGVzID17XHJcbiAgdGl0bGU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcclxuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUuaXNSZXF1aXJlZFxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCAgQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tOyIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBGb290ZXIgZnJvbSBcIi4uL0Zvb3Rlci9Gb290ZXJcIjtcbmltcG9ydCBIZWFkZXIgZnJvbSBcIi4uL0hlYWRlci9IZWFkZXJcIjtcbmltcG9ydCBMb2dpbiBmcm9tIFwiLi4vTG9naW4vTG9naW5cIjtcbmltcG9ydCBOb3RpZmljYXRpb25zIGZyb20gXCIuLi9Ob3RpZmljYXRpb25zL05vdGlmaWNhdGlvbnNcIjtcbmltcG9ydCBDb3Vyc2VMaXN0IGZyb20gXCIuLi9Db3Vyc2VMaXN0L0NvdXJzZUxpc3RcIjtcbmltcG9ydCB7IGdldExhdGVzdE5vdGlmaWNhdGlvbiB9IGZyb20gXCIuLi91dGlscy91dGlsc1wiO1xuaW1wb3J0IHsgUHJvcFR5cGVzIH0gZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBCb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20gZnJvbSBcIi4uL0JvZHlTZWN0aW9uL0JvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbVwiO1xuaW1wb3J0IEJvZHlTZWN0aW9uIGZyb20gXCIuLi9Cb2R5U2VjdGlvbi9Cb2R5U2VjdGlvblwiO1xuaW1wb3J0IHsgU3R5bGVTaGVldCwgY3NzIH0gZnJvbSAnYXBocm9kaXRlJztcblxuY2xhc3MgQXBwIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG5cbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgaXNMb2dnZWRJbjogdGhpcy5wcm9wcy5pc0xvZ2dlZEluLFxuICAgICAgbG9nT3V0OiB0aGlzLnByb3BzLmxvZ091dCxcbiAgICAgIGxpc3RDb3Vyc2VzOiBbXG4gICAgICAgIHsgaWQ6IDEsIG5hbWU6ICdFUzYnLCBjcmVkaXQ6IDYwIH0sXG4gICAgICAgIHsgaWQ6IDIsIG5hbWU6ICdXZWJwYWNrJywgY3JlZGl0OiAyMCB9LFxuICAgICAgICB7IGlkOiAzLCBuYW1lOiAnUmVhY3QnLCBjcmVkaXQ6IDQwIH1cbiAgICAgIF0sXG4gICAgICBsaXN0Tm90aWZpY2F0aW9uczogW1xuICAgICAgICB7IGlkOiAxLCB0eXBlOiBcImRlZmF1bHRcIiwgdmFsdWU6IFwiTmV3IGNvdXJzZSBhdmFpbGFibGVcIiB9LFxuICAgICAgICB7IGlkOiAyLCB0eXBlOiBcInVyZ2VudFwiLCB2YWx1ZTogXCJOZXcgcmVzdW1lIGF2YWlsYWJsZVwiIH0sXG4gICAgICAgIHsgaWQ6IDMsIHR5cGU6IFwidXJnZW50XCIsIGh0bWw6IHsgX19odG1sOiBnZXRMYXRlc3ROb3RpZmljYXRpb24oKSB9IH0sXG4gICAgICBdXG4gICAgfTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLmhhbmRsZUtleURvd24pO1xuICB9XG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuaGFuZGxlS2V5RG93bik7XG4gIH1cblxuICBoYW5kbGVLZXlEb3duID0gKGV2ZW50KSA9PiB7XG4gICAgY29uc3QgeyBsb2dPdXQgfSA9IHRoaXMuc3RhdGU7XG4gICAgaWYgKGV2ZW50LmtleSA9PT0gJ2gnICYmIChldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXkpKSB7XG4gICAgICBhbGVydCgnTG9nZ2luZyB5b3Ugb3V0Jyk7XG4gICAgICBsb2dPdXQoKTtcbiAgICB9XG4gIH1cblxuICBoYW5kbGVMb2dpbiA9ICgpID0+IHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIGlzTG9nZ2VkSW46IHRydWUsXG4gICAgfSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBpc0xvZ2dlZEluLCBsaXN0Q291cnNlcywgbGlzdE5vdGlmaWNhdGlvbnMgfSA9IHRoaXMuc3RhdGU7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPD5cbiAgICAgICAgPE5vdGlmaWNhdGlvbnMgbGlzdE5vdGlmaWNhdGlvbnM9e2xpc3ROb3RpZmljYXRpb25zfSAvPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIkFwcFwiPlxuICAgICAgICAgIDxIZWFkZXIgLz5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5ib2R5KX0+XG4gICAgICAgICAgICB7aXNMb2dnZWRJbiA/XG4gICAgICAgICAgICAgIDxCb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20gdGl0bGU9eydDb3Vyc2UgbGlzdCd9PlxuICAgICAgICAgICAgICAgIDxDb3Vyc2VMaXN0IGxpc3RDb3Vyc2VzPXtsaXN0Q291cnNlc30gLz5cbiAgICAgICAgICAgICAgPC9Cb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20+IDpcbiAgICAgICAgICAgICAgPEJvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbSB0aXRsZT17J0xvZyBpbiB0byBjb250aW51ZSd9PlxuICAgICAgICAgICAgICAgIDxMb2dpbiBvbkxvZ2luPXt0aGlzLmhhbmRsZUxvZ2lufSAvPlxuICAgICAgICAgICAgICA8L0JvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbT59XG4gICAgICAgICAgICA8Qm9keVNlY3Rpb24gdGl0bGU9eydOZXdzIGZyb20gdGhlIFNjaG9vbCd9PlxuICAgICAgICAgICAgICA8cD5Mb3JlbSBpcHN1bSBkb2xvciwgc2l0IGFtZXQgY29uc2VjdGV0dXIgYWRpcGlzaWNpbmcgZWxpdC4gQ29uc2VxdXVudHVyLCBhZGlwaXNjaT8gTG9yZW0gaXBzdW0gZG9sb3IsIHNpdCBhbWV0IGNvbnNlY3RldHVyIGFkaXBpc2ljaW5nIGVsaXQuIENvbnNlcXV1bnR1ciwgYWRpcGlzY2k/IExvcmVtIGlwc3VtIGRvbG9yLCBzaXQgYW1ldCBjb25zZWN0ZXR1cjwvcD5cbiAgICAgICAgICAgIDwvQm9keVNlY3Rpb24+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NzcyhzdHlsZXMuZm9vdGVyKX0+XG4gICAgICAgICAgICA8Rm9vdGVyIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC8+XG4gICAgKTtcbiAgfVxufVxuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIGJvZHk6IHtcbiAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsXG4gICAgYWxpZ25JdGVtczogJ2ZsZXgtc3RhcnQnLFxuICAgIGJvcmRlclRvcDogJzNweCBzb2xpZCAjZTE0ODRjJyxcbiAgfSxcbn0pO1xuXG5cbkFwcC5kZWZhdWx0UHJvcHMgPSB7XG4gIGlzTG9nZ2VkSW46IGZhbHNlLFxuICBsb2dPdXQ6ICgpID0+IHt9XG59XG5cbkFwcC5wcm9wVHlwZXMgPSB7XG4gIGlzTG9nZ2VkSW46IFByb3BUeXBlcy5ib29sLFxuICBsb2dPdXQ6IFByb3BUeXBlcy5mdW5jXG59XG5cbmV4cG9ydCBkZWZhdWx0IEFwcDtcbiIsImNvbnN0IHJlcG9ydFdlYlZpdGFscyA9IG9uUGVyZkVudHJ5ID0+IHtcclxuICBpZiAob25QZXJmRW50cnkgJiYgb25QZXJmRW50cnkgaW5zdGFuY2VvZiBGdW5jdGlvbikge1xyXG4gICAgaW1wb3J0KCd3ZWItdml0YWxzJykudGhlbigoeyBnZXRDTFMsIGdldEZJRCwgZ2V0RkNQLCBnZXRMQ1AsIGdldFRURkIgfSkgPT4ge1xyXG4gICAgICBnZXRDTFMob25QZXJmRW50cnkpO1xyXG4gICAgICBnZXRGSUQob25QZXJmRW50cnkpO1xyXG4gICAgICBnZXRGQ1Aob25QZXJmRW50cnkpO1xyXG4gICAgICBnZXRMQ1Aob25QZXJmRW50cnkpO1xyXG4gICAgICBnZXRUVEZCKG9uUGVyZkVudHJ5KTtcclxuICAgIH0pO1xyXG4gIH1cclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHJlcG9ydFdlYlZpdGFsczsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgUmVhY3REb20gZnJvbSAncmVhY3QtZG9tJztcclxuaW1wb3J0ICcuL2luZGV4LmNzcyc7XHJcbmltcG9ydCBBcHAgZnJvbSAnLi9BcHAvQXBwJztcclxuaW1wb3J0ICByZXBvcnRXZWJWaXRhbHMgZnJvbSAnLi9yZXBvcnRXZWJWaXRhbHMnO1xyXG5cclxuUmVhY3REb20ucmVuZGVyKFxyXG4gIDxSZWFjdC5TdHJpY3RNb2RlPlxyXG4gICAgPEFwcCAvPlxyXG4gIDwvUmVhY3QuU3RyaWN0TW9kZT4sXHJcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb3QnKVxyXG4pO1xyXG5cclxucmVwb3J0V2ViVml0YWxzKCk7XHJcbiJdLCJuYW1lcyI6WyJpblByb2dyZXNzIiwiZGF0YVdlYnBhY2tQcmVmaXgiLCJyYXdBc2FwIiwiZnJlZVRhc2tzIiwicGVuZGluZ0Vycm9ycyIsInJlcXVlc3RFcnJvclRocm93IiwibWFrZVJlcXVlc3RDYWxsRnJvbVRpbWVyIiwibGVuZ3RoIiwic2hpZnQiLCJhc2FwIiwidGFzayIsInJhd1Rhc2siLCJwb3AiLCJSYXdUYXNrIiwidGhpcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJwcm90b3R5cGUiLCJjYWxsIiwiZXJyb3IiLCJvbmVycm9yIiwicHVzaCIsInF1ZXVlIiwicmVxdWVzdEZsdXNoIiwiaW5kZXgiLCJmbHVzaCIsImN1cnJlbnRJbmRleCIsInNjYW4iLCJuZXdMZW5ndGgiLCJ0b2dnbGUiLCJvYnNlcnZlciIsIm5vZGUiLCJzY29wZSIsImciLCJzZWxmIiwiQnJvd3Nlck11dGF0aW9uT2JzZXJ2ZXIiLCJNdXRhdGlvbk9ic2VydmVyIiwiV2ViS2l0TXV0YXRpb25PYnNlcnZlciIsImNhbGxiYWNrIiwidGltZW91dEhhbmRsZSIsInNldFRpbWVvdXQiLCJoYW5kbGVUaW1lciIsImludGVydmFsSGFuZGxlIiwic2V0SW50ZXJ2YWwiLCJjbGVhclRpbWVvdXQiLCJjbGVhckludGVydmFsIiwiZG9jdW1lbnQiLCJjcmVhdGVUZXh0Tm9kZSIsIm9ic2VydmUiLCJjaGFyYWN0ZXJEYXRhIiwiZGF0YSIsInN0ciIsImhhc2giLCJpIiwiY2hhckNvZGVBdCIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwiaWQiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJqb2luIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsInNvdXJjZU1hcHBpbmciLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJPYmplY3QiLCJoYXNPd25Qcm9wZXJ0eSIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsImFzc2lnbiIsInRlc3QxIiwiU3RyaW5nIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsInRlc3QyIiwiZnJvbUNoYXJDb2RlIiwibiIsInRlc3QzIiwic3BsaXQiLCJmb3JFYWNoIiwibGV0dGVyIiwia2V5cyIsImVyciIsInNob3VsZFVzZU5hdGl2ZSIsInRhcmdldCIsInNvdXJjZSIsImZyb20iLCJzeW1ib2xzIiwidG8iLCJ2YWwiLCJUeXBlRXJyb3IiLCJ0b09iamVjdCIsInMiLCJhcmd1bWVudHMiLCJrZXkiLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsImVtcHR5RnVuY3Rpb24iLCJlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0IiwicmVzZXRXYXJuaW5nQ2FjaGUiLCJzaGltIiwicHJvcHMiLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJsb2NhdGlvbiIsInByb3BGdWxsTmFtZSIsInNlY3JldCIsIkVycm9yIiwibmFtZSIsImdldFNoaW0iLCJpc1JlcXVpcmVkIiwiUmVhY3RQcm9wVHlwZXMiLCJhcnJheSIsImJpZ2ludCIsImJvb2wiLCJmdW5jIiwibnVtYmVyIiwib2JqZWN0Iiwic3RyaW5nIiwic3ltYm9sIiwiYW55IiwiYXJyYXlPZiIsImVsZW1lbnQiLCJlbGVtZW50VHlwZSIsImluc3RhbmNlT2YiLCJvYmplY3RPZiIsIm9uZU9mIiwib25lT2ZUeXBlIiwic2hhcGUiLCJleGFjdCIsImNoZWNrUHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiYWEiLCJyIiwidSIsImEiLCJiIiwiYyIsImJhIiwiZCIsImUiLCJmIiwiaCIsImwiLCJBcnJheSIsInNsaWNlIiwiYXBwbHkiLCJtIiwib25FcnJvciIsImRhIiwiZWEiLCJmYSIsImhhIiwiaWEiLCJqYSIsImxhIiwibWEiLCJuYSIsIm9hIiwidHlwZSIsImN1cnJlbnRUYXJnZXQiLCJrYSIsInBhIiwicWEiLCJyYSIsImluZGV4T2YiLCJzYSIsImV4dHJhY3RFdmVudHMiLCJldmVudFR5cGVzIiwidGEiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsInVhIiwicmVnaXN0cmF0aW9uTmFtZSIsInZhIiwid2EiLCJkZXBlbmRlbmNpZXMiLCJ4YSIsInlhIiwid2luZG93IiwiY3JlYXRlRWxlbWVudCIsInphIiwiQWEiLCJCYSIsIkNhIiwic3RhdGVOb2RlIiwiRGEiLCJFYSIsIkZhIiwiR2EiLCJIYSIsIklhIiwiSmEiLCJLYSIsIkxhIiwiTWEiLCJOYSIsIk9hIiwiUGEiLCJRYSIsInYiLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwic2FuaXRpemVVUkwiLCJDIiwidG9Mb3dlckNhc2UiLCJVYSIsIlZhIiwidG9VcHBlckNhc2UiLCJyZXBsYWNlIiwieGxpbmtIcmVmIiwiV2EiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsIlhhIiwiU2EiLCJpc05hTiIsIlRhIiwidGVzdCIsIlJhIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwic2V0QXR0cmlidXRlTlMiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwiY3VycmVudCIsIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnIiwic3VzcGVuc2UiLCJZYSIsIkUiLCJTeW1ib2wiLCJmb3IiLCJaYSIsIiRhIiwiYWIiLCJiYiIsImNiIiwiZGIiLCJlYiIsImZiIiwiZ2IiLCJoYiIsImliIiwiamIiLCJrYiIsImxiIiwibWIiLCJpdGVyYXRvciIsIm5iIiwicGIiLCJkaXNwbGF5TmFtZSIsIiQkdHlwZW9mIiwicmVuZGVyIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJxYiIsInRhZyIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwicmV0dXJuIiwicmIiLCJzYiIsIm5vZGVOYW1lIiwieGIiLCJfdmFsdWVUcmFja2VyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiY29uc3RydWN0b3IiLCJnZXQiLCJzZXQiLCJkZWZpbmVQcm9wZXJ0eSIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwidGIiLCJ5YiIsImNoZWNrZWQiLCJ2YWx1ZSIsInpiIiwiZGVmYXVsdENoZWNrZWQiLCJkZWZhdWx0VmFsdWUiLCJfd3JhcHBlclN0YXRlIiwiaW5pdGlhbENoZWNrZWQiLCJBYiIsImluaXRpYWxWYWx1ZSIsImNvbnRyb2xsZWQiLCJCYiIsIkNiIiwiRGIiLCJFYiIsIm93bmVyRG9jdW1lbnQiLCJhY3RpdmVFbGVtZW50IiwiR2IiLCJjaGlsZHJlbiIsIkNoaWxkcmVuIiwiRmIiLCJIYiIsIm9wdGlvbnMiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsImRpc2FibGVkIiwiSWIiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIkpiIiwiaXNBcnJheSIsIktiIiwiTGIiLCJ0ZXh0Q29udGVudCIsIk5iIiwiT2IiLCJQYiIsIlFiIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwidmFsdWVPZiIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsImFwcGVuZENoaWxkIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsIlJiIiwibGFzdENoaWxkIiwibm9kZVR5cGUiLCJub2RlVmFsdWUiLCJTYiIsIlRiIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiVWIiLCJWYiIsIldiIiwic3R5bGUiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiWGIiLCJZYiIsIlpiIiwiJGIiLCJhYyIsImJjIiwiV2Vha01hcCIsIk1hcCIsImNjIiwiZGMiLCJhbHRlcm5hdGUiLCJlZmZlY3RUYWciLCJlYyIsIm1lbW9pemVkU3RhdGUiLCJkZWh5ZHJhdGVkIiwiZmMiLCJoYyIsImNoaWxkIiwic2libGluZyIsImdjIiwiaWMiLCJqYyIsImtjIiwibGMiLCJfZGlzcGF0Y2hMaXN0ZW5lcnMiLCJfZGlzcGF0Y2hJbnN0YW5jZXMiLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsImlzUGVyc2lzdGVudCIsInJlbGVhc2UiLCJtYyIsIm5jIiwic3JjRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50IiwicGFyZW50Tm9kZSIsIm9jIiwicGMiLCJxYyIsInRvcExldmVsVHlwZSIsIm5hdGl2ZUV2ZW50IiwidGFyZ2V0SW5zdCIsImFuY2VzdG9ycyIsInJjIiwiZXZlbnRTeXN0ZW1GbGFncyIsInNjIiwiY29udGFpbmVySW5mbyIsInRjIiwidWMiLCJoYXMiLCJ2YyIsIkYiLCJ3YyIsInhjIiwieWMiLCJ6YyIsIkFjIiwiQmMiLCJDYyIsIkRjIiwiRWMiLCJGYyIsIkdjIiwiSGMiLCJJYyIsIktjIiwiYmxvY2tlZE9uIiwiY29udGFpbmVyIiwiTGMiLCJkZWxldGUiLCJwb2ludGVySWQiLCJNYyIsIk5jIiwiUGMiLCJ1bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkiLCJwcmlvcml0eSIsImh5ZHJhdGUiLCJRYyIsIlJjIiwiU2MiLCJUYyIsIlVjIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwiVmMiLCJXYyIsIlljIiwiWmMiLCIkYyIsImFkIiwiYnViYmxlZCIsImNhcHR1cmVkIiwiZXZlbnRQcmlvcml0eSIsImJkIiwiY2QiLCJkZCIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwiZWQiLCJmZCIsImdkIiwiYmluZCIsImhkIiwiYWRkRXZlbnRMaXN0ZW5lciIsIk9jIiwiamQiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsImtkIiwibGQiLCJ0cmltIiwibWQiLCJzZXRQcm9wZXJ0eSIsImNoYXJBdCIsInN1YnN0cmluZyIsIm5kIiwibWVudWl0ZW0iLCJhcmVhIiwiYmFzZSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibGluayIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwib2QiLCJwZCIsImlzIiwicWQiLCJyZCIsInNkIiwidGQiLCJib2R5IiwidWQiLCJ2ZCIsIm9mZnNldCIsIm5leHRTaWJsaW5nIiwid2QiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwieGQiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnRXaW5kb3ciLCJocmVmIiwieWQiLCJjb250ZW50RWRpdGFibGUiLCJ6ZCIsIkFkIiwiQmQiLCJDZCIsIkRkIiwiRWQiLCJGZCIsImF1dG9Gb2N1cyIsIkdkIiwiX19odG1sIiwiSGQiLCJJZCIsIkpkIiwiS2QiLCJwcmV2aW91c1NpYmxpbmciLCJMZCIsIk1hdGgiLCJyYW5kb20iLCJNZCIsIk5kIiwiT2QiLCJQZCIsIlFkIiwiUmQiLCJTZCIsIlRkIiwiZGlzcGF0Y2hDb25maWciLCJVZCIsIl90YXJnZXRJbnN0IiwiVmQiLCJXZCIsIlhkIiwiWWQiLCJaZCIsIiRkIiwiYWUiLCJiZSIsImNlIiwiRyIsIkludGVyZmFjZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsImVlIiwiZXZlbnRQb29sIiwiZmUiLCJkZXN0cnVjdG9yIiwiZGUiLCJnZXRQb29sZWQiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJEYXRlIiwibm93IiwiaXNUcnVzdGVkIiwiZXh0ZW5kIiwiZ2UiLCJoZSIsImllIiwiamUiLCJrZSIsImRvY3VtZW50TW9kZSIsImxlIiwibWUiLCJuZSIsIm9lIiwiYmVmb3JlSW5wdXQiLCJjb21wb3NpdGlvbkVuZCIsImNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvblVwZGF0ZSIsInBlIiwicWUiLCJrZXlDb2RlIiwicmUiLCJkZXRhaWwiLCJzZSIsInZlIiwibG9jYWxlIiwid2hpY2giLCJ0ZSIsImN0cmxLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiY2hhciIsInVlIiwid2UiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGV4dCIsInRpbWUiLCJ1cmwiLCJ3ZWVrIiwieGUiLCJ5ZSIsImNoYW5nZSIsInplIiwiQWUiLCJCZSIsIkNlIiwiRGUiLCJFZSIsIkZlIiwiR2UiLCJkZXRhY2hFdmVudCIsIkhlIiwiSWUiLCJhdHRhY2hFdmVudCIsIkplIiwiS2UiLCJMZSIsIk1lIiwiX2lzSW5wdXRFdmVudFN1cHBvcnRlZCIsIk5lIiwidmlldyIsIk9lIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsIlBlIiwiZ2V0TW9kaWZpZXJTdGF0ZSIsIlFlIiwiUmUiLCJTZSIsIlRlIiwiVWUiLCJWZSIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwic2hpZnRLZXkiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiV2UiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJYZSIsIm1vdXNlRW50ZXIiLCJtb3VzZUxlYXZlIiwicG9pbnRlckVudGVyIiwicG9pbnRlckxlYXZlIiwiWWUiLCJkZWZhdWx0VmlldyIsInBhcmVudFdpbmRvdyIsInAiLCIkZSIsImFmIiwiYmYiLCJjZiIsImRmIiwic2VsZWN0IiwiZWYiLCJmZiIsImdmIiwiaGYiLCJqZiIsInN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJlbmQiLCJzZWxlY3Rpb25FbmQiLCJhbmNob3JOb2RlIiwiZ2V0U2VsZWN0aW9uIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJrZiIsIm9uU2VsZWN0IiwibGYiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwibWYiLCJjbGlwYm9hcmREYXRhIiwibmYiLCJvZiIsImNoYXJDb2RlIiwicGYiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwicWYiLCJyZiIsInJlcGVhdCIsInNmIiwiZGF0YVRyYW5zZmVyIiwidGYiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwidWYiLCJ2ZiIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwid2YiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwieWYiLCJ6ZiIsIkgiLCJJIiwiQWYiLCJKIiwiSyIsIkJmIiwiQ2YiLCJjb250ZXh0VHlwZXMiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJMIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJEZiIsIkVmIiwiRmYiLCJnZXRDaGlsZENvbnRleHQiLCJHZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiSGYiLCJJZiIsIkpmIiwiS2YiLCJ1bnN0YWJsZV9jYW5jZWxDYWxsYmFjayIsIkxmIiwidW5zdGFibGVfcmVxdWVzdFBhaW50IiwiTWYiLCJ1bnN0YWJsZV9ub3ciLCJOZiIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwiT2YiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsIlBmIiwiUWYiLCJSZiIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwiU2YiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJUZiIsIlVmIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJWZiIsIldmIiwiWGYiLCJZZiIsIlpmIiwiJGYiLCJhZyIsImJnIiwiY2ciLCJkZyIsImVnIiwiZmciLCJnZyIsImhnIiwiaWciLCJkZWZhdWx0UHJvcHMiLCJqZyIsImtnIiwibGciLCJtZyIsIm5nIiwib2ciLCJfY29udGV4dCIsIl9jdXJyZW50VmFsdWUiLCJwZyIsImNoaWxkRXhwaXJhdGlvblRpbWUiLCJxZyIsImZpcnN0Q29udGV4dCIsImV4cGlyYXRpb25UaW1lIiwicmciLCJzZyIsImNvbnRleHQiLCJvYnNlcnZlZEJpdHMiLCJuZXh0IiwicmVzcG9uZGVycyIsInRnIiwidWciLCJ1cGRhdGVRdWV1ZSIsImJhc2VTdGF0ZSIsImJhc2VRdWV1ZSIsInNoYXJlZCIsInBlbmRpbmciLCJlZmZlY3RzIiwidmciLCJ3ZyIsInN1c3BlbnNlQ29uZmlnIiwicGF5bG9hZCIsInhnIiwieWciLCJ6ZyIsIngiLCJ6IiwiY2EiLCJBZyIsIkQiLCJ0IiwiQmciLCJDZyIsIkRnIiwiRWciLCJDb21wb25lbnQiLCJyZWZzIiwiRmciLCJKZyIsImlzTW91bnRlZCIsIl9yZWFjdEludGVybmFsRmliZXIiLCJlbnF1ZXVlU2V0U3RhdGUiLCJHZyIsIkhnIiwiSWciLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiS2ciLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsIkxnIiwiY29udGV4dFR5cGUiLCJzdGF0ZSIsInVwZGF0ZXIiLCJNZyIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIk5nIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJPZyIsIlBnIiwicmVmIiwiX293bmVyIiwiX3N0cmluZ1JlZiIsIlFnIiwiUmciLCJsYXN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImZpcnN0RWZmZWN0IiwiU2ciLCJUZyIsIm1vZGUiLCJVZyIsImltcGxlbWVudGF0aW9uIiwiVmciLCJXZyIsInkiLCJBIiwicSIsImRvbmUiLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJjaCIsImRoIiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsImVoIiwiZmgiLCJnaCIsIk0iLCJoaCIsIm1lbW9pemVkUHJvcHMiLCJyZXZlYWxPcmRlciIsImloIiwicmVzcG9uZGVyIiwiamgiLCJraCIsImxoIiwiTiIsIk8iLCJQIiwibWgiLCJRIiwibmgiLCJvaCIsInBoIiwicWgiLCJyaCIsInNoIiwidGgiLCJ1aCIsInZoIiwid2giLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiYWN0aW9uIiwiZWFnZXJSZWR1Y2VyIiwiZWFnZXJTdGF0ZSIsImxhc3RSZW5kZXJlZFN0YXRlIiwiZGlzcGF0Y2giLCJ4aCIsInloIiwiemgiLCJBaCIsImNyZWF0ZSIsImRlc3Ryb3kiLCJkZXBzIiwiQmgiLCJDaCIsIkRoIiwiRWgiLCJGaCIsIkdoIiwiSGgiLCJJaCIsIkpoIiwiS2giLCJMaCIsIk1oIiwiTmgiLCJyZWFkQ29udGV4dCIsInVzZUNhbGxiYWNrIiwidXNlQ29udGV4dCIsInVzZUVmZmVjdCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZVN0YXRlIiwidXNlRGVidWdWYWx1ZSIsInVzZVJlc3BvbmRlciIsInVzZURlZmVycmVkVmFsdWUiLCJ1c2VUcmFuc2l0aW9uIiwiT2giLCJQaCIsIlFoIiwiUmgiLCJTaCIsIlRoIiwicGVuZGluZ1Byb3BzIiwiVWgiLCJWaCIsIldoIiwiWGgiLCJZaCIsIlJlYWN0Q3VycmVudE93bmVyIiwiUiIsIlpoIiwiJGgiLCJhaSIsImJpIiwiY29tcGFyZSIsImNpIiwiZGkiLCJlaSIsImZpIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwiZ2kiLCJnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IiLCJoaSIsInBlbmRpbmdDb250ZXh0IiwibmkiLCJvaSIsInBpIiwicWkiLCJpaSIsInJldHJ5VGltZSIsImppIiwiZmFsbGJhY2siLCJ1bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjayIsImtpIiwibGkiLCJpc0JhY2t3YXJkcyIsInJlbmRlcmluZyIsInJlbmRlcmluZ1N0YXJ0VGltZSIsImxhc3QiLCJ0YWlsIiwidGFpbEV4cGlyYXRpb24iLCJ0YWlsTW9kZSIsIm1pIiwicmkiLCJzaSIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJvbkNsaWNrIiwib25jbGljayIsInNpemUiLCJjcmVhdGVFbGVtZW50TlMiLCJTIiwidGkiLCJ1aSIsInZpIiwid2kiLCJUIiwieGkiLCJVIiwieWkiLCJ6aSIsIkFpIiwic3RhY2siLCJCaSIsIldlYWtTZXQiLCJTZXQiLCJDaSIsImNvbnNvbGUiLCJGaSIsIkVpIiwiR2kiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIkhpIiwiSWkiLCJKaSIsImZvY3VzIiwiS2kiLCJMaSIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiRGkiLCJNaSIsIk5pIiwiT2kiLCJQaSIsIlFpIiwiUmkiLCJpbnN0YW5jZSIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJTaSIsIlRpIiwiZGlzcGxheSIsIlVpIiwiVmkiLCJhZGQiLCJ0aGVuIiwiV2kiLCJYaSIsIllpIiwiWmkiLCIkaSIsImNvbXBvbmVudERpZENhdGNoIiwiYWoiLCJjb21wb25lbnRTdGFjayIsIlJqIiwiYmoiLCJjZWlsIiwiY2oiLCJkaiIsIlYiLCJlaiIsImZqIiwiZ2oiLCJoaiIsImlqIiwiamoiLCJXIiwiWCIsImtqIiwibGoiLCJtaiIsIm5qIiwib2oiLCJwaiIsIlkiLCJxaiIsInJqIiwic2oiLCJ0aiIsInVqIiwidmoiLCJ3aiIsInRpbWVvdXRNcyIsInhqIiwieWoiLCJaIiwiemoiLCJsYXN0RXhwaXJlZFRpbWUiLCJBaiIsImZpcnN0UGVuZGluZ1RpbWUiLCJsYXN0UGluZ2VkVGltZSIsIm5leHRLbm93blBlbmRpbmdMZXZlbCIsImNhbGxiYWNrRXhwaXJhdGlvblRpbWUiLCJjYWxsYmFja1ByaW9yaXR5IiwiY2FsbGJhY2tOb2RlIiwiQmoiLCJ0aW1lb3V0IiwiQ2oiLCJEaiIsIkVqIiwiRmoiLCJHaiIsIkhqIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRFeHBpcmF0aW9uVGltZSIsImxhc3RTdXNwZW5kZWRUaW1lIiwiSWoiLCJKaiIsImJ1c3lNaW5EdXJhdGlvbk1zIiwiYnVzeURlbGF5TXMiLCJLaiIsIk1qIiwiTmoiLCJwaW5nQ2FjaGUiLCJPaiIsInciLCJ1YiIsIlBqIiwiWGMiLCJRaiIsIlNqIiwiZmlyc3RTdXNwZW5kZWRUaW1lIiwicmFuZ2VDb3VudCIsIndiIiwiYWN0aXZlRWxlbWVudERldGFjaGVkIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsIlRqIiwiQiIsIm1pbiIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsImxlZnQiLCJzY3JvbGxMZWZ0IiwidG9wIiwic2Nyb2xsVG9wIiwidmIiLCJVaiIsIlZqIiwiV2oiLCJoaWRkZW4iLCJfY3RvciIsImRlZmF1bHQiLCJvYiIsIlhqIiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwiWmoiLCJpc1JlYWN0Q29tcG9uZW50IiwicGVuZGluZ0NoaWxkcmVuIiwiYWsiLCJiayIsImNrIiwiZGsiLCJlayIsImZrIiwiSmMiLCJfaW50ZXJuYWxSb290IiwiZ2siLCJpayIsImhhc0F0dHJpYnV0ZSIsImhrIiwia2siLCJqayIsInVubW91bnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9ybSIsIkxqIiwibGsiLCJFdmVudHMiLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0Iiwib25Db21taXRGaWJlclJvb3QiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsIllqIiwib3ZlcnJpZGVIb29rU3RhdGUiLCJvdmVycmlkZVByb3BzIiwic2V0U3VzcGVuc2VIYW5kbGVyIiwic2NoZWR1bGVVcGRhdGUiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoIiwic2NoZWR1bGVSZWZyZXNoIiwic2NoZWR1bGVSb290Iiwic2V0UmVmcmVzaEhhbmRsZXIiLCJnZXRDdXJyZW50RmliZXIiLCJidW5kbGVUeXBlIiwidmVyc2lvbiIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJjcmVhdGVQb3J0YWwiLCJmaW5kRE9NTm9kZSIsImZsdXNoU3luYyIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiY2hlY2tEQ0UiLCJzZXRTdGF0ZSIsImZvcmNlVXBkYXRlIiwiX19zZWxmIiwiX19zb3VyY2UiLCJyZXN1bHQiLCJrZXlQcmVmaXgiLCJjb3VudCIsImVzY2FwZSIsIklzU29tZVJlbmRlcmVyQWN0aW5nIiwidG9BcnJheSIsIm9ubHkiLCJGcmFnbWVudCIsIlByb2ZpbGVyIiwiUHVyZUNvbXBvbmVudCIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsImNsb25lRWxlbWVudCIsImNyZWF0ZUNvbnRleHQiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIlByb3ZpZGVyIiwiQ29uc3VtZXIiLCJjcmVhdGVGYWN0b3J5IiwiY3JlYXRlUmVmIiwiZm9yd2FyZFJlZiIsImlzVmFsaWRFbGVtZW50IiwibGF6eSIsIm1lbW8iLCJNZXNzYWdlQ2hhbm5lbCIsInVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlIiwicGVyZm9ybWFuY2UiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImZsb29yIiwicG9ydDIiLCJwb3J0MSIsIm9ubWVzc2FnZSIsInBvc3RNZXNzYWdlIiwic29ydEluZGV4Iiwic3RhcnRUaW1lIiwicHJpb3JpdHlMZXZlbCIsInVuc3RhYmxlX1Byb2ZpbGluZyIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGUiLCJ1bnN0YWJsZV9uZXh0IiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJkZWxheSIsInVuc3RhYmxlX3dyYXBDYWxsYmFjayIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsImluc2VydCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJnZXRUYXJnZXQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZGVmaW5pdGlvbiIsIm8iLCJjaHVua0lkIiwiUHJvbWlzZSIsImFsbCIsInJlZHVjZSIsInByb21pc2VzIiwiZ2xvYmFsVGhpcyIsIkZ1bmN0aW9uIiwicHJvcCIsInNjcmlwdCIsIm5lZWRBdHRhY2giLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJnZXRBdHRyaWJ1dGUiLCJjaGFyc2V0Iiwic3JjIiwib25TY3JpcHRDb21wbGV0ZSIsInByZXYiLCJldmVudCIsIm9ubG9hZCIsImRvbmVGbnMiLCJmbiIsInRvU3RyaW5nVGFnIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImN1cnJlbnRTY3JpcHQiLCJpbnN0YWxsZWRDaHVua3MiLCJqIiwiaW5zdGFsbGVkQ2h1bmtEYXRhIiwicHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJlcnJvclR5cGUiLCJyZWFsU3JjIiwibWVzc2FnZSIsInJlcXVlc3QiLCJ3ZWJwYWNrSnNvbnBDYWxsYmFjayIsInBhcmVudENodW5rTG9hZGluZ0Z1bmN0aW9uIiwiY2h1bmtJZHMiLCJtb3JlTW9kdWxlcyIsInJ1bnRpbWUiLCJzb21lIiwiY2h1bmtMb2FkaW5nR2xvYmFsIiwibG9jYWxzIiwiX3R5cGVvZiIsIl9kZWZpbmVQcm9wZXJ0eSIsIndyaXRhYmxlIiwiX29iamVjdFNwcmVhZCIsIm93bktleXMiLCJmaWx0ZXIiLCJzeW0iLCJfdG9Db25zdW1hYmxlQXJyYXkiLCJhcnIiLCJhcnIyIiwiX2FycmF5V2l0aG91dEhvbGVzIiwiaXRlciIsIl9pdGVyYWJsZVRvQXJyYXkiLCJfbm9uSXRlcmFibGVTcHJlYWQiLCJVUFBFUkNBU0VfUkUiLCJVUFBFUkNBU0VfUkVfVE9fS0VCQUIiLCJtYXRjaCIsImlzVW5pdGxlc3NOdW1iZXIiLCJwcmVmaXhlcyIsInByZWZpeCIsInByZWZpeEtleSIsInN0cmluZ2lmeVZhbHVlIiwic3RyaW5naWZ5QW5kSW1wb3J0YW50aWZ5VmFsdWUiLCJpbXBvcnRhbnRpZnkiLCJoYXNoU3RyaW5nIiwiTUFQX0VYSVNUUyIsIk9yZGVyZWRFbGVtZW50cyIsImVsZW1lbnRzIiwia2V5T3JkZXIiLCJfcHJvdG8iLCJzaG91bGRSZW9yZGVyIiwibmVzdGVkIiwiX25lc3RlZCIsImFkZFN0eWxlVHlwZSIsInN0eWxlVHlwZSIsIl90aGlzIiwidW53cmFwRXhwb3J0cyIsImNyZWF0ZUNvbW1vbmpzTW9kdWxlIiwiY2FwaXRhbGl6ZVN0cmluZ18xIiwicHJlZml4UHJvcGVydHlfMSIsInByZWZpeFByb3BlcnRpZXMiLCJwcm9wZXJ0eSIsIm5ld1N0eWxlIiwicmVxdWlyZWRQcmVmaXhlcyIsImNhcGl0YWxpemVkUHJvcGVydHkiLCJfY2FwaXRhbGl6ZVN0cmluZzIiLCJzdHlsZVByb3BlcnR5IiwicHJlZml4VmFsdWVfMSIsInBsdWdpbnMiLCJtZXRhRGF0YSIsImxlbiIsInByb2Nlc3NlZFZhbHVlIiwiYWRkTmV3VmFsdWVzT25seV8xIiwiYWRkSWZOZXciLCJ2YWx1ZXMiLCJpc09iamVjdF8xIiwiY3JlYXRlUHJlZml4ZXIiLCJfcmVmIiwicHJlZml4TWFwIiwiX2lzT2JqZWN0MiIsImNvbWJpbmVkVmFsdWUiLCJfcHJlZml4VmFsdWUyIiwiX2FkZE5ld1ZhbHVlc09ubHkyIiwiX3Byb2Nlc3NlZFZhbHVlIiwiX3ByZWZpeFByb3BlcnR5MiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJiYWNrZ3JvdW5kQ2xpcCIsImlzUHJlZml4ZWRWYWx1ZV8xIiwicmVnZXgiLCJjYWxjXzEiLCJfaXNQcmVmaXhlZFZhbHVlMiIsImNhbGMiLCJjcm9zc0ZhZGVfMSIsImNyb3NzRmFkZSIsImN1cnNvcl8xIiwiZ3JhYiIsImdyYWJiaW5nIiwiY3Vyc29yIiwiZmlsdGVyXzEiLCJmbGV4Ym94SUVfMSIsImFsdGVybmF0aXZlUHJvcHMiLCJhbHRlcm5hdGl2ZVZhbHVlcyIsImZsZXhTaG9ydGhhbmRNYXBwaW5ncyIsIm1zRmxleCIsImZsZXhWYWx1ZXMiLCJhbGlnbkNvbnRlbnQiLCJhbGlnblNlbGYiLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJmbGV4QmFzaXMiLCJhdXRvIiwiaW5oZXJpdCIsImluaXRpYWwiLCJub25lIiwidW5zZXQiLCJmbGV4Ym94SUUiLCJmbGV4Ym94T2xkIiwiV2Via2l0Qm94T3JpZW50IiwiV2Via2l0Qm94RGlyZWN0aW9uIiwid3JhcCIsImZsZXhXcmFwIiwiZ3JhZGllbnRfMSIsImdyYWQiLCJncmFkaWVudCIsImdyaWRfMSIsIl9zbGljZWRUb0FycmF5IiwiX2FyciIsIl9uIiwiX2QiLCJfZSIsIl9zIiwic2xpY2VJdGVyYXRvciIsImlzU2ltcGxlUG9zaXRpb25WYWx1ZSIsImRpc3BsYXlWYWx1ZXMiLCJwcm9wZXJ0eUNvbnZlcnRlcnMiLCJwcm9wZXJ0eUNvbnZlcnRlciIsImFsaWdubWVudFZhbHVlcyIsImdyaWQiLCJtc0dyaWRSb3dBbGlnbiIsIm1zR3JpZENvbHVtbiIsIl92YWx1ZSRzcGxpdCRtYXAiLCJwb3NpdGlvbiIsIl92YWx1ZSRzcGxpdCRtYXAyIiwibXNHcmlkQ29sdW1uU3BhbiIsIm1zR3JpZFJvdyIsIl92YWx1ZSRzcGxpdCRtYXAzIiwiX3ZhbHVlJHNwbGl0JG1hcDQiLCJtc0dyaWRSb3dTcGFuIiwiZ3JpZFRlbXBsYXRlQ29sdW1ucyIsIm1zR3JpZENvbHVtbnMiLCJncmlkVGVtcGxhdGVSb3dzIiwibXNHcmlkUm93cyIsImp1c3RpZnlTZWxmIiwibXNHcmlkQ29sdW1uQWxpZ24iLCJpbWFnZVNldF8xIiwiaW1hZ2VTZXQiLCJsb2dpY2FsIiwiYWx0ZXJuYXRpdmVQcm9wTGlzdCIsIm1hcmdpbkJsb2NrU3RhcnQiLCJtYXJnaW5CbG9ja0VuZCIsIm1hcmdpbklubGluZVN0YXJ0IiwibWFyZ2luSW5saW5lRW5kIiwicGFkZGluZ0Jsb2NrU3RhcnQiLCJwYWRkaW5nQmxvY2tFbmQiLCJwYWRkaW5nSW5saW5lU3RhcnQiLCJwYWRkaW5nSW5saW5lRW5kIiwiYm9yZGVyQmxvY2tTdGFydCIsImJvcmRlckJsb2NrU3RhcnRDb2xvciIsImJvcmRlckJsb2NrU3RhcnRTdHlsZSIsImJvcmRlckJsb2NrU3RhcnRXaWR0aCIsImJvcmRlckJsb2NrRW5kIiwiYm9yZGVyQmxvY2tFbmRDb2xvciIsImJvcmRlckJsb2NrRW5kU3R5bGUiLCJib3JkZXJCbG9ja0VuZFdpZHRoIiwiYm9yZGVySW5saW5lU3RhcnQiLCJib3JkZXJJbmxpbmVTdGFydENvbG9yIiwiYm9yZGVySW5saW5lU3RhcnRTdHlsZSIsImJvcmRlcklubGluZVN0YXJ0V2lkdGgiLCJib3JkZXJJbmxpbmVFbmQiLCJib3JkZXJJbmxpbmVFbmRDb2xvciIsImJvcmRlcklubGluZUVuZFN0eWxlIiwiYm9yZGVySW5saW5lRW5kV2lkdGgiLCJzaXppbmdfMSIsInByb3BlcnRpZXMiLCJtYXhIZWlnaHQiLCJtYXhXaWR0aCIsImNvbHVtbldpZHRoIiwibWluV2lkdGgiLCJtaW5IZWlnaHQiLCJzaXppbmciLCJ1cHBlcmNhc2VQYXR0ZXJuIiwibXNQYXR0ZXJuIiwiY2FjaGUiLCJ0b0h5cGhlbkxvd2VyIiwiX2h5cGhlbmF0ZVN0eWxlTmFtZSIsImZyZWV6ZSIsImhOYW1lIiwiaHlwaGVuYXRlUHJvcGVydHlfMSIsIl9oeXBoZW5hdGVTdHlsZU5hbWUyIiwidHJhbnNpdGlvbl8xIiwicHJvcGVydHlQcmVmaXhNYXAiLCJvdXRwdXRWYWx1ZSIsIm11bHRpcGxlVmFsdWVzIiwic2luZ2xlVmFsdWUiLCJkYXNoQ2FzZVByb3BlcnR5IiwiX2h5cGhlbmF0ZVByb3BlcnR5MiIsInBMZW4iLCJ1bnNoaWZ0IiwicHJlZml4TWFwcGluZyIsInByZWZpeFZhbHVlIiwid2Via2l0T3V0cHV0IiwibW96T3V0cHV0IiwidHJhbnNpdGlvblByb3BlcnR5IiwiV2Via2l0VHJhbnNpdGlvbiIsIldlYmtpdFRyYW5zaXRpb25Qcm9wZXJ0eSIsIk1velRyYW5zaXRpb24iLCJNb3pUcmFuc2l0aW9uUHJvcGVydHkiLCJXZWJraXQiLCJNb3oiLCJtcyIsIndtIiwid21zIiwid21tcyIsInByZWZpeEFsbCIsImRlZmF1bHRTZWxlY3RvckhhbmRsZXJzIiwic2VsZWN0b3IiLCJiYXNlU2VsZWN0b3IiLCJnZW5lcmF0ZVN1YnRyZWVTdHlsZXMiLCJnZW5lcmF0ZWQiLCJnZW5lcmF0ZUNTUyIsInN0eWxlVHlwZXMiLCJzZWxlY3RvckhhbmRsZXJzIiwic3RyaW5nSGFuZGxlcnMiLCJ1c2VJbXBvcnRhbnQiLCJtZXJnZWQiLCJwbGFpbkRlY2xhcmF0aW9ucyIsImdlbmVyYXRlZFN0eWxlcyIsImhhbmRsZXIiLCJuZXdTZWxlY3RvciIsIndhcm4iLCJnZW5lcmF0ZWRSdWxlc2V0IiwiZ2VuZXJhdGVDU1NSdWxlc2V0IiwidHJhbnNmb3JtUnVsZSIsInRyYW5zZm9ybVZhbHVlIiwiYXJyYXlUb09iamVjdEtleXNSZWR1Y2VyIiwiYWNjIiwiZGVjbGFyYXRpb25zIiwic3RyaW5nSGFuZGxlcktleXMiLCJydW5TdHJpbmdIYW5kbGVycyIsIm9yaWdpbmFsRWxlbWVudHMiLCJwcmVmaXhlZEVsZW1lbnRzIiwiZWxlbWVudE5hbWVzIiwib3JpZ2luYWxTdHlsZSIsIm9yaWdpbmFsSW5kZXgiLCJydWxlcyIsInN0eWxlVGFnIiwiZm9udEZhbWlseSIsIm5hbWVNYXAiLCJpbmplY3RTdHlsZU9uY2UiLCJmaW5hbFZhbCIsInZhbFZhbCIsInZhbEtleSIsImluamVjdEdlbmVyYXRlZENTU09uY2UiLCJhbHJlYWR5SW5qZWN0ZWQiLCJpbmplY3Rpb25CdWZmZXIiLCJpc0J1ZmZlcmluZyIsImdlbmVyYXRlZENTUyIsIl9pbmplY3Rpb25CdWZmZXIiLCJmbHVzaFRvU3R5bGVUYWciLCJkZWZpbml0aW9ucyIsInJlc2V0SW5qZWN0ZWRTdHlsZSIsImZsdXNoVG9BcnJheSIsInJldCIsImNzc1J1bGVzIiwic2hlZXQiLCJpbnNlcnRSdWxlIiwibnVtUnVsZXMiLCJydWxlIiwiaW5uZXJUZXh0IiwiaW5qZWN0U3R5bGVUYWciLCJwcm9jZXNzU3R5bGVEZWZpbml0aW9ucyIsInN0eWxlRGVmaW5pdGlvbnMiLCJjbGFzc05hbWVCaXRzIiwiZGVmaW5pdGlvbkJpdHMiLCJkZWYiLCJfbmFtZSIsIl9kZWZpbml0aW9uIiwiX2xlbiIsImluamVjdEFuZEdldENsYXNzTmFtZSIsImNsYXNzTmFtZSIsInVubWluaWZpZWRIYXNoRm4iLCJoYXNoRm4iLCJTdHlsZVNoZWV0Iiwic2hlZXREZWZpbml0aW9uIiwibWFwcGVkU2hlZXREZWZpbml0aW9uIiwic3RyaW5nVmFsIiwicmVoeWRyYXRlIiwiU3R5bGVTaGVldFNlcnZlciIsInJlbmRlclN0YXRpYyIsInJlbmRlckZ1bmMiLCJzdGFydEJ1ZmZlcmluZyIsImh0bWwiLCJyZW5kZXJlZENsYXNzTmFtZXMiLCJBcGhyb2RpdGUiLCJtYWtlRXhwb3J0cyIsImV4dGVuc2lvbnMiLCJleHRlbnNpb25TZWxlY3RvckhhbmRsZXJzIiwiZXh0ZW5zaW9uIiwic2VsZWN0b3JIYW5kbGVyIiwiU3R5bGVTaGVldFRlc3RVdGlscyIsIm1pbmlmeSIsInNob3VsZE1pbmlmeSIsIl9rZXkiLCJyZXNldCIsInN0eWxlcyIsImZvb3RlciIsImJvdHRvbSIsImJvcmRlclRvcCIsInBhcmFncmFwaGUiLCJ0ZXh0QWxpZ24iLCJmb250U3R5bGUiLCJSZWFjdCIsImdldEZ1bGxZZWFyIiwiaGVhZGVyIiwiaW1hZ2UiLCJ0aXRsZSIsIm1hcmdpbiIsImxvZ28iLCJhbHQiLCJmbGV4RGlyZWN0aW9uIiwibGFiZWxBbmRJbnB1dCIsInBhZGRpbmciLCJiYWNrZ3JvdW5kQ29sb3IiLCJib3JkZXIiLCJib3JkZXJSYWRpdXMiLCJodG1sRm9yIiwiTm90aWZpY2F0aW9uSXRlbSIsIm1hcmtBc1JlYWQiLCJ1cmdlbnQiLCJzbWFsbExpc3QiLCJib3JkZXJCb3R0b20iLCJsaXN0U3R5bGUiLCJsaVByb3BzIiwiY29sb3JUeXBlIiwiX2V4dGVuZHMiLCJwcm9wVHlwZXMiLCJOb3RpZmljYXRpb25zIiwiX0NvbXBvbmVudCIsIl9jbGFzc0NhbGxDaGVjayIsIl9jYWxsU3VwZXIiLCJfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwiX2luaGVyaXRzIiwibmV4dFByb3BzIiwibGlzdE5vdGlmaWNhdGlvbnMiLCJsb2ciLCJfdGhpczIiLCJfdGhpcyRwcm9wcyIsImRpc3BsYXlEcmF3ZXIiLCJtZW51SXRlbSIsIm5vdGlmaWNhdGlvbnMiLCJzbWFsbCIsInJpZ2h0IiwiZm9udFNpemUiLCJiYWNrZ3JvdW5kIiwidWwiLCJub3RpZmljYXRpb24iLCJmbG9hdCIsIm92ZXJmbG93IiwibGlzdFN0eWxlUG9zaXRpb24iLCJOb3RpZmljYXRpb25JdGVtU2hhcGUiLCJXcmFwcGVkQ29tcG9uZW50IiwiV2l0aExvZ2dpbmdDb21wb25lbnQiLCJnZXRDb21wb25lbnROYW1lIiwiQ291cnNlTGlzdFJvdyIsImlzSGVhZGVyIiwidGV4dEZpcnN0Q2VsbCIsInRleHRTZWNvbmRDZWxsIiwicm93IiwiaGVhZGVyVGgiLCJjb2xTcGFuIiwiY3JlZGl0IiwiQ291cnNlTGlzdCIsImxpc3RDb3Vyc2VzIiwiQ291c2VMaXN0IiwiZWxlIiwiYm9yZGVyQ29sbGFwc2UiLCJtYXJnaW5Ub3AiLCJDb3Vyc2VTaGFwZSIsIkJvZHlTZWN0aW9uIiwiQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tIiwiY21hcmdpbkJvdHRvbSIsIm1hcmdpbkJvdHRvbSIsInByb3BzVHlwZXMiLCJBcHAiLCJsb2dPdXQiLCJhbGVydCIsImlzTG9nZ2VkSW4iLCJoYW5kbGVLZXlEb3duIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIl90aGlzJHN0YXRlIiwiSGVhZGVyIiwiTG9naW4iLCJvbkxvZ2luIiwiaGFuZGxlTG9naW4iLCJGb290ZXIiLCJvblBlcmZFbnRyeSIsIlJlYWN0RG9tIiwiZ2V0RWxlbWVudEJ5SWQiLCJnZXRDTFMiLCJnZXRGSUQiLCJnZXRGQ1AiLCJnZXRMQ1AiLCJnZXRUVEZCIl0sInNvdXJjZVJvb3QiOiIifQ==